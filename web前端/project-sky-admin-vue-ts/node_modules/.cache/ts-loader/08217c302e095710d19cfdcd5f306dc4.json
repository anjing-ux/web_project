{"remainingRequest":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\babel-loader\\lib\\index.js!G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\ts-loader\\index.js??ref--14-2!G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\eslint-loader\\index.js??ref--13-0!G:\\device-management\\project-sky-admin-vue-ts\\src\\api\\detection.ts","dependencies":[{"path":"G:\\device-management\\project-sky-admin-vue-ts\\src\\api\\detection.ts","mtime":1748231663945},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.queryDetectionVerifyDetailById = queryDetectionVerifyDetailById;\nexports.submitDetectionVerify = exports.getDetectionVerifyList = exports.auditDetection2 = exports.auditDetection = exports.getDetectionStatusListBy = exports.queryDetectionDetailById = exports.queryDetectionTaskById = exports.getDetectionPage = void 0;\n\nvar _request = _interopRequireDefault(require(\"@/utils/request\"));\n\n// 获取检测记录分页列表\nvar getDetectionPage = function getDetectionPage(params) {\n  return (0, _request.default)({\n    url: '/team_leader/pending_detection_verify',\n    method: 'get',\n    params: params\n  });\n}; // 根据ID查询检测任务详情\n\n\nexports.getDetectionPage = getDetectionPage;\n\nvar queryDetectionTaskById = function queryDetectionTaskById(detectionId) {\n  return (0, _request.default)({\n    url: \"/detection/detection_task/\".concat(detectionId),\n    method: 'get'\n  });\n}; // 根据检测编号查询检测详情\n\n\nexports.queryDetectionTaskById = queryDetectionTaskById;\n\nvar queryDetectionDetailById = function queryDetectionDetailById(detectionId) {\n  return (0, _request.default)({\n    url: \"/it_manager/detection_detail/\".concat(detectionId),\n    method: 'get'\n  });\n}; // 获取各状态检测数量\n\n\nexports.queryDetectionDetailById = queryDetectionDetailById;\n\nvar getDetectionStatusListBy = function getDetectionStatusListBy(params) {\n  return (0, _request.default)({\n    url: '/fault/statusCount',\n    method: 'get',\n    params: params\n  });\n}; // 班组长审核\n\n\nexports.getDetectionStatusListBy = getDetectionStatusListBy;\n\nvar auditDetection = function auditDetection(params) {\n  return (0, _request.default)({\n    url: '/team_leader/verify_detection',\n    method: 'post',\n    data: params\n  });\n}; // 工区长审核\n\n\nexports.auditDetection = auditDetection;\n\nvar auditDetection2 = function auditDetection2(params) {\n  return (0, _request.default)({\n    url: '/area_leader/verify_detection',\n    method: 'post',\n    data: params\n  });\n}; // 获取检测验收列表\n\n\nexports.auditDetection2 = auditDetection2;\n\nvar getDetectionVerifyList = function getDetectionVerifyList(params) {\n  return (0, _request.default)({\n    url: '/it_manager/pending_detection_sign',\n    method: 'get',\n    params: params\n  });\n}; // 提交电子签名\n\n\nexports.getDetectionVerifyList = getDetectionVerifyList;\n\nvar submitDetectionVerify = function submitDetectionVerify(data) {\n  return (0, _request.default)({\n    url: '/it_manager/sign_detection',\n    method: 'post',\n    data: data\n  });\n}; // 检测验收审核详情\n\n\nexports.submitDetectionVerify = submitDetectionVerify;\n\nfunction queryDetectionVerifyDetailById(detectionId) {\n  return (0, _request.default)({\n    url: \"/it_manager/detection_verify/\".concat(detectionId),\n    method: 'get',\n    params: {\n      detectionId: detectionId\n    }\n  });\n}",{"version":3,"sources":["G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\eslint-loader\\index.js??ref--13-0!G:\\device-management\\project-sky-admin-vue-ts\\src\\api\\detection.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;;AAEA;AACO,IAAM,gBAAgB,GAAG,SAAnB,gBAAmB,CAAC,MAAD,EAAgB;AAC9C,SAAO,sBAAQ;AACb,IAAA,GAAG,EAAE,uCADQ;AAEb,IAAA,MAAM,EAAE,KAFK;AAGb,IAAA,MAAM,EAAN;AAHa,GAAR,CAAP;AAKD,CANM,C,CAQP;;;;;AACO,IAAM,sBAAsB,GAAG,SAAzB,sBAAyB,CAAC,WAAD,EAAwB;AAC5D,SAAO,sBAAQ;AACb,IAAA,GAAG,sCAA+B,WAA/B,CADU;AAEb,IAAA,MAAM,EAAE;AAFK,GAAR,CAAP;AAID,CALM,C,CAOP;;;;;AACO,IAAM,wBAAwB,GAAG,SAA3B,wBAA2B,CAAC,WAAD;AAAA,SACtC,sBAAQ;AACN,IAAA,GAAG,yCAAkC,WAAlC,CADG;AAEN,IAAA,MAAM,EAAE;AAFF,GAAR,CADsC;AAAA,CAAjC,C,CAQP;;;;;AACO,IAAM,wBAAwB,GAAG,SAA3B,wBAA2B,CAAC,MAAD;AAAA,SACtC,sBAAQ;AACN,IAAA,GAAG,EAAE,oBADC;AAEN,IAAA,MAAM,EAAE,KAFF;AAGN,IAAA,MAAM,EAAN;AAHM,GAAR,CADsC;AAAA,CAAjC,C,CASP;;;;;AACO,IAAM,cAAc,GAAG,SAAjB,cAAiB,CAAC,MAAD;AAAA,SAC5B,sBAAQ;AACN,IAAA,GAAG,EAAE,+BADC;AAEN,IAAA,MAAM,EAAE,MAFF;AAGN,IAAA,IAAI,EAAE;AAHA,GAAR,CAD4B;AAAA,CAAvB,C,CAQP;;;;;AACO,IAAM,eAAe,GAAG,SAAlB,eAAkB,CAAC,MAAD;AAAA,SAC7B,sBAAQ;AACN,IAAA,GAAG,EAAE,+BADC;AAEN,IAAA,MAAM,EAAE,MAFF;AAGN,IAAA,IAAI,EAAE;AAHA,GAAR,CAD6B;AAAA,CAAxB,C,CAQP;;;;;AACO,IAAM,sBAAsB,GAAG,SAAzB,sBAAyB,CAAC,MAAD;AAAA,SACpC,sBAAQ;AACN,IAAA,GAAG,EAAE,oCADC;AAEN,IAAA,MAAM,EAAE,KAFF;AAGN,IAAA,MAAM,EAAN;AAHM,GAAR,CADoC;AAAA,CAA/B,C,CAOP;;;;;AACO,IAAM,qBAAqB,GAAG,SAAxB,qBAAwB,CAAC,IAAD;AAAA,SACnC,sBAAQ;AACN,IAAA,GAAG,EAAE,4BADC;AAEN,IAAA,MAAM,EAAE,MAFF;AAGN,IAAA,IAAI,EAAJ;AAHM,GAAR,CADmC;AAAA,CAA9B,C,CASL;;;;;AACM,SAAU,8BAAV,CAAyC,WAAzC,EAA4D;AAChE,SAAO,sBAAQ;AACb,IAAA,GAAG,yCAAkC,WAAlC,CADU;AAEb,IAAA,MAAM,EAAE,KAFK;AAGb,IAAA,MAAM,EAAE;AAAE,MAAA,WAAW,EAAX;AAAF;AAHK,GAAR,CAAP;AAKD","sourcesContent":["import  request  from '@/utils/request';\r\n\r\n// 获取检测记录分页列表\r\nexport const getDetectionPage = (params: any) => {\r\n  return request({\r\n    url: '/team_leader/pending_detection_verify',\r\n    method: 'get',\r\n    params\r\n  });\r\n};\r\n\r\n// 根据ID查询检测任务详情\r\nexport const queryDetectionTaskById = (detectionId: string) => {\r\n  return request({\r\n    url: `/detection/detection_task/${detectionId}`,\r\n    method: 'get'\r\n  });\r\n};\r\n\r\n// 根据检测编号查询检测详情\r\nexport const queryDetectionDetailById = (detectionId: string) =>\r\n  request({\r\n    url: `/it_manager/detection_detail/${detectionId}`,\r\n    method: 'get'\r\n  });\r\n\r\n\r\n\r\n// 获取各状态检测数量\r\nexport const getDetectionStatusListBy = (params: any) =>\r\n  request({\r\n    url: '/fault/statusCount',\r\n    method: 'get',\r\n    params\r\n  });\r\n\r\n\r\n\r\n// 班组长审核\r\nexport const auditDetection = (params: any) =>\r\n  request({\r\n    url: '/team_leader/verify_detection',\r\n    method: 'post',\r\n    data: params\r\n  });\r\n\r\n  \r\n// 工区长审核\r\nexport const auditDetection2 = (params: any) =>\r\n  request({\r\n    url: '/area_leader/verify_detection',\r\n    method: 'post',\r\n    data: params\r\n  });\r\n\r\n\r\n// 获取检测验收列表\r\nexport const getDetectionVerifyList = (params: any) =>\r\n  request({\r\n    url: '/it_manager/pending_detection_sign',\r\n    method: 'get',\r\n    params\r\n  })\r\n\r\n// 提交电子签名\r\nexport const submitDetectionVerify = (data: any) =>\r\n  request({\r\n    url: '/it_manager/sign_detection',\r\n    method: 'post',\r\n    data\r\n  })\r\n\r\n\r\n\r\n  // 检测验收审核详情\r\n  export function queryDetectionVerifyDetailById(detectionId: string) {\r\n    return request({\r\n      url: `/it_manager/detection_verify/${detectionId}`,\r\n      method: 'get',\r\n      params: { detectionId }\r\n    })\r\n  }\r\n"],"sourceRoot":""}]}