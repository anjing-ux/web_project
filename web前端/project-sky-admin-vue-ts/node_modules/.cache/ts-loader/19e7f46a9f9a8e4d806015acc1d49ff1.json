{"remainingRequest":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\babel-loader\\lib\\index.js!G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\ts-loader\\index.js??ref--14-2!G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\eslint-loader\\index.js??ref--13-0!G:\\device-management\\project-sky-admin-vue-ts\\src\\api\\fault.ts","dependencies":[{"path":"G:\\device-management\\project-sky-admin-vue-ts\\src\\api\\fault.ts","mtime":1748611107420},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.queryFaultVerifyDetailById = queryFaultVerifyDetailById;\nexports.getEngineerList = exports.submitFaultVerify = exports.getFaultVerifyList = exports.auditFault2 = exports.auditFault = exports.getFaultStatusListBy = exports.getTaskInfoByFaultId = exports.queryFaultDetailById = exports.getFaultDetailPage = exports.submitMaintenanceTask = exports.submitDetectionTask = exports.submitInspectionTask = exports.submitFaultTask = void 0;\n\nrequire(\"core-js/modules/es7.object.get-own-property-descriptors\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nvar _defineProperty2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/defineProperty\"));\n\nvar _request = _interopRequireDefault(require(\"@/utils/request\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// 新增故障任务\nvar submitFaultTask = function submitFaultTask(params) {\n  return (0, _request.default)({\n    url: '/team_leader/dispatch_fault_task',\n    method: 'post',\n    data: _objectSpread({}, params)\n  });\n};\n\nexports.submitFaultTask = submitFaultTask;\n\nvar submitInspectionTask = function submitInspectionTask(params) {\n  return (0, _request.default)({\n    url: '/team_leader/dispatch_inspection_task',\n    method: 'post',\n    data: _objectSpread({}, params)\n  });\n};\n\nexports.submitInspectionTask = submitInspectionTask;\n\nvar submitDetectionTask = function submitDetectionTask(params) {\n  return (0, _request.default)({\n    url: '/team_leader/dispatch_detection_task',\n    method: 'post',\n    data: _objectSpread({}, params)\n  });\n};\n\nexports.submitDetectionTask = submitDetectionTask;\n\nvar submitMaintenanceTask = function submitMaintenanceTask(params) {\n  return (0, _request.default)({\n    url: '/team_leader/dispatch_maintenance_task',\n    method: 'post',\n    data: _objectSpread({}, params)\n  });\n}; // 获取故障列表（分页）\n\n\nexports.submitMaintenanceTask = submitMaintenanceTask;\n\nvar getFaultDetailPage = function getFaultDetailPage(params) {\n  return (0, _request.default)({\n    url: '/team_leader/pending_verify',\n    method: 'get',\n    params: params\n  });\n}; // 根据故障编号查询故障详情\n\n\nexports.getFaultDetailPage = getFaultDetailPage;\n\nvar queryFaultDetailById = function queryFaultDetailById(faultId) {\n  return (0, _request.default)({\n    url: \"/team_leader/fault_detail/\".concat(faultId),\n    method: 'get'\n  });\n}; //根据故障ID查询任务\n\n\nexports.queryFaultDetailById = queryFaultDetailById;\n\nvar getTaskInfoByFaultId = function getTaskInfoByFaultId(faultId) {\n  return (0, _request.default)({\n    url: \"/team_leader/fault_detail/\".concat(faultId),\n    method: 'get'\n  });\n}; // 获取各状态故障数量\n\n\nexports.getTaskInfoByFaultId = getTaskInfoByFaultId;\n\nvar getFaultStatusListBy = function getFaultStatusListBy(params) {\n  return (0, _request.default)({\n    url: '/fault/statusCount',\n    method: 'get',\n    params: params\n  });\n}; // 班组长审核\n\n\nexports.getFaultStatusListBy = getFaultStatusListBy;\n\nvar auditFault = function auditFault(params) {\n  return (0, _request.default)({\n    url: '/team_leader/verify_fault',\n    method: 'post',\n    data: params\n  });\n}; // 工区长审核\n\n\nexports.auditFault = auditFault;\n\nvar auditFault2 = function auditFault2(params) {\n  return (0, _request.default)({\n    url: '/area_leader/verify_fault',\n    method: 'post',\n    data: params\n  });\n}; // 获取故障销号审核列表\n\n\nexports.auditFault2 = auditFault2;\n\nvar getFaultVerifyList = function getFaultVerifyList(params) {\n  return (0, _request.default)({\n    url: '/it_manager/pending_sign',\n    method: 'get',\n    params: params\n  });\n}; // 提交故障销号审核\n\n\nexports.getFaultVerifyList = getFaultVerifyList;\n\nvar submitFaultVerify = function submitFaultVerify(data) {\n  return (0, _request.default)({\n    url: '/it_manager/sign_fault',\n    method: 'post',\n    data: data\n  });\n}; // 故障销号审核详情\n\n\nexports.submitFaultVerify = submitFaultVerify;\n\nfunction queryFaultVerifyDetailById(faultId) {\n  return (0, _request.default)({\n    url: \"/it_manager/fault_verify/\".concat(faultId),\n    method: 'get',\n    params: {\n      faultId: faultId\n    }\n  });\n} // 获取工程师列表\n\n\nvar getEngineerList = function getEngineerList() {\n  return (0, _request.default)({\n    url: '/team_leader/getAvailableEngineers',\n    method: 'get'\n  });\n};\n\nexports.getEngineerList = getEngineerList;",{"version":3,"sources":["G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\eslint-loader\\index.js??ref--13-0!G:\\device-management\\project-sky-admin-vue-ts\\src\\api\\fault.ts"],"names":[],"mappings":"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","sourcesContent":["import  request from '@/utils/request';\r\n\r\n\r\n// 新增故障任务\r\nexport const submitFaultTask = (params: any) => {\r\n  return request({\r\n    url: '/team_leader/dispatch_fault_task',\r\n    method: 'post',\r\n    data: { ...params }\r\n  })\r\n}\r\n\r\nexport const submitInspectionTask = (params: any) => {\r\n  return request({\r\n    url: '/team_leader/dispatch_inspection_task',\r\n    method: 'post',\r\n    data: { ...params }\r\n  })\r\n}\r\n\r\nexport const submitDetectionTask = (params: any) => {\r\n  return request({\r\n    url: '/team_leader/dispatch_detection_task',\r\n    method: 'post',\r\n    data: { ...params }\r\n  })\r\n}\r\n\r\nexport const submitMaintenanceTask = (params: any) => {\r\n  return request({\r\n    url: '/team_leader/dispatch_maintenance_task',\r\n    method: 'post',\r\n    data: { ...params }\r\n  })\r\n}\r\n\r\n\r\n\r\n// 获取故障列表（分页）\r\nexport const getFaultDetailPage = (params: any) =>\r\n  request({\r\n    url: '/team_leader/pending_verify',\r\n    method: 'get',\r\n    params\r\n  });\r\n\r\n\r\n// 根据故障编号查询故障详情\r\nexport const queryFaultDetailById = (faultId: string) =>\r\n  request({\r\n    url: `/team_leader/fault_detail/${faultId}`,\r\n    method: 'get'\r\n  });\r\n\r\n//根据故障ID查询任务\r\nexport const getTaskInfoByFaultId = (faultId: string) =>\r\n  request({\r\n    url: `/team_leader/fault_detail/${faultId}`,\r\n    method: 'get'\r\n  });\r\n// 获取各状态故障数量\r\nexport const getFaultStatusListBy = (params: any) =>\r\n  request({\r\n    url: '/fault/statusCount',\r\n    method: 'get',\r\n    params\r\n  });\r\n\r\n// 班组长审核\r\nexport const auditFault = (params: any) =>\r\n  request({\r\n    url: '/team_leader/verify_fault',\r\n    method: 'post',\r\n    data: params\r\n  });\r\n\r\n\r\n  \r\n// 工区长审核\r\nexport const auditFault2 = (params: any) =>\r\n  request({\r\n    url: '/area_leader/verify_fault',\r\n    method: 'post',\r\n    data: params\r\n  });\r\n\r\n  \r\n// 获取故障销号审核列表\r\nexport const getFaultVerifyList = (params: any) =>\r\n  request({\r\n    url: '/it_manager/pending_sign',\r\n    method: 'get',\r\n    params\r\n  })\r\n\r\n// 提交故障销号审核\r\nexport const submitFaultVerify = (data: any) =>\r\n  request({\r\n    url: '/it_manager/sign_fault',\r\n    method: 'post',\r\n    data\r\n  })\r\n\r\n  // 故障销号审核详情\r\n  export function queryFaultVerifyDetailById(faultId: string) {\r\n    return request({\r\n      url: `/it_manager/fault_verify/${faultId}`,\r\n      method: 'get',\r\n      params: { faultId }\r\n    })\r\n  }\r\n\r\n// 获取工程师列表\r\nexport const getEngineerList = () =>\r\n   request({\r\n     url: '/team_leader/getAvailableEngineers',\r\n     method: 'get',\r\n })\r\n"],"sourceRoot":""}]}