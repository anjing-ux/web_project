{"remainingRequest":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\babel-loader\\lib\\index.js!G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\ts-loader\\index.js??ref--14-2!G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\device-management\\project-sky-admin-vue-ts\\src\\views\\teamLeader\\deviceReview\\maintenanceAcceptance\\addTask.vue?vue&type=script&lang=ts&","dependencies":[{"path":"G:\\device-management\\project-sky-admin-vue-ts\\src\\views\\teamLeader\\deviceReview\\maintenanceAcceptance\\addTask.vue","mtime":1748442667870},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es7.object.get-own-property-descriptors\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nvar _defineProperty2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/defineProperty\"));\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/inherits\"));\n\nvar _tslib = require(\"tslib\");\n\nvar _vuePropertyDecorator = require(\"vue-property-decorator\");\n\nvar _fault = require(\"@/api/fault\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar default_1 =\n/*#__PURE__*/\nfunction (_Vue) {\n  (0, _inherits2.default)(default_1, _Vue);\n\n  function default_1() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, default_1);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(default_1).apply(this, arguments));\n    _this.actionType = '';\n    _this.ruleForm = {\n      deviceId: '',\n      taskName: '',\n      executorId: '',\n      executorName: '',\n      startTime: '',\n      endTime: ''\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(default_1, [{\n    key: \"created\",\n    value: function created() {\n      this.actionType = this.$route.query.id ? 'edit' : 'add';\n\n      if (this.actionType == 'edit') {\n        this.init();\n      }\n    }\n  }, {\n    key: \"init\",\n    value: function () {\n      var _init = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function init() {\n        return _init.apply(this, arguments);\n      }\n\n      return init;\n    }()\n  }, {\n    key: \"submitForm\",\n    value: function submitForm(formName, st) {\n      var _this2 = this;\n\n      ;\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          var prams = _objectSpread({}, _this2.ruleForm);\n\n          (0, _fault.submitMaintenanceTask)(prams).then(function (res) {\n            if (res && res.data && res.data.code === 1) {\n              _this2.$message.success('任务下发成功！');\n\n              _this2.$router.push({\n                path: '/teamLeader/deviceReview/faultClear'\n              });\n\n              if (!st) {\n                _this2.$router.push({\n                  path: '/teamLeader/deviceReview/faultClear'\n                });\n              } else {\n                ;\n\n                _this2.$refs.ruleForm.resetFields();\n\n                _this2.ruleForm = {\n                  deviceId: '',\n                  taskName: '',\n                  executorId: '',\n                  executorName: '',\n                  startTime: '',\n                  endTime: ''\n                };\n              }\n            } else {\n              _this2.$message.error(res.data.msg);\n            }\n          }).catch(function (err) {\n            _this2.$message.error('请求出错了：' + err.message);\n          });\n        } else {\n          return _this2.$message.error('表单校验失败，请检查输入内容');\n        }\n      });\n    }\n  }, {\n    key: \"rules\",\n    get: function get() {\n      var _this3 = this;\n\n      return {\n        deviceId: {\n          required: true,\n          validator: function validator(rule, value, callback) {\n            if (!value) {\n              callback(new Error('请输入设备ID'));\n            } else {\n              var reg = /^[0-9a-zA-Z]+$/; // 不能包含中文\n\n              if (!reg.test(value)) {\n                callback(new Error('设备ID不能包含中文'));\n              } else {\n                callback();\n              }\n            }\n          },\n          trigger: 'blur'\n        },\n        taskName: {\n          required: true,\n          validator: function validator(rule, value, callback) {\n            if (!value) {\n              callback(new Error('请输入任务名称'));\n            } else {\n              var reg = /[\\u4e00-\\u9fa5]/; // 不能为纯英文\n\n              if (!reg.test(value)) {\n                callback(new Error('任务名称不能为纯英文'));\n              } else {\n                callback();\n              }\n            }\n          },\n          trigger: 'blur'\n        },\n        executorId: {\n          required: true,\n          validator: function validator(rule, value, callback) {\n            if (!value) {\n              callback(new Error('请输入执行人ID'));\n            } else {\n              var reg = /^[0-9a-zA-Z]+$/; // 不能包含中文\n\n              if (!reg.test(value)) {\n                callback(new Error('执行人ID不能包含中文'));\n              } else {\n                callback();\n              }\n            }\n          },\n          trigger: 'blur'\n        },\n        executorName: {\n          required: true,\n          validator: function validator(rule, value, callback) {\n            if (!value) {\n              callback(new Error('请输入执行人姓名'));\n            } else {\n              var reg = /[\\u4e00-\\u9fa5]/; // 不能为纯英文\n\n              if (!reg.test(value)) {\n                callback(new Error('执行人姓名不能为纯英文'));\n              } else {\n                callback();\n              }\n            }\n          },\n          trigger: 'blur'\n        },\n        startTime: {\n          required: true,\n          message: '请选择开始时间',\n          trigger: 'change'\n        },\n        endTime: {\n          required: true,\n          validator: function validator(rule, value, callback) {\n            if (!value) {\n              callback(new Error('请选择结束时间'));\n            } else if (_this3.ruleForm.startTime && value < _this3.ruleForm.startTime) {\n              callback(new Error('结束时间不能早于开始时间'));\n            } else {\n              callback();\n            }\n          },\n          trigger: 'change'\n        }\n      };\n    }\n  }]);\n  return default_1;\n}(_vuePropertyDecorator.Vue);\n\ndefault_1 = (0, _tslib.__decorate)([(0, _vuePropertyDecorator.Component)({\n  name: 'addMaintenance'\n})], default_1);\nvar _default = default_1;\nexports.default = _default;",{"version":3,"sources":["G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\device-management\\project-sky-admin-vue-ts\\src\\views\\teamLeader\\deviceReview\\maintenanceAcceptance\\addTask.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport { Component, Vue } from 'vue-property-decorator'\r\nimport { submitMaintenanceTask } from '@/api/fault'\r\n\r\n@Component({\r\n  name: 'addMaintenance'\r\n})\r\nexport default class extends Vue {\r\n  private actionType: string = ''\r\n  private ruleForm = {\r\n    deviceId: '',\r\n    taskName: '',\r\n    executorId: '',\r\n    executorName: '',\r\n    startTime: '',\r\n    endTime: ''\r\n  }\r\n\r\n  get rules() {\r\n    return {\r\n      deviceId: {\r\n        required: true,\r\n        validator: (rule: any, value: string, callback: Function) => {\r\n          if (!value) {\r\n            callback(new Error('请输入设备ID'));\r\n          } else {\r\n            const reg = /^[0-9a-zA-Z]+$/; // 不能包含中文\r\n            if (!reg.test(value)) {\r\n              callback(new Error('设备ID不能包含中文'));\r\n            } else {\r\n              callback();\r\n            }\r\n          }\r\n        },\r\n        trigger: 'blur'\r\n      },\r\n      taskName: {\r\n        required: true,\r\n        validator: (rule: any, value: string, callback: Function) => {\r\n          if (!value) {\r\n            callback(new Error('请输入任务名称'));\r\n          } else {\r\n            const reg = /[\\u4e00-\\u9fa5]/; // 不能为纯英文\r\n            if (!reg.test(value)) {\r\n              callback(new Error('任务名称不能为纯英文'));\r\n            } else {\r\n              callback();\r\n            }\r\n          }\r\n        },\r\n        trigger: 'blur'\r\n      },\r\n      executorId: {\r\n        required: true,\r\n        validator: (rule: any, value: string, callback: Function) => {\r\n          if (!value) {\r\n            callback(new Error('请输入执行人ID'));\r\n          } else {\r\n            const reg = /^[0-9a-zA-Z]+$/; // 不能包含中文\r\n            if (!reg.test(value)) {\r\n              callback(new Error('执行人ID不能包含中文'));\r\n            } else {\r\n              callback();\r\n            }\r\n          }\r\n        },\r\n        trigger: 'blur'\r\n      },\r\n      executorName: {\r\n        required: true,\r\n        validator: (rule: any, value: string, callback: Function) => {\r\n          if (!value) {\r\n            callback(new Error('请输入执行人姓名'));\r\n          } else {\r\n            const reg = /[\\u4e00-\\u9fa5]/; // 不能为纯英文\r\n            if (!reg.test(value)) {\r\n              callback(new Error('执行人姓名不能为纯英文'));\r\n            } else {\r\n              callback();\r\n            }\r\n          }\r\n        },\r\n        trigger: 'blur'\r\n      },\r\n      startTime: {\r\n        required: true,\r\n        message: '请选择开始时间',\r\n        trigger: 'change'\r\n      },\r\n      endTime: {\r\n        required: true,\r\n        validator: (rule: any, value: string, callback: Function) => {\r\n          if (!value) {\r\n            callback(new Error('请选择结束时间'));\r\n          } else if (this.ruleForm.startTime && value < this.ruleForm.startTime) {\r\n            callback(new Error('结束时间不能早于开始时间'));\r\n          } else {\r\n            callback();\r\n          }\r\n        },\r\n        trigger: 'change'\r\n      }\r\n    }\r\n  }\r\n\r\n  created() {\r\n    this.actionType = this.$route.query.id ? 'edit' : 'add'\r\n    if (this.actionType == 'edit') {\r\n      this.init()\r\n    }\r\n  }\r\n\r\n  private async init() {\r\n    // 编辑模式下获取任务详情\r\n  }\r\n\r\n  public submitForm(formName: any, st: any) {\r\n    ; (this.$refs[formName] as any).validate((valid: any) => {\r\n      if (valid) {\r\n        let prams = { ...this.ruleForm } as any\r\n        submitMaintenanceTask(prams)\r\n          .then(res => {\r\n            if (res && res.data && res.data.code === 1) {\r\n              this.$message.success('任务下发成功！')\r\n              this.$router.push({ path: '/teamLeader/deviceReview/faultClear' })\r\n              if (!st) {\r\n                this.$router.push({ path: '/teamLeader/deviceReview/faultClear' })\r\n              } else {\r\n                ; (this as any).$refs.ruleForm.resetFields()\r\n                this.ruleForm = {\r\n                  deviceId: '',\r\n                  taskName: '',\r\n                  executorId: '',\r\n                  executorName: '',\r\n                  startTime: '',\r\n                  endTime: ''\r\n                } as any\r\n              }\r\n            } else {\r\n              this.$message.error(res.data.msg)\r\n            }\r\n          })\r\n          .catch(err => {\r\n            this.$message.error('请求出错了：' + err.message)\r\n          })\r\n      } else {\r\n        return this.$message.error('表单校验失败，请检查输入内容');\r\n      }\r\n    })\r\n  }\r\n}\r\n"],"sourceRoot":""}]}