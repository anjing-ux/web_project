{"remainingRequest":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\babel-loader\\lib\\index.js!G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\ts-loader\\index.js??ref--14-2!G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\device-management\\project-sky-admin-vue-ts\\src\\views\\teamLeader\\deviceReview\\faultClear.vue?vue&type=script&lang=ts&","dependencies":[{"path":"G:\\device-management\\project-sky-admin-vue-ts\\src\\views\\teamLeader\\deviceReview\\faultClear.vue","mtime":1747301540546},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/inherits\"));\n\nvar _tslib = require(\"tslib\");\n\nvar _vuePropertyDecorator = require(\"vue-property-decorator\");\n\nvar _index = _interopRequireDefault(require(\"@/components/HeadLable/index.vue\"));\n\nvar _index2 = _interopRequireDefault(require(\"@/components/InputAutoComplete/index.vue\"));\n\nvar _faultClear = require(\"@/api/faultClear\");\n\n// 假设有这些API，实际使用时需要替换为真实的API\nvar default_1 =\n/*#__PURE__*/\nfunction (_Vue) {\n  (0, _inherits2.default)(default_1, _Vue);\n\n  function default_1() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, default_1);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(default_1).apply(this, arguments));\n    _this.equipmentName = '';\n    _this.counts = 0;\n    _this.page = 1;\n    _this.pageSize = 10;\n    _this.tableData = [];\n    _this.faultStatus = 0; // 0-全部审核请求 1-待完成 2-待审核 3-已完成\n\n    _this.dialogVisible = false;\n    _this.confirmDialogVisible = false;\n    _this.diaForm = {};\n    _this.row = {};\n    _this.requestCode = '';\n    _this.dialogFaultStatus = 0;\n    _this.confirmStatus = '';\n    _this.approvalComment = '';\n    _this.remark = '';\n    _this.statusList = [{\n      name: '全部审核请求',\n      count: 0\n    }, {\n      name: '待完成',\n      count: 0\n    }, {\n      name: '待审核',\n      count: 0\n    }, {\n      name: '已完成',\n      count: 0\n    }];\n    _this.passReasons = ['设备已修复', '故障已解决', '问题已处理', '自定义原因'];\n    _this.rejectReasons = ['信息不完整', '需要补充材料', '申请不符合规定', '自定义原因'];\n    return _this;\n  }\n\n  (0, _createClass2.default)(default_1, [{\n    key: \"created\",\n    value: function created() {\n      this.init();\n      this.getFaultClearListBy4Status();\n    } // 初始化数据\n\n  }, {\n    key: \"init\",\n    value: function () {\n      var _init = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var activeIndex,\n            params,\n            res,\n            _args = arguments;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                activeIndex = _args.length > 0 && _args[0] !== undefined ? _args[0] : this.faultStatus;\n                params = {\n                  page: this.page,\n                  pageSize: this.pageSize,\n                  equipmentName: this.equipmentName,\n                  status: activeIndex\n                };\n                _context.prev = 2;\n                _context.next = 5;\n                return (0, _faultClear.getFaultClearList)(params);\n\n              case 5:\n                res = _context.sent;\n\n                if (res.data.code === 1) {\n                  this.tableData = res.data.data.records;\n                  this.faultStatus = activeIndex;\n                  this.counts = Number(res.data.data.total);\n                  this.getFaultClearListBy4Status();\n                } else {\n                  this.$message.error(res.data.msg);\n                }\n\n                _context.next = 12;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](2);\n                this.$message.error('请求出错了：' + _context.t0.message);\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[2, 9]]);\n      }));\n\n      function init() {\n        return _init.apply(this, arguments);\n      }\n\n      return init;\n    }() // 获取四种状态的数量\n\n  }, {\n    key: \"getFaultClearListBy4Status\",\n    value: function () {\n      var _getFaultClearListBy4Status2 = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return (0, _faultClear.getFaultClearListBy4Status)();\n\n              case 3:\n                res = _context2.sent;\n\n                if (res.data.code === 1) {\n                  this.statusList[0].count = res.data.data.all || 0;\n                  this.statusList[1].count = res.data.data.pending || 0;\n                  this.statusList[2].count = res.data.data.toBeReviewed || 0;\n                  this.statusList[3].count = res.data.data.completed || 0;\n                }\n\n                _context2.next = 10;\n                break;\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.error('获取状态数量失败：', _context2.t0);\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 7]]);\n      }));\n\n      function getFaultClearListBy4Status() {\n        return _getFaultClearListBy4Status2.apply(this, arguments);\n      }\n\n      return getFaultClearListBy4Status;\n    }() // 切换状态标签\n\n  }, {\n    key: \"handleStatus\",\n    value: function handleStatus(index) {\n      this.page = 1;\n      this.init(index);\n    } // 搜索设备名称\n\n  }, {\n    key: \"initProp\",\n    value: function initProp(val) {\n      this.equipmentName = val;\n      this.initFun();\n    } // 执行搜索\n\n  }, {\n    key: \"initFun\",\n    value: function initFun() {\n      this.page = 1;\n      this.init();\n    } // 重置搜索\n\n  }, {\n    key: \"resetSearch\",\n    value: function resetSearch() {\n      this.equipmentName = '';\n      this.page = 1;\n      this.init();\n    } // 分页大小变化\n\n  }, {\n    key: \"handleSizeChange\",\n    value: function handleSizeChange(val) {\n      this.pageSize = val;\n      this.init();\n    } // 页码变化\n\n  }, {\n    key: \"handleCurrentChange\",\n    value: function handleCurrentChange(val) {\n      this.page = val;\n      this.init();\n    } // 关闭弹窗\n\n  }, {\n    key: \"handleClose\",\n    value: function handleClose() {\n      this.dialogVisible = false;\n    } // 获取故障状态文本\n\n  }, {\n    key: \"getFaultStatus\",\n    value: function getFaultStatus(row) {\n      if (row.status === 0) {\n        return '待审核';\n      } else if (row.status === 1) {\n        return '待完成';\n      } else if (row.status === 2) {\n        return '已完成';\n      } else if (row.status === 3) {\n        return '已驳回';\n      } else {\n        return '状态错误';\n      }\n    } // 获取设备类型文本\n\n  }, {\n    key: \"getEquimentType\",\n    value: function getEquimentType(row) {\n      if (row.equipmentType === 1) {\n        return '客服设备';\n      } else if (row.equipmentType === 2) {\n        return '机电设备';\n      } else if (row.equipmentType === 3) {\n        return '消防设备';\n      } else if (row.equipmentType === 4) {\n        return '电梯设备';\n      } else {\n        return '状态错误';\n      }\n    } // 查看详情\n\n  }, {\n    key: \"goDetail\",\n    value: function () {\n      var _goDetail = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(id, status, row) {\n        var _ref, data;\n\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.diaForm = {};\n                this.dialogVisible = true;\n                this.dialogFaultStatus = status;\n                this.requestCode = id;\n                _context3.prev = 4;\n                _context3.next = 7;\n                return (0, _faultClear.queryFaultClearById)({\n                  requestCode: id\n                });\n\n              case 7:\n                _ref = _context3.sent;\n                data = _ref.data;\n\n                if (data.code === 1) {\n                  this.diaForm = data.data;\n                  this.row = row;\n                } else {\n                  this.$message.error(data.msg);\n                }\n\n                _context3.next = 15;\n                break;\n\n              case 12:\n                _context3.prev = 12;\n                _context3.t0 = _context3[\"catch\"](4);\n                this.$message.error('请求出错了：' + _context3.t0.message);\n\n              case 15:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[4, 12]]);\n      }));\n\n      function goDetail(_x, _x2, _x3) {\n        return _goDetail.apply(this, arguments);\n      }\n\n      return goDetail;\n    }() // 审核通过\n\n  }, {\n    key: \"passFault\",\n    value: function passFault(row) {\n      this.confirmDialogVisible = true;\n      this.requestCode = row.requestCode;\n      this.confirmStatus = '审核通过确认';\n      this.dialogFaultStatus = row.status;\n      this.dialogVisible = false;\n      this.approvalComment = '';\n      this.remark = '';\n    } // 审核不通过\n\n  }, {\n    key: \"refuseFault\",\n    value: function refuseFault(row) {\n      this.confirmDialogVisible = true;\n      this.requestCode = row.requestCode;\n      this.confirmStatus = '审核不通过确认';\n      this.dialogFaultStatus = row.status;\n      this.dialogVisible = false;\n      this.approvalComment = '';\n      this.remark = '';\n    } // 确认审核\n\n  }, {\n    key: \"confirmAudit\",\n    value: function () {\n      var _confirmAudit = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4() {\n        var api, res;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (this.approvalComment) {\n                  _context4.next = 4;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", this.$message.error(\"\\u8BF7\\u9009\\u62E9\".concat(this.confirmStatus, \"\\u539F\\u56E0\")));\n\n              case 4:\n                if (!(this.approvalComment === '自定义原因' && !this.remark)) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", this.$message.error(\"\\u8BF7\\u8F93\\u5165\".concat(this.confirmStatus, \"\\u539F\\u56E0\")));\n\n              case 6:\n                api = this.confirmStatus === '审核不通过确认' ? _faultClear.refuseFaultClear : _faultClear.auditFaultClear;\n                _context4.prev = 7;\n                _context4.next = 10;\n                return api({\n                  requestCode: this.requestCode,\n                  status: this.confirmStatus === '审核不通过确认' ? 3 : 1,\n                  approvalComment: this.approvalComment === '自定义原因' ? this.remark : this.approvalComment\n                });\n\n              case 10:\n                res = _context4.sent;\n\n                if (res.data.code === 1) {\n                  this.$message.success('操作成功');\n                  this.confirmDialogVisible = false;\n                  this.requestCode = '';\n                  this.confirmStatus = '';\n                  this.approvalComment = '';\n                  this.init(this.faultStatus);\n                } else {\n                  this.$message.error(res.data.msg);\n                }\n\n                _context4.next = 17;\n                break;\n\n              case 14:\n                _context4.prev = 14;\n                _context4.t0 = _context4[\"catch\"](7);\n                this.$message.error('请求出错了：' + _context4.t0.message);\n\n              case 17:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[7, 14]]);\n      }));\n\n      function confirmAudit() {\n        return _confirmAudit.apply(this, arguments);\n      }\n\n      return confirmAudit;\n    }()\n  }]);\n  return default_1;\n}(_vuePropertyDecorator.Vue);\n\ndefault_1 = (0, _tslib.__decorate)([(0, _vuePropertyDecorator.Component)({\n  name: 'FaultClear',\n  components: {\n    HeadLable: _index.default,\n    InputAutoComplete: _index2.default\n  }\n})], default_1);\nvar _default = default_1;\nexports.default = _default;",{"version":3,"sources":["G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\device-management\\project-sky-admin-vue-ts\\src\\views\\teamLeader\\deviceReview\\faultClear.vue?vue&type=script&lang=ts&"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA4NA;;AACA;;AACA;;AACA;;AAM0B;AAS1B,IAAA,SAAA;AAAA;AAAA;AAAA;;AAAA,uBAAA;AAAA;;AAAA;;AACU,UAAA,aAAA,GAAwB,EAAxB;AACA,UAAA,MAAA,GAAiB,CAAjB;AACA,UAAA,IAAA,GAAe,CAAf;AACA,UAAA,QAAA,GAAmB,EAAnB;AACA,UAAA,SAAA,GAAmB,EAAnB;AACA,UAAA,WAAA,GAAsB,CAAtB,CANV,CAMkC;;AACxB,UAAA,aAAA,GAAyB,KAAzB;AACA,UAAA,oBAAA,GAAgC,KAAhC;AACA,UAAA,OAAA,GAAe,EAAf;AACA,UAAA,GAAA,GAAW,EAAX;AACA,UAAA,WAAA,GAAsB,EAAtB;AACA,UAAA,iBAAA,GAA4B,CAA5B;AACA,UAAA,aAAA,GAAwB,EAAxB;AACA,UAAA,eAAA,GAA0B,EAA1B;AACA,UAAA,MAAA,GAAiB,EAAjB;AACA,UAAA,UAAA,GAAoB,CAC1B;AAAE,MAAA,IAAI,EAAE,QAAR;AAAkB,MAAA,KAAK,EAAE;AAAzB,KAD0B,EAE1B;AAAE,MAAA,IAAI,EAAE,KAAR;AAAe,MAAA,KAAK,EAAE;AAAtB,KAF0B,EAG1B;AAAE,MAAA,IAAI,EAAE,KAAR;AAAe,MAAA,KAAK,EAAE;AAAtB,KAH0B,EAI1B;AAAE,MAAA,IAAI,EAAE,KAAR;AAAe,MAAA,KAAK,EAAE;AAAtB,KAJ0B,CAApB;AAMA,UAAA,WAAA,GAAwB,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,EAA4B,OAA5B,CAAxB;AACA,UAAA,aAAA,GAA0B,CAAC,OAAD,EAAU,QAAV,EAAoB,SAApB,EAA+B,OAA/B,CAA1B;AAvBV;AAmNC;;AAnND;AAAA;AAAA,8BAyBS;AACL,WAAK,IAAL;AACA,WAAK,0BAAL;AACD,KA5BH,CA8BE;;AA9BF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA+BqB,gBAAA,WA/BrB,2DA+B2C,KAAK,WA/BhD;AAgCU,gBAAA,MAhCV,GAgCmB;AACb,kBAAA,IAAI,EAAE,KAAK,IADE;AAEb,kBAAA,QAAQ,EAAE,KAAK,QAFF;AAGb,kBAAA,aAAa,EAAE,KAAK,aAHP;AAIb,kBAAA,MAAM,EAAE;AAJK,iBAhCnB;AAAA;AAAA;AAAA,uBAuCwB,mCAAkB,MAAlB,CAvCxB;;AAAA;AAuCY,gBAAA,GAvCZ;;AAwCM,oBAAI,GAAG,CAAC,IAAJ,CAAS,IAAT,KAAkB,CAAtB,EAAyB;AACvB,uBAAK,SAAL,GAAiB,GAAG,CAAC,IAAJ,CAAS,IAAT,CAAc,OAA/B;AACA,uBAAK,WAAL,GAAmB,WAAnB;AACA,uBAAK,MAAL,GAAc,MAAM,CAAC,GAAG,CAAC,IAAJ,CAAS,IAAT,CAAc,KAAf,CAApB;AACA,uBAAK,0BAAL;AACD,iBALD,MAKO;AACL,uBAAK,QAAL,CAAc,KAAd,CAAoB,GAAG,CAAC,IAAJ,CAAS,GAA7B;AACD;;AA/CP;AAAA;;AAAA;AAAA;AAAA;AAiDM,qBAAK,QAAL,CAAc,KAAd,CAAoB,WAAW,YAAI,OAAnC;;AAjDN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,QAqDE;;AArDF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAwDwB,6CAxDxB;;AAAA;AAwDY,gBAAA,GAxDZ;;AAyDM,oBAAI,GAAG,CAAC,IAAJ,CAAS,IAAT,KAAkB,CAAtB,EAAyB;AACvB,uBAAK,UAAL,CAAgB,CAAhB,EAAmB,KAAnB,GAA2B,GAAG,CAAC,IAAJ,CAAS,IAAT,CAAc,GAAd,IAAqB,CAAhD;AACA,uBAAK,UAAL,CAAgB,CAAhB,EAAmB,KAAnB,GAA2B,GAAG,CAAC,IAAJ,CAAS,IAAT,CAAc,OAAd,IAAyB,CAApD;AACA,uBAAK,UAAL,CAAgB,CAAhB,EAAmB,KAAnB,GAA2B,GAAG,CAAC,IAAJ,CAAS,IAAT,CAAc,YAAd,IAA8B,CAAzD;AACA,uBAAK,UAAL,CAAgB,CAAhB,EAAmB,KAAnB,GAA2B,GAAG,CAAC,IAAJ,CAAS,IAAT,CAAc,SAAd,IAA2B,CAAtD;AACD;;AA9DP;AAAA;;AAAA;AAAA;AAAA;AAgEM,gBAAA,OAAO,CAAC,KAAR,CAAc,WAAd;;AAhEN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,QAoEE;;AApEF;AAAA;AAAA,iCAqEuB,KArEvB,EAqEoC;AAChC,WAAK,IAAL,GAAY,CAAZ;AACA,WAAK,IAAL,CAAU,KAAV;AACD,KAxEH,CA0EE;;AA1EF;AAAA;AAAA,6BA2EmB,GA3EnB,EA2E8B;AAC1B,WAAK,aAAL,GAAqB,GAArB;AACA,WAAK,OAAL;AACD,KA9EH,CAgFE;;AAhFF;AAAA;AAAA,8BAiFiB;AACb,WAAK,IAAL,GAAY,CAAZ;AACA,WAAK,IAAL;AACD,KApFH,CAsFE;;AAtFF;AAAA;AAAA,kCAuFqB;AACjB,WAAK,aAAL,GAAqB,EAArB;AACA,WAAK,IAAL,GAAY,CAAZ;AACA,WAAK,IAAL;AACD,KA3FH,CA6FE;;AA7FF;AAAA;AAAA,qCA8F2B,GA9F3B,EA8FsC;AAClC,WAAK,QAAL,GAAgB,GAAhB;AACA,WAAK,IAAL;AACD,KAjGH,CAmGE;;AAnGF;AAAA;AAAA,wCAoG8B,GApG9B,EAoGyC;AACrC,WAAK,IAAL,GAAY,GAAZ;AACA,WAAK,IAAL;AACD,KAvGH,CAyGE;;AAzGF;AAAA;AAAA,kCA0GqB;AACjB,WAAK,aAAL,GAAqB,KAArB;AACD,KA5GH,CA8GE;;AA9GF;AAAA;AAAA,mCA+GyB,GA/GzB,EA+GiC;AAC7B,UAAI,GAAG,CAAC,MAAJ,KAAe,CAAnB,EAAsB;AACpB,eAAO,KAAP;AACD,OAFD,MAEO,IAAI,GAAG,CAAC,MAAJ,KAAe,CAAnB,EAAsB;AAC3B,eAAO,KAAP;AACD,OAFM,MAEA,IAAI,GAAG,CAAC,MAAJ,KAAe,CAAnB,EAAsB;AAC3B,eAAO,KAAP;AACD,OAFM,MAEA,IAAI,GAAG,CAAC,MAAJ,KAAe,CAAnB,EAAsB;AAC3B,eAAO,KAAP;AACD,OAFM,MAEA;AACL,eAAO,MAAP;AACD;AACF,KA3HH,CA6HE;;AA7HF;AAAA;AAAA,oCA8H0B,GA9H1B,EA8HkC;AAC9B,UAAI,GAAG,CAAC,aAAJ,KAAsB,CAA1B,EAA6B;AAC3B,eAAO,MAAP;AACD,OAFD,MAEO,IAAI,GAAG,CAAC,aAAJ,KAAsB,CAA1B,EAA6B;AAClC,eAAO,MAAP;AACD,OAFM,MAEA,IAAI,GAAG,CAAC,aAAJ,KAAsB,CAA1B,EAA6B;AAClC,eAAO,MAAP;AACD,OAFM,MAEA,IAAI,GAAG,CAAC,aAAJ,KAAsB,CAA1B,EAA6B;AAClC,eAAO,MAAP;AACD,OAFM,MAEA;AACL,eAAO,MAAP;AACD;AACF,KA1IH,CA4IE;;AA5IF;AAAA;AAAA;AAAA;AAAA;AAAA,gDA6IyB,EA7IzB,EA6IqC,MA7IrC,EA6IqD,GA7IrD;AAAA;;AAAA;AAAA;AAAA;AAAA;AA8II,qBAAK,OAAL,GAAe,EAAf;AACA,qBAAK,aAAL,GAAqB,IAArB;AACA,qBAAK,iBAAL,GAAyB,MAAzB;AACA,qBAAK,WAAL,GAAmB,EAAnB;AAjJJ;AAAA;AAAA,uBAmJ6B,qCAAoB;AAAE,kBAAA,WAAW,EAAE;AAAf,iBAApB,CAnJ7B;;AAAA;AAAA;AAmJc,gBAAA,IAnJd,QAmJc,IAnJd;;AAoJM,oBAAI,IAAI,CAAC,IAAL,KAAc,CAAlB,EAAqB;AACnB,uBAAK,OAAL,GAAe,IAAI,CAAC,IAApB;AACA,uBAAK,GAAL,GAAW,GAAX;AACD,iBAHD,MAGO;AACL,uBAAK,QAAL,CAAc,KAAd,CAAoB,IAAI,CAAC,GAAzB;AACD;;AAzJP;AAAA;;AAAA;AAAA;AAAA;AA2JM,qBAAK,QAAL,CAAc,KAAd,CAAoB,WAAW,aAAI,OAAnC;;AA3JN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,QA+JE;;AA/JF;AAAA;AAAA,8BAgKoB,GAhKpB,EAgK4B;AACxB,WAAK,oBAAL,GAA4B,IAA5B;AACA,WAAK,WAAL,GAAmB,GAAG,CAAC,WAAvB;AACA,WAAK,aAAL,GAAqB,QAArB;AACA,WAAK,iBAAL,GAAyB,GAAG,CAAC,MAA7B;AACA,WAAK,aAAL,GAAqB,KAArB;AACA,WAAK,eAAL,GAAuB,EAAvB;AACA,WAAK,MAAL,GAAc,EAAd;AACD,KAxKH,CA0KE;;AA1KF;AAAA;AAAA,gCA2KsB,GA3KtB,EA2K8B;AAC1B,WAAK,oBAAL,GAA4B,IAA5B;AACA,WAAK,WAAL,GAAmB,GAAG,CAAC,WAAvB;AACA,WAAK,aAAL,GAAqB,SAArB;AACA,WAAK,iBAAL,GAAyB,GAAG,CAAC,MAA7B;AACA,WAAK,aAAL,GAAqB,KAArB;AACA,WAAK,eAAL,GAAuB,EAAvB;AACA,WAAK,MAAL,GAAc,EAAd;AACD,KAnLH,CAqLE;;AArLF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAuLS,KAAK,eAvLd;AAAA;AAAA;AAAA;;AAAA,kDAwLa,KAAK,QAAL,CAAc,KAAd,6BAA0B,KAAK,aAA/B,kBAxLb;;AAAA;AAAA,sBAyLe,KAAK,eAAL,KAAyB,OAAzB,IAAoC,CAAC,KAAK,MAzLzD;AAAA;AAAA;AAAA;;AAAA,kDA0La,KAAK,QAAL,CAAc,KAAd,6BAA0B,KAAK,aAA/B,kBA1Lb;;AAAA;AA6LU,gBAAA,GA7LV,GA6LgB,KAAK,aAAL,KAAuB,SAAvB,GAAmC,4BAAnC,GAAsD,2BA7LtE;AAAA;AAAA;AAAA,uBA+LwB,GAAG,CAAC;AACpB,kBAAA,WAAW,EAAE,KAAK,WADE;AAEpB,kBAAA,MAAM,EAAE,KAAK,aAAL,KAAuB,SAAvB,GAAmC,CAAnC,GAAuC,CAF3B;AAGpB,kBAAA,eAAe,EAAE,KAAK,eAAL,KAAyB,OAAzB,GAAmC,KAAK,MAAxC,GAAiD,KAAK;AAHnD,iBAAD,CA/L3B;;AAAA;AA+LY,gBAAA,GA/LZ;;AAqMM,oBAAI,GAAG,CAAC,IAAJ,CAAS,IAAT,KAAkB,CAAtB,EAAyB;AACvB,uBAAK,QAAL,CAAc,OAAd,CAAsB,MAAtB;AACA,uBAAK,oBAAL,GAA4B,KAA5B;AACA,uBAAK,WAAL,GAAmB,EAAnB;AACA,uBAAK,aAAL,GAAqB,EAArB;AACA,uBAAK,eAAL,GAAuB,EAAvB;AACA,uBAAK,IAAL,CAAU,KAAK,WAAf;AACD,iBAPD,MAOO;AACL,uBAAK,QAAL,CAAc,KAAd,CAAoB,GAAG,CAAC,IAAJ,CAAS,GAA7B;AACD;;AA9MP;AAAA;;AAAA;AAAA;AAAA;AAgNM,qBAAK,QAAL,CAAc,KAAd,CAAoB,WAAW,aAAI,OAAnC;;AAhNN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,EAA6B,yBAA7B,CAAA;;AAAA,SAAA,GAAA,uBAAA,CAPC,qCAAU;AACT,EAAA,IAAI,EAAE,YADG;AAET,EAAA,UAAU,EAAE;AACV,IAAA,SAAS,EAAT,cADU;AAEV,IAAA,iBAAiB,EAAjB;AAFU;AAFH,CAAV,CAOD,CAAA,EAmNC,SAnND,CAAA","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Vue } from 'vue-property-decorator'\nimport HeadLable from '@/components/HeadLable/index.vue'\nimport InputAutoComplete from '@/components/InputAutoComplete/index.vue'\nimport {\n  getFaultClearList,\n  getFaultClearListBy4Status,\n  queryFaultClearById,\n  auditFaultClear,\n  refuseFaultClear\n} from '@/api/faultClear' // 假设有这些API，实际使用时需要替换为真实的API\n\n@Component({\n  name: 'FaultClear',\n  components: {\n    HeadLable,\n    InputAutoComplete\n  }\n})\nexport default class extends Vue {\n  private equipmentName: string = ''\n  private counts: number = 0\n  private page: number = 1\n  private pageSize: number = 10\n  private tableData: any[] = []\n  private faultStatus: number = 0 // 0-全部审核请求 1-待完成 2-待审核 3-已完成\n  private dialogVisible: boolean = false\n  private confirmDialogVisible: boolean = false\n  private diaForm: any = {}\n  private row: any = {}\n  private requestCode: string = ''\n  private dialogFaultStatus: number = 0\n  private confirmStatus: string = ''\n  private approvalComment: string = ''\n  private remark: string = ''\n  private statusList: any[] = [\n    { name: '全部审核请求', count: 0 },\n    { name: '待完成', count: 0 },\n    { name: '待审核', count: 0 },\n    { name: '已完成', count: 0 }\n  ]\n  private passReasons: string[] = ['设备已修复', '故障已解决', '问题已处理', '自定义原因']\n  private rejectReasons: string[] = ['信息不完整', '需要补充材料', '申请不符合规定', '自定义原因']\n\n  created() {\n    this.init()\n    this.getFaultClearListBy4Status()\n  }\n\n  // 初始化数据\n  private async init(activeIndex: number = this.faultStatus) {\n    const params = {\n      page: this.page,\n      pageSize: this.pageSize,\n      equipmentName: this.equipmentName,\n      status: activeIndex\n    }\n    try {\n      const res = await getFaultClearList(params)\n      if (res.data.code === 1) {\n        this.tableData = res.data.data.records\n        this.faultStatus = activeIndex\n        this.counts = Number(res.data.data.total)\n        this.getFaultClearListBy4Status()\n      } else {\n        this.$message.error(res.data.msg)\n      }\n    } catch (err) {\n      this.$message.error('请求出错了：' + err.message)\n    }\n  }\n\n  // 获取四种状态的数量\n  private async getFaultClearListBy4Status() {\n    try {\n      const res = await getFaultClearListBy4Status()\n      if (res.data.code === 1) {\n        this.statusList[0].count = res.data.data.all || 0\n        this.statusList[1].count = res.data.data.pending || 0\n        this.statusList[2].count = res.data.data.toBeReviewed || 0\n        this.statusList[3].count = res.data.data.completed || 0\n      }\n    } catch (err) {\n      console.error('获取状态数量失败：', err)\n    }\n  }\n\n  // 切换状态标签\n  private handleStatus(index: number) {\n    this.page = 1\n    this.init(index)\n  }\n\n  // 搜索设备名称\n  private initProp(val: string) {\n    this.equipmentName = val\n    this.initFun()\n  }\n\n  // 执行搜索\n  private initFun() {\n    this.page = 1\n    this.init()\n  }\n\n  // 重置搜索\n  private resetSearch() {\n    this.equipmentName = ''\n    this.page = 1\n    this.init()\n  }\n\n  // 分页大小变化\n  private handleSizeChange(val: number) {\n    this.pageSize = val\n    this.init()\n  }\n\n  // 页码变化\n  private handleCurrentChange(val: number) {\n    this.page = val\n    this.init()\n  }\n\n  // 关闭弹窗\n  private handleClose() {\n    this.dialogVisible = false\n  }\n\n  // 获取故障状态文本\n  private getFaultStatus(row: any) {\n    if (row.status === 0) {\n      return '待审核'\n    } else if (row.status === 1) {\n      return '待完成'\n    } else if (row.status === 2) {\n      return '已完成'\n    } else if (row.status === 3) {\n      return '已驳回'\n    } else {\n      return '状态错误'\n    }\n  }\n\n  // 获取设备类型文本\n  private getEquimentType(row: any) {\n    if (row.equipmentType === 1) {\n      return '客服设备'\n    } else if (row.equipmentType === 2) {\n      return '机电设备'\n    } else if (row.equipmentType === 3) {\n      return '消防设备'\n    } else if (row.equipmentType === 4) {\n      return '电梯设备'\n    } else {\n      return '状态错误'\n    }\n  }\n\n  // 查看详情\n  private async goDetail(id: string, status: number, row: any) {\n    this.diaForm = {}\n    this.dialogVisible = true\n    this.dialogFaultStatus = status\n    this.requestCode = id\n    try {\n      const { data } = await queryFaultClearById({ requestCode: id })\n      if (data.code === 1) {\n        this.diaForm = data.data\n        this.row = row\n      } else {\n        this.$message.error(data.msg)\n      }\n    } catch (err) {\n      this.$message.error('请求出错了：' + err.message)\n    }\n  }\n\n  // 审核通过\n  private passFault(row: any) {\n    this.confirmDialogVisible = true\n    this.requestCode = row.requestCode\n    this.confirmStatus = '审核通过确认'\n    this.dialogFaultStatus = row.status\n    this.dialogVisible = false\n    this.approvalComment = ''\n    this.remark = ''\n  }\n\n  // 审核不通过\n  private refuseFault(row: any) {\n    this.confirmDialogVisible = true\n    this.requestCode = row.requestCode\n    this.confirmStatus = '审核不通过确认'\n    this.dialogFaultStatus = row.status\n    this.dialogVisible = false\n    this.approvalComment = ''\n    this.remark = ''\n  }\n\n  // 确认审核\n  private async confirmAudit() {\n    if (!this.approvalComment) {\n      return this.$message.error(`请选择${this.confirmStatus}原因`)\n    } else if (this.approvalComment === '自定义原因' && !this.remark) {\n      return this.$message.error(`请输入${this.confirmStatus}原因`)\n    }\n\n    const api = this.confirmStatus === '审核不通过确认' ? refuseFaultClear : auditFaultClear\n    try {\n      const res = await api({\n        requestCode: this.requestCode,\n        status: this.confirmStatus === '审核不通过确认' ? 3 : 1,\n        approvalComment: this.approvalComment === '自定义原因' ? this.remark : this.approvalComment\n      })\n      \n      if (res.data.code === 1) {\n        this.$message.success('操作成功')\n        this.confirmDialogVisible = false\n        this.requestCode = ''\n        this.confirmStatus = ''\n        this.approvalComment = ''\n        this.init(this.faultStatus)\n      } else {\n        this.$message.error(res.data.msg)\n      }\n    } catch (err) {\n      this.$message.error('请求出错了：' + err.message)\n    }\n  }\n}\n"],"sourceRoot":""}]}