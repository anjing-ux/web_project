{"remainingRequest":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\babel-loader\\lib\\index.js!G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\ts-loader\\index.js??ref--14-2!G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\device-management\\project-sky-admin-vue-ts\\src\\views\\director\\deviceReview\\faultClear\\faultClear.vue?vue&type=script&lang=ts&","dependencies":[{"path":"G:\\device-management\\project-sky-admin-vue-ts\\src\\views\\director\\deviceReview\\faultClear\\faultClear.vue","mtime":1748184408000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/asyncToGenerator\"));\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.array.find\");\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/inherits\"));\n\nvar _tslib = require(\"tslib\");\n\nvar _vuePropertyDecorator = require(\"vue-property-decorator\");\n\nvar _index = _interopRequireDefault(require(\"@/components/HeadLable/index.vue\"));\n\nvar _index2 = _interopRequireDefault(require(\"@/components/InputAutoComplete/index.vue\"));\n\nvar _tabChange = _interopRequireDefault(require(\"./tabChange.vue\"));\n\nvar _index3 = _interopRequireDefault(require(\"@/components/Empty/index.vue\"));\n\nvar _vueEsign = _interopRequireDefault(require(\"vue-esign\"));\n\nvar _fault = require(\"@/api/fault\");\n\nvar default_1 =\n/*#__PURE__*/\nfunction (_Vue) {\n  (0, _inherits2.default)(default_1, _Vue);\n\n  function default_1() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, default_1);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(default_1).apply(this, arguments));\n    _this.defaultActivity = 0;\n    _this.orderStatics = {\n      all: 15,\n      pending: 3,\n      processing: 4,\n      waitingClear: 5,\n      cleared: 2,\n      closed: 1\n    };\n    _this.row = {};\n    _this.faultType = '';\n    _this.faultCode = ''; // 故障编号\n\n    _this.dialogFaultStatus = -1;\n    _this.clearDialogVisible = false;\n    _this.valueTime = [];\n    _this.dialogVisible = false; // 详情弹窗\n\n    _this.remark = ''; // 备注\n\n    _this.deviceName = '';\n    _this.counts = 15;\n    _this.page = 1;\n    _this.pageSize = 10;\n    _this.tableData = [];\n    _this.diaForm = {}; // 修改为对象\n\n    _this.isSearch = false;\n    _this.faultStatus = 0; // 列表字段展示所需状态,用于分页请求数据\n\n    _this.signDialogVisible = false; // 签字弹窗显示控制\n\n    _this.signatureImg = ''; // 签名图片base64\n\n    _this.satisfactionScore = 3; // 默认满意度评分\n\n    _this.currentFaultId = ''; // 当前签字的审核单ID\n    //审核详情弹窗\n\n    _this.auditDialogVisible = false;\n    _this.auditForm = {}; // 审核不通过原因列表\n\n    _this.refuseFaultList = [{\n      label: '处理不完善',\n      value: '处理不完善'\n    }, {\n      label: '信息不完整',\n      value: '信息不完整'\n    }, {\n      label: '维修措施不当',\n      value: '维修措施不当'\n    }, {\n      label: '照片不清晰',\n      value: '照片不清晰'\n    }, {\n      label: '自定义原因',\n      value: '自定义原因'\n    }]; // 故障类型列表\n\n    _this.faultTypeList = [{\n      label: '类型1',\n      value: 1\n    }, {\n      label: '类型2',\n      value: 2\n    }, {\n      label: '类型3',\n      value: 3\n    }]; // 故障等级列表\n\n    _this.faultLevelList = [{\n      label: '一般',\n      value: 1\n    }, {\n      label: '重要',\n      value: 2\n    }, {\n      label: '紧急',\n      value: 3\n    }]; // 任务状态列表\n\n    _this.taskStatusList = [{\n      label: '执行中',\n      value: 1\n    }, {\n      label: '待验收',\n      value: 2\n    }, {\n      label: '已验收',\n      value: 3\n    }, {\n      label: '已销号',\n      value: 4\n    }, {\n      label: '被驳回',\n      value: 5\n    }];\n    _this.faultStatusList = [{\n      label: '全部审核单',\n      value: 0\n    }, {\n      label: '待班组长审核',\n      value: 1\n    }, {\n      label: '待工区长审核',\n      value: 2\n    }, {\n      label: '待主任签字',\n      value: 3\n    }, {\n      label: '已完成',\n      value: 4\n    }]; // 工区列表（示例数据）\n\n    _this.areaList = [{\n      id: 1,\n      name: '工区A'\n    }, {\n      id: 2,\n      name: '工区B'\n    }, {\n      id: 3,\n      name: '工区C'\n    }]; // 班组列表（示例数据）\n\n    _this.teamList = [{\n      id: 1,\n      name: '班组A'\n    }, {\n      id: 2,\n      name: '班组B'\n    }, {\n      id: 3,\n      name: '班组C'\n    }];\n    return _this;\n  }\n\n  (0, _createClass2.default)(default_1, [{\n    key: \"created\",\n    value: function created() {\n      this.init(Number(this.$route.query.status) || 0);\n    }\n  }, {\n    key: \"mounted\",\n    value: function mounted() {\n      if (this.$route.query.faultId && this.$route.query.faultId !== 'undefined') {\n        this.goDetail(this.$route.query.faultId, 2);\n      }\n\n      if (this.$route.query.status) {\n        this.defaultActivity = Number(this.$route.query.status);\n      }\n    } // 获取工区名称\n\n  }, {\n    key: \"getAreaName\",\n    value: function getAreaName(areaId) {\n      var area = this.areaList.find(function (item) {\n        return item.id === areaId;\n      });\n      return area ? area.name : '未知工区';\n    } // 获取班组名称\n\n  }, {\n    key: \"getTeamName\",\n    value: function getTeamName(teamId) {\n      var team = this.teamList.find(function (item) {\n        return item.id === teamId;\n      });\n      return team ? team.name : '未知班组';\n    } // 获取故障等级文本\n\n  }, {\n    key: \"getFaultLevelText\",\n    value: function getFaultLevelText(level) {\n      switch (level) {\n        case 1:\n          return '一般';\n\n        case 2:\n          return '重要';\n\n        case 3:\n          return '紧急';\n\n        default:\n          return '未知等级';\n      }\n    } // 获取故障类型\n\n  }, {\n    key: \"getFaultType\",\n    value: function getFaultType(row) {\n      var type = this.faultTypeList.find(function (item) {\n        return item.value === row.faultType;\n      });\n      return type ? type.label : '未知类型';\n    } // 获取故障等级\n\n  }, {\n    key: \"getFaultLevel\",\n    value: function getFaultLevel(row) {\n      var level = this.faultLevelList.find(function (item) {\n        return item.value === row.faultLevel;\n      });\n      return level ? level.label : '未知等级';\n    } // 获取故障状态\n\n  }, {\n    key: \"getFaultStatus\",\n    value: function getFaultStatus(row) {\n      var status = this.faultStatusList.find(function (item) {\n        return item.value === row.verifyStep;\n      });\n      return status ? status.label : '未知状态';\n    }\n  }, {\n    key: \"formatDateToDay\",\n    value: function formatDateToDay(dateTime) {\n      if (!dateTime) return '';\n      return dateTime.split(' ')[0]; // 直接取空格前的日期部分\n      // 或者使用更精确的方式：\n      // return new Date(dateTime).toISOString().split('T')[0];\n    } // 初始化数据\n\n  }, {\n    key: \"init\",\n    value: function init(status) {\n      var _this2 = this;\n\n      var isSearch = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      this.faultStatus = status;\n      this.isSearch = isSearch;\n      var params = {\n        page: this.page,\n        pageSize: this.pageSize,\n        deviceName: this.deviceName,\n        faultType: this.faultType || null,\n        startTime: this.valueTime && this.valueTime.length ? this.valueTime[0] : null,\n        completeTime: this.valueTime && this.valueTime.length ? this.valueTime[1] : null,\n        auditStatus: this.faultStatus === 0 ? undefined : status\n      };\n      (0, _fault.getFaultVerifyList)(params).then(function (res) {\n        if (res.data.code === 1) {\n          _this2.tableData = res.data.data.records || 0;\n          _this2.counts = res.data.total;\n        } else {\n          _this2.$message.error(res.data.msg || '获取数据失败');\n        }\n      }).catch(function () {\n        // 模拟数据，实际开发中可删除\n        _this2.$message.error('未知错误请联系管理员');\n      });\n    } // 初始化函数（用于回车搜索）\n\n  }, {\n    key: \"initFun\",\n    value: function initFun(status) {\n      this.init(status, true);\n    } //管理标签页点击事件\n\n  }, {\n    key: \"change\",\n    value: function change(activeIndex) {\n      if (activeIndex === this.faultStatus) return;\n      this.init(activeIndex);\n      this.valueTime = []; //this.dialogPurchaseStatus = 0\n\n      this.$router.push('/director/deviceReview/faultClear');\n      console.log(activeIndex, '接收到了子组件的index');\n    } // 处理页码变化\n\n  }, {\n    key: \"handleCurrentChange\",\n    value: function handleCurrentChange(val) {\n      this.page = val;\n      this.init(this.faultStatus);\n    } // 处理每页条数变化\n\n  }, {\n    key: \"handleSizeChange\",\n    value: function handleSizeChange(val) {\n      this.pageSize = val;\n      this.page = 1;\n      this.init(this.faultStatus);\n    } // 关闭弹窗\n\n  }, {\n    key: \"handleClose\",\n    value: function handleClose() {\n      this.dialogVisible = false;\n    } // 查看详情\n\n  }, {\n    key: \"goDetail\",\n    value: function goDetail(faultId, verifyStep) {\n      var _this3 = this;\n\n      var row = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      this.row = row;\n      this.dialogFaultStatus = verifyStep;\n      this.dialogVisible = true; // 获取故障详情\n\n      (0, _fault.queryFaultDetailById)(faultId).then(function (res) {\n        if (res.data.code === 1) {\n          _this3.diaForm = res.data.data;\n        } else {\n          _this3.$message.error(res.data.msg || '获取详情失败');\n        }\n      }).catch(function () {\n        // 模拟数据，实际开发中可删除\n        _this3.$message.error('未知错误请联系管理员');\n      });\n    }\n  }, {\n    key: \"handleSign\",\n    value: function handleSign(faultId) {\n      var _this4 = this;\n\n      this.currentFaultId = faultId;\n      this.signDialogVisible = true; // 每次打开时重置签名状态\n\n      this.$nextTick(function () {\n        _this4.handleReset(); // 确保每次打开都清空签名\n\n\n        _this4.satisfactionScore = 3; // 重置评分\n      });\n    } // Add these methods:\n    // 重设签名\n\n  }, {\n    key: \"handleReset\",\n    value: function handleReset() {\n      var esign = this.$refs.esign;\n\n      if (esign) {\n        esign.reset(); // 清除画布\n\n        this.signatureImg = ''; // 清空预览\n      }\n    } // 生成签名\n\n  }, {\n    key: \"handleGenerate\",\n    value: function handleGenerate() {\n      var _this5 = this;\n\n      this.$refs.esign.generate().then(function (res) {\n        _this5.signatureImg = res;\n      }).catch(function () {\n        _this5.$message.error('请先签名');\n      });\n    } // 提交签名和满意度\n\n  }, {\n    key: \"submitSign\",\n    value: function () {\n      var _submitSign = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var params, res;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this.signatureImg) {\n                  _context.next = 3;\n                  break;\n                }\n\n                this.$message.warning('请先完成签名');\n                return _context.abrupt(\"return\");\n\n              case 3:\n                _context.prev = 3;\n                params = {\n                  faultId: this.currentFaultId,\n                  satisfactionScore: this.satisfactionScore,\n                  signature: this.signatureImg\n                };\n                _context.next = 7;\n                return (0, _fault.submitFaultVerify)(params);\n\n              case 7:\n                res = _context.sent;\n\n                if (res.data.code === 1) {\n                  this.$message.success('签字提交成功');\n                  this.signDialogVisible = false;\n                  this.init(this.faultStatus); // 刷新列表\n                }\n\n                console.log('提交的签字数据:', JSON.stringify(params));\n                _context.next = 15;\n                break;\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](3);\n                this.$message.error('提交失败: ' + _context.t0.message);\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[3, 12]]);\n      }));\n\n      function submitSign() {\n        return _submitSign.apply(this, arguments);\n      }\n\n      return submitSign;\n    }() // 打开审核详情弹窗\n\n  }, {\n    key: \"showAuditDetail\",\n    value: function showAuditDetail(faultId) {\n      this.auditDialogVisible = true;\n      this.loadAuditData(faultId);\n    } // 加载审核数据\n\n  }, {\n    key: \"loadAuditData\",\n    value: function loadAuditData(faultId) {\n      var _this6 = this;\n\n      (0, _fault.queryFaultVerifyDetailById)(faultId).then(function (res) {\n        if (res.data.code === 1) {\n          _this6.auditForm = res.data.data;\n        } else {\n          _this6.$message.error(res.data.msg || '获取审核详情失败');\n        }\n      }).catch(function (err) {\n        _this6.$message.error('获取审核详情出错: ' + err.message);\n      });\n    } // 获取审核步骤文本\n\n  }, {\n    key: \"getVerifyStepText\",\n    value: function getVerifyStepText(step) {\n      switch (step) {\n        case 1:\n          return '班组长审核';\n\n        case 2:\n          return '工区长审核';\n\n        case 3:\n          return '主管领导审核';\n\n        case 4:\n          return '已完成';\n      }\n    } // 获取步骤状态描述\n\n  }, {\n    key: \"getStepDescription\",\n    value: function getStepDescription(step) {\n      if (step < this.auditForm.verifyStep) {\n        return '已完成 - ' + this.auditForm.verifyTime;\n      } else if (step === this.auditForm.verifyStep) {\n        return '进行中';\n      } else {\n        return '待处理';\n      }\n    } // 获取当前激活的步骤\n\n  }, {\n    key: \"getActiveStep\",\n    value: function getActiveStep(step) {\n      return step || 0;\n    } // 获取状态样式类\n\n  }, {\n    key: \"getStatusClass\",\n    value: function getStatusClass(step) {\n      switch (step) {\n        case 1:\n          return 'status1';\n\n        case 2:\n          return 'status2';\n\n        case 3:\n          return 'status3';\n\n        default:\n          return 'status0';\n      }\n    }\n  }]);\n  return default_1;\n}(_vuePropertyDecorator.Vue);\n\ndefault_1 = (0, _tslib.__decorate)([(0, _vuePropertyDecorator.Component)({\n  components: {\n    HeadLable: _index.default,\n    InputAutoComplete: _index2.default,\n    TabChange: _tabChange.default,\n    Empty: _index3.default,\n    vueEsign: _vueEsign.default\n  }\n})], default_1);\nvar _default = default_1;\nexports.default = _default;",{"version":3,"sources":["G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\device-management\\project-sky-admin-vue-ts\\src\\views\\director\\deviceReview\\faultClear\\faultClear.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport { Component, Vue } from 'vue-property-decorator'\r\nimport HeadLable from '@/components/HeadLable/index.vue'\r\nimport InputAutoComplete from '@/components/InputAutoComplete/index.vue'\r\nimport TabChange from './tabChange.vue'\r\nimport Empty from '@/components/Empty/index.vue'\r\nimport vueEsign from 'vue-esign' \r\nimport {\r\n  getFaultVerifyList,\r\n  submitFaultVerify,\r\n  queryFaultDetailById,\r\n  queryFaultVerifyDetailById\r\n} from '@/api/fault'\r\nimport { status } from 'nprogress'\r\nimport { verify } from 'crypto'\r\n\r\n@Component({\r\n  components: {\r\n    HeadLable,\r\n    InputAutoComplete,\r\n    TabChange,\r\n    Empty,\r\n    vueEsign,\r\n  },\r\n})\r\nexport default class extends Vue {\r\n  private defaultActivity: any = 0\r\n  private orderStatics = {\r\n    all: 15,\r\n    pending: 3,\r\n    processing: 4,\r\n    waitingClear: 5,\r\n    cleared: 2,\r\n    closed: 1\r\n  }\r\n  private row = {}\r\n  private faultType = ''\r\n  private faultCode = '' // 故障编号\r\n  private dialogFaultStatus = -1\r\n  private clearDialogVisible = false\r\n  private valueTime = []\r\n  private dialogVisible = false // 详情弹窗\r\n  private remark = '' // 备注\r\n  private deviceName = ''\r\n  private counts: number = 15\r\n  private page: number = 1\r\n  private pageSize: number = 10\r\n  private tableData = []\r\n\r\n  private diaForm: any = {} // 修改为对象\r\n  private isSearch: boolean = false\r\n  private faultStatus = 0 // 列表字段展示所需状态,用于分页请求数据\r\n\r\n  private signDialogVisible = false // 签字弹窗显示控制\r\n  private signatureImg = '' // 签名图片base64\r\n  private satisfactionScore = 3 // 默认满意度评分\r\n  private currentFaultId = '' // 当前签字的审核单ID\r\n  //审核详情弹窗\r\n  private auditDialogVisible = false\r\n  private auditForm: any = {}\r\n\r\n\r\n  // 审核不通过原因列表\r\n  private refuseFaultList = [\r\n    {\r\n      label: '处理不完善',\r\n      value: '处理不完善',\r\n    },\r\n    {\r\n      label: '信息不完整',\r\n      value: '信息不完整',\r\n    },\r\n    {\r\n      label: '维修措施不当',\r\n      value: '维修措施不当',\r\n    },\r\n    {\r\n      label: '照片不清晰',\r\n      value: '照片不清晰',\r\n    },\r\n    {\r\n      label: '自定义原因',\r\n      value: '自定义原因',\r\n    },\r\n  ]\r\n\r\n  // 故障类型列表\r\n  private faultTypeList = [\r\n    {\r\n      label: '类型1',\r\n      value: 1,\r\n    },\r\n    {\r\n      label: '类型2',\r\n      value: 2,\r\n    },\r\n    {\r\n      label: '类型3',\r\n      value: 3,\r\n    },\r\n  ]\r\n\r\n  // 故障等级列表\r\n  private faultLevelList = [\r\n    {\r\n      label: '一般',\r\n      value: 1,\r\n    },\r\n    {\r\n      label: '重要',\r\n      value: 2,\r\n    },\r\n    {\r\n      label: '紧急',\r\n      value: 3,\r\n    },\r\n  ]\r\n\r\n\r\n  \r\n  // 任务状态列表\r\n  private taskStatusList = [\r\n    {\r\n      label: '执行中',\r\n      value: 1,\r\n    },\r\n    {\r\n      label: '待验收',\r\n      value: 2,\r\n    },\r\n    {\r\n      label: '已验收',\r\n      value: 3,\r\n    },\r\n    {\r\n      label: '已销号',\r\n      value: 4,\r\n    },\r\n    {\r\n      label: '被驳回',\r\n      value: 5,\r\n    }\r\n  ]\r\n\r\n  private faultStatusList = [\r\n  {\r\n        label: '全部审核单',\r\n        value: 0\r\n      },\r\n      {\r\n        label: '待班组长审核',\r\n        value: 1\r\n      },\r\n      {\r\n        label: '待工区长审核',\r\n        value: 2\r\n      },\r\n      {\r\n        label: '待主任签字',\r\n        value: 3\r\n      },\r\n      {\r\n        label: '已完成',\r\n        value: 4\r\n      }\r\n    \r\n  ]\r\n  \r\n  // 工区列表（示例数据）\r\n  private areaList = [\r\n    { id: 1, name: '工区A' },\r\n    { id: 2, name: '工区B' },\r\n    { id: 3, name: '工区C' }\r\n  ]\r\n  \r\n  // 班组列表（示例数据）\r\n  private teamList = [\r\n    { id: 1, name: '班组A' },\r\n    { id: 2, name: '班组B' },\r\n    { id: 3, name: '班组C' }\r\n  ]\r\n\r\n  created() {\r\n    this.init(Number(this.$route.query.status) || 0)\r\n  }\r\n\r\n  mounted() {\r\n    if (\r\n      this.$route.query.faultId &&\r\n      this.$route.query.faultId !== 'undefined'\r\n    ) {\r\n      this.goDetail(this.$route.query.faultId, 2)\r\n    }\r\n    if (this.$route.query.status) {\r\n      this.defaultActivity = Number(this.$route.query.status)\r\n    }\r\n  }\r\n  \r\n  // 获取工区名称\r\n  private getAreaName(areaId: number): string {\r\n    const area = this.areaList.find(item => item.id === areaId)\r\n    return area ? area.name : '未知工区'\r\n  }\r\n  \r\n  // 获取班组名称\r\n  private getTeamName(teamId: number): string {\r\n    const team = this.teamList.find(item => item.id === teamId)\r\n    return team ? team.name : '未知班组'\r\n  }\r\n  \r\n  // 获取故障等级文本\r\n  private getFaultLevelText(level: number): string {\r\n    switch (level) {\r\n      case 1:\r\n        return '一般'\r\n      case 2:\r\n        return '重要'\r\n      case 3:\r\n        return '紧急'\r\n      default:\r\n        return '未知等级'\r\n    }\r\n  }\r\n  \r\n  // 获取故障类型\r\n  private getFaultType(row: any): string {\r\n    const type = this.faultTypeList.find(item => item.value === row.faultType)\r\n    return type ? type.label : '未知类型'\r\n  }\r\n  \r\n  // 获取故障等级\r\n  private getFaultLevel(row: any): string {\r\n    const level = this.faultLevelList.find(item => item.value === row.faultLevel)\r\n    return level ? level.label : '未知等级'\r\n  }\r\n  \r\n  // 获取故障状态\r\n  private getFaultStatus(row: any): string {\r\n    const status = this.faultStatusList.find(item => item.value === row.verifyStep)\r\n    return status ? status.label : '未知状态'\r\n  }\r\n\r\n  private formatDateToDay(dateTime: string): string {\r\n  if (!dateTime) return '';\r\n  return dateTime.split(' ')[0]; // 直接取空格前的日期部分\r\n  // 或者使用更精确的方式：\r\n  // return new Date(dateTime).toISOString().split('T')[0];\r\n}\r\n  \r\n  \r\n  // 初始化数据\r\n  private init(status: number, isSearch: boolean = false) {\r\n    this.faultStatus = status\r\n    this.isSearch = isSearch\r\n    const params = {\r\n      page: this.page,\r\n      pageSize: this.pageSize,\r\n      deviceName: this.deviceName,\r\n      faultType: this.faultType || null,\r\n      startTime: this.valueTime && this.valueTime.length ? this.valueTime[0] : null,\r\n      completeTime: this.valueTime && this.valueTime.length ? this.valueTime[1] : null,\r\n      auditStatus: this.faultStatus === 0? undefined : status,\r\n      //verifyStep: status === 0 ? undefined : status,\r\n    }\r\n    \r\n    getFaultVerifyList(params).then(res => {\r\n      if (res.data.code === 1) {\r\n\r\n        this.tableData = res.data.data.records || 0\r\n        this.counts = res.data.total\r\n      } else {\r\n        this.$message.error(res.data.msg || '获取数据失败')\r\n      }\r\n    }).catch(() => {\r\n      // 模拟数据，实际开发中可删除\r\n      this.$message.error('未知错误请联系管理员')\r\n    })\r\n  }\r\n  \r\n  // 初始化函数（用于回车搜索）\r\n  private initFun(status: number) {\r\n    this.init(status, true)\r\n  }\r\n  \r\n  //管理标签页点击事件\r\n  change(activeIndex) {\r\n    if (activeIndex === this.faultStatus) return\r\n    this.init(activeIndex)\r\n    this.valueTime = []\r\n    //this.dialogPurchaseStatus = 0\r\n    this.$router.push('/director/deviceReview/faultClear')\r\n    console.log(activeIndex, '接收到了子组件的index')\r\n  }\r\n\r\n  \r\n  // 处理页码变化\r\n  private handleCurrentChange(val: number) {\r\n    this.page = val\r\n    this.init(this.faultStatus)\r\n  }\r\n  \r\n  // 处理每页条数变化\r\n  private handleSizeChange(val: number) {\r\n    this.pageSize = val\r\n    this.page = 1\r\n    this.init(this.faultStatus)\r\n  }\r\n  \r\n  // 关闭弹窗\r\n  private handleClose() {\r\n    this.dialogVisible = false\r\n  }\r\n  \r\n  \r\n  \r\n  // 查看详情\r\n  private goDetail(faultId: string, verifyStep: number, row: any = {}) {\r\n    this.row = row\r\n    this.dialogFaultStatus = verifyStep\r\n    this.dialogVisible = true\r\n    \r\n    // 获取故障详情\r\n    queryFaultDetailById(faultId).then(res => {\r\n      if (res.data.code === 1) {\r\n        this.diaForm = res.data.data\r\n      } else {\r\n        this.$message.error(res.data.msg || '获取详情失败')\r\n      }\r\n    }).catch(() => {\r\n      // 模拟数据，实际开发中可删除\r\n      this.$message.error('未知错误请联系管理员')\r\n    })\r\n  }\r\n\r\n  private handleSign(faultId: string) {\r\n  this.currentFaultId = faultId\r\n  this.signDialogVisible = true\r\n  // 每次打开时重置签名状态\r\n  this.$nextTick(() => {\r\n    this.handleReset() // 确保每次打开都清空签名\r\n    this.satisfactionScore = 3 // 重置评分\r\n  })\r\n}\r\n\r\n// Add these methods:\r\n// 重设签名\r\nprivate handleReset() {\r\n  const esign = this.$refs.esign as any\r\n  if (esign) {\r\n    esign.reset() // 清除画布\r\n    this.signatureImg = '' // 清空预览\r\n  }\r\n}\r\n\r\n// 生成签名\r\nprivate handleGenerate() {\r\n  (this.$refs.esign as any).generate().then((res: string) => {\r\n    this.signatureImg = res\r\n  }).catch(() => {\r\n    this.$message.error('请先签名')\r\n  })\r\n}\r\n\r\n// 提交签名和满意度\r\nprivate async submitSign() {\r\n  if (!this.signatureImg) {\r\n    this.$message.warning('请先完成签名')\r\n    return\r\n  }\r\n\r\n  try {\r\n    const params = {\r\n      faultId: this.currentFaultId,\r\n      satisfactionScore: this.satisfactionScore,\r\n      signature: this.signatureImg\r\n    }\r\n\r\n\r\n    const res = await submitFaultVerify(params)\r\n    if (res.data.code === 1) {\r\n      this.$message.success('签字提交成功')\r\n      this.signDialogVisible = false\r\n      this.init(this.faultStatus) // 刷新列表\r\n     }\r\n    \r\n    console.log('提交的签字数据:', JSON.stringify(params))\r\n  } catch (error) {\r\n    this.$message.error('提交失败: ' + error.message)\r\n  }\r\n}\r\n\r\n// 打开审核详情弹窗\r\nprivate showAuditDetail(faultId: string) {\r\n    this.auditDialogVisible = true\r\n    this.loadAuditData(faultId)\r\n  }\r\n\r\n  // 加载审核数据\r\n  private loadAuditData(faultId: string) {\r\n    queryFaultVerifyDetailById(faultId).then(res => {\r\n      if (res.data.code === 1) {\r\n        this.auditForm = res.data.data\r\n      } else {\r\n        this.$message.error(res.data.msg || '获取审核详情失败')\r\n      }\r\n    }).catch(err => {\r\n      this.$message.error('获取审核详情出错: ' + err.message)\r\n    })\r\n  }\r\n\r\n  // 获取审核步骤文本\r\n  private getVerifyStepText(step: number): string {\r\n    switch (step) {\r\n      case 1: return '班组长审核'\r\n      case 2: return '工区长审核'\r\n      case 3: return '主管领导审核'\r\n      case 4: return '已完成'\r\n    }\r\n  }\r\n\r\n  // 获取步骤状态描述\r\n  private getStepDescription(step: number): string {\r\n    if (step < this.auditForm.verifyStep) {\r\n      return '已完成 - ' + this.auditForm.verifyTime\r\n    } else if (step === this.auditForm.verifyStep) {\r\n      return '进行中'\r\n    } else {\r\n      return '待处理'\r\n    }\r\n  }\r\n\r\n  // 获取当前激活的步骤\r\n  private getActiveStep(step: number): number {\r\n    return step || 0\r\n  }\r\n\r\n  // 获取状态样式类\r\n  private getStatusClass(step: number): string {\r\n    switch (step) {\r\n      case 1: return 'status1'\r\n      case 2: return 'status2'\r\n      case 3: return 'status3'\r\n      default: return 'status0'\r\n    }\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}]}