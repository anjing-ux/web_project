{"remainingRequest":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\ts-loader\\index.js??ref--14-2!G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\eslint-loader\\index.js??ref--13-0!G:\\device-management\\project-sky-admin-vue-ts\\src\\utils\\request.ts","dependencies":[{"path":"G:\\device-management\\project-sky-admin-vue-ts\\src\\utils\\request.ts","mtime":1656470625000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\babel.config.js","mtime":1652756116000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/es6.regexp.replace\");\nvar _typeof2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/typeof\"));\nrequire(\"core-js/modules/web.dom.iterable\");\nrequire(\"core-js/modules/es6.object.keys\");\nvar _axios = _interopRequireDefault(require(\"axios\"));\nvar _user = require(\"@/store/modules/user\");\nvar _requestOptimize = require(\"./requestOptimize\");\nvar _router = _interopRequireDefault(require(\"@/router\"));\nvar CancelToken = _axios.default.CancelToken;\nvar service = _axios.default.create({\n  baseURL: process.env.VUE_APP_BASE_API,\n  'timeout': 600000\n});\n// Request interceptors\nservice.interceptors.request.use(function (config) {\n  // console.log(config, 'config')\n  // config.data = config.params\n  // Add X-Access-Token header to every request, you can add other custom headers here\n  if (_user.UserModule.token) {\n    config.headers['token'] = _user.UserModule.token;\n  } else if (_user.UserModule.token && config.url != '/login') {\n    window.location.href = '/login';\n    return false;\n  }\n  // config.headers['Access-Control-Allow-Origin'] = '*'\n  // config.headers['Content-Type'] = 'application/json;'\n  // get请求映射params参数\n  if (config.method === 'get' && config.params) {\n    var url = config.url + '?';\n    for (var _i = 0, _Object$keys = Object.keys(config.params); _i < _Object$keys.length; _i++) {\n      var propName = _Object$keys[_i];\n      var value = config.params[propName];\n      var part = encodeURIComponent(propName) + '=';\n      if (value !== null && typeof value !== 'undefined') {\n        if ((0, _typeof2.default)(value) === 'object') {\n          for (var _i2 = 0, _Object$keys2 = Object.keys(value); _i2 < _Object$keys2.length; _i2++) {\n            var _key = _Object$keys2[_i2];\n            var params = propName + '[' + _key + ']';\n            var subPart = encodeURIComponent(params) + '=';\n            url += subPart + encodeURIComponent(value[_key]) + '&';\n          }\n        } else {\n          url += part + encodeURIComponent(value) + '&';\n        }\n      }\n    }\n    url = url.slice(0, -1);\n    config.params = {};\n    config.url = url;\n  }\n  // 计算当前请求key值\n  var key = (0, _requestOptimize.getRequestKey)(config);\n  // console.log(pending,key,checkPending(key),'checkPending(key)')\n  if ((0, _requestOptimize.checkPending)(key)) {\n    // 重复请求则取消当前请求\n    var source = CancelToken.source();\n    config.cancelToken = source.token;\n    source.cancel('重复请求');\n  } else {\n    // 加入请求字典\n    _requestOptimize.pending[key] = true;\n  }\n  return config;\n}, function (error) {\n  Promise.reject(error);\n});\n// Response interceptors\nservice.interceptors.response.use(function (response) {\n  // console.log(response, 'response')\n  if (response.data.status === 401) {\n    _router.default.push('/login');\n    // const res = response.data\n    // return response\n  }\n  //请求响应中的config的url会带上代理的api需要去掉\n  response.config.url = response.config.url.replace('/api', '');\n  // 请求完成，删除请求中状态\n  var key = (0, _requestOptimize.getRequestKey)(response.config);\n  (0, _requestOptimize.removePending)(key);\n  // if (response.data.code === 0) {\n  //   Message.error(response.data.msg)\n  //   // if(response.data.msg === 'NOTLOGIN' || response.data.msg === '未登录'){\n  //   //   router.push('/login')\n  //   // }\n  //   // return window.location.href = '/login'\n  //   // window.location.href = '/login'\n  //   // return false\n  // } else\n  if (response.data.code === 1) {\n    // const res = response.data\n    return response;\n  }\n  return response;\n}, function (error) {\n  // console.log(error.config, pending, 'error')\n  if (error && error.response) {\n    switch (error.response.status) {\n      case 401:\n        _router.default.push('/login');\n        break;\n      case 405:\n        error.message = '请求错误';\n    }\n  }\n  //请求响应中的config的url会带上代理的api需要去掉\n  error.config.url = error.config.url.replace('/api', '');\n  // 请求完成，删除请求中状态\n  var key = (0, _requestOptimize.getRequestKey)(error.config);\n  (0, _requestOptimize.removePending)(key);\n  // console.log(error, pending, 'error11')\n  // Message({\n  //   'message': error.message,\n  //   'type': 'error',\n  //   'duration': 5 * 1000\n  // })\n  // router.push('/login')\n  return Promise.reject(error);\n});\nvar _default = exports.default = service;",{"version":3,"names":["_axios","_interopRequireDefault","require","_user","_requestOptimize","_router","CancelToken","axios","service","create","baseURL","process","env","VUE_APP_BASE_API","interceptors","request","use","config","UserModule","token","headers","url","window","location","href","method","params","_i","_Object$keys","Object","keys","length","propName","value","part","encodeURIComponent","_typeof2","default","_i2","_Object$keys2","key","subPart","slice","getRequestKey","checkPending","source","cancelToken","cancel","pending","error","Promise","reject","response","data","status","router","push","replace","removePending","code","message","_default","exports"],"sources":["G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\eslint-loader\\index.js??ref--13-0!G:\\device-management\\project-sky-admin-vue-ts\\src\\utils\\request.ts"],"sourcesContent":["import axios, { AxiosAdapter } from 'axios'\nimport { Message, MessageBox } from 'element-ui'\nimport { UserModule } from '@/store/modules/user'\nimport {\n  getRequestKey,\n  pending,\n  checkPending,\n  removePending\n} from './requestOptimize'\nimport router from '@/router'\nconst CancelToken = axios.CancelToken;\n\nconst service = axios.create({\n  baseURL: process.env.VUE_APP_BASE_API,\n  'timeout': 600000\n})\n\n// Request interceptors\nservice.interceptors.request.use(\n  (config: any) => {\n    // console.log(config, 'config')\n    // config.data = config.params\n    // Add X-Access-Token header to every request, you can add other custom headers here\n    if (UserModule.token) {\n      config.headers['token'] = UserModule.token\n    } else if (UserModule.token && config.url != '/login') {\n      window.location.href = '/login'\n      return false\n    }\n\n    // config.headers['Access-Control-Allow-Origin'] = '*'\n    // config.headers['Content-Type'] = 'application/json;'\n    // get请求映射params参数\n    if (config.method === 'get' && config.params) {\n      let url = config.url + '?';\n      for (const propName of Object.keys(config.params)) {\n        const value = config.params[propName];\n        var part = encodeURIComponent(propName) + '=';\n        if (value !== null && typeof (value) !== 'undefined') {\n          if (typeof value === 'object') {\n            for (const key of Object.keys(value)) {\n              let params = propName + '[' + key + ']';\n              var subPart = encodeURIComponent(params) + '=';\n              url += subPart + encodeURIComponent(value[key]) + '&';\n            }\n          } else {\n            url += part + encodeURIComponent(value) + '&';\n          }\n        }\n      }\n      url = url.slice(0, -1);\n      config.params = {};\n      config.url = url;\n    }\n    // 计算当前请求key值\n    const key = getRequestKey(config);\n    // console.log(pending,key,checkPending(key),'checkPending(key)')\n    if (checkPending(key)) {\n      // 重复请求则取消当前请求\n      const source = CancelToken.source();\n      config.cancelToken = source.token;\n      source.cancel('重复请求');\n    } else {\n      // 加入请求字典\n      pending[key] = true;\n    }\n    return config\n  },\n  (error: any) => {\n    Promise.reject(error)\n  }\n)\n\n// Response interceptors\nservice.interceptors.response.use(\n  (response: any) => {\n    // console.log(response, 'response')\n    if (response.data.status === 401) {\n      router.push('/login')\n      // const res = response.data\n      // return response\n    }\n    //请求响应中的config的url会带上代理的api需要去掉\n    response.config.url = response.config.url.replace('/api', '')\n    // 请求完成，删除请求中状态\n    const key = getRequestKey(response.config);\n    removePending(key);\n    // if (response.data.code === 0) {\n    //   Message.error(response.data.msg)\n    //   // if(response.data.msg === 'NOTLOGIN' || response.data.msg === '未登录'){\n    //   //   router.push('/login')\n    //   // }\n    //   // return window.location.href = '/login'\n    //   // window.location.href = '/login'\n    //   // return false\n    // } else\n    if (response.data.code === 1) {\n      // const res = response.data\n      return response\n    }\n    return response\n  },\n  (error: any) => {\n    // console.log(error.config, pending, 'error')\n    if (error && error.response) {\n      switch (error.response.status) {\n        case 401:\n          router.push('/login')\n          break;\n        case 405:\n          error.message = '请求错误'\n      }\n    }\n    //请求响应中的config的url会带上代理的api需要去掉\n    error.config.url = error.config.url.replace('/api', '')\n    // 请求完成，删除请求中状态\n    const key = getRequestKey(error.config);\n    removePending(key);\n    // console.log(error, pending, 'error11')\n    // Message({\n    //   'message': error.message,\n    //   'type': 'error',\n    //   'duration': 5 * 1000\n    // })\n    // router.push('/login')\n    return Promise.reject(error)\n  }\n)\n\nexport default service\n"],"mappings":"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","ignoreList":[]}]}