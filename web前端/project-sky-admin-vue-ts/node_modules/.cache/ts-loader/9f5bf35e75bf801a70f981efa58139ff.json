{"remainingRequest":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\babel-loader\\lib\\index.js!G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\ts-loader\\index.js??ref--14-2!G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\device-management\\project-sky-admin-vue-ts\\src\\views\\sectionLeader\\deviceReview\\faultClear\\FaceRecognition.vue?vue&type=script&lang=ts&","dependencies":[{"path":"G:\\device-management\\project-sky-admin-vue-ts\\src\\views\\sectionLeader\\deviceReview\\faultClear\\FaceRecognition.vue","mtime":1748439212485},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/asyncToGenerator\"));\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/inherits\"));\n\nvar _tslib = require(\"tslib\");\n\nvar _vuePropertyDecorator = require(\"vue-property-decorator\");\n\nvar _fault = require(\"@/api/fault\");\n\nvar FaceRecognition =\n/*#__PURE__*/\nfunction (_Vue) {\n  (0, _inherits2.default)(FaceRecognition, _Vue);\n\n  function FaceRecognition() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, FaceRecognition);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(FaceRecognition).apply(this, arguments));\n    _this.faultId = 0;\n    _this.remark = '';\n    _this.stream = null;\n    _this.videoElement = null;\n    _this.canvasElement = null;\n    return _this;\n  }\n\n  (0, _createClass2.default)(FaceRecognition, [{\n    key: \"created\",\n    value: function created() {\n      // 从路由参数中获取数据\n      var _this$$route$query = this.$route.query,\n          faultId = _this$$route$query.faultId,\n          remark = _this$$route$query.remark;\n      if (faultId) this.faultId = Number(faultId);\n      if (remark) this.remark = remark; // 验证参数\n\n      if (!this.faultId || !this.remark) {\n        this.$message.error('参数错误，请重新操作');\n        this.$router.go(-1);\n      }\n    }\n  }, {\n    key: \"mounted\",\n    value: function mounted() {\n      this.videoElement = this.$refs.videoElement;\n      this.canvasElement = this.$refs.canvasElement;\n      this.startCamera();\n    }\n  }, {\n    key: \"beforeDestroy\",\n    value: function beforeDestroy() {\n      this.stopCamera();\n    }\n  }, {\n    key: \"startCamera\",\n    value: function () {\n      var _startCamera = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return navigator.mediaDevices.getUserMedia({\n                  video: {\n                    width: {\n                      ideal: 1280\n                    },\n                    height: {\n                      ideal: 720\n                    },\n                    facingMode: 'user'\n                  }\n                });\n\n              case 3:\n                this.stream = _context.sent;\n\n                if (this.videoElement) {\n                  this.videoElement.srcObject = this.stream;\n                }\n\n                _context.next = 12;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                console.error('Error accessing camera:', _context.t0);\n                this.$message.error('无法访问摄像头，请检查权限设置');\n                this.$router.go(-1);\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 7]]);\n      }));\n\n      function startCamera() {\n        return _startCamera.apply(this, arguments);\n      }\n\n      return startCamera;\n    }()\n  }, {\n    key: \"stopCamera\",\n    value: function stopCamera() {\n      if (this.stream) {\n        this.stream.getTracks().forEach(function (track) {\n          return track.stop();\n        });\n        this.stream = null;\n      }\n    }\n  }, {\n    key: \"captureAndVerify\",\n    value: function captureAndVerify() {\n      if (!this.videoElement || !this.canvasElement) return;\n      var context = this.canvasElement.getContext('2d');\n      if (!context) return; // 设置canvas尺寸与视频一致，确保不超过1920*1080\n\n      var maxWidth = 1280; // 确保分辨率不超过1920*1080\n\n      var maxHeight = 720;\n      var videoWidth = this.videoElement.videoWidth;\n      var videoHeight = this.videoElement.videoHeight; // 计算适合的尺寸，保持宽高比\n\n      var width = videoWidth;\n      var height = videoHeight;\n\n      if (width > maxWidth) {\n        width = maxWidth;\n        height = videoHeight / videoWidth * maxWidth;\n      }\n\n      if (height > maxHeight) {\n        height = maxHeight;\n        width = videoWidth / videoHeight * maxHeight;\n      }\n\n      this.canvasElement.width = width;\n      this.canvasElement.height = height; // 在canvas上绘制当前视频帧\n\n      context.drawImage(this.videoElement, 0, 0, width, height); // 获取图像的base64编码 - 修改为JPEG格式，并设置较低的质量以减小文件大小\n\n      var imageBase64 = this.canvasElement.toDataURL('image/jpeg', 0.8); // 处理base64字符串，移除前缀\n\n      var base64Data = imageBase64.split(',')[1]; // 发送到服务器进行验证\n\n      this.sendImageToServer(base64Data);\n    }\n  }, {\n    key: \"sendImageToServer\",\n    value: function () {\n      var _sendImageToServer = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(imageBase64) {\n        var _this2 = this;\n\n        var response, data;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                this.$message.info('正在进行人脸识别验证...');\n                _context2.next = 4;\n                return fetch('/api/face_recognition/search', {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    base64Image: imageBase64,\n                    groupId: 'device_management_demo'\n                  })\n                });\n\n              case 4:\n                response = _context2.sent;\n                console.log('Face recognition result:', response);\n                _context2.next = 8;\n                return response.json();\n\n              case 8:\n                data = _context2.sent;\n                console.log('Face recognition result:', data);\n\n                if (data.code === 1) {\n                  // 人脸识别成功，继续进行审核逻辑\n                  this.submitAudit();\n                } else {\n                  this.$message.error('人脸识别未通过，审核不通过');\n                  setTimeout(function () {\n                    _this2.$router.go(-1);\n                  }, 1500);\n                }\n\n                _context2.next = 18;\n                break;\n\n              case 13:\n                _context2.prev = 13;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.error('Error sending image to server', _context2.t0);\n                this.$message.error('人脸识别服务异常，请稍后重试');\n                setTimeout(function () {\n                  _this2.$router.go(-1);\n                }, 1500);\n\n              case 18:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 13]]);\n      }));\n\n      function sendImageToServer(_x) {\n        return _sendImageToServer.apply(this, arguments);\n      }\n\n      return sendImageToServer;\n    }()\n  }, {\n    key: \"submitAudit\",\n    value: function submitAudit() {\n      var _this3 = this;\n\n      var params = {\n        approved: true,\n        faultId: this.faultId,\n        satisfactionScore: null,\n        verifyId: 1,\n        verifyOpinion: this.remark\n      };\n      (0, _fault.auditFault2)(params).then(function (res) {\n        if (res.data.code === 1) {\n          _this3.$message.success('审核通过成功！'); // 返回上一页并刷新\n\n\n          _this3.$router.push({\n            path: '/sectionLeader/deviceReview/faultClear',\n            query: {\n              refresh: 'true'\n            }\n          });\n        } else {\n          _this3.$message.error(res.data.msg || '操作失败');\n\n          _this3.$router.go(-1);\n        }\n      }).catch(function () {\n        _this3.$message.error('服务器繁忙，请稍后重试');\n\n        _this3.$router.go(-1);\n      });\n    }\n  }, {\n    key: \"cancelCapture\",\n    value: function cancelCapture() {\n      this.stopCamera();\n      this.$router.go(-1);\n    }\n  }]);\n  return FaceRecognition;\n}(_vuePropertyDecorator.Vue);\n\nFaceRecognition = (0, _tslib.__decorate)([_vuePropertyDecorator.Component], FaceRecognition);\nvar _default = FaceRecognition;\nexports.default = _default;",{"version":3,"sources":["G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\device-management\\project-sky-admin-vue-ts\\src\\views\\sectionLeader\\deviceReview\\faultClear\\FaceRecognition.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Vue } from 'vue-property-decorator';\nimport { auditFault2 } from '@/api/fault';\n\n@Component\nexport default class FaceRecognition extends Vue {\n  private faultId: number = 0;\n  private remark: string = '';\n  private stream: MediaStream | null = null;\n  private videoElement: HTMLVideoElement | null = null;\n  private canvasElement: HTMLCanvasElement | null = null;\n  \n  created() {\n    // 从路由参数中获取数据\n    const { faultId, remark } = this.$route.query;\n    if (faultId) this.faultId = Number(faultId);\n    if (remark) this.remark = remark as string;\n    \n    // 验证参数\n    if (!this.faultId || !this.remark) {\n      this.$message.error('参数错误，请重新操作');\n      this.$router.go(-1);\n    }\n  }\n  \n  mounted() {\n    this.videoElement = this.$refs.videoElement as HTMLVideoElement;\n    this.canvasElement = this.$refs.canvasElement as HTMLCanvasElement;\n    this.startCamera();\n  }\n  \n  beforeDestroy() {\n    this.stopCamera();\n  }\n  \n  private async startCamera() {\n    try {\n      this.stream = await navigator.mediaDevices.getUserMedia({ \n        video: { \n          width: { ideal: 1280 },\n          height: { ideal: 720 },\n          facingMode: 'user'\n        } \n      });\n      \n      if (this.videoElement) {\n        this.videoElement.srcObject = this.stream;\n      }\n    } catch (error) {\n      console.error('Error accessing camera:', error);\n      this.$message.error('无法访问摄像头，请检查权限设置');\n      this.$router.go(-1);\n    }\n  }\n  \n  private stopCamera() {\n    if (this.stream) {\n      this.stream.getTracks().forEach(track => track.stop());\n      this.stream = null;\n    }\n  }\n  \n  private captureAndVerify() {\n    if (!this.videoElement || !this.canvasElement) return;\n    \n    const context = this.canvasElement.getContext('2d');\n    if (!context) return;\n    \n    // 设置canvas尺寸与视频一致，确保不超过1920*1080\n    const maxWidth = 1280; // 确保分辨率不超过1920*1080\n    const maxHeight = 720;\n    \n    const videoWidth = this.videoElement.videoWidth;\n    const videoHeight = this.videoElement.videoHeight;\n    \n    // 计算适合的尺寸，保持宽高比\n    let width = videoWidth;\n    let height = videoHeight;\n    \n    if (width > maxWidth) {\n      width = maxWidth;\n      height = (videoHeight / videoWidth) * maxWidth;\n    }\n    \n    if (height > maxHeight) {\n      height = maxHeight;\n      width = (videoWidth / videoHeight) * maxHeight;\n    }\n    \n    this.canvasElement.width = width;\n    this.canvasElement.height = height;\n    \n    // 在canvas上绘制当前视频帧\n    context.drawImage(this.videoElement, 0, 0, width, height);\n    \n    // 获取图像的base64编码 - 修改为JPEG格式，并设置较低的质量以减小文件大小\n    const imageBase64 = this.canvasElement.toDataURL('image/jpeg', 0.8);\n    \n    // 处理base64字符串，移除前缀\n    const base64Data = imageBase64.split(',')[1];\n    \n    // 发送到服务器进行验证\n    this.sendImageToServer(base64Data);\n  }\n  \n  private async sendImageToServer(imageBase64: string) {\n    try {\n      this.$message.info('正在进行人脸识别验证...');\n      \n      const response = await fetch('/api/face_recognition/search', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          base64Image: imageBase64,  // 修改键名为image，符合API要求\n          groupId: 'device_management_demo', // 修改为group_id_list，符合百度云API命名\n        }),\n      });\n\n       console.log('Face recognition result:', response);\n      const data = await response.json();\n      console.log('Face recognition result:', data);\n      \n      if (data.code === 1) {\n        // 人脸识别成功，继续进行审核逻辑\n        this.submitAudit();\n      } else {\n        this.$message.error('人脸识别未通过，审核不通过');\n        setTimeout(() => {\n          this.$router.go(-1);\n        }, 1500);\n      }\n    } catch (error) {\n      console.error('Error sending image to server', error);\n      this.$message.error('人脸识别服务异常，请稍后重试');\n      setTimeout(() => {\n        this.$router.go(-1);\n      }, 1500);\n    }\n  }\n  \n  private submitAudit() {\n    const params = {\n      approved: true,\n      faultId: this.faultId,\n      satisfactionScore: null,\n      verifyId: 1,\n      verifyOpinion: this.remark,\n    };\n\n    auditFault2(params).then(res => {\n      if (res.data.code === 1) {\n        this.$message.success('审核通过成功！');\n        // 返回上一页并刷新\n        this.$router.push({\n          path: '/sectionLeader/deviceReview/faultClear',\n          query: { refresh: 'true' }\n        });\n      } else {\n        this.$message.error(res.data.msg || '操作失败');\n        this.$router.go(-1);\n      }\n    }).catch(() => {\n      this.$message.error('服务器繁忙，请稍后重试');\n      this.$router.go(-1);\n    });\n  }\n  \n  private cancelCapture() {\n    this.stopCamera();\n    this.$router.go(-1);\n  }\n}\n"],"sourceRoot":""}]}