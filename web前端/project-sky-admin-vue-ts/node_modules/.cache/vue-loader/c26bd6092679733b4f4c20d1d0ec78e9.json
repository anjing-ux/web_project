{"remainingRequest":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\device-management\\project-sky-admin-vue-ts\\src\\views\\director\\device\\deviceRecord.vue?vue&type=script&lang=ts&","dependencies":[{"path":"G:\\device-management\\project-sky-admin-vue-ts\\src\\views\\director\\device\\deviceRecord.vue","mtime":1747908670000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Vue } from 'vue-property-decorator';\nimport Empty from '@/components/Empty/index.vue';\nimport {getDeviceResumeList,queryDeviceResumeById,queryDeviceById} from '@/api/device';\n\n@Component({\n  components: {\n    Empty\n  }\n})\nexport default class DeviceRecord extends Vue {\n  private deviceId = '';\n  private deviceInfo: any = null;\n  private eventType = '';\n  private eventTime: any = [];\n  private tableData: any[] = [];\n  private counts = 0;\n  private page = 1;\n  private pageSize = 10;\n  private isSearch = false;\n  private detailDialog = false;\n  private detailForm: any = {};\n  private addDialog = false;\n  private addForm: any = {\n    deviceId: '',\n    eventType: '',\n    eventTime: '',\n    eventDesc: ''\n  };\n  private rules = {\n    eventType: [{ required: true, message: '请选择事件类型', trigger: 'change' }],\n    eventTime: [{ required: true, message: '请选择事件时间', trigger: 'change' }]\n  };\n\n  created() {\n    // 从路由参数获取设备ID\n    this.deviceId = this.$route.query.deviceId as string;\n    if (!this.deviceId) {\n      this.$message.error('设备ID不能为空');\n      this.goBack();\n      return;\n    }\n    \n    // 获取设备基本信息\n    this.getDeviceInfo();\n    \n    // 初始化履历列表\n    this.init();\n  }\n\n  private async getDeviceInfo() {\n    const res = await queryDeviceById(this.deviceId);\n    if (res.data.code === 1) {\n      this.deviceInfo = res.data.data;\n    }\n    \n  }\n\n  private async init(isSearch?: boolean) {\n    this.isSearch = isSearch === true;\n    const params = {\n      page: this.page,\n      pageSize: this.pageSize,\n      deviceId: this.deviceId,\n      eventType: this.eventType || undefined,\n      beginTime: this.eventTime && this.eventTime.length > 0 ? this.eventTime[0] : undefined,\n      endTime: this.eventTime && this.eventTime.length > 0 ? this.eventTime[1] : undefined\n    };\n    const res = await getDeviceResumeList(params);\n    if (res.data.code === 1) {\n      this.tableData = res.data.data.records;\n      this.counts = res.data.data.total;\n    }\n    \n  }\n\n  private async viewDetail(row: any) {\n    try {\n    const res = await queryDeviceResumeById(row.resumeId);\n    if (res.data.code === 1) {\n      this.detailForm = res.data.data;\n    } else {\n      this.$message.error(res.data.msg || '获取设备履历详情失败');\n    }\n    \n    // 显示详情对话框\n    this.detailDialog = true;\n  } catch (error) {\n    console.error('获取设备履历详情失败:', error);\n    this.$message.error('获取设备履历详情失败,请重试');\n    // 出错时仍然显示基本信息\n    this.detailForm = { ...row };\n    this.detailDialog = true;\n  }\n  }\n\n  private handleClose() {\n    this.detailDialog = false;\n  }\n\n\n  private handleAddClose() {\n    this.addDialog = false;\n  }\n\n\n  private getEventTypeText(type: number) {\n    const typeMap: { [key: number]: string } = {\n      1: '采购',\n      2: '出库安装',\n      3: '维修',\n      4: '保养',\n      5: '检测',\n      6: '巡检',\n      7: '变更',\n      8: '报废'\n    };\n    return typeMap[type] || '未知';\n  }\n\n  private goBack() {\n    this.$router.push('/director/device');\n  }\n\n  private handleSizeChange(val: number) {\n    this.pageSize = val;\n    this.init();\n  }\n\n  private handleCurrentChange(val: number) {\n    this.page = val;\n    this.init();\n  }\n}\n",{"version":3,"sources":["deviceRecord.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0IA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"deviceRecord.vue","sourceRoot":"src/views/director/device","sourcesContent":["<template>\r\n    <div class=\"dashboard-container\">\r\n      <div class=\"container\">\r\n        <div class=\"header-info\">\r\n          <div class=\"title\">设备履历</div>\r\n          <div class=\"device-info\" v-if=\"deviceInfo\">\r\n            <p><strong>设备ID：</strong>{{ deviceInfo.deviceId }}</p>\r\n            <p><strong>设备编号：</strong>{{ deviceInfo.deviceCode }}</p>\r\n            <p><strong>设备名称：</strong>{{ deviceInfo.deviceName }}</p>\r\n            <p><strong>设备类型：</strong>{{ deviceInfo.deviceType }}</p>\r\n          </div>\r\n          <el-button type=\"primary\" @click=\"goBack\">返回设备列表</el-button>\r\n        </div>\r\n        \r\n        <div class=\"tableBar\">\r\n          <label style=\"margin-right: 10px\">事件类型：</label>\r\n          <el-select v-model=\"eventType\" style=\"width: 14%\" placeholder=\"请选择\" clearable @clear=\"init\">\r\n            <el-option label=\"采购\" :value=\"1\" />\r\n            <el-option label=\"出库安装\" :value=\"2\" />\r\n            <el-option label=\"维修\" :value=\"3\" />\r\n            <el-option label=\"保养\" :value=\"4\" />\r\n            <el-option label=\"检测\" :value=\"5\" />\r\n            <el-option label=\"巡检\" :value=\"6\" />\r\n            <el-option label=\"变更\" :value=\"7\" />\r\n            <el-option label=\"报废\" :value=\"8\" />\r\n          </el-select>\r\n          <label style=\"margin-left: 20px\">事件时间：</label>\r\n          <el-date-picker v-model=\"eventTime\" clearable value-format=\"yyyy-MM-dd HH:mm:ss\" range-separator=\"至\"\r\n            :default-time=\"['00:00:00', '23:59:59']\" type=\"daterange\" start-placeholder=\"开始日期\" end-placeholder=\"结束日期\"\r\n            style=\"width: 25%; margin-left: 10px\" @clear=\"init\" />\r\n          <el-button class=\"normal-btn continue\" @click=\"init(true)\">\r\n            查询\r\n          </el-button>\r\n        </div>\r\n        \r\n        <el-table v-if=\"tableData.length\" :data=\"tableData\" stripe class=\"tableBox\">\r\n          <el-table-column prop=\"resumeId\" label=\"履历ID\" />\r\n          <el-table-column prop=\"eventType\" label=\"事件类型\">\r\n            <template slot-scope=\"scope\">\r\n              <span>{{ getEventTypeText(scope.row.eventType) }}</span>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"eventTime\" label=\"事件时间\" />\r\n          <el-table-column prop=\"eventDesc\" label=\"事件描述\" show-overflow-tooltip />\r\n          <el-table-column prop=\"operatorName\" label=\"操作人\" />\r\n          <el-table-column prop=\"createTime\" label=\"创建时间\" />\r\n          <el-table-column label=\"操作\" width=\"150\" align=\"center\">\r\n            <template slot-scope=\"scope\">\r\n              <el-button type=\"text\" size=\"small\" class=\"blueBug\" @click=\"viewDetail(scope.row)\">\r\n                查看详情\r\n              </el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n        <Empty v-else :is-search=\"isSearch\" />\r\n        <el-pagination v-if=\"counts > 10\" class=\"pageList\" :page-sizes=\"[10, 20, 30, 40]\" :page-size=\"pageSize\"\r\n          layout=\"total, sizes, prev, pager, next, jumper\" :total=\"counts\" @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\" />\r\n      </div>\r\n      \r\n      <!-- 查看详情弹框 -->\r\n      <el-dialog title=\"履历详情\" :visible.sync=\"detailDialog\" width=\"50%\" :before-close=\"handleClose\">\r\n        <div class=\"detail-content\">\r\n          <div class=\"detail-item\">\r\n            <label>履历ID：</label>\r\n            <span>{{ detailForm.resumeId }}</span>\r\n          </div>\r\n          <div class=\"detail-item\">\r\n            <label>设备ID：</label>\r\n            <span>{{ detailForm.deviceId }}</span>\r\n          </div>\r\n          <div class=\"detail-item\">\r\n            <label>事件类型：</label>\r\n            <span>{{ getEventTypeText(detailForm.eventType) }}</span>\r\n          </div>\r\n          <div class=\"detail-item\">\r\n            <label>事件时间：</label>\r\n            <span>{{ detailForm.eventTime }}</span>\r\n          </div>\r\n          <div class=\"detail-item\">\r\n            <label>事件描述：</label>\r\n            <span>{{ detailForm.eventDesc }}</span>\r\n          </div>\r\n          <div class=\"detail-item\">\r\n            <label>操作人ID：</label>\r\n            <span>{{ detailForm.operatorId }}</span>\r\n          </div>\r\n          <div class=\"detail-item\">\r\n            <label>操作人姓名：</label>\r\n            <span>{{ detailForm.operatorName }}</span>\r\n          </div>\r\n          <div class=\"detail-item\">\r\n            <label>工区ID：</label>\r\n            <span>{{ detailForm.areaId }}</span>\r\n          </div>\r\n          <div class=\"detail-item\">\r\n            <label>班组ID：</label>\r\n            <span>{{ detailForm.teamId }}</span>\r\n          </div>\r\n          <div class=\"detail-item\">\r\n            <label>创建时间：</label>\r\n            <span>{{ detailForm.createTime }}</span>\r\n          </div>\r\n        </div>\r\n      </el-dialog>\r\n      \r\n      <!-- 添加履历记录弹框 -->\r\n      <el-dialog title=\"添加履历记录\" :visible.sync=\"addDialog\" width=\"50%\" :before-close=\"handleAddClose\">\r\n        <el-form :model=\"addForm\" :rules=\"rules\" ref=\"addFormRef\" label-width=\"100px\">\r\n          <el-form-item label=\"事件类型\" prop=\"eventType\">\r\n            <el-select v-model=\"addForm.eventType\" placeholder=\"请选择事件类型\">\r\n              <el-option label=\"采购\" :value=\"1\" />\r\n              <el-option label=\"安装\" :value=\"2\" />\r\n              <el-option label=\"维修\" :value=\"3\" />\r\n              <el-option label=\"保养\" :value=\"4\" />\r\n              <el-option label=\"检测\" :value=\"5\" />\r\n              <el-option label=\"巡检\" :value=\"6\" />\r\n              <el-option label=\"变更\" :value=\"7\" />\r\n              <el-option label=\"报废\" :value=\"8\" />\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"事件时间\" prop=\"eventTime\">\r\n            <el-date-picker v-model=\"addForm.eventTime\" type=\"datetime\" placeholder=\"选择事件时间\" value-format=\"yyyy-MM-dd HH:mm:ss\">\r\n            </el-date-picker>\r\n          </el-form-item>\r\n          <el-form-item label=\"事件描述\" prop=\"eventDesc\">\r\n            <el-input v-model=\"addForm.eventDesc\" type=\"textarea\" :rows=\"3\" placeholder=\"请输入事件描述\"></el-input>\r\n          </el-form-item>\r\n        </el-form>\r\n        <div slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button @click=\"handleAddClose\">取 消</el-button>\r\n          <el-button type=\"primary\" @click=\"submitAddForm\">确 定</el-button>\r\n        </div>\r\n      </el-dialog>\r\n    </div>\r\n  </template>\r\n  \r\n  <script lang=\"ts\">\r\n  import { Component, Vue } from 'vue-property-decorator';\r\n  import Empty from '@/components/Empty/index.vue';\r\n  import {getDeviceResumeList,queryDeviceResumeById,queryDeviceById} from '@/api/device';\r\n  \r\n  @Component({\r\n    components: {\r\n      Empty\r\n    }\r\n  })\r\n  export default class DeviceRecord extends Vue {\r\n    private deviceId = '';\r\n    private deviceInfo: any = null;\r\n    private eventType = '';\r\n    private eventTime: any = [];\r\n    private tableData: any[] = [];\r\n    private counts = 0;\r\n    private page = 1;\r\n    private pageSize = 10;\r\n    private isSearch = false;\r\n    private detailDialog = false;\r\n    private detailForm: any = {};\r\n    private addDialog = false;\r\n    private addForm: any = {\r\n      deviceId: '',\r\n      eventType: '',\r\n      eventTime: '',\r\n      eventDesc: ''\r\n    };\r\n    private rules = {\r\n      eventType: [{ required: true, message: '请选择事件类型', trigger: 'change' }],\r\n      eventTime: [{ required: true, message: '请选择事件时间', trigger: 'change' }]\r\n    };\r\n  \r\n    created() {\r\n      // 从路由参数获取设备ID\r\n      this.deviceId = this.$route.query.deviceId as string;\r\n      if (!this.deviceId) {\r\n        this.$message.error('设备ID不能为空');\r\n        this.goBack();\r\n        return;\r\n      }\r\n      \r\n      // 获取设备基本信息\r\n      this.getDeviceInfo();\r\n      \r\n      // 初始化履历列表\r\n      this.init();\r\n    }\r\n  \r\n    private async getDeviceInfo() {\r\n      const res = await queryDeviceById(this.deviceId);\r\n      if (res.data.code === 1) {\r\n        this.deviceInfo = res.data.data;\r\n      }\r\n      \r\n    }\r\n  \r\n    private async init(isSearch?: boolean) {\r\n      this.isSearch = isSearch === true;\r\n      const params = {\r\n        page: this.page,\r\n        pageSize: this.pageSize,\r\n        deviceId: this.deviceId,\r\n        eventType: this.eventType || undefined,\r\n        beginTime: this.eventTime && this.eventTime.length > 0 ? this.eventTime[0] : undefined,\r\n        endTime: this.eventTime && this.eventTime.length > 0 ? this.eventTime[1] : undefined\r\n      };\r\n      const res = await getDeviceResumeList(params);\r\n      if (res.data.code === 1) {\r\n        this.tableData = res.data.data.records;\r\n        this.counts = res.data.data.total;\r\n      }\r\n      \r\n    }\r\n  \r\n    private async viewDetail(row: any) {\r\n      try {\r\n      const res = await queryDeviceResumeById(row.resumeId);\r\n      if (res.data.code === 1) {\r\n        this.detailForm = res.data.data;\r\n      } else {\r\n        this.$message.error(res.data.msg || '获取设备履历详情失败');\r\n      }\r\n      \r\n      // 显示详情对话框\r\n      this.detailDialog = true;\r\n    } catch (error) {\r\n      console.error('获取设备履历详情失败:', error);\r\n      this.$message.error('获取设备履历详情失败,请重试');\r\n      // 出错时仍然显示基本信息\r\n      this.detailForm = { ...row };\r\n      this.detailDialog = true;\r\n    }\r\n    }\r\n  \r\n    private handleClose() {\r\n      this.detailDialog = false;\r\n    }\r\n  \r\n  \r\n    private handleAddClose() {\r\n      this.addDialog = false;\r\n    }\r\n  \r\n  \r\n    private getEventTypeText(type: number) {\r\n      const typeMap: { [key: number]: string } = {\r\n        1: '采购',\r\n        2: '出库安装',\r\n        3: '维修',\r\n        4: '保养',\r\n        5: '检测',\r\n        6: '巡检',\r\n        7: '变更',\r\n        8: '报废'\r\n      };\r\n      return typeMap[type] || '未知';\r\n    }\r\n  \r\n    private goBack() {\r\n      this.$router.push('/director/device');\r\n    }\r\n  \r\n    private handleSizeChange(val: number) {\r\n      this.pageSize = val;\r\n      this.init();\r\n    }\r\n  \r\n    private handleCurrentChange(val: number) {\r\n      this.page = val;\r\n      this.init();\r\n    }\r\n  }\r\n  </script>\r\n  \r\n  <style lang=\"scss\" scoped>\r\n  .dashboard {\r\n    &-container {\r\n      margin: 30px;\r\n  \r\n      .container {\r\n        background: #fff;\r\n        position: relative;\r\n        z-index: 1;\r\n        padding: 30px 28px;\r\n        border-radius: 4px;\r\n  \r\n        .header-info {\r\n          margin-bottom: 20px;\r\n          padding-bottom: 20px;\r\n          border-bottom: 1px solid #eee;\r\n          \r\n          .title {\r\n            font-size: 20px;\r\n            font-weight: bold;\r\n            margin-bottom: 15px;\r\n          }\r\n          \r\n          .device-info {\r\n            display: flex;\r\n            flex-wrap: wrap;\r\n            margin-bottom: 15px;\r\n            \r\n            p {\r\n              margin-right: 30px;\r\n              margin-bottom: 10px;\r\n            }\r\n          }\r\n        }\r\n  \r\n        //查询黑色按钮样式\r\n        .normal-btn {\r\n          padding: 10px 30px;\r\n          background: #333;\r\n          color: #fff;\r\n          border-radius: 5px;\r\n          border: 0;\r\n          font-size: 14px;\r\n          margin-left: 20px;\r\n        }\r\n  \r\n        .tableBar {\r\n          margin-bottom: 20px;\r\n          display: flex;\r\n          justify-content: flex-start;\r\n          align-items: center;\r\n        }\r\n  \r\n        .tableBox {\r\n          width: 100%;\r\n          border: solid 2px #f3f4f7;\r\n          border-radius: 2px;\r\n        }\r\n  \r\n        .pageList {\r\n          text-align: center;\r\n          margin-top: 20px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  .detail-content {\r\n    .detail-item {\r\n      margin-bottom: 15px;\r\n      \r\n      label {\r\n        display: inline-block;\r\n        width: 100px;\r\n        color: #666;\r\n        text-align: right;\r\n        margin-right: 10px;\r\n      }\r\n      \r\n      span {\r\n        color: #333;\r\n      }\r\n    }\r\n  }\r\n  </style>"]}]}