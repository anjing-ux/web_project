{"remainingRequest":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\device-management\\project-sky-admin-vue-ts\\src\\views\\director\\dashboard\\index.vue?vue&type=script&lang=ts&","dependencies":[{"path":"G:\\device-management\\project-sky-admin-vue-ts\\src\\views\\director\\dashboard\\index.vue","mtime":1748968671840},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport { Component, Vue } from 'vue-property-decorator'\r\n// 删除或注释掉不再使用的导入\r\n// import { getBusinessData, getOrderData } from '@/api/index'\r\n// import { getDeviceList,getEmployeeStats,getRecentEmployees} from '@/api/device'\r\n// import { getOrderDetailPage } from '@/api/purchase'\r\nimport { pastMonth } from '@/utils/formValidate'\r\n// 导入新创建的API接口\r\nimport { getMonthlyDashboardData, getTaskStatistics, getWarehouseInventory, getEmployeeStatistics, getRecentEmployees,getDevice } from '@/api/dashboard'\r\n@Component({\r\n  name: 'Dashboard'\r\n})\r\nexport default class extends Vue {\r\nprivate overviewData = {\r\n    deviceCount: 0,\r\n    pendingTasks: 0,\r\n    taskCompletionRate: 0,\r\n    purchaseCount: 0,\r\n    employeeCount: 0\r\n  }\r\n\r\n  private taskData = {\r\n    maintenanceTasks: 0,\r\n    inspectionTasks: 0,\r\n    testingTasks: 0,\r\n    faultTasks: 0\r\n  }\r\n\r\n  private deviceData = {\r\n    normalCount: 0,\r\n    repairingCount: 0,\r\n    disabledCount: 0,\r\n    normalRate: 0,\r\n    repairingRate: 0,\r\n    layRate: 0,\r\n    typeCounts: {\r\n      客服设备: 0,\r\n      机电设备: 0,\r\n      消防设备: 0,\r\n      电梯设备: 0\r\n    },\r\n    typeRates: {\r\n      客服设备: 0,\r\n      机电设备: 0,\r\n      消防设备: 0,\r\n      电梯设备: 0\r\n    }\r\n  }\r\n\r\n  private employeeData = {\r\n    roleCounts: {\r\n      普通员工: 0,\r\n      班组长: 0,\r\n      工程师: 0,\r\n      采购人员: 0,\r\n      工区长: 0,\r\n      仓库管理员: 0\r\n\r\n    },\r\n    roleRates: {\r\n      普通员工: 0,\r\n      班组长: 0,\r\n      工程师: 0,\r\n      采购人员: 0,\r\n      工区长: 0,\r\n      仓库管理员: 0\r\n    },\r\n    recentEmployees: []\r\n  }\r\n\r\n  private purchaseData = []\r\n\r\n  get days() {\r\n    return pastMonth()\r\n  }\r\n\r\n  created() {\r\n    this.init()\r\n  }\r\n\r\n  init() {\r\n    this.$nextTick(() => {\r\n      this.getOverviewData()\r\n      this.getTaskData()\r\n      this.getDeviceData()\r\n      this.getEmployeeData()\r\n    })\r\n  }\r\n\r\n  // 获取概览数据\r\n  async getOverviewData() {\r\n    try {\r\n      const response = await getMonthlyDashboardData()\r\n      if (response.data.code === 1) {\r\n        this.overviewData = response.data.data\r\n      }\r\n    } catch (error) {\r\n      console.error('获取概览数据失败', error)\r\n    }\r\n  }\r\n\r\n  // 获取任务数据\r\n  async getTaskData() {\r\n    try {\r\n      const response = await getTaskStatistics()\r\n      if (response.data.code === 1) {\r\n        this.taskData = response.data.data\r\n      }\r\n    } catch (error) {\r\n      console.error('获取任务数据失败', error)\r\n    }\r\n  }\r\n\r\n  // 获取设备数据\r\n  async getDeviceData() {\r\n    try {\r\n      const params = {\r\n        page: 1,\r\n        pageSize: 1000\r\n      }\r\n      const data = await getDevice()\r\n      if (data.data.code === 1) {\r\n        const devices = data.data.data || []\r\n        const totalCount = devices.length\r\n\r\n        // 计算设备状态数量\r\n        const normalCount = devices.filter(d => d.status === 1).length\r\n        const repairingCount = devices.filter(d => d.status === 2).length\r\n        const disabledCount = devices.filter(d => d.status === 3).length\r\n\r\n        // 计算设备类型数量\r\n        const typeCount = {\r\n          客服设备: devices.filter(d => d.deviceType === '客服设备').length,\r\n          机电设备: devices.filter(d => d.deviceType === '机电设备').length,\r\n          消防设备: devices.filter(d => d.deviceType === '消防设备').length,\r\n          电梯设备: devices.filter(d => d.deviceType === '电梯设备').length\r\n        }\r\n\r\n        this.deviceData = {\r\n          normalCount,\r\n          repairingCount,\r\n          disabledCount,\r\n          normalRate: totalCount > 0 ? normalCount / totalCount : 0,\r\n          repairingRate: totalCount > 0 ? repairingCount / totalCount : 0,\r\n          layRate: totalCount > 0 ? disabledCount / totalCount : 0,\r\n          typeCounts: typeCount,\r\n          typeRates: {\r\n            客服设备: totalCount > 0 ? typeCount.客服设备 / totalCount : 0,\r\n            机电设备: totalCount > 0 ? typeCount.机电设备 / totalCount : 0,\r\n            消防设备: totalCount > 0 ? typeCount.消防设备 / totalCount : 0,\r\n            电梯设备: totalCount > 0 ? typeCount.电梯设备 / totalCount : 0\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('获取设备数据失败', error)\r\n    }\r\n  }\r\n\r\n\r\n  // 获取设备类型文本\r\n  getEquipmentType(type: string) {\r\n    const typeMap = {\r\n      '1': '客服设备',\r\n      '2': '机电设备',\r\n      '3': '消防设备',\r\n      '4': '电梯设备'\r\n    }\r\n    return typeMap[type] || '未知类型'\r\n  }\r\n\r\n  // 获取员工数据\r\n  async getEmployeeData() {\r\n  try {\r\n    // 获取员工统计数据\r\n    const statsRes = await getEmployeeStatistics()\r\n    // 获取最近5名员工\r\n    const recentRes = await getRecentEmployees({ pageSize: 5 })\r\n    \r\n    if (statsRes.data.code === 1 && recentRes.data.code === 1) {\r\n      const stats = statsRes.data.data\r\n      const recentEmployees = recentRes.data.data.records || []\r\n      \r\n      // 角色ID到中文名称的映射\r\n      const roleIdToName = {\r\n        1: '普通员工',\r\n        2: '班组长',\r\n        3: '工区长',\r\n        4: '工程师',\r\n        5: '采购人员',\r\n        6: '仓库管理员'\r\n      }\r\n      \r\n      // 角色英文键名到中文名称的映射\r\n      const roleKeyToName = {\r\n        'commonStaff': '普通员工',\r\n        'teamLeader': '班组长',\r\n        'areaManager': '工区长',\r\n        'engineer': '工程师',\r\n        'purchaser': '采购人员',\r\n        'warehouseAdmin': '仓库管理员'\r\n      }\r\n      \r\n      // 转换角色计数数据结构\r\n      const roleCounts = {\r\n        '普通员工': stats.roleCounts.commonStaff || 0,\r\n        '班组长': stats.roleCounts.teamLeader || 0,\r\n        '工区长': stats.roleCounts.areaManager || 0,\r\n        '工程师': stats.roleCounts.engineer || 0,\r\n        '采购人员': stats.roleCounts.purchaser || 0,\r\n        '仓库管理员': stats.roleCounts.warehouseAdmin || 0\r\n      }\r\n      \r\n      // 计算各职位比例\r\n      const totalEmployees = Object.values(roleCounts).reduce((a, b) => a + b, 0)\r\n      const roleRates = {} as any\r\n      \r\n      Object.keys(roleCounts).forEach(role => {\r\n        roleRates[role] = totalEmployees > 0 ? roleCounts[role] / totalEmployees : 0\r\n      })\r\n      \r\n      this.employeeData = {\r\n        roleCounts,\r\n        roleRates,\r\n        recentEmployees: recentEmployees.map((emp: any) => ({\r\n          realName: emp.realName,\r\n          roleName: roleIdToName[emp.roleId] || '未知角色',  // 使用roleId映射到角色名称\r\n          createTime: emp.createTime\r\n        }))\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error('获取员工数据失败', error)\r\n  }\r\n}\r\n\r\n\r\n\r\n}\r\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA","file":"index.vue","sourceRoot":"src/views/director/dashboard","sourcesContent":["<template>\r\n  <div class=\"dashboard-container home\">\r\n    <!-- 数据概览 -->\r\n    <div class=\"container\">\r\n      <h2 class=\"homeTitle\">\r\n        数据汇总<i>{{ days[0] }} 至 {{ days[1] }}</i>\r\n      </h2>\r\n      <div class=\"overviewBox\">\r\n        <ul>\r\n          <li>\r\n            <p class=\"tit\">设备总数</p>\r\n            <p class=\"num\">{{ overviewData.deviceCount || 0 }}</p>\r\n          </li>\r\n          <li>\r\n            <p class=\"tit\">待审核任务</p>\r\n            <p class=\"num\">{{ overviewData.pendingTasks || 0 }}</p>\r\n          </li>\r\n          <li>\r\n            <p class=\"tit\">任务完成率</p>\r\n            <p class=\"num\">\r\n              {{ ((overviewData.taskCompletionRate || 0)).toFixed(0) }}%\r\n            </p>\r\n          </li>\r\n          <li>\r\n            <p class=\"tit\">采购申请数</p>\r\n            <p class=\"num\">{{ overviewData.purchaseCount || 0 }}</p>\r\n          </li>\r\n          <li>\r\n            <p class=\"tit\">员工总数</p>\r\n            <p class=\"num\">{{ overviewData.employeeCount || 0 }}</p>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n    <!-- end -->\r\n\r\n    <!-- 任务管理 -->\r\n    <div class=\"container\">\r\n      <h2 class=\"homeTitle\">\r\n        任务管理<i>{{ days[0] }} 至 {{ days[1] }}</i>\r\n      </h2>\r\n      <div class=\"orderviewBox\">\r\n        <ul>\r\n          <li>\r\n            <span class=\"status\"><i class=\"iconfont icon-waiting\"></i>保养验收</span>\r\n            <span class=\"num tip\">\r\n              <router-link to=\"/director/deviceReview/maintenanceAcceptance\">{{\r\n                taskData.maintenanceTasks || 0\r\n              }}</router-link>\r\n            </span>\r\n          </li>\r\n          <li>\r\n            <span class=\"status\"><i class=\"iconfont icon-staySway\"></i>巡检验收</span>\r\n            <span class=\"num tip\">\r\n              <router-link to=\"/director/deviceReview/inspectionAcceptance\">{{\r\n                taskData.inspectionTasks || 0\r\n              }}</router-link>\r\n            </span>\r\n          </li>\r\n          <li>\r\n            <span class=\"status\"><i class=\"iconfont icon-complete\"></i>测试验收</span>\r\n            <span class=\"num\">\r\n              <router-link to=\"/director/deviceReview/testingAcceptance\">{{\r\n                taskData.testingTasks || 0\r\n              }}</router-link>\r\n            </span>\r\n          </li>\r\n          <li>\r\n            <span class=\"status\"><i class=\"iconfont icon-cancel\"></i>故障处理</span>\r\n            <span class=\"num\">\r\n              <router-link to=\"/director/deviceReview/faultClear\">{{\r\n                taskData.faultTasks || 0\r\n              }}</router-link>\r\n            </span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n    <!-- end -->\r\n\r\n    <div class=\"homeMain\">\r\n      <!-- 设备状态 -->\r\n      <div class=\"container\">\r\n        <h2 class=\"homeTitle\">\r\n          设备状态\r\n          <span><router-link to=\"/director/device\">查看详情</router-link></span>\r\n        </h2>\r\n        <div class=\"deviceBox\">\r\n          <el-row :gutter=\"20\">\r\n            <el-col :span=\"8\">\r\n              <el-card shadow=\"hover\" class=\"device-card\">\r\n                <div slot=\"header\" class=\"clearfix\">\r\n                  <span>设备状态分布</span>\r\n                </div>\r\n                <div class=\"device-chart\">\r\n                  <div class=\"device-chart\">\r\n                    <div class=\"progress-item\">\r\n                      <div class=\"status-label\">使用中</div>\r\n                      <el-progress type=\"circle\" :percentage=\"deviceData.normalRate * 100 || 0\" color=\"#67C23A\">\r\n                        <template #default>\r\n                          <div class=\"progress-content\">\r\n                            <p>{{ deviceData.normalCount || 0 }}</p>\r\n                          </div>\r\n                        </template>\r\n                      </el-progress>\r\n                    </div>\r\n                    \r\n                    <div class=\"progress-item\">\r\n                      <div class=\"status-label\">维修中</div>\r\n                      <el-progress type=\"circle\" :percentage=\"deviceData.repairingRate * 100 || 0\" color=\"#E6A23C\">\r\n                        <template #default>\r\n                          <div class=\"progress-content\">\r\n                            <p>{{ deviceData.repairingCount || 0 }}</p>\r\n                          </div>\r\n                        </template>\r\n                      </el-progress>\r\n                    </div>\r\n                    \r\n                    <div class=\"progress-item\">\r\n                      <div class=\"status-label\">仓库存放</div>\r\n                      <el-progress type=\"circle\" :percentage=\"deviceData.layRate * 100 || 0\" color=\"#F56C6C\">\r\n                        <template #default>\r\n                          <div class=\"progress-content\">\r\n                            <p>{{ deviceData.disabledCount || 0 }}</p>\r\n                          </div>\r\n                        </template>\r\n                      </el-progress>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </el-card>\r\n            </el-col>\r\n            <el-col :span=\"16\">\r\n              <el-card shadow=\"hover\" class=\"device-card\">\r\n                <div slot=\"header\" class=\"clearfix\">\r\n                  <span>设备类型分布</span>\r\n                </div>\r\n\r\n                  <!-- 添加颜色图例 -->\r\n  <div class=\"type-legend\">\r\n    <div class=\"legend-item\">\r\n      <span class=\"color-dot\" style=\"background-color: #409EFF;\"></span>\r\n      <span class=\"legend-text\">客服设备</span>\r\n    </div>\r\n    <div class=\"legend-item\">\r\n      <span class=\"color-dot\" style=\"background-color: #67C23A;\"></span>\r\n      <span class=\"legend-text\">机电设备</span>\r\n    </div>\r\n    <div class=\"legend-item\">\r\n      <span class=\"color-dot\" style=\"background-color: #E6A23C;\"></span>\r\n      <span class=\"legend-text\">消防设备</span>\r\n    </div>\r\n    <div class=\"legend-item\">\r\n      <span class=\"color-dot\" style=\"background-color: #F56C6C;\"></span>\r\n      <span class=\"legend-text\">电梯设备</span>\r\n    </div>\r\n  </div>\r\n\r\n                <div class=\"device-chart\">\r\n                  <div class=\"type-item\">\r\n                    <div class=\"type-label\">客服设备 ({{ deviceData.typeCounts.客服设备 || 0 }})</div>\r\n                    <el-progress :text-inside=\"true\" :stroke-width=\"18\" :percentage=\"(deviceData.typeRates.客服设备 * 100 || 0).toFixed(2)\" color=\"#409EFF\">\r\n                    </el-progress>\r\n                  </div>\r\n                  \r\n                  <div class=\"type-item\">\r\n                    <div class=\"type-label\">机电设备 ({{ deviceData.typeCounts.机电设备 || 0 }})</div>\r\n                    <el-progress :text-inside=\"true\" :stroke-width=\"18\" :percentage=\"(deviceData.typeRates.机电设备 * 100 || 0).toFixed(2)\" color=\"#67C23A\">\r\n                    </el-progress>\r\n                  </div>\r\n                  \r\n                  <div class=\"type-item\">\r\n                    <div class=\"type-label\">消防设备 ({{ deviceData.typeCounts.消防设备 || 0 }})</div>\r\n                    <el-progress :text-inside=\"true\" :stroke-width=\"18\" :percentage=\"(deviceData.typeRates.消防设备 * 100 || 0).toFixed(2)\" color=\"#E6A23C\">\r\n                    </el-progress>\r\n                  </div>\r\n                  \r\n                  <div class=\"type-item\">\r\n                    <div class=\"type-label\">电梯设备 ({{ deviceData.typeCounts.电梯设备 || 0 }})</div>\r\n                    <el-progress :text-inside=\"true\" :stroke-width=\"18\" :percentage=\"(deviceData.typeRates.电梯设备 * 100 || 0).toFixed(2)\" color=\"#F56C6C\">\r\n                    </el-progress>\r\n                  </div>\r\n                </div>\r\n              </el-card>\r\n            </el-col>\r\n          </el-row>\r\n        </div>\r\n      </div>\r\n      <!-- end -->\r\n\r\n      <!-- 员工信息 -->\r\n      <div class=\"container\">\r\n        <h2 class=\"homeTitle\">\r\n          员工信息\r\n          <span><router-link to=\"/director/employee/\">查看详情</router-link></span>\r\n        </h2>\r\n        <div class=\"employeeBox\">\r\n          <el-row :gutter=\"20\">\r\n            <el-col :span=\"12\">\r\n              <el-card shadow=\"hover\" class=\"employee-card\">\r\n                <div slot=\"header\" class=\"clearfix\">\r\n                  <span>员工职位分布</span>\r\n                </div>\r\n                \r\n                <!-- 添加员工职位图例 -->\r\n                <div class=\"role-legend\">\r\n                  <div class=\"legend-item\">\r\n                    <span class=\"color-dot\" style=\"background-color: #409EFF;\"></span>\r\n                    <span class=\"legend-text\">普通员工</span>\r\n                  </div>\r\n                  <div class=\"legend-item\">\r\n                    <span class=\"color-dot\" style=\"background-color: #67C23A;\"></span>\r\n                    <span class=\"legend-text\">班组长</span>\r\n                  </div>\r\n                  <div class=\"legend-item\">\r\n                    <span class=\"color-dot\" style=\"background-color: #E6A23C;\"></span>\r\n                    <span class=\"legend-text\">工区长</span>\r\n                  </div>\r\n                  <div class=\"legend-item\">\r\n                    <span class=\"color-dot\" style=\"background-color: #F56C6C;\"></span>\r\n                    <span class=\"legend-text\">工程师</span>\r\n                  </div>\r\n                  <div class=\"legend-item\">\r\n                    <span class=\"color-dot\" style=\"background-color: #909399;\"></span>\r\n                    <span class=\"legend-text\">采购人员</span>\r\n                  </div>\r\n                  <div class=\"legend-item\">\r\n                    <span class=\"color-dot\" style=\"background-color: #9254de;\"></span>\r\n                    <span class=\"legend-text\">仓库管理员</span>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div class=\"employee-chart\">\r\n                  <div class=\"role-item\">\r\n                    <el-progress :text-inside=\"true\" :stroke-width=\"18\" :percentage=\"(employeeData.roleRates.普通员工 * 100 || 0).toFixed(2)\" \r\n                      color=\"#409EFF\">\r\n                      普通员工 ({{ employeeData.roleCounts.普通员工 || 0 }})\r\n                    </el-progress>\r\n                  </div>\r\n                  \r\n                  <div class=\"role-item\">\r\n                    <el-progress :text-inside=\"true\" :stroke-width=\"18\" :percentage=\"(employeeData.roleRates.班组长 * 100 || 0).toFixed(2)\" \r\n                      color=\"#67C23A\">\r\n                      班组长 ({{ employeeData.roleCounts.班组长 || 0 }})\r\n                    </el-progress>\r\n                  </div>\r\n                  \r\n                  <div class=\"role-item\">\r\n                    <el-progress :text-inside=\"true\" :stroke-width=\"18\" :percentage=\"(employeeData.roleRates.工区长 * 100 || 0).toFixed(2)\" \r\n                      color=\"#E6A23C\">\r\n                      工区长 ({{ employeeData.roleCounts.工区长 || 0 }})\r\n                    </el-progress>\r\n                  </div>\r\n                  \r\n                  <div class=\"role-item\">\r\n                    <el-progress :text-inside=\"true\" :stroke-width=\"18\" :percentage=\"(employeeData.roleRates.工程师 * 100 || 0).toFixed(2)\" \r\n                      color=\"#F56C6C\">\r\n                      工程师 ({{ employeeData.roleCounts.工程师 || 0 }})\r\n                    </el-progress>\r\n                  </div>\r\n                  \r\n                  <div class=\"role-item\">\r\n                    <el-progress :text-inside=\"true\" :stroke-width=\"18\" :percentage=\"(employeeData.roleRates.采购人员 * 100 || 0).toFixed(2)\" \r\n                      color=\"#909399\">\r\n                      采购人员 ({{ employeeData.roleCounts.采购人员 || 0 }})\r\n                    </el-progress>\r\n                  </div>\r\n                  \r\n                  <div class=\"role-item\">\r\n                    <el-progress :text-inside=\"true\" :stroke-width=\"18\" :percentage=\"(employeeData.roleRates.仓库管理员 * 100 || 0).toFixed(2)\" \r\n                      color=\"#9254de\">\r\n                      仓库管理员 ({{ employeeData.roleCounts.仓库管理员 || 0 }})\r\n                    </el-progress>\r\n                  </div>\r\n                </div>\r\n              </el-card>\r\n            </el-col>\r\n            <el-col :span=\"12\">\r\n              <el-card shadow=\"hover\" class=\"employee-card\">\r\n                <div slot=\"header\" class=\"clearfix\">\r\n                  <span>最近添加的员工</span>\r\n                </div>\r\n                <div class=\"recent-employees\">\r\n                  <el-table :data=\"employeeData.recentEmployees || []\" style=\"width: 100%\">\r\n                    <el-table-column prop=\"realName\" label=\"姓名\" width=\"100\"></el-table-column>\r\n                    <el-table-column prop=\"roleName\" label=\"职位\" width=\"100\"></el-table-column>\r\n                    <el-table-column prop=\"createTime\" label=\"添加时间\"></el-table-column>\r\n                  </el-table>\r\n                </div>\r\n              </el-card>\r\n            </el-col>\r\n          </el-row>\r\n        </div>\r\n      </div>\r\n      <!-- end -->\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Vue } from 'vue-property-decorator'\r\n// 删除或注释掉不再使用的导入\r\n// import { getBusinessData, getOrderData } from '@/api/index'\r\n// import { getDeviceList,getEmployeeStats,getRecentEmployees} from '@/api/device'\r\n// import { getOrderDetailPage } from '@/api/purchase'\r\nimport { pastMonth } from '@/utils/formValidate'\r\n// 导入新创建的API接口\r\nimport { getMonthlyDashboardData, getTaskStatistics, getWarehouseInventory, getEmployeeStatistics, getRecentEmployees,getDevice } from '@/api/dashboard'\r\n@Component({\r\n  name: 'Dashboard'\r\n})\r\nexport default class extends Vue {\r\nprivate overviewData = {\r\n    deviceCount: 0,\r\n    pendingTasks: 0,\r\n    taskCompletionRate: 0,\r\n    purchaseCount: 0,\r\n    employeeCount: 0\r\n  }\r\n\r\n  private taskData = {\r\n    maintenanceTasks: 0,\r\n    inspectionTasks: 0,\r\n    testingTasks: 0,\r\n    faultTasks: 0\r\n  }\r\n\r\n  private deviceData = {\r\n    normalCount: 0,\r\n    repairingCount: 0,\r\n    disabledCount: 0,\r\n    normalRate: 0,\r\n    repairingRate: 0,\r\n    layRate: 0,\r\n    typeCounts: {\r\n      客服设备: 0,\r\n      机电设备: 0,\r\n      消防设备: 0,\r\n      电梯设备: 0\r\n    },\r\n    typeRates: {\r\n      客服设备: 0,\r\n      机电设备: 0,\r\n      消防设备: 0,\r\n      电梯设备: 0\r\n    }\r\n  }\r\n\r\n  private employeeData = {\r\n    roleCounts: {\r\n      普通员工: 0,\r\n      班组长: 0,\r\n      工程师: 0,\r\n      采购人员: 0,\r\n      工区长: 0,\r\n      仓库管理员: 0\r\n\r\n    },\r\n    roleRates: {\r\n      普通员工: 0,\r\n      班组长: 0,\r\n      工程师: 0,\r\n      采购人员: 0,\r\n      工区长: 0,\r\n      仓库管理员: 0\r\n    },\r\n    recentEmployees: []\r\n  }\r\n\r\n  private purchaseData = []\r\n\r\n  get days() {\r\n    return pastMonth()\r\n  }\r\n\r\n  created() {\r\n    this.init()\r\n  }\r\n\r\n  init() {\r\n    this.$nextTick(() => {\r\n      this.getOverviewData()\r\n      this.getTaskData()\r\n      this.getDeviceData()\r\n      this.getEmployeeData()\r\n    })\r\n  }\r\n\r\n  // 获取概览数据\r\n  async getOverviewData() {\r\n    try {\r\n      const response = await getMonthlyDashboardData()\r\n      if (response.data.code === 1) {\r\n        this.overviewData = response.data.data\r\n      }\r\n    } catch (error) {\r\n      console.error('获取概览数据失败', error)\r\n    }\r\n  }\r\n\r\n  // 获取任务数据\r\n  async getTaskData() {\r\n    try {\r\n      const response = await getTaskStatistics()\r\n      if (response.data.code === 1) {\r\n        this.taskData = response.data.data\r\n      }\r\n    } catch (error) {\r\n      console.error('获取任务数据失败', error)\r\n    }\r\n  }\r\n\r\n  // 获取设备数据\r\n  async getDeviceData() {\r\n    try {\r\n      const params = {\r\n        page: 1,\r\n        pageSize: 1000\r\n      }\r\n      const data = await getDevice()\r\n      if (data.data.code === 1) {\r\n        const devices = data.data.data || []\r\n        const totalCount = devices.length\r\n\r\n        // 计算设备状态数量\r\n        const normalCount = devices.filter(d => d.status === 1).length\r\n        const repairingCount = devices.filter(d => d.status === 2).length\r\n        const disabledCount = devices.filter(d => d.status === 3).length\r\n\r\n        // 计算设备类型数量\r\n        const typeCount = {\r\n          客服设备: devices.filter(d => d.deviceType === '客服设备').length,\r\n          机电设备: devices.filter(d => d.deviceType === '机电设备').length,\r\n          消防设备: devices.filter(d => d.deviceType === '消防设备').length,\r\n          电梯设备: devices.filter(d => d.deviceType === '电梯设备').length\r\n        }\r\n\r\n        this.deviceData = {\r\n          normalCount,\r\n          repairingCount,\r\n          disabledCount,\r\n          normalRate: totalCount > 0 ? normalCount / totalCount : 0,\r\n          repairingRate: totalCount > 0 ? repairingCount / totalCount : 0,\r\n          layRate: totalCount > 0 ? disabledCount / totalCount : 0,\r\n          typeCounts: typeCount,\r\n          typeRates: {\r\n            客服设备: totalCount > 0 ? typeCount.客服设备 / totalCount : 0,\r\n            机电设备: totalCount > 0 ? typeCount.机电设备 / totalCount : 0,\r\n            消防设备: totalCount > 0 ? typeCount.消防设备 / totalCount : 0,\r\n            电梯设备: totalCount > 0 ? typeCount.电梯设备 / totalCount : 0\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('获取设备数据失败', error)\r\n    }\r\n  }\r\n\r\n\r\n  // 获取设备类型文本\r\n  getEquipmentType(type: string) {\r\n    const typeMap = {\r\n      '1': '客服设备',\r\n      '2': '机电设备',\r\n      '3': '消防设备',\r\n      '4': '电梯设备'\r\n    }\r\n    return typeMap[type] || '未知类型'\r\n  }\r\n\r\n  // 获取员工数据\r\n  async getEmployeeData() {\r\n  try {\r\n    // 获取员工统计数据\r\n    const statsRes = await getEmployeeStatistics()\r\n    // 获取最近5名员工\r\n    const recentRes = await getRecentEmployees({ pageSize: 5 })\r\n    \r\n    if (statsRes.data.code === 1 && recentRes.data.code === 1) {\r\n      const stats = statsRes.data.data\r\n      const recentEmployees = recentRes.data.data.records || []\r\n      \r\n      // 角色ID到中文名称的映射\r\n      const roleIdToName = {\r\n        1: '普通员工',\r\n        2: '班组长',\r\n        3: '工区长',\r\n        4: '工程师',\r\n        5: '采购人员',\r\n        6: '仓库管理员'\r\n      }\r\n      \r\n      // 角色英文键名到中文名称的映射\r\n      const roleKeyToName = {\r\n        'commonStaff': '普通员工',\r\n        'teamLeader': '班组长',\r\n        'areaManager': '工区长',\r\n        'engineer': '工程师',\r\n        'purchaser': '采购人员',\r\n        'warehouseAdmin': '仓库管理员'\r\n      }\r\n      \r\n      // 转换角色计数数据结构\r\n      const roleCounts = {\r\n        '普通员工': stats.roleCounts.commonStaff || 0,\r\n        '班组长': stats.roleCounts.teamLeader || 0,\r\n        '工区长': stats.roleCounts.areaManager || 0,\r\n        '工程师': stats.roleCounts.engineer || 0,\r\n        '采购人员': stats.roleCounts.purchaser || 0,\r\n        '仓库管理员': stats.roleCounts.warehouseAdmin || 0\r\n      }\r\n      \r\n      // 计算各职位比例\r\n      const totalEmployees = Object.values(roleCounts).reduce((a, b) => a + b, 0)\r\n      const roleRates = {} as any\r\n      \r\n      Object.keys(roleCounts).forEach(role => {\r\n        roleRates[role] = totalEmployees > 0 ? roleCounts[role] / totalEmployees : 0\r\n      })\r\n      \r\n      this.employeeData = {\r\n        roleCounts,\r\n        roleRates,\r\n        recentEmployees: recentEmployees.map((emp: any) => ({\r\n          realName: emp.realName,\r\n          roleName: roleIdToName[emp.roleId] || '未知角色',  // 使用roleId映射到角色名称\r\n          createTime: emp.createTime\r\n        }))\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error('获取员工数据失败', error)\r\n  }\r\n}\r\n\r\n\r\n\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.dashboard-container {\r\n  padding: 20px;\r\n  background-color: #f5f5f5;\r\n\r\n  .container {\r\n    margin-bottom: 20px;\r\n    padding: 20px;\r\n    background-color: #fff;\r\n    border-radius: 4px;\r\n    box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\r\n  }\r\n\r\n  .homeTitle {\r\n    position: relative;\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n    color: #333;\r\n    margin-bottom: 20px;\r\n\r\n    i {\r\n      margin-left: 10px;\r\n      font-size: 14px;\r\n      font-weight: normal;\r\n      font-style: normal;\r\n      color: #999;\r\n    }\r\n\r\n    span {\r\n      position: absolute;\r\n      right: 0;\r\n      font-size: 14px;\r\n      font-weight: normal;\r\n\r\n      a {\r\n        color: #409eff;\r\n        text-decoration: none;\r\n      }\r\n    }\r\n  }\r\n\r\n  .overviewBox {\r\n    ul {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      list-style: none;\r\n      padding: 0;\r\n      margin: 0;\r\n\r\n      li {\r\n        flex: 1;\r\n        text-align: center;\r\n        padding: 20px 0;\r\n        border-right: 1px solid #eee;\r\n\r\n        &:last-child {\r\n          border-right: none;\r\n        }\r\n\r\n        .tit {\r\n          font-size: 14px;\r\n          color: #666;\r\n          margin-bottom: 10px;\r\n        }\r\n\r\n        .num {\r\n          font-size: 24px;\r\n          font-weight: bold;\r\n          color: #333;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .orderviewBox {\r\n      ul {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        list-style: none;\r\n        padding: 0;\r\n        margin: 0;\r\n  \r\n        li {\r\n          flex: 1;\r\n          text-align: center;\r\n          padding: 20px 0;\r\n          display: flex;\r\n          flex-direction: column;\r\n          align-items: center;\r\n  \r\n          .status {\r\n            display: block;\r\n            font-size: 14px;\r\n            color: #666;\r\n            margin-bottom: 10px;\r\n  \r\n            i {\r\n              margin-right: 5px;\r\n              font-size: 16px;\r\n            }\r\n          }\r\n  \r\n          .num {\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            font-size: 24px;\r\n            font-weight: bold;\r\n            color: #333;\r\n            width: 100%;\r\n  \r\n            a {\r\n              color: #333;\r\n              text-decoration: none;\r\n            }\r\n  \r\n            &.tip a {\r\n              color: #f56c6c;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n  .homeMain {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 20px;\r\n\r\n    .container {\r\n      flex: 1;\r\n      min-width: calc(50% - 10px);\r\n    }\r\n  }\r\n\r\n  .device-chart,\r\n  .employee-chart {\r\n    margin-bottom: 20px;\r\n\r\n    .device-chart {\r\n      display: flex;\r\n      justify-content: space-around;\r\n      flex-wrap: wrap;\r\n      \r\n      .progress-item, .type-item {\r\n        margin-bottom: 15px;\r\n        text-align: center;\r\n      }\r\n      \r\n      .status-label, .type-label {\r\n        font-size: 16px;\r\n        font-weight: bold;\r\n        color: #333;\r\n        margin-bottom: 10px;\r\n      }\r\n      \r\n      .type-item {\r\n        width: 100%;\r\n        margin-bottom: 20px;\r\n      }\r\n      \r\n      .progress-content {\r\n        text-align: center;\r\n        \r\n        p {\r\n          margin: 0;\r\n          font-size: 20px;\r\n          font-weight: bold;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .employee-chart {\r\n    padding: 15px 0;\r\n\r\n    .el-progress--line {\r\n      margin-bottom: 15px;\r\n    }\r\n    \r\n    .role-item {\r\n      margin-bottom: 12px;\r\n      transition: all 0.3s;\r\n      \r\n      &:hover {\r\n        transform: translateX(5px);\r\n      }\r\n    }\r\n  }\r\n\r\n  .role-legend {\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n    margin-bottom: 15px;\r\n    padding: 10px;\r\n    background-color: #f5f7fa;\r\n    border-radius: 4px;\r\n    \r\n    .legend-item {\r\n      display: flex;\r\n      align-items: center;\r\n      margin: 5px 10px;\r\n      \r\n      .color-dot {\r\n        display: inline-block;\r\n        width: 12px;\r\n        height: 12px;\r\n        border-radius: 50%;\r\n        margin-right: 5px;\r\n      }\r\n      \r\n      .legend-text {\r\n        font-size: 14px;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.type-legend {\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  margin-bottom: 15px;\r\n  padding: 10px;\r\n  background-color: #f5f7fa;\r\n  border-radius: 4px;\r\n  \r\n  .legend-item {\r\n    display: flex;\r\n    align-items: center;\r\n    margin: 0 10px;\r\n    \r\n    .color-dot {\r\n      display: inline-block;\r\n      width: 12px;\r\n      height: 12px;\r\n      border-radius: 50%;\r\n      margin-right: 5px;\r\n    }\r\n    \r\n    .legend-text {\r\n      font-size: 14px;\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]}]}