{"remainingRequest":"D:\\my_web_project\\web实验作业\\源代码文件\\源代码文件\\web前端\\project-sky-admin-vue-ts\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\my_web_project\\web实验作业\\源代码文件\\源代码文件\\web前端\\project-sky-admin-vue-ts\\src\\views\\teamLeader\\deviceReview\\faultClear\\FaceRecognition.vue?vue&type=style&index=0&id=252cd6e8&lang=scss&scoped=true&","dependencies":[{"path":"D:\\my_web_project\\web实验作业\\源代码文件\\源代码文件\\web前端\\project-sky-admin-vue-ts\\src\\views\\teamLeader\\deviceReview\\faultClear\\FaceRecognition.vue","mtime":1748955568000},{"path":"D:\\my_web_project\\web实验作业\\源代码文件\\源代码文件\\web前端\\project-sky-admin-vue-ts\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"D:\\my_web_project\\web实验作业\\源代码文件\\源代码文件\\web前端\\project-sky-admin-vue-ts\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\my_web_project\\web实验作业\\源代码文件\\源代码文件\\web前端\\project-sky-admin-vue-ts\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\my_web_project\\web实验作业\\源代码文件\\源代码文件\\web前端\\project-sky-admin-vue-ts\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\my_web_project\\web实验作业\\源代码文件\\源代码文件\\web前端\\project-sky-admin-vue-ts\\node_modules\\style-resources-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\my_web_project\\web实验作业\\源代码文件\\源代码文件\\web前端\\project-sky-admin-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\my_web_project\\web实验作业\\源代码文件\\源代码文件\\web前端\\project-sky-admin-vue-ts\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.face-recognition-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n  background-color: #f5f5f5;\n}\n\n.camera-container {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  margin-bottom: 20px;\n  border: 2px solid #dcdfe6;\n  border-radius: 4px;\n  overflow: hidden;\n}\n\n.video-element {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.camera-overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  pointer-events: none;\n}\n\n.face-frame {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 600px;  /* 调整：从200px增加到300px */\n  height: 600px; /* 调整：从200px增加到300px */\n  transform: translate(-50%, -50%);\n  border: 3px solid #409EFF; /* 调整：边框加粗 */\n  border-radius: 50%;\n  box-shadow: 0 0 0 9999px rgba(0, 0, 0, 0.5);\n}\n\n.button-container {\n  display: flex;\n  gap: 20px;\n}\n",{"version":3,"sources":["FaceRecognition.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"FaceRecognition.vue","sourceRoot":"src/views/teamLeader/deviceReview/faultClear","sourcesContent":["<template>\r\n    <div class=\"face-recognition-container\">\r\n      <div class=\"camera-container\">\r\n        <video ref=\"videoElement\" class=\"video-element\" autoplay playsinline></video>\r\n        <canvas ref=\"canvasElement\" class=\"canvas-element\" style=\"display: none;\"></canvas>\r\n        <div class=\"camera-overlay\">\r\n          <div class=\"face-frame\"></div>\r\n        </div>\r\n      </div>\r\n      <div class=\"button-container\">\r\n        <el-button type=\"primary\" @click=\"captureAndVerify\">确认拍摄</el-button>\r\n        <el-button @click=\"cancelCapture\">取消</el-button>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script lang=\"ts\">\r\n  import { Component, Vue } from 'vue-property-decorator';\r\n  import { auditFault } from '@/api/fault';\r\n  \r\n  @Component\r\n  export default class FaceRecognition extends Vue {\r\n    private faultId: number = 0;\r\n    private remark: string = '';\r\n    private stream: MediaStream | null = null;\r\n    private videoElement: HTMLVideoElement | null = null;\r\n    private canvasElement: HTMLCanvasElement | null = null;\r\n    \r\n    created() {\r\n      // 从路由参数中获取数据\r\n      const { faultId, remark } = this.$route.query;\r\n      if (faultId) this.faultId = Number(faultId);\r\n      if (remark) this.remark = remark as string;\r\n      \r\n      // 验证参数\r\n      if (!this.faultId || !this.remark) {\r\n        this.$message.error('参数错误，请重新操作');\r\n        this.$router.go(-1);\r\n      }\r\n    }\r\n    \r\n    mounted() {\r\n      this.videoElement = this.$refs.videoElement as HTMLVideoElement;\r\n      this.canvasElement = this.$refs.canvasElement as HTMLCanvasElement;\r\n      this.startCamera();\r\n    }\r\n    \r\n    beforeDestroy() {\r\n      this.stopCamera();\r\n    }\r\n    \r\n    private async startCamera() {\r\n      try {\r\n        this.stream = await navigator.mediaDevices.getUserMedia({ \r\n          video: { \r\n            width: { ideal: 1280 },\r\n            height: { ideal: 720 },\r\n            facingMode: 'user'\r\n          } \r\n        });\r\n        \r\n        if (this.videoElement) {\r\n          this.videoElement.srcObject = this.stream;\r\n        }\r\n      } catch (error) {\r\n        console.error('Error accessing camera:', error);\r\n        this.$message.error('无法访问摄像头，请检查权限设置');\r\n        this.$router.go(-1);\r\n      }\r\n    }\r\n    \r\n    private stopCamera() {\r\n      if (this.stream) {\r\n        this.stream.getTracks().forEach(track => track.stop());\r\n        this.stream = null;\r\n      }\r\n    }\r\n    \r\n    private captureAndVerify() {\r\n      if (!this.videoElement || !this.canvasElement) return;\r\n      \r\n      const context = this.canvasElement.getContext('2d');\r\n      if (!context) return;\r\n      \r\n      // 设置canvas尺寸与视频一致，确保不超过1920*1080\r\n      const maxWidth = 1280; // 确保分辨率不超过1920*1080\r\n      const maxHeight = 720;\r\n      \r\n      const videoWidth = this.videoElement.videoWidth;\r\n      const videoHeight = this.videoElement.videoHeight;\r\n      \r\n      // 计算适合的尺寸，保持宽高比\r\n      let width = videoWidth;\r\n      let height = videoHeight;\r\n      \r\n      if (width > maxWidth) {\r\n        width = maxWidth;\r\n        height = (videoHeight / videoWidth) * maxWidth;\r\n      }\r\n      \r\n      if (height > maxHeight) {\r\n        height = maxHeight;\r\n        width = (videoWidth / videoHeight) * maxHeight;\r\n      }\r\n      \r\n      this.canvasElement.width = width;\r\n      this.canvasElement.height = height;\r\n      \r\n      // 在canvas上绘制当前视频帧\r\n      context.drawImage(this.videoElement, 0, 0, width, height);\r\n      \r\n      // 获取图像的base64编码 - 修改为JPEG格式，并设置较低的质量以减小文件大小\r\n      const imageBase64 = this.canvasElement.toDataURL('image/jpeg', 0.8);\r\n      \r\n      // 处理base64字符串，移除前缀\r\n      const base64Data = imageBase64.split(',')[1];\r\n      \r\n      // 发送到服务器进行验证\r\n      this.sendImageToServer(base64Data);\r\n    }\r\n    \r\n    private async sendImageToServer(imageBase64: string) {\r\n      try {\r\n        this.$message.info('正在进行人脸识别验证...');\r\n        \r\n        const response = await fetch('/api/face_recognition/search', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            base64Image: imageBase64,  // 修改键名为image，符合API要求\r\n            groupId: 'device_management_demo', // 修改为group_id_list，符合百度云API命名\r\n          }),\r\n        });\r\n  \r\n         console.log('Face recognition result:', response);\r\n        const data = await response.json();\r\n        console.log('Face recognition result:', data);\r\n        \r\n        if (data.code === 1) {\r\n          // 人脸识别成功，继续进行审核逻辑\r\n          this.submitAudit();\r\n        } else {\r\n          this.$message.error('人脸识别未通过，审核不通过');\r\n          setTimeout(() => {\r\n            this.$router.go(-1);\r\n          }, 1500);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error sending image to server', error);\r\n        this.$message.error('人脸识别服务异常，请稍后重试');\r\n        setTimeout(() => {\r\n          this.$router.go(-1);\r\n        }, 1500);\r\n      }\r\n    }\r\n    \r\n    private submitAudit() {\r\n      const params = {\r\n        approved: true,\r\n        faultId: this.faultId,\r\n        satisfactionScore: null,\r\n        verifyId: 2,\r\n        verifyOpinion: this.remark,\r\n      };\r\n  \r\n      auditFault(params).then(res => {\r\n        if (res.data.code === 1) {\r\n          this.$message.success('审核通过成功！');\r\n          // 返回上一页并刷新\r\n          this.$router.push({\r\n            path: '/teamLeader/deviceReview/faultClear',\r\n            query: { refresh: 'true' }\r\n          });\r\n        } else {\r\n          this.$message.error(res.data.msg || '操作失败');\r\n          this.$router.go(-1);\r\n        }\r\n      }).catch(() => {\r\n        this.$message.error('服务器繁忙，请稍后重试');\r\n        this.$router.go(-1);\r\n      });\r\n    }\r\n    \r\n    private cancelCapture() {\r\n      this.stopCamera();\r\n      this.$router.go(-1);\r\n    }\r\n  }\r\n  </script>\r\n  \r\n  <style lang=\"scss\" scoped>\r\n  .face-recognition-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 100vh;\r\n    background-color: #f5f5f5;\r\n  }\r\n  \r\n  .camera-container {\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    margin-bottom: 20px;\r\n    border: 2px solid #dcdfe6;\r\n    border-radius: 4px;\r\n    overflow: hidden;\r\n  }\r\n  \r\n  .video-element {\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n  }\r\n  \r\n  .camera-overlay {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    pointer-events: none;\r\n  }\r\n  \r\n  .face-frame {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    width: 600px;  /* 调整：从200px增加到300px */\r\n    height: 600px; /* 调整：从200px增加到300px */\r\n    transform: translate(-50%, -50%);\r\n    border: 3px solid #409EFF; /* 调整：边框加粗 */\r\n    border-radius: 50%;\r\n    box-shadow: 0 0 0 9999px rgba(0, 0, 0, 0.5);\r\n  }\r\n  \r\n  .button-container {\r\n    display: flex;\r\n    gap: 20px;\r\n  }\r\n  </style>"]}]}