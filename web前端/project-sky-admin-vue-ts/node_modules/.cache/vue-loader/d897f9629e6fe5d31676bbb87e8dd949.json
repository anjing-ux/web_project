{"remainingRequest":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\device-management\\project-sky-admin-vue-ts\\src\\layout\\components\\Sidebar\\index.vue?vue&type=script&lang=ts&","dependencies":[{"path":"G:\\device-management\\project-sky-admin-vue-ts\\src\\layout\\components\\Sidebar\\index.vue","mtime":1747301116770},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport { Component, Vue } from 'vue-property-decorator';\r\nimport { AppModule } from '@/store/modules/app';\r\nimport { UserModule } from '@/store/modules/user';\r\nimport SidebarItem from './SidebarItem.vue';\r\nimport variables from '@/styles/_variables.scss';\r\nimport { getSidebarStatus, setSidebarStatus } from '@/utils/cookies';\r\nimport Cookies from 'js-cookie';\r\n\r\n@Component({\r\n  name: 'SideBar',\r\n  components: {\r\n    SidebarItem\r\n  }\r\n})\r\nexport default class extends Vue {\r\n  // 用户角色\r\n  get roleId() {\r\n    console.log(\"角色登录id为\");\r\n    console.log(\"角色登录id为\" + UserModule.roleId);\r\n    return UserModule.roleId; // 从 Vuex 的 UserModule 中获取用户角色\r\n  }\r\n\r\n  // 当前用户的名称\r\n  get name() {\r\n    return (UserModule.userInfo as any).name\r\n      ? (UserModule.userInfo as any).name\r\n      : JSON.parse(Cookies.get('user_info') as any).name; // 从 Vuex 或 Cookie 中获取用户名\r\n  }\r\n\r\n  get defOpen() {\r\n  console.log(\"角色登录id为\", this.roleId);\r\n  let path = ['/']; // 默认路径\r\n  this.routes.forEach((n: any, i: number) => {\r\n    if (n.meta && n.meta.roleId === this.roleId) {\r\n      path.splice(0, 1, n.path); // 根据用户角色动态设置默认展开路径\r\n    }\r\n  });\r\n  console.log(\"默认展开路径为\", path);\r\n  return path;\r\n}\r\n\r\n  // 默认激活的菜单路径\r\n  get defAct() {\r\n    return this.$route.path; // 当前路由路径\r\n  }\r\n\r\n  // 获取侧边栏的状态\r\n  get sidebar() {\r\n    return AppModule.sidebar; // 从 Vuex 的 AppModule 中获取侧边栏状态\r\n  }\r\n\r\n  get routes() {\r\n  // 获取所有路由配置\r\n  let routes = JSON.parse(JSON.stringify([...(this.$router as any).options.routes]));\r\n  console.log('1-=-=routes=-=-=', routes);\r\n\r\n  // 获取当前用户的角色ID\r\n  const currentRoleId = this.roleId;\r\n  console.log('2-=-=currentRoleId=-=-=', currentRoleId);\r\n\r\n  let menu: any = [];\r\n  // 找到工区长对应的顶级路由\r\n  if (currentRoleId === 1) {\r\n    menu = routes.find(item => item.path === '/purchasingOffer');\r\n  }else if (currentRoleId === 2) {\r\n    menu = routes.find(item => item.path === '/sectionLeader');\r\n  }else if (currentRoleId === 3) {\r\n    menu = routes.find(item => item.path === '/teamLeader');\r\n  }else if (currentRoleId === 4) {\r\n    menu = routes.find(item => item.path === '/WarehouseManager');\r\n  }\r\n  \r\n\r\n  // 如果找到工区长对应的顶级路由，并且有子路由\r\n  let menuList = [];\r\n  if (menu && menu.children) {\r\n    // 为每个子路由的 path 前缀加上顶级路由的路径\r\n    menuList = menu.children.map(child => {\r\n      return {\r\n        ...child,\r\n        path: `${menu.path}/${child.path}` // 动态拼接路径\r\n      };\r\n    });\r\n  }\r\n\r\n  console.log('3-=-=menuList=-=-=', menuList);\r\n  return menuList;\r\n}\r\n\r\n\r\n\r\n  // 获取样式变量\r\n  get variables() {\r\n    return variables; // 从 SCSS 文件中导入的样式变量\r\n  }\r\n\r\n  // 判断侧边栏是否折叠\r\n  get isCollapse() {\r\n    return !this.sidebar.opened; // 根据侧边栏状态判断是否折叠\r\n  }\r\n\r\n  // 登出方法\r\n  private async logout() {\r\n    this.$store.dispatch('LogOut').then(() => { // 调用 Vuex 的 LogOut 动作\r\n      this.$router.replace({ path: '/login' }); // 跳转到登录页面\r\n    });\r\n  }\r\n}\r\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/layout/components/Sidebar","sourcesContent":["<template>\r\n  <div>\r\n    <!-- Logo 区域 -->\r\n    <div class=\"logo\">\r\n      <!-- 根据 isCollapse 的值动态切换 Logo 图片 -->\r\n      <div v-if=\"!isCollapse\" class=\"sidebar-logo\">\r\n        <img src=\"@/assets/login/device_logo.png\" style=\"width: 150px; height: 50px\">\r\n      </div>\r\n      <div v-else class=\"sidebar-logo-mini\">\r\n        <img src=\"@/assets/login/mini-logo.png\">\r\n      </div>\r\n    </div>\r\n    <!-- 滚动条包裹菜单，确保内容可滚动 -->\r\n    <el-scrollbar wrap-class=\"scrollbar-wrapper\">\r\n      <!-- 菜单组件 -->\r\n      <el-menu :default-openeds=\"defOpen\" :default-active=\"defAct\" :collapse=\"isCollapse\"\r\n        :background-color=\"variables.menuBg\" :text-color=\"variables.menuText\"\r\n        :active-text-color=\"variables.menuActiveText\" :unique-opened=\"false\" :collapse-transition=\"false\"\r\n        mode=\"vertical\">\r\n        <!-- 动态生成菜单项 -->\r\n        <sidebar-item v-for=\"route in routes\" :key=\"route.path\" :item=\"route\" :base-path=\"route.path\"\r\n          :is-collapse=\"isCollapse\" />\r\n      </el-menu>\r\n    </el-scrollbar>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Vue } from 'vue-property-decorator';\r\nimport { AppModule } from '@/store/modules/app';\r\nimport { UserModule } from '@/store/modules/user';\r\nimport SidebarItem from './SidebarItem.vue';\r\nimport variables from '@/styles/_variables.scss';\r\nimport { getSidebarStatus, setSidebarStatus } from '@/utils/cookies';\r\nimport Cookies from 'js-cookie';\r\n\r\n@Component({\r\n  name: 'SideBar',\r\n  components: {\r\n    SidebarItem\r\n  }\r\n})\r\nexport default class extends Vue {\r\n  // 用户角色\r\n  get roleId() {\r\n    console.log(\"角色登录id为\");\r\n    console.log(\"角色登录id为\" + UserModule.roleId);\r\n    return UserModule.roleId; // 从 Vuex 的 UserModule 中获取用户角色\r\n  }\r\n\r\n  // 当前用户的名称\r\n  get name() {\r\n    return (UserModule.userInfo as any).name\r\n      ? (UserModule.userInfo as any).name\r\n      : JSON.parse(Cookies.get('user_info') as any).name; // 从 Vuex 或 Cookie 中获取用户名\r\n  }\r\n\r\n  get defOpen() {\r\n  console.log(\"角色登录id为\", this.roleId);\r\n  let path = ['/']; // 默认路径\r\n  this.routes.forEach((n: any, i: number) => {\r\n    if (n.meta && n.meta.roleId === this.roleId) {\r\n      path.splice(0, 1, n.path); // 根据用户角色动态设置默认展开路径\r\n    }\r\n  });\r\n  console.log(\"默认展开路径为\", path);\r\n  return path;\r\n}\r\n\r\n  // 默认激活的菜单路径\r\n  get defAct() {\r\n    return this.$route.path; // 当前路由路径\r\n  }\r\n\r\n  // 获取侧边栏的状态\r\n  get sidebar() {\r\n    return AppModule.sidebar; // 从 Vuex 的 AppModule 中获取侧边栏状态\r\n  }\r\n\r\n  get routes() {\r\n  // 获取所有路由配置\r\n  let routes = JSON.parse(JSON.stringify([...(this.$router as any).options.routes]));\r\n  console.log('1-=-=routes=-=-=', routes);\r\n\r\n  // 获取当前用户的角色ID\r\n  const currentRoleId = this.roleId;\r\n  console.log('2-=-=currentRoleId=-=-=', currentRoleId);\r\n\r\n  let menu: any = [];\r\n  // 找到工区长对应的顶级路由\r\n  if (currentRoleId === 1) {\r\n    menu = routes.find(item => item.path === '/purchasingOffer');\r\n  }else if (currentRoleId === 2) {\r\n    menu = routes.find(item => item.path === '/sectionLeader');\r\n  }else if (currentRoleId === 3) {\r\n    menu = routes.find(item => item.path === '/teamLeader');\r\n  }else if (currentRoleId === 4) {\r\n    menu = routes.find(item => item.path === '/WarehouseManager');\r\n  }\r\n  \r\n\r\n  // 如果找到工区长对应的顶级路由，并且有子路由\r\n  let menuList = [];\r\n  if (menu && menu.children) {\r\n    // 为每个子路由的 path 前缀加上顶级路由的路径\r\n    menuList = menu.children.map(child => {\r\n      return {\r\n        ...child,\r\n        path: `${menu.path}/${child.path}` // 动态拼接路径\r\n      };\r\n    });\r\n  }\r\n\r\n  console.log('3-=-=menuList=-=-=', menuList);\r\n  return menuList;\r\n}\r\n\r\n\r\n\r\n  // 获取样式变量\r\n  get variables() {\r\n    return variables; // 从 SCSS 文件中导入的样式变量\r\n  }\r\n\r\n  // 判断侧边栏是否折叠\r\n  get isCollapse() {\r\n    return !this.sidebar.opened; // 根据侧边栏状态判断是否折叠\r\n  }\r\n\r\n  // 登出方法\r\n  private async logout() {\r\n    this.$store.dispatch('LogOut').then(() => { // 调用 Vuex 的 LogOut 动作\r\n      this.$router.replace({ path: '/login' }); // 跳转到登录页面\r\n    });\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.logo {\r\n  text-align: center;\r\n  background-color: rgb(27, 31, 46);\r\n  padding: 15px 0 0;\r\n  height: 80px;\r\n\r\n  img {\r\n    display: inline-block;\r\n  }\r\n}\r\n\r\n.sidebar-logo-mini {\r\n  img {\r\n    width: 30px;\r\n    height: 30px;\r\n  }\r\n}\r\n\r\n.el-scrollbar {\r\n  height: 100%;\r\n  background-color: rgb(52, 55, 68);\r\n}\r\n\r\n.el-menu {\r\n  border: none;\r\n  height: calc(95vh - 23px);\r\n  width: 100% !important;\r\n  padding: 47px 15px 0;\r\n}\r\n</style>\r\n"]}]}