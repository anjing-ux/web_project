{"remainingRequest":"D:\\my_web_project\\web实验作业\\源代码文件\\源代码文件\\web前端\\project-sky-admin-vue-ts\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\my_web_project\\web实验作业\\源代码文件\\源代码文件\\web前端\\project-sky-admin-vue-ts\\src\\views\\WarehouseManager\\outbound.vue?vue&type=script&lang=ts&","dependencies":[{"path":"D:\\my_web_project\\web实验作业\\源代码文件\\源代码文件\\web前端\\project-sky-admin-vue-ts\\src\\views\\WarehouseManager\\outbound.vue","mtime":1748953158000},{"path":"D:\\my_web_project\\web实验作业\\源代码文件\\源代码文件\\web前端\\project-sky-admin-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\my_web_project\\web实验作业\\源代码文件\\源代码文件\\web前端\\project-sky-admin-vue-ts\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\my_web_project\\web实验作业\\源代码文件\\源代码文件\\web前端\\project-sky-admin-vue-ts\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"D:\\my_web_project\\web实验作业\\源代码文件\\源代码文件\\web前端\\project-sky-admin-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\my_web_project\\web实验作业\\源代码文件\\源代码文件\\web前端\\project-sky-admin-vue-ts\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport { Component, Vue } from 'vue-property-decorator';\r\nimport HeadLable from '@/components/HeadLable/index.vue';\r\nimport {\r\n  getWarehouseDetailPage,\r\n  outbound\r\n} from '@/api/warehouse.ts';\r\nimport InputAutoComplete from '@/components/InputAutoComplete/index.vue';\r\nimport Empty from '@/components/Empty/index.vue';\r\n\r\n@Component({\r\n  name: 'outbound',\r\n  components: {\r\n    HeadLable,\r\n    InputAutoComplete,\r\n    Empty\r\n  }\r\n})\r\nexport default class extends Vue {\r\n  private equipmentName: any = '';\r\n  private requestCode: any = '';\r\n  private counts: number = 0;\r\n  private page: number = 1;\r\n  private pageSize: number = 10;\r\n  private tableData: any[] = [];\r\n  private plannedOutboundDate = [];\r\n  private equipmentType = '';\r\n  private selectedEquipmentName = '';\r\n  private selectedQuantity = 0;\r\n  private confirmDialogVisible = false;\r\n  private isSearch = false;\r\n\r\n  // 获取设备类型\r\n  getEquimentType(row: any) {\r\n    if (row.equipmentType === 1) {\r\n      return '客服设备';\r\n    } else if (row.equipmentType === 2) {\r\n      return '机电设备';\r\n    } else if (row.equipmentType === 3) {\r\n      return '消防设备';\r\n    } else if (row.equipmentType === 4) {\r\n      return '电梯设备';\r\n    } else {\r\n      return '状态错误';\r\n    }\r\n  }\r\n\r\n  created() {\r\n    this.init();\r\n  }\r\n\r\n  initProp(val) {\r\n    this.equipmentName = val;\r\n    this.initFun();\r\n  }\r\n\r\n  initFun() {\r\n    this.page = 1;\r\n    this.init();\r\n  }\r\n\r\n  // 点击出库按钮，弹出确认对话框\r\n  confirmOutbound(row: any) {\r\n    this.requestCode = row.requestCode;\r\n    this.confirmDialogVisible = true;\r\n    this.equipmentName = row.equipmentName;\r\n    this.selectedQuantity = row.quantity;\r\n    this.selectedEquipmentName = row.equipmentName;\r\n  }\r\n\r\n  // 确认出库操作\r\n  confirmOutboundAction() {\r\n    outbound({\r\n      requestCode: this.requestCode,\r\n      equipmentName:this.equipmentName\r\n    })\r\n      .then((res) => {\r\n        if (res.data.code === 1) {\r\n          this.$message.success(\"出库成功！\");\r\n          this.requestCode = '';\r\n          this.confirmDialogVisible = false;\r\n          this.init();\r\n        } else {\r\n          this.$message.error(res.data.msg);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        this.$message.error('请求出错了：' + err.message);\r\n      });\r\n  }\r\n\r\n  // 关闭对话框\r\n  handleClose() {\r\n    this.confirmDialogVisible = false;\r\n  }\r\n\r\n  private async init(isSearch?) {\r\n    await getWarehouseDetailPage({\r\n      page: this.page,\r\n      pageSize: this.pageSize,\r\n      name: this.equipmentName || undefined,\r\n      status: 1,\r\n      equipmentType: this.equipmentType || undefined,\r\n      beginTime:\r\n        this.plannedOutboundDate && this.plannedOutboundDate.length > 0\r\n          ? this.plannedOutboundDate[0]\r\n          : undefined,\r\n      endTime:\r\n        this.plannedOutboundDate && this.plannedOutboundDate.length > 0\r\n          ? this.plannedOutboundDate[1]\r\n          : undefined,\r\n    })\r\n      .then(res => {\r\n        if (res.data.code === 1) {\r\n          this.tableData = res.data && res.data.data && res.data.data.records;\r\n          this.counts = Number(res.data.data.total);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        this.$message.error('请求出错了：' + err.message);\r\n      });\r\n  }\r\n\r\n  private handleSizeChange(val: any) {\r\n    this.pageSize = val;\r\n    this.init();\r\n  }\r\n\r\n  private handleCurrentChange(val: any) {\r\n    this.page = val;\r\n    this.init();\r\n  }\r\n}\r\n",{"version":3,"sources":["outbound.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"outbound.vue","sourceRoot":"src/views/WarehouseManager","sourcesContent":["<template>\r\n  <div class=\"dashboard-container\">\r\n    <div class=\"container\">\r\n      <div class=\"tableBar\">\r\n        <label style=\"margin-right: 10px\">设备名称：</label>\r\n        <el-input v-model=\"equipmentName\" placeholder=\"请填写设备名称\" style=\"width: 14%\" clearable @clear=\"init\"\r\n          @keyup.enter.native=\"initFun\" />\r\n        <label style=\"margin-right: 10px; margin-left: 20px\">设备类型：</label>\r\n        <el-select v-model=\"equipmentType\" style=\"width: 14%\" placeholder=\"请选择\" clearable @clear=\"init\">\r\n          <el-option label=\"客服设备\" value=\"1\" />\r\n          <el-option label=\"机电设备\" value=\"2\" />\r\n          <el-option label=\"消防设备\" value=\"3\" />\r\n          <el-option label=\"电梯设备\" value=\"4\" />\r\n        </el-select>\r\n        <label style=\"margin-left: 20px\">计划出库日期：</label>\r\n        <el-date-picker v-model=\"plannedOutboundDate\" clearable value-format=\"yyyy-MM-dd HH:mm:ss\" range-separator=\"至\"\r\n          :default-time=\"['00:00:00', '23:59:59']\" type=\"daterange\" start-placeholder=\"开始日期\" end-placeholder=\"结束日期\"\r\n          style=\"width: 25%; margin-left: 10px\" @clear=\"init\" />\r\n        <el-button class=\"normal-btn continue\" @click=\"init(true)\">\r\n          查询\r\n        </el-button>\r\n      </div>\r\n      <el-table v-if=\"tableData.length\" :data=\"tableData\" stripe class=\"tableBox\">\r\n        <el-table-column type=\"selection\" width=\"25\" />\r\n        <el-table-column prop=\"requestCode\" label=\"申请编号\" />\r\n        <el-table-column prop=\"applicantDepartment\" label=\"申请部门\" />\r\n        <el-table-column prop=\"equipmentName\" label=\"设备名称\" />\r\n        <el-table-column key=\"equipmentType\" prop=\"设备类型\" label=\"设备类型\">\r\n          <template slot-scope=\"{ row }\">\r\n            <span>{{ getEquimentType(row) }}</span>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"quantity\" label=\"出库数量\" />\r\n        <el-table-column prop=\"plannedOutboundDate\" label=\"计划出库日期\" />\r\n        <el-table-column prop=\"approverName\" label=\"审核人\" />\r\n        <el-table-column label=\"操作\" width=\"250\" align=\"center\">\r\n          <template slot-scope=\"{ row }\">\r\n            <el-button type=\"text\" size=\"small\" class=\"blueBug\" @click=\"confirmOutbound(row)\">\r\n              出库\r\n            </el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <Empty v-else :is-search=\"isSearch\" />\r\n      <el-pagination v-if=\"counts > 10\" class=\"pageList\" :page-sizes=\"[10, 20, 30, 40]\" :page-size=\"pageSize\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\" :total=\"counts\" @size-change=\"handleSizeChange\"\r\n        @current-change=\"handleCurrentChange\" />\r\n    </div>\r\n\r\n    <!-- 确认出库对话框 -->\r\n    <el-dialog\r\n  title=\"确认出库\"\r\n  :visible.sync=\"confirmDialogVisible\"\r\n  width=\"30%\"\r\n  :before-close=\"handleClose\"\r\n>\r\n  <div class=\"dialog-content\">\r\n    <p class=\"subtitle\">您确定要出库以下设备吗？</p>\r\n    <p><strong>设备名称：</strong>{{ selectedEquipmentName }}</p>\r\n    <p><strong>出库数量：</strong>{{ selectedQuantity }}</p>\r\n  </div>\r\n  <span slot=\"footer\" class=\"dialog-footer\">\r\n    <el-button @click=\"confirmDialogVisible = false\">取消</el-button>\r\n    <el-button type=\"primary\" @click=\"confirmOutboundAction\">确认出库</el-button>\r\n  </span>\r\n</el-dialog>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Vue } from 'vue-property-decorator';\r\nimport HeadLable from '@/components/HeadLable/index.vue';\r\nimport {\r\n  getWarehouseDetailPage,\r\n  outbound\r\n} from '@/api/warehouse.ts';\r\nimport InputAutoComplete from '@/components/InputAutoComplete/index.vue';\r\nimport Empty from '@/components/Empty/index.vue';\r\n\r\n@Component({\r\n  name: 'outbound',\r\n  components: {\r\n    HeadLable,\r\n    InputAutoComplete,\r\n    Empty\r\n  }\r\n})\r\nexport default class extends Vue {\r\n  private equipmentName: any = '';\r\n  private requestCode: any = '';\r\n  private counts: number = 0;\r\n  private page: number = 1;\r\n  private pageSize: number = 10;\r\n  private tableData: any[] = [];\r\n  private plannedOutboundDate = [];\r\n  private equipmentType = '';\r\n  private selectedEquipmentName = '';\r\n  private selectedQuantity = 0;\r\n  private confirmDialogVisible = false;\r\n  private isSearch = false;\r\n\r\n  // 获取设备类型\r\n  getEquimentType(row: any) {\r\n    if (row.equipmentType === 1) {\r\n      return '客服设备';\r\n    } else if (row.equipmentType === 2) {\r\n      return '机电设备';\r\n    } else if (row.equipmentType === 3) {\r\n      return '消防设备';\r\n    } else if (row.equipmentType === 4) {\r\n      return '电梯设备';\r\n    } else {\r\n      return '状态错误';\r\n    }\r\n  }\r\n\r\n  created() {\r\n    this.init();\r\n  }\r\n\r\n  initProp(val) {\r\n    this.equipmentName = val;\r\n    this.initFun();\r\n  }\r\n\r\n  initFun() {\r\n    this.page = 1;\r\n    this.init();\r\n  }\r\n\r\n  // 点击出库按钮，弹出确认对话框\r\n  confirmOutbound(row: any) {\r\n    this.requestCode = row.requestCode;\r\n    this.confirmDialogVisible = true;\r\n    this.equipmentName = row.equipmentName;\r\n    this.selectedQuantity = row.quantity;\r\n    this.selectedEquipmentName = row.equipmentName;\r\n  }\r\n\r\n  // 确认出库操作\r\n  confirmOutboundAction() {\r\n    outbound({\r\n      requestCode: this.requestCode,\r\n      equipmentName:this.equipmentName\r\n    })\r\n      .then((res) => {\r\n        if (res.data.code === 1) {\r\n          this.$message.success(\"出库成功！\");\r\n          this.requestCode = '';\r\n          this.confirmDialogVisible = false;\r\n          this.init();\r\n        } else {\r\n          this.$message.error(res.data.msg);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        this.$message.error('请求出错了：' + err.message);\r\n      });\r\n  }\r\n\r\n  // 关闭对话框\r\n  handleClose() {\r\n    this.confirmDialogVisible = false;\r\n  }\r\n\r\n  private async init(isSearch?) {\r\n    await getWarehouseDetailPage({\r\n      page: this.page,\r\n      pageSize: this.pageSize,\r\n      name: this.equipmentName || undefined,\r\n      status: 1,\r\n      equipmentType: this.equipmentType || undefined,\r\n      beginTime:\r\n        this.plannedOutboundDate && this.plannedOutboundDate.length > 0\r\n          ? this.plannedOutboundDate[0]\r\n          : undefined,\r\n      endTime:\r\n        this.plannedOutboundDate && this.plannedOutboundDate.length > 0\r\n          ? this.plannedOutboundDate[1]\r\n          : undefined,\r\n    })\r\n      .then(res => {\r\n        if (res.data.code === 1) {\r\n          this.tableData = res.data && res.data.data && res.data.data.records;\r\n          this.counts = Number(res.data.data.total);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        this.$message.error('请求出错了：' + err.message);\r\n      });\r\n  }\r\n\r\n  private handleSizeChange(val: any) {\r\n    this.pageSize = val;\r\n    this.init();\r\n  }\r\n\r\n  private handleCurrentChange(val: any) {\r\n    this.page = val;\r\n    this.init();\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.el-table-column--selection .cell {\r\n  padding-left: 10px;\r\n}\r\n.dialog-content {\r\n  .subtitle {\r\n    font-size: 16px; /* 副标题字体大小 */\r\n    font-weight: bold; /* 加粗 */\r\n    margin-bottom: 10px; /* 与下方内容的间距 */\r\n    color: #333; /* 字体颜色 */\r\n  }\r\n}\r\n</style>\r\n<style lang=\"scss\" scoped>\r\n.dashboard {\r\n  &-container {\r\n    margin: 30px;\r\n\r\n    .container {\r\n      background: #fff;\r\n      position: relative;\r\n      z-index: 1;\r\n      padding: 30px 28px;\r\n      border-radius: 4px;\r\n\r\n      //查询黑色按钮样式\r\n      .normal-btn {\r\n        background: #333333;\r\n        color: white;\r\n        margin-left: 20px;\r\n      }\r\n\r\n      .tableBar {\r\n        margin-bottom: 20px;\r\n\r\n        .tableLab {\r\n          display: inline-block;\r\n          float: right;\r\n\r\n          span {\r\n            cursor: pointer;\r\n            display: inline-block;\r\n            font-size: 14px;\r\n            padding: 0 20px;\r\n            color: $gray-2;\r\n          }\r\n        }\r\n      }\r\n\r\n      .tableBox {\r\n        width: 100%;\r\n        border: 1px solid $gray-5;\r\n        border-bottom: 0;\r\n      }\r\n\r\n      .pageList {\r\n        text-align: center;\r\n        margin-top: 30px;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]}]}