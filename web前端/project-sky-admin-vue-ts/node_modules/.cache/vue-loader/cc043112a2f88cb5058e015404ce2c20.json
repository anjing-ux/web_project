{"remainingRequest":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\device-management\\project-sky-admin-vue-ts\\src\\views\\director\\deviceReview\\faultClear\\faultClear.vue?vue&type=script&lang=ts&","dependencies":[{"path":"G:\\device-management\\project-sky-admin-vue-ts\\src\\views\\director\\deviceReview\\faultClear\\faultClear.vue","mtime":1748184408000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport { Component, Vue } from 'vue-property-decorator'\r\nimport HeadLable from '@/components/HeadLable/index.vue'\r\nimport InputAutoComplete from '@/components/InputAutoComplete/index.vue'\r\nimport TabChange from './tabChange.vue'\r\nimport Empty from '@/components/Empty/index.vue'\r\nimport vueEsign from 'vue-esign' \r\nimport {\r\n  getFaultVerifyList,\r\n  submitFaultVerify,\r\n  queryFaultDetailById,\r\n  queryFaultVerifyDetailById\r\n} from '@/api/fault'\r\nimport { status } from 'nprogress'\r\nimport { verify } from 'crypto'\r\n\r\n@Component({\r\n  components: {\r\n    HeadLable,\r\n    InputAutoComplete,\r\n    TabChange,\r\n    Empty,\r\n    vueEsign,\r\n  },\r\n})\r\nexport default class extends Vue {\r\n  private defaultActivity: any = 0\r\n  private orderStatics = {\r\n    all: 15,\r\n    pending: 3,\r\n    processing: 4,\r\n    waitingClear: 5,\r\n    cleared: 2,\r\n    closed: 1\r\n  }\r\n  private row = {}\r\n  private faultType = ''\r\n  private faultCode = '' // 故障编号\r\n  private dialogFaultStatus = -1\r\n  private clearDialogVisible = false\r\n  private valueTime = []\r\n  private dialogVisible = false // 详情弹窗\r\n  private remark = '' // 备注\r\n  private deviceName = ''\r\n  private counts: number = 15\r\n  private page: number = 1\r\n  private pageSize: number = 10\r\n  private tableData = []\r\n\r\n  private diaForm: any = {} // 修改为对象\r\n  private isSearch: boolean = false\r\n  private faultStatus = 0 // 列表字段展示所需状态,用于分页请求数据\r\n\r\n  private signDialogVisible = false // 签字弹窗显示控制\r\n  private signatureImg = '' // 签名图片base64\r\n  private satisfactionScore = 3 // 默认满意度评分\r\n  private currentFaultId = '' // 当前签字的审核单ID\r\n  //审核详情弹窗\r\n  private auditDialogVisible = false\r\n  private auditForm: any = {}\r\n\r\n\r\n  // 审核不通过原因列表\r\n  private refuseFaultList = [\r\n    {\r\n      label: '处理不完善',\r\n      value: '处理不完善',\r\n    },\r\n    {\r\n      label: '信息不完整',\r\n      value: '信息不完整',\r\n    },\r\n    {\r\n      label: '维修措施不当',\r\n      value: '维修措施不当',\r\n    },\r\n    {\r\n      label: '照片不清晰',\r\n      value: '照片不清晰',\r\n    },\r\n    {\r\n      label: '自定义原因',\r\n      value: '自定义原因',\r\n    },\r\n  ]\r\n\r\n  // 故障类型列表\r\n  private faultTypeList = [\r\n    {\r\n      label: '类型1',\r\n      value: 1,\r\n    },\r\n    {\r\n      label: '类型2',\r\n      value: 2,\r\n    },\r\n    {\r\n      label: '类型3',\r\n      value: 3,\r\n    },\r\n  ]\r\n\r\n  // 故障等级列表\r\n  private faultLevelList = [\r\n    {\r\n      label: '一般',\r\n      value: 1,\r\n    },\r\n    {\r\n      label: '重要',\r\n      value: 2,\r\n    },\r\n    {\r\n      label: '紧急',\r\n      value: 3,\r\n    },\r\n  ]\r\n\r\n\r\n  \r\n  // 任务状态列表\r\n  private taskStatusList = [\r\n    {\r\n      label: '执行中',\r\n      value: 1,\r\n    },\r\n    {\r\n      label: '待验收',\r\n      value: 2,\r\n    },\r\n    {\r\n      label: '已验收',\r\n      value: 3,\r\n    },\r\n    {\r\n      label: '已销号',\r\n      value: 4,\r\n    },\r\n    {\r\n      label: '被驳回',\r\n      value: 5,\r\n    }\r\n  ]\r\n\r\n  private faultStatusList = [\r\n  {\r\n        label: '全部审核单',\r\n        value: 0\r\n      },\r\n      {\r\n        label: '待班组长审核',\r\n        value: 1\r\n      },\r\n      {\r\n        label: '待工区长审核',\r\n        value: 2\r\n      },\r\n      {\r\n        label: '待主任签字',\r\n        value: 3\r\n      },\r\n      {\r\n        label: '已完成',\r\n        value: 4\r\n      }\r\n    \r\n  ]\r\n  \r\n  // 工区列表（示例数据）\r\n  private areaList = [\r\n    { id: 1, name: '工区A' },\r\n    { id: 2, name: '工区B' },\r\n    { id: 3, name: '工区C' }\r\n  ]\r\n  \r\n  // 班组列表（示例数据）\r\n  private teamList = [\r\n    { id: 1, name: '班组A' },\r\n    { id: 2, name: '班组B' },\r\n    { id: 3, name: '班组C' }\r\n  ]\r\n\r\n  created() {\r\n    this.init(Number(this.$route.query.status) || 0)\r\n  }\r\n\r\n  mounted() {\r\n    if (\r\n      this.$route.query.faultId &&\r\n      this.$route.query.faultId !== 'undefined'\r\n    ) {\r\n      this.goDetail(this.$route.query.faultId, 2)\r\n    }\r\n    if (this.$route.query.status) {\r\n      this.defaultActivity = Number(this.$route.query.status)\r\n    }\r\n  }\r\n  \r\n  // 获取工区名称\r\n  private getAreaName(areaId: number): string {\r\n    const area = this.areaList.find(item => item.id === areaId)\r\n    return area ? area.name : '未知工区'\r\n  }\r\n  \r\n  // 获取班组名称\r\n  private getTeamName(teamId: number): string {\r\n    const team = this.teamList.find(item => item.id === teamId)\r\n    return team ? team.name : '未知班组'\r\n  }\r\n  \r\n  // 获取故障等级文本\r\n  private getFaultLevelText(level: number): string {\r\n    switch (level) {\r\n      case 1:\r\n        return '一般'\r\n      case 2:\r\n        return '重要'\r\n      case 3:\r\n        return '紧急'\r\n      default:\r\n        return '未知等级'\r\n    }\r\n  }\r\n  \r\n  // 获取故障类型\r\n  private getFaultType(row: any): string {\r\n    const type = this.faultTypeList.find(item => item.value === row.faultType)\r\n    return type ? type.label : '未知类型'\r\n  }\r\n  \r\n  // 获取故障等级\r\n  private getFaultLevel(row: any): string {\r\n    const level = this.faultLevelList.find(item => item.value === row.faultLevel)\r\n    return level ? level.label : '未知等级'\r\n  }\r\n  \r\n  // 获取故障状态\r\n  private getFaultStatus(row: any): string {\r\n    const status = this.faultStatusList.find(item => item.value === row.verifyStep)\r\n    return status ? status.label : '未知状态'\r\n  }\r\n\r\n  private formatDateToDay(dateTime: string): string {\r\n  if (!dateTime) return '';\r\n  return dateTime.split(' ')[0]; // 直接取空格前的日期部分\r\n  // 或者使用更精确的方式：\r\n  // return new Date(dateTime).toISOString().split('T')[0];\r\n}\r\n  \r\n  \r\n  // 初始化数据\r\n  private init(status: number, isSearch: boolean = false) {\r\n    this.faultStatus = status\r\n    this.isSearch = isSearch\r\n    const params = {\r\n      page: this.page,\r\n      pageSize: this.pageSize,\r\n      deviceName: this.deviceName,\r\n      faultType: this.faultType || null,\r\n      startTime: this.valueTime && this.valueTime.length ? this.valueTime[0] : null,\r\n      completeTime: this.valueTime && this.valueTime.length ? this.valueTime[1] : null,\r\n      auditStatus: this.faultStatus === 0? undefined : status,\r\n      //verifyStep: status === 0 ? undefined : status,\r\n    }\r\n    \r\n    getFaultVerifyList(params).then(res => {\r\n      if (res.data.code === 1) {\r\n\r\n        this.tableData = res.data.data.records || 0\r\n        this.counts = res.data.total\r\n      } else {\r\n        this.$message.error(res.data.msg || '获取数据失败')\r\n      }\r\n    }).catch(() => {\r\n      // 模拟数据，实际开发中可删除\r\n      this.$message.error('未知错误请联系管理员')\r\n    })\r\n  }\r\n  \r\n  // 初始化函数（用于回车搜索）\r\n  private initFun(status: number) {\r\n    this.init(status, true)\r\n  }\r\n  \r\n  //管理标签页点击事件\r\n  change(activeIndex) {\r\n    if (activeIndex === this.faultStatus) return\r\n    this.init(activeIndex)\r\n    this.valueTime = []\r\n    //this.dialogPurchaseStatus = 0\r\n    this.$router.push('/director/deviceReview/faultClear')\r\n    console.log(activeIndex, '接收到了子组件的index')\r\n  }\r\n\r\n  \r\n  // 处理页码变化\r\n  private handleCurrentChange(val: number) {\r\n    this.page = val\r\n    this.init(this.faultStatus)\r\n  }\r\n  \r\n  // 处理每页条数变化\r\n  private handleSizeChange(val: number) {\r\n    this.pageSize = val\r\n    this.page = 1\r\n    this.init(this.faultStatus)\r\n  }\r\n  \r\n  // 关闭弹窗\r\n  private handleClose() {\r\n    this.dialogVisible = false\r\n  }\r\n  \r\n  \r\n  \r\n  // 查看详情\r\n  private goDetail(faultId: string, verifyStep: number, row: any = {}) {\r\n    this.row = row\r\n    this.dialogFaultStatus = verifyStep\r\n    this.dialogVisible = true\r\n    \r\n    // 获取故障详情\r\n    queryFaultDetailById(faultId).then(res => {\r\n      if (res.data.code === 1) {\r\n        this.diaForm = res.data.data\r\n      } else {\r\n        this.$message.error(res.data.msg || '获取详情失败')\r\n      }\r\n    }).catch(() => {\r\n      // 模拟数据，实际开发中可删除\r\n      this.$message.error('未知错误请联系管理员')\r\n    })\r\n  }\r\n\r\n  private handleSign(faultId: string) {\r\n  this.currentFaultId = faultId\r\n  this.signDialogVisible = true\r\n  // 每次打开时重置签名状态\r\n  this.$nextTick(() => {\r\n    this.handleReset() // 确保每次打开都清空签名\r\n    this.satisfactionScore = 3 // 重置评分\r\n  })\r\n}\r\n\r\n// Add these methods:\r\n// 重设签名\r\nprivate handleReset() {\r\n  const esign = this.$refs.esign as any\r\n  if (esign) {\r\n    esign.reset() // 清除画布\r\n    this.signatureImg = '' // 清空预览\r\n  }\r\n}\r\n\r\n// 生成签名\r\nprivate handleGenerate() {\r\n  (this.$refs.esign as any).generate().then((res: string) => {\r\n    this.signatureImg = res\r\n  }).catch(() => {\r\n    this.$message.error('请先签名')\r\n  })\r\n}\r\n\r\n// 提交签名和满意度\r\nprivate async submitSign() {\r\n  if (!this.signatureImg) {\r\n    this.$message.warning('请先完成签名')\r\n    return\r\n  }\r\n\r\n  try {\r\n    const params = {\r\n      faultId: this.currentFaultId,\r\n      satisfactionScore: this.satisfactionScore,\r\n      signature: this.signatureImg\r\n    }\r\n\r\n\r\n    const res = await submitFaultVerify(params)\r\n    if (res.data.code === 1) {\r\n      this.$message.success('签字提交成功')\r\n      this.signDialogVisible = false\r\n      this.init(this.faultStatus) // 刷新列表\r\n     }\r\n    \r\n    console.log('提交的签字数据:', JSON.stringify(params))\r\n  } catch (error) {\r\n    this.$message.error('提交失败: ' + error.message)\r\n  }\r\n}\r\n\r\n// 打开审核详情弹窗\r\nprivate showAuditDetail(faultId: string) {\r\n    this.auditDialogVisible = true\r\n    this.loadAuditData(faultId)\r\n  }\r\n\r\n  // 加载审核数据\r\n  private loadAuditData(faultId: string) {\r\n    queryFaultVerifyDetailById(faultId).then(res => {\r\n      if (res.data.code === 1) {\r\n        this.auditForm = res.data.data\r\n      } else {\r\n        this.$message.error(res.data.msg || '获取审核详情失败')\r\n      }\r\n    }).catch(err => {\r\n      this.$message.error('获取审核详情出错: ' + err.message)\r\n    })\r\n  }\r\n\r\n  // 获取审核步骤文本\r\n  private getVerifyStepText(step: number): string {\r\n    switch (step) {\r\n      case 1: return '班组长审核'\r\n      case 2: return '工区长审核'\r\n      case 3: return '主管领导审核'\r\n      case 4: return '已完成'\r\n    }\r\n  }\r\n\r\n  // 获取步骤状态描述\r\n  private getStepDescription(step: number): string {\r\n    if (step < this.auditForm.verifyStep) {\r\n      return '已完成 - ' + this.auditForm.verifyTime\r\n    } else if (step === this.auditForm.verifyStep) {\r\n      return '进行中'\r\n    } else {\r\n      return '待处理'\r\n    }\r\n  }\r\n\r\n  // 获取当前激活的步骤\r\n  private getActiveStep(step: number): number {\r\n    return step || 0\r\n  }\r\n\r\n  // 获取状态样式类\r\n  private getStatusClass(step: number): string {\r\n    switch (step) {\r\n      case 1: return 'status1'\r\n      case 2: return 'status2'\r\n      case 3: return 'status3'\r\n      default: return 'status0'\r\n    }\r\n  }\r\n\r\n}\r\n",{"version":3,"sources":["faultClear.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+YA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"faultClear.vue","sourceRoot":"src/views/director/deviceReview/faultClear","sourcesContent":["<template>\r\n  <div class=\"dashboard-container\">\r\n    <TabChange :order-statics=\"orderStatics\" :default-activity=\"defaultActivity\" @tabChange=\"change\" />\r\n    <div class=\"container\" :class=\"{ hContainer: tableData.length }\">\r\n      <!-- 搜索项 -->\r\n      <div class=\"tableBar\">\r\n        <label style=\"margin-right: 10px\">设备名称：</label>\r\n        <el-input v-model=\"deviceName\" placeholder=\"请填写设备名称：\" style=\"width: 15%\" clearable\r\n          @clear=\"init(faultStatus)\" @keyup.enter.native=\"initFun(faultStatus)\" />\r\n        <label style=\"margin-right: 10px; margin-left: 20px\">故障类型：</label>\r\n        <el-select v-model=\"faultType\" style=\"width: 14%\" placeholder=\"请选择\" clearable @clear=\"init\">\r\n          <el-option label=\"一般\" value=\"1\" />\r\n          <el-option label=\"重要\" value=\"2\" />\r\n          <el-option label=\"紧急\" value=\"3\" />\r\n        </el-select>\r\n        <label style=\"margin-left: 20px\">报修时间：</label>\r\n        <el-date-picker v-model=\"valueTime\" clearable value-format=\"yyyy-MM-dd HH:mm:ss\" range-separator=\"至\"\r\n          :default-time=\"['00:00:00', '23:59:59']\" type=\"daterange\" start-placeholder=\"开始日期\" end-placeholder=\"结束日期\"\r\n          style=\"width: 25%; margin-left: 10px\" @clear=\"init(faultStatus)\" />\r\n        <el-button class=\"normal-btn continue\" @click=\"init(faultStatus, true)\">\r\n          查询\r\n        </el-button>\r\n      </div>\r\n      <el-table v-if=\"tableData.length\" :data=\"tableData\" stripe class=\"tableBox\">\r\n        <el-table-column key=\"faultCode\" prop=\"faultCode\" label=\"故障编号\" />\r\n        <el-table-column key=\"deviceName\" prop=\"deviceName\" label=\"设备名称\" />\r\n        <el-table-column key=\"faultType\" prop=\"faultType\" label=\"故障类型\">\r\n          <template slot-scope=\"{ row }\">\r\n            <span>{{ getFaultType(row) }}</span>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column key=\"faultLevel\" prop=\"faultLevel\" label=\"故障等级\">\r\n          <template slot-scope=\"{ row }\">\r\n            <span>{{ getFaultLevel(row) }}</span>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column key=\"verifyStep\" prop=\"verifyStep\" label=\"状态信息\">\r\n          <template slot-scope=\"{ row }\">\r\n            <span>{{ getFaultStatus(row) }}</span>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"reportTime\" label=\"报修时间\">\r\n  <template slot-scope=\"{ row }\">\r\n    {{ formatDateToDay(row.reportTime) }}\r\n  </template>\r\n</el-table-column>\r\n        <el-table-column key=\"reporterName\" prop=\"reporterName\" label=\"报修人姓名\" />\r\n        <el-table-column key=\"processorName\" prop=\"processorName\" label=\"处理人姓名\" />\r\n        <el-table-column v-if=\"[4].includes(faultStatus)\" key=\"closeTime\" prop=\"closeTime\" label=\"销号时间\" />\r\n        <el-table-column prop=\"btn\" label=\"操作\" align=\"center\"\r\n          :class-name=\"faultStatus === 0 ? 'operate' : 'otherOperate'\" :min-width=\"[0, 3, 4].includes(faultStatus)\r\n            ? 130\r\n            : [1, 2].includes(faultStatus)\r\n              ? 140\r\n              : 'auto'\r\n            \">\r\n              \">\r\n            <template slot-scope=\"{ row }\">\r\n              <!-- <el-divider direction=\"vertical\" /> -->\r\n              <div class=\"befor\">\r\n              <el-button type=\"text\" class=\"blueBug non\" @click=\"showAuditDetail(row.faultId)\">\r\n                  审核详情\r\n                </el-button>\r\n              </div>\r\n              \r\n              <div class=\"middle\">\r\n                <el-button type=\"text\" class=\"blueBug non\" @click=\"goDetail(row.faultId, row.verifyStep, row)\">\r\n                  详情\r\n                </el-button>\r\n              </div>\r\n\r\n              <div class=\"after\">\r\n              <el-button v-if=\"[3].includes(row.verifyStep)\" type=\"text\" class=\"blueBug non\" @click=\"handleSign(row.faultId)\">\r\n                  签字\r\n                </el-button>\r\n              </div>\r\n            </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <Empty v-else :is-search=\"isSearch\" />\r\n      <el-pagination v-if=\"counts > 10\" class=\"pageList\" :page-sizes=\"[10, 20, 30, 40]\" :page-size=\"pageSize\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\" :total=\"counts\" @size-change=\"handleSizeChange\"\r\n        @current-change=\"handleCurrentChange\" />\r\n    </div>\r\n\r\n    <!-- 查看弹框部分 -->\r\n    <el-dialog title=\"故障详细信息\" :visible.sync=\"dialogVisible\" width=\"53%\" :before-close=\"handleClose\"\r\n      class=\"order-dialog\">\r\n      <el-scrollbar style=\"height: 100%\">\r\n        <!-- 顶部信息 -->\r\n        <div class=\"order-top\">\r\n          <div>\r\n            <div style=\"display: inline-block\">\r\n              <label style=\"font-size: 16px\">故障编号：</label>\r\n              <div class=\"order-num\">\r\n                {{ diaForm.faultCode }}\r\n              </div>\r\n            </div>\r\n            <div style=\"display: inline-block\" class=\"order-status\" :class=\"{ status3: true }\">\r\n              {{\r\n                faultStatusList.filter((item) => item.value === dialogFaultStatus).length > 0 \r\n                ? faultStatusList.filter((item) => item.value === dialogFaultStatus)[0].label \r\n                : '未知状态'\r\n              }}\r\n            </div>\r\n          </div>\r\n          <p><label>创建时间：</label>{{ diaForm.createTime }}</p>\r\n        </div>\r\n\r\n        <!-- 中间信息 -->\r\n        <div class=\"order-middle\">\r\n          <!-- 故障信息 -->\r\n          <div class=\"dish-label\">故障信息</div>\r\n          <div class=\"user-info\">\r\n            <div class=\"user-info-box\">\r\n              <div class=\"user-name\">\r\n                <label>报修人姓名：</label>\r\n                <span>{{ diaForm.reporterName }}</span>\r\n              </div>\r\n\r\n              <div class=\"user-phone\">\r\n                <label>报修人电话：</label>\r\n                <span>{{ diaForm.reporterPhone }}</span>\r\n              </div>\r\n\r\n              <div class=\"user-getTime\">\r\n                <label>报修时间：</label>\r\n                <span>{{ diaForm.reportTime }}</span>\r\n              </div>\r\n\r\n              <div class=\"user-name\">\r\n                <label>故障等级：</label>\r\n                <span>{{ getFaultLevelText(diaForm.faultLevel) }}</span>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"user-remark\">\r\n              <div>故障描述：</div>\r\n              <span>{{ diaForm.faultDesc }}</span>\r\n            </div>\r\n            \r\n            <!-- 新增处理描述和维修措施 -->\r\n            <div class=\"user-remark\" v-if=\"diaForm.processDesc\">\r\n              <div>处理描述：</div>\r\n              <span>{{ diaForm.processDesc }}</span>\r\n            </div>\r\n            \r\n            <div class=\"user-remark\" v-if=\"diaForm.measures\">\r\n              <div>维修措施：</div>\r\n              <span>{{ diaForm.measures }}</span>\r\n            </div>\r\n            \r\n            <!-- 新增修复前后照片 -->\r\n            <div class=\"user-remark\" v-if=\"diaForm.beforePhoto\">\r\n              <div>修复前照片：</div>\r\n              <div class=\"photo-container\">\r\n                <div v-for=\"(photo, index) in diaForm.beforePhoto.split(',')\" :key=\"'before-'+index\" class=\"photo-item\">\r\n                  <img :src=\"photo\" alt=\"修复前照片\" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"user-remark\" v-if=\"diaForm.afterPhoto\">\r\n              <div>修复后照片：</div>\r\n              <div class=\"photo-container\">\r\n                <div v-for=\"(photo, index) in diaForm.afterPhoto.split(',')\" :key=\"'after-'+index\" class=\"photo-item\">\r\n                  <img :src=\"photo\" alt=\"修复后照片\" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"dish-label\">设备信息</div>\r\n          <!-- 设备信息 -->\r\n          <div class=\"user-info\">\r\n            <div class=\"user-info-box\">\r\n              <div class=\"user-name\">\r\n                <label>设备编号：</label>\r\n                <span>{{ diaForm.deviceCode }}</span>\r\n              </div>\r\n\r\n              <div class=\"user-name\">\r\n                <label>设备名称：</label>\r\n                <span>{{ diaForm.deviceName }}</span>\r\n              </div>\r\n              \r\n              <!-- 新增工区和班组信息 -->\r\n              <div class=\"user-name\" v-if=\"diaForm.areaId\">\r\n                <label>工区：</label>\r\n                <span>{{ getAreaName(diaForm.areaId) }}</span>\r\n              </div>\r\n              \r\n              <div class=\"user-name\" v-if=\"diaForm.teamId\">\r\n                <label>班组：</label>\r\n                <span>{{ getTeamName(diaForm.teamId) }}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 底部信息 -->\r\n        <div class=\"order-bottom\">\r\n          <div class=\"amount-label\">处理信息</div>\r\n          <div class=\"amount-info\">\r\n            <div class=\"user-remark\">\r\n              <div class=\"approver-time\">\r\n                <div>处理人：</div>\r\n                <span>{{ diaForm.processorName }}</span>\r\n              </div>\r\n              <div class=\"approver-time\">\r\n                <div>接单时间：</div>\r\n                <span>{{ diaForm.processTime }}</span>\r\n              </div>\r\n              <div class=\"approver-time\">\r\n                <div>完成时间：</div>\r\n                <span>{{ diaForm.completeTime }}</span>\r\n              </div>\r\n            </div>\r\n            \r\n            <!-- 新增审核不通过原因 -->\r\n            <div v-if=\"diaForm.refuseReason\" class=\"orderCancel\">\r\n              <div>审核不通过原因：</div>\r\n              <span>{{ diaForm.refuseReason }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </el-scrollbar>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogVisible = false\">返 回</el-button>\r\n      </span>\r\n    </el-dialog>\r\n\r\n<!-- 签字弹窗 -->\r\n<el-dialog title=\"签字确认\" :visible.sync=\"signDialogVisible\" width=\"50%\">\r\n  <!-- 一审二审信息容器 -->\r\n  <div class=\"reviewer-section\">\r\n    <div class=\"reviewer-row\">\r\n      <div class=\"reviewer-item\">\r\n        <label>一审人ID：</label>\r\n        <div>{{ diaForm.firstReviewerId || 'N/A' }}</div>\r\n      </div>\r\n      <div class=\"reviewer-item\">\r\n        <label>一审人姓名：</label>\r\n        <span>{{ diaForm.firstReviewerName || 'N/A' }}</span>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"reviewer-row\">\r\n      <div class=\"reviewer-item\">\r\n        <label>二审人ID：</label>\r\n        <div>{{ diaForm.secondReviewerId || 'N/A' }}</div>\r\n      </div>\r\n      <div class=\"reviewer-item\">\r\n        <label>二审人姓名：</label>\r\n        <span>{{ diaForm.secondReviewerName || 'N/A' }}</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- 评分和签名区域 -->\r\n  <div class=\"sign-section\">\r\n    <div class=\"rate-section\">\r\n      <label>满意度评分：</label>\r\n      <el-rate v-model=\"satisfactionScore\" show-text :texts=\"['很差', '较差', '一般', '满意', '非常满意']\"></el-rate>\r\n    </div>\r\n    \r\n    <div class=\"sign-controls\">\r\n      <label>电子签名：</label>\r\n      <el-button size=\"small\" @click=\"handleReset\">重签</el-button>\r\n      <el-button size=\"small\" @click=\"handleGenerate\">确认签名</el-button>\r\n    </div>\r\n    \r\n    <vue-esign\r\n      ref=\"esign\"\r\n      :width=\"600\"\r\n      :height=\"200\"\r\n      :lineWidth=\"2\"\r\n      lineColor=\"#000000\"\r\n      bgColor=\"#f5f5f5\"\r\n    />\r\n    \r\n    <div v-if=\"signatureImg\" class=\"sign-preview\">\r\n      <label>签名预览：</label>\r\n      <img :src=\"signatureImg\" alt=\"签名预览\"/>\r\n    </div>\r\n  </div>\r\n  \r\n  <span slot=\"footer\" class=\"dialog-footer\">\r\n    <el-button @click=\"signDialogVisible = false\">取消</el-button>\r\n    <el-button type=\"primary\" @click=\"submitSign\">提交</el-button>\r\n  </span>\r\n</el-dialog>\r\n\r\n<!-- 审核详情弹窗 -->\r\n<el-dialog \r\n    title=\"审核详情\" \r\n    :visible.sync=\"auditDialogVisible\" \r\n    width=\"60%\"\r\n    class=\"audit-dialog\"\r\n  >\r\n    <el-scrollbar style=\"height: 100%\">\r\n      <!-- 顶部信息 -->\r\n      <div class=\"audit-top\">\r\n        <div>\r\n          <div style=\"display: inline-block\">\r\n            <label style=\"font-size: 16px\">故障编号：</label>\r\n            <div class=\"audit-num\">\r\n              {{ auditForm.faultId || 'N/A' }}\r\n            </div>\r\n          </div>\r\n          <div style=\"display: inline-block\" class=\"audit-status\" :class=\"getStatusClass(auditForm.verifyStep)\">\r\n            {{ getVerifyStepText(auditForm.verifyStep) }}\r\n          </div>\r\n        </div>\r\n        <p><label>创建时间：</label>{{ auditForm.createTime || 'N/A' }}</p>\r\n      </div>\r\n\r\n      <!-- 审核信息 -->\r\n      <div class=\"audit-section\">\r\n        <div class=\"section-title\">审核信息</div>\r\n        \r\n        <div class=\"audit-info-box\">\r\n          <div class=\"info-row\">\r\n            <div class=\"info-item\">\r\n              <label>审核步骤：</label>\r\n              <span>{{ getVerifyStepText(auditForm.verifyStep) }}</span>\r\n            </div>\r\n            <div class=\"info-item\">\r\n              <label>审核状态：</label>\r\n              <span>{{ auditForm.verifyStatus || '通过' }}</span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"info-row\">\r\n            <div class=\"info-item\">\r\n              <label>审核人：</label>\r\n              <span>{{ auditForm.operatorName || 'N/A' }}</span>\r\n            </div>\r\n            <div class=\"info-item\">\r\n              <label>审核时间：</label>\r\n              <span>{{ auditForm.verifyTime || 'N/A' }}</span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"info-row\" v-if=\"auditForm.verifyOpinion\">\r\n            <div class=\"info-item full-width\">\r\n              <label>审核意见：</label>\r\n              <span>{{ auditForm.verifyOpinion }}</span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"info-row\">\r\n            <div class=\"info-item full-width\">\r\n              <label>满意度评分：</label>\r\n              <el-rate\r\n                v-model=\"auditForm.satisfactionScore\"\r\n                disabled\r\n                show-text\r\n                :texts=\"['很差', '较差', '一般', '满意', '非常满意']\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 签名信息 -->\r\n      <div class=\"signature-section\" v-if=\"auditForm.signature\">\r\n        <div class=\"section-title\">电子签名</div>\r\n        <div class=\"signature-box\">\r\n          <img :src=\"auditForm.signature\" alt=\"电子签名\" class=\"signature-img\" />\r\n          <div class=\"signature-info\">\r\n            <p>签名人：{{ auditForm.operatorName || 'N/A' }}</p>\r\n            <p>签名时间：{{ auditForm.verifyTime || 'N/A' }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 审核流程 -->\r\n      <div class=\"process-section\">\r\n        <div class=\"section-title\">审核流程</div>\r\n        <el-steps :active=\"getActiveStep(auditForm.verifyStep)\" finish-status=\"success\">\r\n          <el-step title=\"班组长审核\" :description=\"getStepDescription(1)\"></el-step>\r\n          <el-step title=\"工区长审核\" :description=\"getStepDescription(2)\"></el-step>\r\n          <el-step title=\"主管领导审核\" :description=\"getStepDescription(3)\"></el-step>\r\n        </el-steps>\r\n      </div>\r\n    </el-scrollbar>\r\n    \r\n    <span slot=\"footer\" class=\"dialog-footer\">\r\n      <el-button @click=\"auditDialogVisible = false\">关闭</el-button>\r\n    </span>\r\n  </el-dialog>\r\n    \r\n  </div>\r\n</template>\r\n\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Vue } from 'vue-property-decorator'\r\nimport HeadLable from '@/components/HeadLable/index.vue'\r\nimport InputAutoComplete from '@/components/InputAutoComplete/index.vue'\r\nimport TabChange from './tabChange.vue'\r\nimport Empty from '@/components/Empty/index.vue'\r\nimport vueEsign from 'vue-esign' \r\nimport {\r\n  getFaultVerifyList,\r\n  submitFaultVerify,\r\n  queryFaultDetailById,\r\n  queryFaultVerifyDetailById\r\n} from '@/api/fault'\r\nimport { status } from 'nprogress'\r\nimport { verify } from 'crypto'\r\n\r\n@Component({\r\n  components: {\r\n    HeadLable,\r\n    InputAutoComplete,\r\n    TabChange,\r\n    Empty,\r\n    vueEsign,\r\n  },\r\n})\r\nexport default class extends Vue {\r\n  private defaultActivity: any = 0\r\n  private orderStatics = {\r\n    all: 15,\r\n    pending: 3,\r\n    processing: 4,\r\n    waitingClear: 5,\r\n    cleared: 2,\r\n    closed: 1\r\n  }\r\n  private row = {}\r\n  private faultType = ''\r\n  private faultCode = '' // 故障编号\r\n  private dialogFaultStatus = -1\r\n  private clearDialogVisible = false\r\n  private valueTime = []\r\n  private dialogVisible = false // 详情弹窗\r\n  private remark = '' // 备注\r\n  private deviceName = ''\r\n  private counts: number = 15\r\n  private page: number = 1\r\n  private pageSize: number = 10\r\n  private tableData = []\r\n\r\n  private diaForm: any = {} // 修改为对象\r\n  private isSearch: boolean = false\r\n  private faultStatus = 0 // 列表字段展示所需状态,用于分页请求数据\r\n\r\n  private signDialogVisible = false // 签字弹窗显示控制\r\n  private signatureImg = '' // 签名图片base64\r\n  private satisfactionScore = 3 // 默认满意度评分\r\n  private currentFaultId = '' // 当前签字的审核单ID\r\n  //审核详情弹窗\r\n  private auditDialogVisible = false\r\n  private auditForm: any = {}\r\n\r\n\r\n  // 审核不通过原因列表\r\n  private refuseFaultList = [\r\n    {\r\n      label: '处理不完善',\r\n      value: '处理不完善',\r\n    },\r\n    {\r\n      label: '信息不完整',\r\n      value: '信息不完整',\r\n    },\r\n    {\r\n      label: '维修措施不当',\r\n      value: '维修措施不当',\r\n    },\r\n    {\r\n      label: '照片不清晰',\r\n      value: '照片不清晰',\r\n    },\r\n    {\r\n      label: '自定义原因',\r\n      value: '自定义原因',\r\n    },\r\n  ]\r\n\r\n  // 故障类型列表\r\n  private faultTypeList = [\r\n    {\r\n      label: '类型1',\r\n      value: 1,\r\n    },\r\n    {\r\n      label: '类型2',\r\n      value: 2,\r\n    },\r\n    {\r\n      label: '类型3',\r\n      value: 3,\r\n    },\r\n  ]\r\n\r\n  // 故障等级列表\r\n  private faultLevelList = [\r\n    {\r\n      label: '一般',\r\n      value: 1,\r\n    },\r\n    {\r\n      label: '重要',\r\n      value: 2,\r\n    },\r\n    {\r\n      label: '紧急',\r\n      value: 3,\r\n    },\r\n  ]\r\n\r\n\r\n  \r\n  // 任务状态列表\r\n  private taskStatusList = [\r\n    {\r\n      label: '执行中',\r\n      value: 1,\r\n    },\r\n    {\r\n      label: '待验收',\r\n      value: 2,\r\n    },\r\n    {\r\n      label: '已验收',\r\n      value: 3,\r\n    },\r\n    {\r\n      label: '已销号',\r\n      value: 4,\r\n    },\r\n    {\r\n      label: '被驳回',\r\n      value: 5,\r\n    }\r\n  ]\r\n\r\n  private faultStatusList = [\r\n  {\r\n        label: '全部审核单',\r\n        value: 0\r\n      },\r\n      {\r\n        label: '待班组长审核',\r\n        value: 1\r\n      },\r\n      {\r\n        label: '待工区长审核',\r\n        value: 2\r\n      },\r\n      {\r\n        label: '待主任签字',\r\n        value: 3\r\n      },\r\n      {\r\n        label: '已完成',\r\n        value: 4\r\n      }\r\n    \r\n  ]\r\n  \r\n  // 工区列表（示例数据）\r\n  private areaList = [\r\n    { id: 1, name: '工区A' },\r\n    { id: 2, name: '工区B' },\r\n    { id: 3, name: '工区C' }\r\n  ]\r\n  \r\n  // 班组列表（示例数据）\r\n  private teamList = [\r\n    { id: 1, name: '班组A' },\r\n    { id: 2, name: '班组B' },\r\n    { id: 3, name: '班组C' }\r\n  ]\r\n\r\n  created() {\r\n    this.init(Number(this.$route.query.status) || 0)\r\n  }\r\n\r\n  mounted() {\r\n    if (\r\n      this.$route.query.faultId &&\r\n      this.$route.query.faultId !== 'undefined'\r\n    ) {\r\n      this.goDetail(this.$route.query.faultId, 2)\r\n    }\r\n    if (this.$route.query.status) {\r\n      this.defaultActivity = Number(this.$route.query.status)\r\n    }\r\n  }\r\n  \r\n  // 获取工区名称\r\n  private getAreaName(areaId: number): string {\r\n    const area = this.areaList.find(item => item.id === areaId)\r\n    return area ? area.name : '未知工区'\r\n  }\r\n  \r\n  // 获取班组名称\r\n  private getTeamName(teamId: number): string {\r\n    const team = this.teamList.find(item => item.id === teamId)\r\n    return team ? team.name : '未知班组'\r\n  }\r\n  \r\n  // 获取故障等级文本\r\n  private getFaultLevelText(level: number): string {\r\n    switch (level) {\r\n      case 1:\r\n        return '一般'\r\n      case 2:\r\n        return '重要'\r\n      case 3:\r\n        return '紧急'\r\n      default:\r\n        return '未知等级'\r\n    }\r\n  }\r\n  \r\n  // 获取故障类型\r\n  private getFaultType(row: any): string {\r\n    const type = this.faultTypeList.find(item => item.value === row.faultType)\r\n    return type ? type.label : '未知类型'\r\n  }\r\n  \r\n  // 获取故障等级\r\n  private getFaultLevel(row: any): string {\r\n    const level = this.faultLevelList.find(item => item.value === row.faultLevel)\r\n    return level ? level.label : '未知等级'\r\n  }\r\n  \r\n  // 获取故障状态\r\n  private getFaultStatus(row: any): string {\r\n    const status = this.faultStatusList.find(item => item.value === row.verifyStep)\r\n    return status ? status.label : '未知状态'\r\n  }\r\n\r\n  private formatDateToDay(dateTime: string): string {\r\n  if (!dateTime) return '';\r\n  return dateTime.split(' ')[0]; // 直接取空格前的日期部分\r\n  // 或者使用更精确的方式：\r\n  // return new Date(dateTime).toISOString().split('T')[0];\r\n}\r\n  \r\n  \r\n  // 初始化数据\r\n  private init(status: number, isSearch: boolean = false) {\r\n    this.faultStatus = status\r\n    this.isSearch = isSearch\r\n    const params = {\r\n      page: this.page,\r\n      pageSize: this.pageSize,\r\n      deviceName: this.deviceName,\r\n      faultType: this.faultType || null,\r\n      startTime: this.valueTime && this.valueTime.length ? this.valueTime[0] : null,\r\n      completeTime: this.valueTime && this.valueTime.length ? this.valueTime[1] : null,\r\n      auditStatus: this.faultStatus === 0? undefined : status,\r\n      //verifyStep: status === 0 ? undefined : status,\r\n    }\r\n    \r\n    getFaultVerifyList(params).then(res => {\r\n      if (res.data.code === 1) {\r\n\r\n        this.tableData = res.data.data.records || 0\r\n        this.counts = res.data.total\r\n      } else {\r\n        this.$message.error(res.data.msg || '获取数据失败')\r\n      }\r\n    }).catch(() => {\r\n      // 模拟数据，实际开发中可删除\r\n      this.$message.error('未知错误请联系管理员')\r\n    })\r\n  }\r\n  \r\n  // 初始化函数（用于回车搜索）\r\n  private initFun(status: number) {\r\n    this.init(status, true)\r\n  }\r\n  \r\n  //管理标签页点击事件\r\n  change(activeIndex) {\r\n    if (activeIndex === this.faultStatus) return\r\n    this.init(activeIndex)\r\n    this.valueTime = []\r\n    //this.dialogPurchaseStatus = 0\r\n    this.$router.push('/director/deviceReview/faultClear')\r\n    console.log(activeIndex, '接收到了子组件的index')\r\n  }\r\n\r\n  \r\n  // 处理页码变化\r\n  private handleCurrentChange(val: number) {\r\n    this.page = val\r\n    this.init(this.faultStatus)\r\n  }\r\n  \r\n  // 处理每页条数变化\r\n  private handleSizeChange(val: number) {\r\n    this.pageSize = val\r\n    this.page = 1\r\n    this.init(this.faultStatus)\r\n  }\r\n  \r\n  // 关闭弹窗\r\n  private handleClose() {\r\n    this.dialogVisible = false\r\n  }\r\n  \r\n  \r\n  \r\n  // 查看详情\r\n  private goDetail(faultId: string, verifyStep: number, row: any = {}) {\r\n    this.row = row\r\n    this.dialogFaultStatus = verifyStep\r\n    this.dialogVisible = true\r\n    \r\n    // 获取故障详情\r\n    queryFaultDetailById(faultId).then(res => {\r\n      if (res.data.code === 1) {\r\n        this.diaForm = res.data.data\r\n      } else {\r\n        this.$message.error(res.data.msg || '获取详情失败')\r\n      }\r\n    }).catch(() => {\r\n      // 模拟数据，实际开发中可删除\r\n      this.$message.error('未知错误请联系管理员')\r\n    })\r\n  }\r\n\r\n  private handleSign(faultId: string) {\r\n  this.currentFaultId = faultId\r\n  this.signDialogVisible = true\r\n  // 每次打开时重置签名状态\r\n  this.$nextTick(() => {\r\n    this.handleReset() // 确保每次打开都清空签名\r\n    this.satisfactionScore = 3 // 重置评分\r\n  })\r\n}\r\n\r\n// Add these methods:\r\n// 重设签名\r\nprivate handleReset() {\r\n  const esign = this.$refs.esign as any\r\n  if (esign) {\r\n    esign.reset() // 清除画布\r\n    this.signatureImg = '' // 清空预览\r\n  }\r\n}\r\n\r\n// 生成签名\r\nprivate handleGenerate() {\r\n  (this.$refs.esign as any).generate().then((res: string) => {\r\n    this.signatureImg = res\r\n  }).catch(() => {\r\n    this.$message.error('请先签名')\r\n  })\r\n}\r\n\r\n// 提交签名和满意度\r\nprivate async submitSign() {\r\n  if (!this.signatureImg) {\r\n    this.$message.warning('请先完成签名')\r\n    return\r\n  }\r\n\r\n  try {\r\n    const params = {\r\n      faultId: this.currentFaultId,\r\n      satisfactionScore: this.satisfactionScore,\r\n      signature: this.signatureImg\r\n    }\r\n\r\n\r\n    const res = await submitFaultVerify(params)\r\n    if (res.data.code === 1) {\r\n      this.$message.success('签字提交成功')\r\n      this.signDialogVisible = false\r\n      this.init(this.faultStatus) // 刷新列表\r\n     }\r\n    \r\n    console.log('提交的签字数据:', JSON.stringify(params))\r\n  } catch (error) {\r\n    this.$message.error('提交失败: ' + error.message)\r\n  }\r\n}\r\n\r\n// 打开审核详情弹窗\r\nprivate showAuditDetail(faultId: string) {\r\n    this.auditDialogVisible = true\r\n    this.loadAuditData(faultId)\r\n  }\r\n\r\n  // 加载审核数据\r\n  private loadAuditData(faultId: string) {\r\n    queryFaultVerifyDetailById(faultId).then(res => {\r\n      if (res.data.code === 1) {\r\n        this.auditForm = res.data.data\r\n      } else {\r\n        this.$message.error(res.data.msg || '获取审核详情失败')\r\n      }\r\n    }).catch(err => {\r\n      this.$message.error('获取审核详情出错: ' + err.message)\r\n    })\r\n  }\r\n\r\n  // 获取审核步骤文本\r\n  private getVerifyStepText(step: number): string {\r\n    switch (step) {\r\n      case 1: return '班组长审核'\r\n      case 2: return '工区长审核'\r\n      case 3: return '主管领导审核'\r\n      case 4: return '已完成'\r\n    }\r\n  }\r\n\r\n  // 获取步骤状态描述\r\n  private getStepDescription(step: number): string {\r\n    if (step < this.auditForm.verifyStep) {\r\n      return '已完成 - ' + this.auditForm.verifyTime\r\n    } else if (step === this.auditForm.verifyStep) {\r\n      return '进行中'\r\n    } else {\r\n      return '待处理'\r\n    }\r\n  }\r\n\r\n  // 获取当前激活的步骤\r\n  private getActiveStep(step: number): number {\r\n    return step || 0\r\n  }\r\n\r\n  // 获取状态样式类\r\n  private getStatusClass(step: number): string {\r\n    switch (step) {\r\n      case 1: return 'status1'\r\n      case 2: return 'status2'\r\n      case 3: return 'status3'\r\n      default: return 'status0'\r\n    }\r\n  }\r\n\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.dashboard-container {\r\n  padding: 20px;\r\n  \r\n  .container {\r\n    background: #fff;\r\n    position: relative;\r\n    z-index: 1;\r\n    margin-top: 20px;\r\n    border-radius: 4px;\r\n    padding: 28px 36px;\r\n    min-height: calc(100vh - 200px);\r\n    \r\n    .tableBar {\r\n      margin-bottom: 20px;\r\n      display: flex;\r\n      justify-content: flex-start;\r\n      align-items: center;\r\n      \r\n      .el-input {\r\n        margin-right: 10px;\r\n      }\r\n      \r\n      .el-button {\r\n        margin-left: 20px;\r\n      }\r\n    }\r\n    \r\n    .tableBox {\r\n      width: 100%;\r\n      margin-bottom: 20px;\r\n      \r\n      .el-table-column {\r\n        text-align: center;\r\n      }\r\n    }\r\n    \r\n    .pageList {\r\n      text-align: center;\r\n      margin-top: 20px;\r\n    }\r\n  }\r\n  \r\n  .order-dialog {\r\n    .order-top {\r\n      padding-bottom: 20px;\r\n      border-bottom: 1px solid #efefef;\r\n      \r\n      .order-num {\r\n        display: inline-block;\r\n        font-size: 20px;\r\n        color: #333;\r\n        margin-left: 10px;\r\n      }\r\n      \r\n      .order-status {\r\n        float: right;\r\n        padding: 5px 10px;\r\n        border-radius: 4px;\r\n        background-color: #409EFF;\r\n        color: #fff;\r\n      }\r\n    }\r\n    \r\n    .order-middle {\r\n      padding: 20px 0;\r\n      border-bottom: 1px solid #efefef;\r\n      \r\n      .dish-label {\r\n        font-size: 18px;\r\n        color: #333;\r\n        margin-bottom: 10px;\r\n        font-weight: bold;\r\n      }\r\n      \r\n      .user-info {\r\n        margin-bottom: 20px;\r\n        \r\n        .user-info-box {\r\n          display: flex;\r\n          flex-wrap: wrap;\r\n          \r\n          > div {\r\n            width: 50%;\r\n            margin-bottom: 10px;\r\n            \r\n            label {\r\n              color: #666;\r\n              margin-right: 10px;\r\n            }\r\n          }\r\n        }\r\n        \r\n        .user-remark {\r\n          margin-top: 10px;\r\n          \r\n          > div {\r\n            color: #666;\r\n            margin-bottom: 5px;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    .order-bottom {\r\n      padding-top: 20px;\r\n      \r\n      .amount-label {\r\n        font-size: 18px;\r\n        color: #333;\r\n        margin-bottom: 10px;\r\n        font-weight: bold;\r\n      }\r\n      \r\n      .amount-info {\r\n        .approver-time {\r\n          display: flex;\r\n          margin-bottom: 5px;\r\n          \r\n          > div {\r\n            color: #666;\r\n            margin-right: 10px;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  .cancelDialog {\r\n    .el-textarea {\r\n      width: 100%;\r\n    }\r\n  }\r\n}\r\n\r\n.operate {\r\n  min-width: 130px;\r\n}\r\n\r\n.otherOperate {\r\n  min-width: 140px;\r\n}\r\n\r\n.blueBug {\r\n  color: #409EFF;\r\n}\r\n\r\n.greenBug {\r\n  color: #67C23A;\r\n}\r\n\r\n.delBut {\r\n  color: #f56c6c;\r\n}\r\n\r\n.non {\r\n  margin-left: 0;\r\n}\r\n\r\n.before,\r\n.middle,\r\n.after {\r\n  display: inline-block;\r\n}\r\n.photo-container {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin-top: 10px;\r\n  \r\n  .photo-item {\r\n    width: 120px;\r\n    height: 120px;\r\n    margin-right: 10px;\r\n    margin-bottom: 10px;\r\n    border: 1px solid #eee;\r\n    overflow: hidden;\r\n    \r\n    img {\r\n      width: 100%;\r\n      height: 100%;\r\n      object-fit: cover;\r\n    }\r\n  }\r\n}\r\n.reviewer-section {\r\n  padding: 20px;\r\n  margin-bottom: 20px;\r\n  background: #f8f8f8;\r\n  border-radius: 4px;\r\n  \r\n  .reviewer-row {\r\n    display: flex;\r\n    margin-bottom: 15px;\r\n    \r\n    &:last-child {\r\n      margin-bottom: 0;\r\n    }\r\n  }\r\n  \r\n  .reviewer-item {\r\n    flex: 1;\r\n    display: flex;\r\n    align-items: center;\r\n    \r\n    label {\r\n      min-width: 80px;\r\n      color: #666;\r\n      font-weight: normal;\r\n      margin-right: 10px;\r\n    }\r\n    \r\n    div, span {\r\n      color: #333;\r\n      font-size: 14px;\r\n    }\r\n  }\r\n}\r\n\r\n.sign-section {\r\n  margin-top: 30px;\r\n  \r\n  .rate-section {\r\n    margin-bottom: 25px;\r\n    \r\n    label {\r\n      display: block;\r\n      margin-bottom: 10px;\r\n      color: #666;\r\n    }\r\n  }\r\n  \r\n  .sign-controls {\r\n    margin-bottom: 15px;\r\n    \r\n    label {\r\n      margin-right: 15px;\r\n      color: #666;\r\n    }\r\n    \r\n    .el-button {\r\n      margin-right: 10px;\r\n    }\r\n  }\r\n  \r\n  .sign-preview {\r\n    margin-top: 20px;\r\n    \r\n    label {\r\n      display: block;\r\n      margin-bottom: 10px;\r\n      color: #666;\r\n    }\r\n    \r\n    img {\r\n      max-width: 100%;\r\n      border: 1px solid #eee;\r\n      border-radius: 4px;\r\n    }\r\n  }\r\n}\r\n\r\n.dialog-footer {\r\n  margin-top: 20px;\r\n}\r\n\r\n.audit-dialog {\r\n  .audit-top {\r\n    padding-bottom: 20px;\r\n    border-bottom: 1px solid #efefef;\r\n    margin-bottom: 20px;\r\n    \r\n    .audit-num {\r\n      display: inline-block;\r\n      font-size: 20px;\r\n      color: #333;\r\n      margin-left: 10px;\r\n    }\r\n    \r\n    .audit-status {\r\n      float: right;\r\n      padding: 5px 10px;\r\n      border-radius: 4px;\r\n      color: #fff;\r\n      \r\n      &.status1 { background-color: #E6A23C; } // 班组长审核\r\n      &.status2 { background-color: #409EFF; } // 工区长审核\r\n      &.status3 { background-color: #67C23A; } // 主管领导审核\r\n      &.status0 { background-color: #909399; } // 未知状态\r\n    }\r\n    \r\n    p {\r\n      margin-top: 10px;\r\n      color: #666;\r\n    }\r\n  }\r\n  \r\n  .section-title {\r\n    font-size: 18px;\r\n    color: #333;\r\n    margin-bottom: 15px;\r\n    padding-bottom: 5px;\r\n    border-bottom: 1px solid #eee;\r\n    font-weight: bold;\r\n  }\r\n  \r\n  .audit-section {\r\n    margin-bottom: 25px;\r\n    \r\n    .audit-info-box {\r\n      background: #f8f8f8;\r\n      padding: 15px;\r\n      border-radius: 4px;\r\n      \r\n      .info-row {\r\n        display: flex;\r\n        margin-bottom: 10px;\r\n        \r\n        &:last-child {\r\n          margin-bottom: 0;\r\n        }\r\n      }\r\n      \r\n      .info-item {\r\n        flex: 1;\r\n        \r\n        label {\r\n          color: #666;\r\n          margin-right: 10px;\r\n        }\r\n        \r\n        &.full-width {\r\n          flex: 0 0 100%;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  .signature-section {\r\n    margin-bottom: 25px;\r\n    \r\n    .signature-box {\r\n      display: flex;\r\n      align-items: center;\r\n      background: #f8f8f8;\r\n      padding: 15px;\r\n      border-radius: 4px;\r\n      \r\n      .signature-img {\r\n        width: 200px;\r\n        height: 80px;\r\n        object-fit: contain;\r\n        border: 1px solid #ddd;\r\n        background: #fff;\r\n        margin-right: 20px;\r\n      }\r\n      \r\n      .signature-info {\r\n        p {\r\n          margin-bottom: 10px;\r\n          color: #666;\r\n          \r\n          &:last-child {\r\n            margin-bottom: 0;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  .process-section {\r\n    margin-bottom: 15px;\r\n    \r\n    ::v-deep .el-steps {\r\n      padding: 15px;\r\n      background: #f8f8f8;\r\n      border-radius: 4px;\r\n    }\r\n  }\r\n  \r\n  .dialog-footer {\r\n    text-align: center;\r\n    margin-top: 20px;\r\n  }\r\n}\r\n</style>"]}]}