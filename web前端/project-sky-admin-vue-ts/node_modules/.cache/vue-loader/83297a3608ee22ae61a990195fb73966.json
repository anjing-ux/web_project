{"remainingRequest":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\device-management\\project-sky-admin-vue-ts\\src\\views\\WarehouseManager\\dashboard\\index.vue?vue&type=script&lang=ts&","dependencies":[{"path":"G:\\device-management\\project-sky-admin-vue-ts\\src\\views\\WarehouseManager\\dashboard\\index.vue","mtime":1748452318000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport { Component, Vue } from 'vue-property-decorator';\r\nimport { getDashboardData, getChartData } from '@/api/charts';\r\nimport LineChart from './components/LineChart.vue';\r\nimport PieChart from './components/PieChart.vue';\r\n\r\n@Component({\r\n  name: 'Dashboard',\r\n  components: {\r\n    LineChart,\r\n    PieChart\r\n  }\r\n})\r\nexport default class extends Vue {\r\n  private statistics = {\r\n    totalDevices: 0,\r\n    inStockDevices: 0,\r\n    todayOutbound: 0,\r\n    pendingFault: 0\r\n  };\r\n\r\n  private chartDateRange = [];\r\n  private lineChartData = {\r\n    labels: [],\r\n    datasets: [\r\n      {\r\n        label: '入库数量',\r\n        data: [],\r\n        backgroundColor: '#409EFF',\r\n        borderColor: '#409EFF'\r\n      },\r\n      {\r\n        label: '出库数量',\r\n        data: [],\r\n        backgroundColor: '#67C23A',\r\n        borderColor: '#67C23A'\r\n      }\r\n    ]\r\n  };\r\n\r\n  private pieChartData = {\r\n    labels: [],\r\n    datasets: [\r\n      {\r\n        data: [],\r\n        backgroundColor: [\r\n          '#409EFF',\r\n          '#67C23A',\r\n          '#E6A23C',\r\n          '#F56C6C'\r\n        ]\r\n      }\r\n    ]\r\n  };\r\n\r\n  private recentInbound = [];\r\n  private pendingOutbound = [];\r\n\r\n  created() {\r\n    this.loadData();\r\n    this.loadChartData();\r\n  }\r\n\r\n  private async loadData() {\r\n    try {\r\n      const res = await getDashboardData();\r\n      if (res.data.code === 1) {\r\n        this.statistics = res.data.data.statistics;\r\n        this.recentInbound = res.data.data.recentInbound;\r\n        this.pendingOutbound = res.data.data.pendingOutbound;\r\n      }\r\n    } catch (err) {\r\n      this.$message.error('加载数据失败: ' + err.message);\r\n    }\r\n  }\r\n\r\n  private async loadChartData() {\r\n    try {\r\n      const params = {\r\n        startDate: this.chartDateRange && this.chartDateRange[0],\r\n        endDate: this.chartDateRange && this.chartDateRange[1]\r\n      };\r\n      \r\n      const res = await getChartData(params);\r\n      if (res.data.code === 1) {\r\n        this.lineChartData = {\r\n          labels: res.data.data.lineChart.labels,\r\n          datasets: [\r\n            {\r\n              label: '入库数量',\r\n              data: res.data.data.lineChart.inboundData,\r\n              backgroundColor: '#409EFF',\r\n              borderColor: '#409EFF'\r\n            },\r\n            {\r\n              label: '出库数量',\r\n              data: res.data.data.lineChart.outboundData,\r\n              backgroundColor: '#67C23A',\r\n              borderColor: '#67C23A'\r\n            }\r\n          ]\r\n        };\r\n\r\n        this.pieChartData = {\r\n          labels: res.data.data.pieChart.labels,\r\n          datasets: [\r\n            {\r\n              data: res.data.data.pieChart.data,\r\n              backgroundColor: [\r\n                '#409EFF',\r\n                '#67C23A',\r\n                '#E6A23C',\r\n                '#F56C6C'\r\n              ]\r\n            }\r\n          ]\r\n        };\r\n      }\r\n    } catch (err) {\r\n      this.$message.error('加载图表数据失败: ' + err.message);\r\n    }\r\n  }\r\n\r\n  private getEquipmentTypeName(type: number) {\r\n    const types = {\r\n      1: '客服设备',\r\n      2: '机电设备',\r\n      3: '消防设备',\r\n      4: '电梯设备'\r\n    };\r\n    return types[type] || '未知类型';\r\n  }\r\n\r\n  private goToInbound() {\r\n    this.$router.push(`/WarehouseManager/outbound`);\r\n  }\r\n\r\n  private goToOutbound() {\r\n    this.$router.push(`/WarehouseManager/inbound`);\r\n  }\r\n}\r\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"index.vue","sourceRoot":"src/views/WarehouseManager/dashboard","sourcesContent":["<template>\r\n  <div class=\"dashboard-container\">\r\n    <!-- 顶部统计卡片区域 -->\r\n    <el-row :gutter=\"20\" class=\"statistics-row\">\r\n      <el-col :span=\"6\">\r\n        <el-card shadow=\"hover\" class=\"stat-card\">\r\n          <div class=\"stat-content\">\r\n            <div class=\"stat-icon\" style=\"background-color: #409EFF;\">\r\n              <i class=\"el-icon-box\"></i>\r\n            </div>\r\n            <div class=\"stat-info\">\r\n              <div class=\"stat-title\">设备总数</div>\r\n              <div class=\"stat-value\">{{ statistics.totalDevices }}</div>\r\n            </div>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"6\">\r\n        <el-card shadow=\"hover\" class=\"stat-card\">\r\n          <div class=\"stat-content\">\r\n            <div class=\"stat-icon\" style=\"background-color: #67C23A;\">\r\n              <i class=\"el-icon-office-building\"></i>\r\n            </div>\r\n            <div class=\"stat-info\">\r\n              <div class=\"stat-title\">在库设备</div>\r\n              <div class=\"stat-value\">{{ statistics.inStockDevices }}</div>\r\n            </div>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"6\">\r\n        <el-card shadow=\"hover\" class=\"stat-card\">\r\n          <div class=\"stat-content\">\r\n            <div class=\"stat-icon\" style=\"background-color: #E6A23C;\">\r\n              <i class=\"el-icon-truck\"></i>\r\n            </div>\r\n            <div class=\"stat-info\">\r\n              <div class=\"stat-title\">今日出库</div>\r\n              <div class=\"stat-value\">{{ statistics.todayOutbound }}</div>\r\n            </div>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"6\">\r\n        <el-card shadow=\"hover\" class=\"stat-card\">\r\n          <div class=\"stat-content\">\r\n            <div class=\"stat-icon\" style=\"background-color: #F56C6C;\">\r\n              <i class=\"el-icon-warning-outline\"></i>\r\n            </div>\r\n            <div class=\"stat-info\">\r\n              <div class=\"stat-title\">故障设备</div>\r\n              <div class=\"stat-value\">{{ statistics.pendingFault }}</div>\r\n            </div>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <!-- 中间图表区域 -->\r\n    <el-row :gutter=\"20\" class=\"chart-row\">\r\n      <el-col :span=\"16\">\r\n        <el-card shadow=\"hover\" class=\"chart-card\">\r\n          <div slot=\"header\" class=\"chart-header\">\r\n            <span>设备出入库趋势</span>\r\n            <el-date-picker\r\n              v-model=\"chartDateRange\"\r\n              type=\"monthrange\"\r\n              range-separator=\"至\"\r\n              start-placeholder=\"开始月份\"\r\n              end-placeholder=\"结束月份\"\r\n              value-format=\"yyyy-MM\"\r\n              @change=\"loadChartData\"\r\n              style=\"width: 300px; margin-left: auto;\"\r\n            />\r\n          </div>\r\n          <div class=\"chart-container\">\r\n            <line-chart :chart-data=\"lineChartData\" v-if=\"lineChartData.labels.length > 0\" />\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"8\">\r\n        <el-card shadow=\"hover\" class=\"chart-card\">\r\n          <div slot=\"header\" class=\"chart-header\">\r\n            <span>设备类型分布</span>\r\n          </div>\r\n          <div class=\"chart-container\">\r\n            <pie-chart :chart-data=\"pieChartData\" v-if=\"pieChartData.labels.length > 0\" />\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <!-- 底部表格区域 -->\r\n    <el-row :gutter=\"20\" class=\"table-row\">\r\n      <el-col :span=\"12\">\r\n        <el-card shadow=\"hover\" class=\"table-card\">\r\n          <div slot=\"header\" class=\"table-header\">\r\n            <span>待入库设备</span>\r\n            <el-button type=\"text\" @click=\"goToInbound()\">查看更多</el-button>\r\n          </div>\r\n          <el-table\r\n            :data=\"recentInbound\"\r\n            style=\"width: 100%\"\r\n            height=\"300\"\r\n            :show-header=\"true\"\r\n            :border=\"false\"\r\n          >\r\n            <el-table-column prop=\"equipmentName\" label=\"设备名称\" width=\"120\" />\r\n            <el-table-column prop=\"equipmentType\" label=\"类型\" width=\"80\">\r\n              <template slot-scope=\"{row}\">\r\n                {{ getEquipmentTypeName(row.equipmentType) }}\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"quantity\" label=\"数量\" width=\"60\" />\r\n            <el-table-column prop=\"inboundDate\" label=\"入库时间\" width=\"140\" />\r\n            <el-table-column prop=\"operator\" label=\"操作人\" width=\"80\" />\r\n          </el-table>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"12\">\r\n        <el-card shadow=\"hover\" class=\"table-card\">\r\n          <div slot=\"header\" class=\"table-header\">\r\n            <span>待出库申请</span>\r\n            <el-button type=\"text\" @click=\"goToOutbound()\">查看更多</el-button>\r\n          </div>\r\n          <el-table\r\n            :data=\"pendingOutbound\"\r\n            style=\"width: 100%\"\r\n            height=\"300\"\r\n            :show-header=\"true\"\r\n            :border=\"false\"\r\n          >\r\n            <el-table-column prop=\"requestCode\" label=\"申请编号\" width=\"120\" />\r\n            <el-table-column prop=\"equipmentName\" label=\"设备名称\" width=\"100\" />\r\n            <el-table-column prop=\"quantity\" label=\"数量\" width=\"60\" />\r\n            <el-table-column prop=\"applicant\" label=\"申请人\" width=\"80\" />\r\n            <el-table-column prop=\"plannedOutboundDate\" label=\"计划出库\" width=\"120\" />\r\n          </el-table>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Vue } from 'vue-property-decorator';\r\nimport { getDashboardData, getChartData } from '@/api/charts';\r\nimport LineChart from './components/LineChart.vue';\r\nimport PieChart from './components/PieChart.vue';\r\n\r\n@Component({\r\n  name: 'Dashboard',\r\n  components: {\r\n    LineChart,\r\n    PieChart\r\n  }\r\n})\r\nexport default class extends Vue {\r\n  private statistics = {\r\n    totalDevices: 0,\r\n    inStockDevices: 0,\r\n    todayOutbound: 0,\r\n    pendingFault: 0\r\n  };\r\n\r\n  private chartDateRange = [];\r\n  private lineChartData = {\r\n    labels: [],\r\n    datasets: [\r\n      {\r\n        label: '入库数量',\r\n        data: [],\r\n        backgroundColor: '#409EFF',\r\n        borderColor: '#409EFF'\r\n      },\r\n      {\r\n        label: '出库数量',\r\n        data: [],\r\n        backgroundColor: '#67C23A',\r\n        borderColor: '#67C23A'\r\n      }\r\n    ]\r\n  };\r\n\r\n  private pieChartData = {\r\n    labels: [],\r\n    datasets: [\r\n      {\r\n        data: [],\r\n        backgroundColor: [\r\n          '#409EFF',\r\n          '#67C23A',\r\n          '#E6A23C',\r\n          '#F56C6C'\r\n        ]\r\n      }\r\n    ]\r\n  };\r\n\r\n  private recentInbound = [];\r\n  private pendingOutbound = [];\r\n\r\n  created() {\r\n    this.loadData();\r\n    this.loadChartData();\r\n  }\r\n\r\n  private async loadData() {\r\n    try {\r\n      const res = await getDashboardData();\r\n      if (res.data.code === 1) {\r\n        this.statistics = res.data.data.statistics;\r\n        this.recentInbound = res.data.data.recentInbound;\r\n        this.pendingOutbound = res.data.data.pendingOutbound;\r\n      }\r\n    } catch (err) {\r\n      this.$message.error('加载数据失败: ' + err.message);\r\n    }\r\n  }\r\n\r\n  private async loadChartData() {\r\n    try {\r\n      const params = {\r\n        startDate: this.chartDateRange && this.chartDateRange[0],\r\n        endDate: this.chartDateRange && this.chartDateRange[1]\r\n      };\r\n      \r\n      const res = await getChartData(params);\r\n      if (res.data.code === 1) {\r\n        this.lineChartData = {\r\n          labels: res.data.data.lineChart.labels,\r\n          datasets: [\r\n            {\r\n              label: '入库数量',\r\n              data: res.data.data.lineChart.inboundData,\r\n              backgroundColor: '#409EFF',\r\n              borderColor: '#409EFF'\r\n            },\r\n            {\r\n              label: '出库数量',\r\n              data: res.data.data.lineChart.outboundData,\r\n              backgroundColor: '#67C23A',\r\n              borderColor: '#67C23A'\r\n            }\r\n          ]\r\n        };\r\n\r\n        this.pieChartData = {\r\n          labels: res.data.data.pieChart.labels,\r\n          datasets: [\r\n            {\r\n              data: res.data.data.pieChart.data,\r\n              backgroundColor: [\r\n                '#409EFF',\r\n                '#67C23A',\r\n                '#E6A23C',\r\n                '#F56C6C'\r\n              ]\r\n            }\r\n          ]\r\n        };\r\n      }\r\n    } catch (err) {\r\n      this.$message.error('加载图表数据失败: ' + err.message);\r\n    }\r\n  }\r\n\r\n  private getEquipmentTypeName(type: number) {\r\n    const types = {\r\n      1: '客服设备',\r\n      2: '机电设备',\r\n      3: '消防设备',\r\n      4: '电梯设备'\r\n    };\r\n    return types[type] || '未知类型';\r\n  }\r\n\r\n  private goToInbound() {\r\n    this.$router.push(`/WarehouseManager/outbound`);\r\n  }\r\n\r\n  private goToOutbound() {\r\n    this.$router.push(`/WarehouseManager/inbound`);\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.dashboard-container {\r\n  padding: 20px;\r\n  background-color: #f0f2f5;\r\n  \r\n  .statistics-row {\r\n    margin-bottom: 20px;\r\n    \r\n    .stat-card {\r\n      border-radius: 4px;\r\n      \r\n      .stat-content {\r\n        display: flex;\r\n        align-items: center;\r\n        \r\n        .stat-icon {\r\n          width: 60px;\r\n          height: 60px;\r\n          border-radius: 50%;\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          color: white;\r\n          font-size: 24px;\r\n          margin-right: 20px;\r\n        }\r\n        \r\n        .stat-info {\r\n          flex: 1;\r\n          \r\n          .stat-title {\r\n            font-size: 14px;\r\n            color: #909399;\r\n            margin-bottom: 5px;\r\n          }\r\n          \r\n          .stat-value {\r\n            font-size: 24px;\r\n            font-weight: bold;\r\n            color: #303133;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  .chart-row {\r\n    margin-bottom: 20px;\r\n    \r\n    .chart-card {\r\n      border-radius: 4px;\r\n      \r\n      .chart-header {\r\n        display: flex;\r\n        align-items: center;\r\n        font-size: 16px;\r\n        font-weight: bold;\r\n      }\r\n      \r\n      .chart-container {\r\n        height: 300px;\r\n      }\r\n    }\r\n  }\r\n  \r\n  .table-row {\r\n    .table-card {\r\n      border-radius: 4px;\r\n      \r\n      .table-header {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        font-size: 16px;\r\n        font-weight: bold;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>"]}]}