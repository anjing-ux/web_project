{"remainingRequest":"D:\\my_web_project\\web实验作业\\源代码文件\\源代码文件\\web前端\\project-sky-admin-vue-ts\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\my_web_project\\web实验作业\\源代码文件\\源代码文件\\web前端\\project-sky-admin-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\my_web_project\\web实验作业\\源代码文件\\源代码文件\\web前端\\project-sky-admin-vue-ts\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\my_web_project\\web实验作业\\源代码文件\\源代码文件\\web前端\\project-sky-admin-vue-ts\\src\\views\\director\\device\\deviceRecord.vue?vue&type=template&id=582cd0f7&scoped=true&","dependencies":[{"path":"D:\\my_web_project\\web实验作业\\源代码文件\\源代码文件\\web前端\\project-sky-admin-vue-ts\\src\\views\\director\\device\\deviceRecord.vue","mtime":1747908670000},{"path":"D:\\my_web_project\\web实验作业\\源代码文件\\源代码文件\\web前端\\project-sky-admin-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\my_web_project\\web实验作业\\源代码文件\\源代码文件\\web前端\\project-sky-admin-vue-ts\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\my_web_project\\web实验作业\\源代码文件\\源代码文件\\web前端\\project-sky-admin-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\my_web_project\\web实验作业\\源代码文件\\源代码文件\\web前端\\project-sky-admin-vue-ts\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"dashboard-container\" },\n    [\n      _c(\n        \"div\",\n        { staticClass: \"container\" },\n        [\n          _c(\n            \"div\",\n            { staticClass: \"header-info\" },\n            [\n              _c(\"div\", { staticClass: \"title\" }, [_vm._v(\"设备履历\")]),\n              _vm.deviceInfo\n                ? _c(\"div\", { staticClass: \"device-info\" }, [\n                    _c(\"p\", [\n                      _c(\"strong\", [_vm._v(\"设备ID：\")]),\n                      _vm._v(_vm._s(_vm.deviceInfo.deviceId))\n                    ]),\n                    _c(\"p\", [\n                      _c(\"strong\", [_vm._v(\"设备编号：\")]),\n                      _vm._v(_vm._s(_vm.deviceInfo.deviceCode))\n                    ]),\n                    _c(\"p\", [\n                      _c(\"strong\", [_vm._v(\"设备名称：\")]),\n                      _vm._v(_vm._s(_vm.deviceInfo.deviceName))\n                    ]),\n                    _c(\"p\", [\n                      _c(\"strong\", [_vm._v(\"设备类型：\")]),\n                      _vm._v(_vm._s(_vm.deviceInfo.deviceType))\n                    ])\n                  ])\n                : _vm._e(),\n              _c(\n                \"el-button\",\n                { attrs: { type: \"primary\" }, on: { click: _vm.goBack } },\n                [_vm._v(\"返回设备列表\")]\n              )\n            ],\n            1\n          ),\n          _c(\n            \"div\",\n            { staticClass: \"tableBar\" },\n            [\n              _c(\"label\", { staticStyle: { \"margin-right\": \"10px\" } }, [\n                _vm._v(\"事件类型：\")\n              ]),\n              _c(\n                \"el-select\",\n                {\n                  staticStyle: { width: \"14%\" },\n                  attrs: { placeholder: \"请选择\", clearable: \"\" },\n                  on: { clear: _vm.init },\n                  model: {\n                    value: _vm.eventType,\n                    callback: function($$v) {\n                      _vm.eventType = $$v\n                    },\n                    expression: \"eventType\"\n                  }\n                },\n                [\n                  _c(\"el-option\", { attrs: { label: \"采购\", value: 1 } }),\n                  _c(\"el-option\", { attrs: { label: \"出库安装\", value: 2 } }),\n                  _c(\"el-option\", { attrs: { label: \"维修\", value: 3 } }),\n                  _c(\"el-option\", { attrs: { label: \"保养\", value: 4 } }),\n                  _c(\"el-option\", { attrs: { label: \"检测\", value: 5 } }),\n                  _c(\"el-option\", { attrs: { label: \"巡检\", value: 6 } }),\n                  _c(\"el-option\", { attrs: { label: \"变更\", value: 7 } }),\n                  _c(\"el-option\", { attrs: { label: \"报废\", value: 8 } })\n                ],\n                1\n              ),\n              _c(\"label\", { staticStyle: { \"margin-left\": \"20px\" } }, [\n                _vm._v(\"事件时间：\")\n              ]),\n              _c(\"el-date-picker\", {\n                staticStyle: { width: \"25%\", \"margin-left\": \"10px\" },\n                attrs: {\n                  clearable: \"\",\n                  \"value-format\": \"yyyy-MM-dd HH:mm:ss\",\n                  \"range-separator\": \"至\",\n                  \"default-time\": [\"00:00:00\", \"23:59:59\"],\n                  type: \"daterange\",\n                  \"start-placeholder\": \"开始日期\",\n                  \"end-placeholder\": \"结束日期\"\n                },\n                on: { clear: _vm.init },\n                model: {\n                  value: _vm.eventTime,\n                  callback: function($$v) {\n                    _vm.eventTime = $$v\n                  },\n                  expression: \"eventTime\"\n                }\n              }),\n              _c(\n                \"el-button\",\n                {\n                  staticClass: \"normal-btn continue\",\n                  on: {\n                    click: function($event) {\n                      return _vm.init(true)\n                    }\n                  }\n                },\n                [_vm._v(\"\\n        查询\\n      \")]\n              )\n            ],\n            1\n          ),\n          _vm.tableData.length\n            ? _c(\n                \"el-table\",\n                {\n                  staticClass: \"tableBox\",\n                  attrs: { data: _vm.tableData, stripe: \"\" }\n                },\n                [\n                  _c(\"el-table-column\", {\n                    attrs: { prop: \"resumeId\", label: \"履历ID\" }\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: { prop: \"eventType\", label: \"事件类型\" },\n                    scopedSlots: _vm._u(\n                      [\n                        {\n                          key: \"default\",\n                          fn: function(scope) {\n                            return [\n                              _c(\"span\", [\n                                _vm._v(\n                                  _vm._s(\n                                    _vm.getEventTypeText(scope.row.eventType)\n                                  )\n                                )\n                              ])\n                            ]\n                          }\n                        }\n                      ],\n                      null,\n                      false,\n                      983456972\n                    )\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: { prop: \"eventTime\", label: \"事件时间\" }\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      prop: \"eventDesc\",\n                      label: \"事件描述\",\n                      \"show-overflow-tooltip\": \"\"\n                    }\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: { prop: \"operatorName\", label: \"操作人\" }\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: { prop: \"createTime\", label: \"创建时间\" }\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: { label: \"操作\", width: \"150\", align: \"center\" },\n                    scopedSlots: _vm._u(\n                      [\n                        {\n                          key: \"default\",\n                          fn: function(scope) {\n                            return [\n                              _c(\n                                \"el-button\",\n                                {\n                                  staticClass: \"blueBug\",\n                                  attrs: { type: \"text\", size: \"small\" },\n                                  on: {\n                                    click: function($event) {\n                                      return _vm.viewDetail(scope.row)\n                                    }\n                                  }\n                                },\n                                [_vm._v(\"\\n            查看详情\\n          \")]\n                              )\n                            ]\n                          }\n                        }\n                      ],\n                      null,\n                      false,\n                      459621890\n                    )\n                  })\n                ],\n                1\n              )\n            : _c(\"Empty\", { attrs: { \"is-search\": _vm.isSearch } }),\n          _vm.counts > 10\n            ? _c(\"el-pagination\", {\n                staticClass: \"pageList\",\n                attrs: {\n                  \"page-sizes\": [10, 20, 30, 40],\n                  \"page-size\": _vm.pageSize,\n                  layout: \"total, sizes, prev, pager, next, jumper\",\n                  total: _vm.counts\n                },\n                on: {\n                  \"size-change\": _vm.handleSizeChange,\n                  \"current-change\": _vm.handleCurrentChange\n                }\n              })\n            : _vm._e()\n        ],\n        1\n      ),\n      _c(\n        \"el-dialog\",\n        {\n          attrs: {\n            title: \"履历详情\",\n            visible: _vm.detailDialog,\n            width: \"50%\",\n            \"before-close\": _vm.handleClose\n          },\n          on: {\n            \"update:visible\": function($event) {\n              _vm.detailDialog = $event\n            }\n          }\n        },\n        [\n          _c(\"div\", { staticClass: \"detail-content\" }, [\n            _c(\"div\", { staticClass: \"detail-item\" }, [\n              _c(\"label\", [_vm._v(\"履历ID：\")]),\n              _c(\"span\", [_vm._v(_vm._s(_vm.detailForm.resumeId))])\n            ]),\n            _c(\"div\", { staticClass: \"detail-item\" }, [\n              _c(\"label\", [_vm._v(\"设备ID：\")]),\n              _c(\"span\", [_vm._v(_vm._s(_vm.detailForm.deviceId))])\n            ]),\n            _c(\"div\", { staticClass: \"detail-item\" }, [\n              _c(\"label\", [_vm._v(\"事件类型：\")]),\n              _c(\"span\", [\n                _vm._v(_vm._s(_vm.getEventTypeText(_vm.detailForm.eventType)))\n              ])\n            ]),\n            _c(\"div\", { staticClass: \"detail-item\" }, [\n              _c(\"label\", [_vm._v(\"事件时间：\")]),\n              _c(\"span\", [_vm._v(_vm._s(_vm.detailForm.eventTime))])\n            ]),\n            _c(\"div\", { staticClass: \"detail-item\" }, [\n              _c(\"label\", [_vm._v(\"事件描述：\")]),\n              _c(\"span\", [_vm._v(_vm._s(_vm.detailForm.eventDesc))])\n            ]),\n            _c(\"div\", { staticClass: \"detail-item\" }, [\n              _c(\"label\", [_vm._v(\"操作人ID：\")]),\n              _c(\"span\", [_vm._v(_vm._s(_vm.detailForm.operatorId))])\n            ]),\n            _c(\"div\", { staticClass: \"detail-item\" }, [\n              _c(\"label\", [_vm._v(\"操作人姓名：\")]),\n              _c(\"span\", [_vm._v(_vm._s(_vm.detailForm.operatorName))])\n            ]),\n            _c(\"div\", { staticClass: \"detail-item\" }, [\n              _c(\"label\", [_vm._v(\"工区ID：\")]),\n              _c(\"span\", [_vm._v(_vm._s(_vm.detailForm.areaId))])\n            ]),\n            _c(\"div\", { staticClass: \"detail-item\" }, [\n              _c(\"label\", [_vm._v(\"班组ID：\")]),\n              _c(\"span\", [_vm._v(_vm._s(_vm.detailForm.teamId))])\n            ]),\n            _c(\"div\", { staticClass: \"detail-item\" }, [\n              _c(\"label\", [_vm._v(\"创建时间：\")]),\n              _c(\"span\", [_vm._v(_vm._s(_vm.detailForm.createTime))])\n            ])\n          ])\n        ]\n      ),\n      _c(\n        \"el-dialog\",\n        {\n          attrs: {\n            title: \"添加履历记录\",\n            visible: _vm.addDialog,\n            width: \"50%\",\n            \"before-close\": _vm.handleAddClose\n          },\n          on: {\n            \"update:visible\": function($event) {\n              _vm.addDialog = $event\n            }\n          }\n        },\n        [\n          _c(\n            \"el-form\",\n            {\n              ref: \"addFormRef\",\n              attrs: {\n                model: _vm.addForm,\n                rules: _vm.rules,\n                \"label-width\": \"100px\"\n              }\n            },\n            [\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"事件类型\", prop: \"eventType\" } },\n                [\n                  _c(\n                    \"el-select\",\n                    {\n                      attrs: { placeholder: \"请选择事件类型\" },\n                      model: {\n                        value: _vm.addForm.eventType,\n                        callback: function($$v) {\n                          _vm.$set(_vm.addForm, \"eventType\", $$v)\n                        },\n                        expression: \"addForm.eventType\"\n                      }\n                    },\n                    [\n                      _c(\"el-option\", { attrs: { label: \"采购\", value: 1 } }),\n                      _c(\"el-option\", { attrs: { label: \"安装\", value: 2 } }),\n                      _c(\"el-option\", { attrs: { label: \"维修\", value: 3 } }),\n                      _c(\"el-option\", { attrs: { label: \"保养\", value: 4 } }),\n                      _c(\"el-option\", { attrs: { label: \"检测\", value: 5 } }),\n                      _c(\"el-option\", { attrs: { label: \"巡检\", value: 6 } }),\n                      _c(\"el-option\", { attrs: { label: \"变更\", value: 7 } }),\n                      _c(\"el-option\", { attrs: { label: \"报废\", value: 8 } })\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"事件时间\", prop: \"eventTime\" } },\n                [\n                  _c(\"el-date-picker\", {\n                    attrs: {\n                      type: \"datetime\",\n                      placeholder: \"选择事件时间\",\n                      \"value-format\": \"yyyy-MM-dd HH:mm:ss\"\n                    },\n                    model: {\n                      value: _vm.addForm.eventTime,\n                      callback: function($$v) {\n                        _vm.$set(_vm.addForm, \"eventTime\", $$v)\n                      },\n                      expression: \"addForm.eventTime\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"事件描述\", prop: \"eventDesc\" } },\n                [\n                  _c(\"el-input\", {\n                    attrs: {\n                      type: \"textarea\",\n                      rows: 3,\n                      placeholder: \"请输入事件描述\"\n                    },\n                    model: {\n                      value: _vm.addForm.eventDesc,\n                      callback: function($$v) {\n                        _vm.$set(_vm.addForm, \"eventDesc\", $$v)\n                      },\n                      expression: \"addForm.eventDesc\"\n                    }\n                  })\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _c(\n            \"div\",\n            {\n              staticClass: \"dialog-footer\",\n              attrs: { slot: \"footer\" },\n              slot: \"footer\"\n            },\n            [\n              _c(\"el-button\", { on: { click: _vm.handleAddClose } }, [\n                _vm._v(\"取 消\")\n              ]),\n              _c(\n                \"el-button\",\n                {\n                  attrs: { type: \"primary\" },\n                  on: { click: _vm.submitAddForm }\n                },\n                [_vm._v(\"确 定\")]\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}