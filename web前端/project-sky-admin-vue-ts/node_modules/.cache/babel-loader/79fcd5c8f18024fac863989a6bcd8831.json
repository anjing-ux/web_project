{"remainingRequest":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\vue-esign\\src\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\vue-esign\\src\\index.vue","mtime":499162500000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\babel.config.js","mtime":1652756116000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/toConsumableArray\"));\nrequire(\"core-js/modules/es6.number.constructor\");\n//\n//\n//\n//\n//\nvar _default = exports.default = {\n  props: {\n    width: {\n      type: Number,\n      default: 800\n    },\n    height: {\n      type: Number,\n      default: 300\n    },\n    lineWidth: {\n      type: Number,\n      default: 4\n    },\n    lineColor: {\n      type: String,\n      default: '#000000'\n    },\n    bgColor: {\n      type: String,\n      default: ''\n    },\n    isCrop: {\n      type: Boolean,\n      default: false\n    },\n    isClearBgColor: {\n      type: Boolean,\n      default: true\n    },\n    format: {\n      type: String,\n      default: 'image/png'\n    },\n    quality: {\n      type: Number,\n      default: 1\n    }\n  },\n  data: function data() {\n    return {\n      hasDrew: false,\n      resultImg: '',\n      points: [],\n      canvasTxt: null,\n      startX: 0,\n      startY: 0,\n      isDrawing: false,\n      sratio: 1\n    };\n  },\n  computed: {\n    ratio: function ratio() {\n      return this.height / this.width;\n    },\n    stageInfo: function stageInfo() {\n      return this.$refs.canvas.getBoundingClientRect();\n    },\n    myBg: function myBg() {\n      return this.bgColor ? this.bgColor : 'rgba(255, 255, 255, 0)';\n    }\n  },\n  watch: {\n    'myBg': function myBg(newVal) {\n      this.$refs.canvas.style.background = newVal;\n    }\n  },\n  beforeMount: function beforeMount() {\n    window.addEventListener('resize', this.$_resizeHandler);\n  },\n  beforeDestroy: function beforeDestroy() {\n    window.removeEventListener('resize', this.$_resizeHandler);\n  },\n  mounted: function mounted() {\n    var _this = this;\n    var canvas = this.$refs.canvas;\n    canvas.height = this.height;\n    canvas.width = this.width;\n    canvas.style.background = this.myBg;\n    this.$_resizeHandler();\n    // 在画板以外松开鼠标后冻结画笔\n    document.onmouseup = function () {\n      _this.isDrawing = false;\n    };\n  },\n  methods: {\n    $_resizeHandler: function $_resizeHandler() {\n      var canvas = this.$refs.canvas;\n      canvas.style.width = this.width + \"px\";\n      var realw = parseFloat(window.getComputedStyle(canvas).width);\n      canvas.style.height = this.ratio * realw + \"px\";\n      this.canvasTxt = canvas.getContext('2d');\n      this.canvasTxt.scale(1 * this.sratio, 1 * this.sratio);\n      this.sratio = realw / this.width;\n      this.canvasTxt.scale(1 / this.sratio, 1 / this.sratio);\n    },\n    // pc\n    mouseDown: function mouseDown(e) {\n      e = e || event;\n      e.preventDefault();\n      this.isDrawing = true;\n      this.hasDrew = true;\n      var obj = {\n        x: e.offsetX,\n        y: e.offsetY\n      };\n      this.drawStart(obj);\n    },\n    mouseMove: function mouseMove(e) {\n      e = e || event;\n      e.preventDefault();\n      if (this.isDrawing) {\n        var obj = {\n          x: e.offsetX,\n          y: e.offsetY\n        };\n        this.drawMove(obj);\n      }\n    },\n    mouseUp: function mouseUp(e) {\n      e = e || event;\n      e.preventDefault();\n      var obj = {\n        x: e.offsetX,\n        y: e.offsetY\n      };\n      this.drawEnd(obj);\n      this.isDrawing = false;\n    },\n    // mobile\n    touchStart: function touchStart(e) {\n      e = e || event;\n      e.preventDefault();\n      this.hasDrew = true;\n      if (e.touches.length === 1) {\n        var obj = {\n          x: e.targetTouches[0].clientX - this.$refs.canvas.getBoundingClientRect().left,\n          y: e.targetTouches[0].clientY - this.$refs.canvas.getBoundingClientRect().top\n        };\n        this.drawStart(obj);\n      }\n    },\n    touchMove: function touchMove(e) {\n      e = e || event;\n      e.preventDefault();\n      if (e.touches.length === 1) {\n        var obj = {\n          x: e.targetTouches[0].clientX - this.$refs.canvas.getBoundingClientRect().left,\n          y: e.targetTouches[0].clientY - this.$refs.canvas.getBoundingClientRect().top\n        };\n        this.drawMove(obj);\n      }\n    },\n    touchEnd: function touchEnd(e) {\n      e = e || event;\n      e.preventDefault();\n      if (e.touches.length === 1) {\n        var obj = {\n          x: e.targetTouches[0].clientX - this.$refs.canvas.getBoundingClientRect().left,\n          y: e.targetTouches[0].clientY - this.$refs.canvas.getBoundingClientRect().top\n        };\n        this.drawEnd(obj);\n      }\n    },\n    // 绘制\n    drawStart: function drawStart(obj) {\n      this.startX = obj.x;\n      this.startY = obj.y;\n      this.canvasTxt.beginPath();\n      this.canvasTxt.moveTo(this.startX, this.startY);\n      this.canvasTxt.lineTo(obj.x, obj.y);\n      this.canvasTxt.lineCap = 'round';\n      this.canvasTxt.lineJoin = 'round';\n      this.canvasTxt.lineWidth = this.lineWidth * this.sratio;\n      this.canvasTxt.stroke();\n      this.canvasTxt.closePath();\n      this.points.push(obj);\n    },\n    drawMove: function drawMove(obj) {\n      this.canvasTxt.beginPath();\n      this.canvasTxt.moveTo(this.startX, this.startY);\n      this.canvasTxt.lineTo(obj.x, obj.y);\n      this.canvasTxt.strokeStyle = this.lineColor;\n      this.canvasTxt.lineWidth = this.lineWidth * this.sratio;\n      this.canvasTxt.lineCap = 'round';\n      this.canvasTxt.lineJoin = 'round';\n      this.canvasTxt.stroke();\n      this.canvasTxt.closePath();\n      this.startY = obj.y;\n      this.startX = obj.x;\n      this.points.push(obj);\n    },\n    drawEnd: function drawEnd(obj) {\n      this.canvasTxt.beginPath();\n      this.canvasTxt.moveTo(this.startX, this.startY);\n      this.canvasTxt.lineTo(obj.x, obj.y);\n      this.canvasTxt.lineCap = 'round';\n      this.canvasTxt.lineJoin = 'round';\n      this.canvasTxt.stroke();\n      this.canvasTxt.closePath();\n      this.points.push(obj);\n      this.points.push({\n        x: -1,\n        y: -1\n      });\n    },\n    // 操作\n    generate: function generate(options) {\n      var _this2 = this;\n      var imgFormat = options && options.format ? options.format : this.format;\n      var imgQuality = options && options.quality ? options.quality : this.quality;\n      var pm = new Promise(function (resolve, reject) {\n        if (!_this2.hasDrew) {\n          reject(\"Warning: Not Signned!\");\n          return;\n        }\n        var resImgData = _this2.canvasTxt.getImageData(0, 0, _this2.$refs.canvas.width, _this2.$refs.canvas.height);\n        _this2.canvasTxt.globalCompositeOperation = \"destination-over\";\n        _this2.canvasTxt.fillStyle = _this2.myBg;\n        _this2.canvasTxt.fillRect(0, 0, _this2.$refs.canvas.width, _this2.$refs.canvas.height);\n        _this2.resultImg = _this2.$refs.canvas.toDataURL(imgFormat, imgQuality);\n        var resultImg = _this2.resultImg;\n        _this2.canvasTxt.clearRect(0, 0, _this2.$refs.canvas.width, _this2.$refs.canvas.height);\n        _this2.canvasTxt.putImageData(resImgData, 0, 0);\n        _this2.canvasTxt.globalCompositeOperation = \"source-over\";\n        if (_this2.isCrop) {\n          var _this2$canvasTxt;\n          var crop_area = _this2.getCropArea(resImgData.data);\n          var crop_canvas = document.createElement('canvas');\n          var crop_ctx = crop_canvas.getContext('2d');\n          crop_canvas.width = crop_area[2] - crop_area[0];\n          crop_canvas.height = crop_area[3] - crop_area[1];\n          var crop_imgData = (_this2$canvasTxt = _this2.canvasTxt).getImageData.apply(_this2$canvasTxt, (0, _toConsumableArray2.default)(crop_area));\n          crop_ctx.globalCompositeOperation = \"destination-over\";\n          crop_ctx.putImageData(crop_imgData, 0, 0);\n          crop_ctx.fillStyle = _this2.myBg;\n          crop_ctx.fillRect(0, 0, crop_canvas.width, crop_canvas.height);\n          resultImg = crop_canvas.toDataURL(imgFormat, imgQuality);\n          crop_canvas = null;\n        }\n        resolve(resultImg);\n      });\n      return pm;\n    },\n    reset: function reset() {\n      this.canvasTxt.clearRect(0, 0, this.$refs.canvas.width, this.$refs.canvas.height);\n      if (this.isClearBgColor) {\n        this.$emit('update:bgColor', '');\n        this.$refs.canvas.style.background = 'rgba(255, 255, 255, 0)';\n      }\n      this.points = [];\n      this.hasDrew = false;\n      this.resultImg = '';\n    },\n    getCropArea: function getCropArea(imgData) {\n      var topX = this.$refs.canvas.width;\n      var btmX = 0;\n      var topY = this.$refs.canvas.height;\n      var btnY = 0;\n      for (var i = 0; i < this.$refs.canvas.width; i++) {\n        for (var j = 0; j < this.$refs.canvas.height; j++) {\n          var pos = (i + this.$refs.canvas.width * j) * 4;\n          if (imgData[pos] > 0 || imgData[pos + 1] > 0 || imgData[pos + 2] || imgData[pos + 3] > 0) {\n            btnY = Math.max(j, btnY);\n            btmX = Math.max(i, btmX);\n            topY = Math.min(j, topY);\n            topX = Math.min(i, topX);\n          }\n        }\n      }\n      topX++;\n      btmX++;\n      topY++;\n      btnY++;\n      var data = [topX, topY, btmX, btnY];\n      return data;\n    }\n  }\n};",{"version":3,"names":["props","width","type","Number","default","height","lineWidth","lineColor","String","bgColor","isCrop","Boolean","isClearBgColor","format","quality","data","hasDrew","resultImg","points","canvasTxt","startX","startY","isDrawing","sratio","computed","ratio","stageInfo","$refs","canvas","getBoundingClientRect","myBg","watch","newVal","style","background","beforeMount","window","addEventListener","$_resizeHandler","beforeDestroy","removeEventListener","mounted","_this","document","onmouseup","methods","realw","parseFloat","getComputedStyle","getContext","scale","mouseDown","e","event","preventDefault","obj","x","offsetX","y","offsetY","drawStart","mouseMove","drawMove","mouseUp","drawEnd","touchStart","touches","length","targetTouches","clientX","left","clientY","top","touchMove","touchEnd","beginPath","moveTo","lineTo","lineCap","lineJoin","stroke","closePath","push","strokeStyle","generate","options","_this2","imgFormat","imgQuality","pm","Promise","resolve","reject","resImgData","getImageData","globalCompositeOperation","fillStyle","fillRect","toDataURL","clearRect","putImageData","_this2$canvasTxt","crop_area","getCropArea","crop_canvas","createElement","crop_ctx","crop_imgData","apply","_toConsumableArray2","reset","$emit","imgData","topX","btmX","topY","btnY","i","j","pos","Math","max","min"],"sources":["node_modules/vue-esign/src/index.vue"],"sourcesContent":["<template>\n  <canvas ref=\"canvas\" @mousedown=\"mouseDown\" @mousemove=\"mouseMove\" @mouseup=\"mouseUp\"\n  @touchstart=\"touchStart\" @touchmove=\"touchMove\" @touchend=\"touchEnd\"></canvas>\n</template>\n\n<script>\nexport default {\n  props: {\n    width: {\n      type: Number,\n      default: 800\n    },\n    height: {\n      type: Number,\n      default: 300\n    },\n    lineWidth: {\n      type: Number,\n      default: 4\n    },\n    lineColor: {\n      type: String,\n      default: '#000000'\n    },\n    bgColor: {\n      type: String,\n      default: ''\n    },\n    isCrop: {\n      type: Boolean,\n      default: false\n    },\n    isClearBgColor: {\n      type: Boolean,\n      default: true\n    },\n    format: {\n      type: String,\n      default: 'image/png'\n    },\n    quality: {\n      type: Number,\n      default: 1\n    }\n  },\n  data () {\n    return {\n      hasDrew: false,\n      resultImg: '',\n      points: [],\n      canvasTxt: null,\n      startX: 0,\n      startY: 0,\n      isDrawing: false,\n      sratio: 1\n    }\n  },\n  computed: {\n    ratio () {\n      return this.height / this.width\n    },\n    stageInfo () {\n      return this.$refs.canvas.getBoundingClientRect()\n    },\n    myBg () {\n      return this.bgColor ? this.bgColor : 'rgba(255, 255, 255, 0)'\n    }\n  },\n  watch: {\n    'myBg': function (newVal) {\n      this.$refs.canvas.style.background = newVal\n    }\n  },\n  beforeMount () {\n    window.addEventListener('resize', this.$_resizeHandler)\n  },\n  beforeDestroy () {\n    window.removeEventListener('resize', this.$_resizeHandler)\n  },\n  mounted () {\n    const canvas = this.$refs.canvas\n    canvas.height = this.height\n    canvas.width = this.width\n    canvas.style.background = this.myBg\n    this.$_resizeHandler()\n    // 在画板以外松开鼠标后冻结画笔\n    document.onmouseup = () => {\n      this.isDrawing = false\n    }\n  },\n  methods: {\n    $_resizeHandler () {\n      const canvas = this.$refs.canvas\n      canvas.style.width = this.width + \"px\"\n      const realw = parseFloat(window.getComputedStyle(canvas).width)\n      canvas.style.height = this.ratio * realw + \"px\";\n      this.canvasTxt = canvas.getContext('2d')\n      this.canvasTxt.scale(1 * this.sratio, 1 * this.sratio)\n      this.sratio = realw / this.width\n      this.canvasTxt.scale(1 / this.sratio, 1 / this.sratio)\n    },\n    // pc\n    mouseDown (e) {\n      e = e || event\n      e.preventDefault()\n      this.isDrawing = true\n      this.hasDrew = true\n      let obj = {\n        x: e.offsetX,\n        y: e.offsetY\n      }\n      this.drawStart(obj)\n    },\n    mouseMove (e) {\n      e = e || event\n      e.preventDefault()\n      if (this.isDrawing) {\n        let obj = {\n          x: e.offsetX,\n          y: e.offsetY\n        }\n        this.drawMove(obj)\n      }\n    },\n    mouseUp (e) {\n      e = e || event\n      e.preventDefault()\n      let obj = {\n        x: e.offsetX,\n        y: e.offsetY\n      }\n      this.drawEnd(obj)\n      this.isDrawing = false\n    },\n    // mobile\n    touchStart (e) {\n      e = e || event\n      e.preventDefault()\n      this.hasDrew = true\n      if (e.touches.length === 1) {\n        let obj = {\n          x: e.targetTouches[0].clientX - this.$refs.canvas.getBoundingClientRect().left,\n          y: e.targetTouches[0].clientY - this.$refs.canvas.getBoundingClientRect().top\n        }\n        this.drawStart(obj)\n      }\n    },\n    touchMove (e) {\n      e = e || event\n      e.preventDefault()\n      if (e.touches.length === 1) {\n        let obj = {\n          x: e.targetTouches[0].clientX - this.$refs.canvas.getBoundingClientRect().left,\n          y: e.targetTouches[0].clientY - this.$refs.canvas.getBoundingClientRect().top\n        }\n        this.drawMove(obj)\n      }\n    },\n    touchEnd (e) {\n      e = e || event\n      e.preventDefault()\n      if (e.touches.length === 1) {\n        let obj = {\n          x: e.targetTouches[0].clientX - this.$refs.canvas.getBoundingClientRect().left,\n          y: e.targetTouches[0].clientY - this.$refs.canvas.getBoundingClientRect().top\n        }\n        this.drawEnd(obj)\n      }\n    },\n    // 绘制\n    drawStart (obj) {\n      this.startX = obj.x\n      this.startY = obj.y\n      this.canvasTxt.beginPath()\n      this.canvasTxt.moveTo(this.startX, this.startY)\n      this.canvasTxt.lineTo(obj.x, obj.y)\n      this.canvasTxt.lineCap = 'round'\n      this.canvasTxt.lineJoin = 'round'\n      this.canvasTxt.lineWidth = this.lineWidth * this.sratio\n      this.canvasTxt.stroke()\n      this.canvasTxt.closePath()\n      this.points.push(obj)\n    },\n    drawMove (obj) {\n      this.canvasTxt.beginPath()\n      this.canvasTxt.moveTo(this.startX, this.startY)\n      this.canvasTxt.lineTo(obj.x, obj.y)\n      this.canvasTxt.strokeStyle = this.lineColor\n      this.canvasTxt.lineWidth = this.lineWidth * this.sratio\n      this.canvasTxt.lineCap = 'round'\n      this.canvasTxt.lineJoin = 'round'\n      this.canvasTxt.stroke()\n      this.canvasTxt.closePath()\n      this.startY = obj.y\n      this.startX = obj.x\n      this.points.push(obj)\n    },\n    drawEnd (obj) {\n      this.canvasTxt.beginPath()\n      this.canvasTxt.moveTo(this.startX, this.startY)\n      this.canvasTxt.lineTo(obj.x, obj.y)\n      this.canvasTxt.lineCap = 'round'\n      this.canvasTxt.lineJoin = 'round'\n      this.canvasTxt.stroke()\n      this.canvasTxt.closePath()\n      this.points.push(obj)\n      this.points.push({x: -1, y: -1})\n    },\n    // 操作\n    generate (options) {\n      let imgFormat = options && options.format ? options.format: this.format\n      let imgQuality = options && options.quality ? options.quality: this.quality\n      const pm =  new Promise((resolve, reject) => {\n        if (!this.hasDrew) {\n          reject(`Warning: Not Signned!`)\n          return\n        }\n        var resImgData = this.canvasTxt.getImageData(0, 0, this.$refs.canvas.width, this.$refs.canvas.height)\n        this.canvasTxt.globalCompositeOperation = \"destination-over\"\n        this.canvasTxt.fillStyle = this.myBg\n        this.canvasTxt.fillRect(0,0,this.$refs.canvas.width ,this.$refs.canvas.height)\n        this.resultImg = this.$refs.canvas.toDataURL(imgFormat, imgQuality)\n        var resultImg = this.resultImg\n        this.canvasTxt.clearRect(0, 0, this.$refs.canvas.width ,this.$refs.canvas.height)\n        this.canvasTxt.putImageData(resImgData, 0, 0)\n        this.canvasTxt.globalCompositeOperation = \"source-over\"\n        if (this.isCrop) {\n          const crop_area = this.getCropArea(resImgData.data)\n          var crop_canvas = document.createElement('canvas')\n          const crop_ctx = crop_canvas.getContext('2d')\n          crop_canvas.width = crop_area[2] - crop_area[0]\n          crop_canvas.height = crop_area[3] - crop_area[1]\n          const crop_imgData = this.canvasTxt.getImageData(...crop_area)\n          crop_ctx.globalCompositeOperation = \"destination-over\"\n          crop_ctx.putImageData(crop_imgData, 0, 0)\n          crop_ctx.fillStyle = this.myBg\n          crop_ctx.fillRect(0, 0, crop_canvas.width , crop_canvas.height)\n          resultImg = crop_canvas.toDataURL(imgFormat, imgQuality)\n          crop_canvas = null\n        }\n        resolve(resultImg)\n      })\n      return pm\n    },\n    reset () {\n      this.canvasTxt.clearRect(\n        0,\n        0,\n        this.$refs.canvas.width,\n        this.$refs.canvas.height\n      )\n      if (this.isClearBgColor) {\n        this.$emit('update:bgColor', '')\n        this.$refs.canvas.style.background = 'rgba(255, 255, 255, 0)'\n      }\n      this.points = []\n      this.hasDrew = false\n      this.resultImg = ''\n    },\n    getCropArea (imgData) {\n      var topX = this.$refs.canvas.width; var btmX = 0; var topY = this.$refs.canvas.height; var btnY = 0\n      for (var i = 0; i < this.$refs.canvas.width; i++) {\n        for (var j = 0; j < this.$refs.canvas.height; j++) {\n          var pos = (i + this.$refs.canvas.width * j) * 4\n          if (imgData[pos] > 0 || imgData[pos + 1] > 0 || imgData[pos + 2] || imgData[pos + 3] > 0) {\n            btnY = Math.max(j, btnY)\n            btmX = Math.max(i, btmX)\n            topY = Math.min(j, topY)\n            topX = Math.min(i, topX)\n          }\n        }\n      }\n      topX++\n      btmX++\n      topY++\n      btnY++\n      const data = [topX, topY, btmX, btnY]\n      return data\n    }\n  }\n}\n</script>\n\n<style scoped>\ncanvas {\n  max-width: 100%;\n  display: block;\n}\n</style>\n"],"mappings":"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","ignoreList":[]}]}