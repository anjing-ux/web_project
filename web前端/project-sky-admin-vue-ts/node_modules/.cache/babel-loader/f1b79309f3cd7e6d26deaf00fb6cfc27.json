{"remainingRequest":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\chart.js\\dist\\chart.mjs","dependencies":[{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\chart.js\\dist\\chart.mjs","mtime":499162500000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\babel.config.js","mtime":1652756116000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime/helpers/interopRequireDefault\");\nrequire(\"core-js/modules/es7.object.get-own-property-descriptors\");\nrequire(\"core-js/modules/es6.reflect.construct\");\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\nrequire(\"core-js/modules/es6.symbol\");\nrequire(\"core-js/modules/es6.regexp.to-string\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._adapters = exports.Tooltip = exports.Title = exports.TimeSeriesScale = exports.TimeScale = exports.Ticks = exports.SubTitle = exports.ScatterController = exports.Scale = exports.RadialLinearScale = exports.RadarController = exports.PolarAreaController = exports.PointElement = exports.PieController = exports.LogarithmicScale = exports.LinearScale = exports.LineElement = exports.LineController = exports.Legend = exports.Interaction = exports.Filler = exports.Element = exports.DoughnutController = exports.DomPlatform = exports.Decimation = exports.DatasetController = exports.Chart = exports.CategoryScale = exports.BubbleController = exports.BasicPlatform = exports.BasePlatform = exports.BarElement = exports.BarController = exports.ArcElement = exports.Animations = exports.Animation = void 0;\nexports._detectPlatform = _detectPlatform;\nexports.controllers = exports.animator = void 0;\nObject.defineProperty(exports, \"defaults\", {\n  enumerable: true,\n  get: function get() {\n    return _helpersSegment.d;\n  }\n});\nexports.scales = exports.registry = exports.registerables = exports.plugins = exports.layouts = exports.elements = void 0;\nrequire(\"core-js/modules/es6.number.min-safe-integer\");\nrequire(\"core-js/modules/es6.number.max-safe-integer\");\nrequire(\"core-js/modules/es6.weak-map\");\nrequire(\"core-js/modules/es6.array.fill\");\nrequire(\"core-js/modules/es7.object.values\");\nrequire(\"core-js/modules/es6.array.from\");\nrequire(\"core-js/modules/es6.set\");\nrequire(\"core-js/modules/es7.array.includes\");\nrequire(\"core-js/modules/es6.string.includes\");\nrequire(\"core-js/modules/es6.regexp.split\");\nrequire(\"core-js/modules/es6.array.find-index\");\nrequire(\"core-js/modules/es6.function.name\");\nrequire(\"core-js/modules/es6.string.starts-with\");\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/getPrototypeOf\"));\nvar _get2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/get\"));\nvar _inherits2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/inherits\"));\nrequire(\"core-js/modules/es6.array.sort\");\nvar _slicedToArray2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/slicedToArray\"));\nrequire(\"core-js/modules/es6.object.freeze\");\nvar _defineProperty2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/defineProperty\"));\nrequire(\"core-js/modules/es6.object.is-extensible\");\nrequire(\"core-js/modules/es6.number.constructor\");\nrequire(\"core-js/modules/es6.object.keys\");\nvar _typeof2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/typeof\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/toConsumableArray\"));\nrequire(\"core-js/modules/web.dom.iterable\");\nrequire(\"core-js/modules/es6.string.iterator\");\nrequire(\"core-js/modules/es6.map\");\nvar _classCallCheck2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/createClass\"));\nvar _helpersSegment = require(\"./chunks/helpers.segment.mjs\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _superPropGet(t, o, e, r) { var p = (0, _get2.default)((0, _getPrototypeOf2.default)(1 & r ? t.prototype : t), o, e); return 2 & r && \"function\" == typeof p ? function (t) { return p.apply(e, t); } : p; }\nfunction _createForOfIteratorHelper(r, e) { var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t.return || t.return(); } finally { if (u) throw o; } } }; }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; } /*!\n * Chart.js v3.9.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nvar Animator = /*#__PURE__*/function () {\n  function Animator() {\n    (0, _classCallCheck2.default)(this, Animator);\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  return (0, _createClass2.default)(Animator, [{\n    key: \"_notify\",\n    value: function _notify(chart, anims, date, type) {\n      var callbacks = anims.listeners[type];\n      var numSteps = anims.duration;\n      callbacks.forEach(function (fn) {\n        return fn({\n          chart: chart,\n          initial: anims.initial,\n          numSteps: numSteps,\n          currentStep: Math.min(date - anims.start, numSteps)\n        });\n      });\n    }\n  }, {\n    key: \"_refresh\",\n    value: function _refresh() {\n      var _this = this;\n      if (this._request) {\n        return;\n      }\n      this._running = true;\n      this._request = _helpersSegment.r.call(window, function () {\n        _this._update();\n        _this._request = null;\n        if (_this._running) {\n          _this._refresh();\n        }\n      });\n    }\n  }, {\n    key: \"_update\",\n    value: function _update() {\n      var _this2 = this;\n      var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Date.now();\n      var remaining = 0;\n      this._charts.forEach(function (anims, chart) {\n        if (!anims.running || !anims.items.length) {\n          return;\n        }\n        var items = anims.items;\n        var i = items.length - 1;\n        var draw = false;\n        var item;\n        for (; i >= 0; --i) {\n          item = items[i];\n          if (item._active) {\n            if (item._total > anims.duration) {\n              anims.duration = item._total;\n            }\n            item.tick(date);\n            draw = true;\n          } else {\n            items[i] = items[items.length - 1];\n            items.pop();\n          }\n        }\n        if (draw) {\n          chart.draw();\n          _this2._notify(chart, anims, date, 'progress');\n        }\n        if (!items.length) {\n          anims.running = false;\n          _this2._notify(chart, anims, date, 'complete');\n          anims.initial = false;\n        }\n        remaining += items.length;\n      });\n      this._lastDate = date;\n      if (remaining === 0) {\n        this._running = false;\n      }\n    }\n  }, {\n    key: \"_getAnims\",\n    value: function _getAnims(chart) {\n      var charts = this._charts;\n      var anims = charts.get(chart);\n      if (!anims) {\n        anims = {\n          running: false,\n          initial: true,\n          items: [],\n          listeners: {\n            complete: [],\n            progress: []\n          }\n        };\n        charts.set(chart, anims);\n      }\n      return anims;\n    }\n  }, {\n    key: \"listen\",\n    value: function listen(chart, event, cb) {\n      this._getAnims(chart).listeners[event].push(cb);\n    }\n  }, {\n    key: \"add\",\n    value: function add(chart, items) {\n      var _this$_getAnims$items;\n      if (!items || !items.length) {\n        return;\n      }\n      (_this$_getAnims$items = this._getAnims(chart).items).push.apply(_this$_getAnims$items, (0, _toConsumableArray2.default)(items));\n    }\n  }, {\n    key: \"has\",\n    value: function has(chart) {\n      return this._getAnims(chart).items.length > 0;\n    }\n  }, {\n    key: \"start\",\n    value: function start(chart) {\n      var anims = this._charts.get(chart);\n      if (!anims) {\n        return;\n      }\n      anims.running = true;\n      anims.start = Date.now();\n      anims.duration = anims.items.reduce(function (acc, cur) {\n        return Math.max(acc, cur._duration);\n      }, 0);\n      this._refresh();\n    }\n  }, {\n    key: \"running\",\n    value: function running(chart) {\n      if (!this._running) {\n        return false;\n      }\n      var anims = this._charts.get(chart);\n      if (!anims || !anims.running || !anims.items.length) {\n        return false;\n      }\n      return true;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop(chart) {\n      var anims = this._charts.get(chart);\n      if (!anims || !anims.items.length) {\n        return;\n      }\n      var items = anims.items;\n      var i = items.length - 1;\n      for (; i >= 0; --i) {\n        items[i].cancel();\n      }\n      anims.items = [];\n      this._notify(chart, anims, Date.now(), 'complete');\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(chart) {\n      return this._charts.delete(chart);\n    }\n  }]);\n}();\nvar animator = exports.animator = new Animator();\nvar transparent = 'transparent';\nvar interpolators = {\n  boolean: function boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color: function color(from, to, factor) {\n    var c0 = (0, _helpersSegment.c)(from || transparent);\n    var c1 = c0.valid && (0, _helpersSegment.c)(to || transparent);\n    return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n  },\n  number: function number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nvar Animation = exports.Animation = /*#__PURE__*/function () {\n  function Animation(cfg, target, prop, to) {\n    (0, _classCallCheck2.default)(this, Animation);\n    var currentValue = target[prop];\n    to = (0, _helpersSegment.a)([cfg.to, to, currentValue, cfg.from]);\n    var from = (0, _helpersSegment.a)([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || (0, _typeof2.default)(from)];\n    this._easing = _helpersSegment.e[cfg.easing] || _helpersSegment.e.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  return (0, _createClass2.default)(Animation, [{\n    key: \"active\",\n    value: function active() {\n      return this._active;\n    }\n  }, {\n    key: \"update\",\n    value: function update(cfg, to, date) {\n      if (this._active) {\n        this._notify(false);\n        var currentValue = this._target[this._prop];\n        var elapsed = date - this._start;\n        var remain = this._duration - elapsed;\n        this._start = date;\n        this._duration = Math.floor(Math.max(remain, cfg.duration));\n        this._total += elapsed;\n        this._loop = !!cfg.loop;\n        this._to = (0, _helpersSegment.a)([cfg.to, to, currentValue, cfg.from]);\n        this._from = (0, _helpersSegment.a)([cfg.from, currentValue, to]);\n      }\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      if (this._active) {\n        this.tick(Date.now());\n        this._active = false;\n        this._notify(false);\n      }\n    }\n  }, {\n    key: \"tick\",\n    value: function tick(date) {\n      var elapsed = date - this._start;\n      var duration = this._duration;\n      var prop = this._prop;\n      var from = this._from;\n      var loop = this._loop;\n      var to = this._to;\n      var factor;\n      this._active = from !== to && (loop || elapsed < duration);\n      if (!this._active) {\n        this._target[prop] = to;\n        this._notify(true);\n        return;\n      }\n      if (elapsed < 0) {\n        this._target[prop] = from;\n        return;\n      }\n      factor = elapsed / duration % 2;\n      factor = loop && factor > 1 ? 2 - factor : factor;\n      factor = this._easing(Math.min(1, Math.max(0, factor)));\n      this._target[prop] = this._fn(from, to, factor);\n    }\n  }, {\n    key: \"wait\",\n    value: function wait() {\n      var promises = this._promises || (this._promises = []);\n      return new Promise(function (res, rej) {\n        promises.push({\n          res: res,\n          rej: rej\n        });\n      });\n    }\n  }, {\n    key: \"_notify\",\n    value: function _notify(resolved) {\n      var method = resolved ? 'res' : 'rej';\n      var promises = this._promises || [];\n      for (var i = 0; i < promises.length; i++) {\n        promises[i][method]();\n      }\n    }\n  }]);\n}();\nvar numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nvar colors = ['color', 'borderColor', 'backgroundColor'];\n_helpersSegment.d.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined\n});\nvar animationOptions = Object.keys(_helpersSegment.d.animation);\n_helpersSegment.d.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: function _scriptable(name) {\n    return name !== 'onProgress' && name !== 'onComplete' && name !== 'fn';\n  }\n});\n_helpersSegment.d.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  }\n});\n_helpersSegment.d.describe('animations', {\n  _fallback: 'animation'\n});\n_helpersSegment.d.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      }\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: function fn(v) {\n          return v | 0;\n        }\n      }\n    }\n  }\n});\nvar Animations = exports.Animations = /*#__PURE__*/function () {\n  function Animations(chart, config) {\n    (0, _classCallCheck2.default)(this, Animations);\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  return (0, _createClass2.default)(Animations, [{\n    key: \"configure\",\n    value: function configure(config) {\n      if (!(0, _helpersSegment.i)(config)) {\n        return;\n      }\n      var animatedProps = this._properties;\n      Object.getOwnPropertyNames(config).forEach(function (key) {\n        var cfg = config[key];\n        if (!(0, _helpersSegment.i)(cfg)) {\n          return;\n        }\n        var resolved = {};\n        for (var _i = 0, _animationOptions = animationOptions; _i < _animationOptions.length; _i++) {\n          var option = _animationOptions[_i];\n          resolved[option] = cfg[option];\n        }\n        ((0, _helpersSegment.b)(cfg.properties) && cfg.properties || [key]).forEach(function (prop) {\n          if (prop === key || !animatedProps.has(prop)) {\n            animatedProps.set(prop, resolved);\n          }\n        });\n      });\n    }\n  }, {\n    key: \"_animateOptions\",\n    value: function _animateOptions(target, values) {\n      var newOptions = values.options;\n      var options = resolveTargetOptions(target, newOptions);\n      if (!options) {\n        return [];\n      }\n      var animations = this._createAnimations(options, newOptions);\n      if (newOptions.$shared) {\n        awaitAll(target.options.$animations, newOptions).then(function () {\n          target.options = newOptions;\n        }, function () {});\n      }\n      return animations;\n    }\n  }, {\n    key: \"_createAnimations\",\n    value: function _createAnimations(target, values) {\n      var animatedProps = this._properties;\n      var animations = [];\n      var running = target.$animations || (target.$animations = {});\n      var props = Object.keys(values);\n      var date = Date.now();\n      var i;\n      for (i = props.length - 1; i >= 0; --i) {\n        var prop = props[i];\n        if (prop.charAt(0) === '$') {\n          continue;\n        }\n        if (prop === 'options') {\n          animations.push.apply(animations, (0, _toConsumableArray2.default)(this._animateOptions(target, values)));\n          continue;\n        }\n        var value = values[prop];\n        var animation = running[prop];\n        var cfg = animatedProps.get(prop);\n        if (animation) {\n          if (cfg && animation.active()) {\n            animation.update(cfg, value, date);\n            continue;\n          } else {\n            animation.cancel();\n          }\n        }\n        if (!cfg || !cfg.duration) {\n          target[prop] = value;\n          continue;\n        }\n        running[prop] = animation = new Animation(cfg, target, prop, value);\n        animations.push(animation);\n      }\n      return animations;\n    }\n  }, {\n    key: \"update\",\n    value: function update(target, values) {\n      if (this._properties.size === 0) {\n        Object.assign(target, values);\n        return;\n      }\n      var animations = this._createAnimations(target, values);\n      if (animations.length) {\n        animator.add(this._chart, animations);\n        return true;\n      }\n    }\n  }]);\n}();\nfunction awaitAll(animations, properties) {\n  var running = [];\n  var keys = Object.keys(properties);\n  for (var i = 0; i < keys.length; i++) {\n    var anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  var options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {\n      $shared: false,\n      $animations: {}\n    });\n  }\n  return options;\n}\nfunction scaleClip(scale, allowedOverflow) {\n  var opts = scale && scale.options || {};\n  var reverse = opts.reverse;\n  var min = opts.min === undefined ? allowedOverflow : 0;\n  var max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  var x = scaleClip(xScale, allowedOverflow);\n  var y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  var t, r, b, l;\n  if ((0, _helpersSegment.i)(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  var keys = [];\n  var metasets = chart._getSortedDatasetMetas(filterVisible);\n  var i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction _applyStack(stack, value, dsIndex) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var keys = stack.keys;\n  var singleMode = options.mode === 'single';\n  var i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if ((0, _helpersSegment.g)(otherValue) && (singleMode || value === 0 || (0, _helpersSegment.s)(value) === (0, _helpersSegment.s)(otherValue))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  var keys = Object.keys(data);\n  var adata = new Array(keys.length);\n  var i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  var stacked = scale && scale.options.stacked;\n  return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return \"\".concat(indexScale.id, \".\").concat(valueScale.id, \".\").concat(meta.stack || meta.type);\n}\nfunction getUserBounds(scale) {\n  var _scale$getUserBounds = scale.getUserBounds(),\n    min = _scale$getUserBounds.min,\n    max = _scale$getUserBounds.max,\n    minDefined = _scale$getUserBounds.minDefined,\n    maxDefined = _scale$getUserBounds.maxDefined;\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  var subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  var _iterator = _createForOfIteratorHelper(vScale.getMatchingVisibleMetas(type).reverse()),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var meta = _step.value;\n      var value = stack[meta.index];\n      if (positive && value > 0 || !positive && value < 0) {\n        return meta.index;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  var chart = controller.chart,\n    meta = controller._cachedMeta;\n  var stacks = chart._stacks || (chart._stacks = {});\n  var iScale = meta.iScale,\n    vScale = meta.vScale,\n    datasetIndex = meta.index;\n  var iAxis = iScale.axis;\n  var vAxis = vScale.axis;\n  var key = getStackKey(iScale, vScale, meta);\n  var ilen = parsed.length;\n  var stack;\n  for (var i = 0; i < ilen; ++i) {\n    var item = parsed[i];\n    var _index = item[iAxis],\n      value = item[vAxis];\n    var itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, _index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  var scales = chart.scales;\n  return Object.keys(scales).filter(function (key) {\n    return scales[key].axis === axis;\n  }).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return (0, _helpersSegment.h)(parent, {\n    active: false,\n    dataset: undefined,\n    datasetIndex: index,\n    index: index,\n    mode: 'default',\n    type: 'dataset'\n  });\n}\nfunction createDataContext(parent, index, element) {\n  return (0, _helpersSegment.h)(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element: element,\n    index: index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  var datasetIndex = meta.controller.index;\n  var axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  var _iterator2 = _createForOfIteratorHelper(items),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var parsed = _step2.value;\n      var stacks = parsed._stacks;\n      if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n        return;\n      }\n      delete stacks[axis][datasetIndex];\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n}\nvar isDirectUpdateMode = function isDirectUpdateMode(mode) {\n  return mode === 'reset' || mode === 'none';\n};\nvar cloneIfNotShared = function cloneIfNotShared(cached, shared) {\n  return shared ? cached : Object.assign({}, cached);\n};\nvar createStack = function createStack(canStack, meta, chart) {\n  return canStack && !meta.hidden && meta._stacked && {\n    keys: getSortedDatasetIndices(chart, true),\n    values: null\n  };\n};\nvar DatasetController = exports.DatasetController = /*#__PURE__*/function () {\n  function DatasetController(chart, datasetIndex) {\n    (0, _classCallCheck2.default)(this, DatasetController);\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  return (0, _createClass2.default)(DatasetController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      var meta = this._cachedMeta;\n      this.configure();\n      this.linkScales();\n      meta._stacked = isStacked(meta.vScale, meta);\n      this.addElements();\n    }\n  }, {\n    key: \"updateIndex\",\n    value: function updateIndex(datasetIndex) {\n      if (this.index !== datasetIndex) {\n        clearStacks(this._cachedMeta);\n      }\n      this.index = datasetIndex;\n    }\n  }, {\n    key: \"linkScales\",\n    value: function linkScales() {\n      var chart = this.chart;\n      var meta = this._cachedMeta;\n      var dataset = this.getDataset();\n      var chooseId = function chooseId(axis, x, y, r) {\n        return axis === 'x' ? x : axis === 'r' ? r : y;\n      };\n      var xid = meta.xAxisID = (0, _helpersSegment.v)(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n      var yid = meta.yAxisID = (0, _helpersSegment.v)(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n      var rid = meta.rAxisID = (0, _helpersSegment.v)(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n      var indexAxis = meta.indexAxis;\n      var iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n      var vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n      meta.xScale = this.getScaleForId(xid);\n      meta.yScale = this.getScaleForId(yid);\n      meta.rScale = this.getScaleForId(rid);\n      meta.iScale = this.getScaleForId(iid);\n      meta.vScale = this.getScaleForId(vid);\n    }\n  }, {\n    key: \"getDataset\",\n    value: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    }\n  }, {\n    key: \"getMeta\",\n    value: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    }\n  }, {\n    key: \"getScaleForId\",\n    value: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    }\n  }, {\n    key: \"_getOtherScale\",\n    value: function _getOtherScale(scale) {\n      var meta = this._cachedMeta;\n      return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._update('reset');\n    }\n  }, {\n    key: \"_destroy\",\n    value: function _destroy() {\n      var meta = this._cachedMeta;\n      if (this._data) {\n        (0, _helpersSegment.u)(this._data, this);\n      }\n      if (meta._stacked) {\n        clearStacks(meta);\n      }\n    }\n  }, {\n    key: \"_dataCheck\",\n    value: function _dataCheck() {\n      var dataset = this.getDataset();\n      var data = dataset.data || (dataset.data = []);\n      var _data = this._data;\n      if ((0, _helpersSegment.i)(data)) {\n        this._data = convertObjectDataToArray(data);\n      } else if (_data !== data) {\n        if (_data) {\n          (0, _helpersSegment.u)(_data, this);\n          var meta = this._cachedMeta;\n          clearStacks(meta);\n          meta._parsed = [];\n        }\n        if (data && Object.isExtensible(data)) {\n          (0, _helpersSegment.l)(data, this);\n        }\n        this._syncList = [];\n        this._data = data;\n      }\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      var meta = this._cachedMeta;\n      this._dataCheck();\n      if (this.datasetElementType) {\n        meta.dataset = new this.datasetElementType();\n      }\n    }\n  }, {\n    key: \"buildOrUpdateElements\",\n    value: function buildOrUpdateElements(resetNewElements) {\n      var meta = this._cachedMeta;\n      var dataset = this.getDataset();\n      var stackChanged = false;\n      this._dataCheck();\n      var oldStacked = meta._stacked;\n      meta._stacked = isStacked(meta.vScale, meta);\n      if (meta.stack !== dataset.stack) {\n        stackChanged = true;\n        clearStacks(meta);\n        meta.stack = dataset.stack;\n      }\n      this._resyncElements(resetNewElements);\n      if (stackChanged || oldStacked !== meta._stacked) {\n        updateStacks(this, meta._parsed);\n      }\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var config = this.chart.config;\n      var scopeKeys = config.datasetScopeKeys(this._type);\n      var scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n      this.options = config.createResolver(scopes, this.getContext());\n      this._parsing = this.options.parsing;\n      this._cachedDataOpts = {};\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(start, count) {\n      var meta = this._cachedMeta,\n        data = this._data;\n      var iScale = meta.iScale,\n        _stacked = meta._stacked;\n      var iAxis = iScale.axis;\n      var sorted = start === 0 && count === data.length ? true : meta._sorted;\n      var prev = start > 0 && meta._parsed[start - 1];\n      var i, cur, parsed;\n      if (this._parsing === false) {\n        meta._parsed = data;\n        meta._sorted = true;\n        parsed = data;\n      } else {\n        if ((0, _helpersSegment.b)(data[start])) {\n          parsed = this.parseArrayData(meta, data, start, count);\n        } else if ((0, _helpersSegment.i)(data[start])) {\n          parsed = this.parseObjectData(meta, data, start, count);\n        } else {\n          parsed = this.parsePrimitiveData(meta, data, start, count);\n        }\n        var isNotInOrderComparedToPrev = function isNotInOrderComparedToPrev() {\n          return cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n        };\n        for (i = 0; i < count; ++i) {\n          meta._parsed[i + start] = cur = parsed[i];\n          if (sorted) {\n            if (isNotInOrderComparedToPrev()) {\n              sorted = false;\n            }\n            prev = cur;\n          }\n        }\n        meta._sorted = sorted;\n      }\n      if (_stacked) {\n        updateStacks(this, parsed);\n      }\n    }\n  }, {\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      var iScale = meta.iScale,\n        vScale = meta.vScale;\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      var labels = iScale.getLabels();\n      var singleScale = iScale === vScale;\n      var parsed = new Array(count);\n      var i, ilen, index;\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        parsed[i] = (0, _defineProperty2.default)((0, _defineProperty2.default)({}, iAxis, singleScale || iScale.parse(labels[index], index)), vAxis, vScale.parse(data[index], index));\n      }\n      return parsed;\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      var xScale = meta.xScale,\n        yScale = meta.yScale;\n      var parsed = new Array(count);\n      var i, ilen, index, item;\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(item[0], index),\n          y: yScale.parse(item[1], index)\n        };\n      }\n      return parsed;\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var xScale = meta.xScale,\n        yScale = meta.yScale;\n      var _this$_parsing = this._parsing,\n        _this$_parsing$xAxisK = _this$_parsing.xAxisKey,\n        xAxisKey = _this$_parsing$xAxisK === void 0 ? 'x' : _this$_parsing$xAxisK,\n        _this$_parsing$yAxisK = _this$_parsing.yAxisKey,\n        yAxisKey = _this$_parsing$yAxisK === void 0 ? 'y' : _this$_parsing$yAxisK;\n      var parsed = new Array(count);\n      var i, ilen, index, item;\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse((0, _helpersSegment.f)(item, xAxisKey), index),\n          y: yScale.parse((0, _helpersSegment.f)(item, yAxisKey), index)\n        };\n      }\n      return parsed;\n    }\n  }, {\n    key: \"getParsed\",\n    value: function getParsed(index) {\n      return this._cachedMeta._parsed[index];\n    }\n  }, {\n    key: \"getDataElement\",\n    value: function getDataElement(index) {\n      return this._cachedMeta.data[index];\n    }\n  }, {\n    key: \"applyStack\",\n    value: function applyStack(scale, parsed, mode) {\n      var chart = this.chart;\n      var meta = this._cachedMeta;\n      var value = parsed[scale.axis];\n      var stack = {\n        keys: getSortedDatasetIndices(chart, true),\n        values: parsed._stacks[scale.axis]\n      };\n      return _applyStack(stack, value, meta.index, {\n        mode: mode\n      });\n    }\n  }, {\n    key: \"updateRangeFromParsed\",\n    value: function updateRangeFromParsed(range, scale, parsed, stack) {\n      var parsedValue = parsed[scale.axis];\n      var value = parsedValue === null ? NaN : parsedValue;\n      var values = stack && parsed._stacks[scale.axis];\n      if (stack && values) {\n        stack.values = values;\n        value = _applyStack(stack, parsedValue, this._cachedMeta.index);\n      }\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax(scale, canStack) {\n      var meta = this._cachedMeta;\n      var _parsed = meta._parsed;\n      var sorted = meta._sorted && scale === meta.iScale;\n      var ilen = _parsed.length;\n      var otherScale = this._getOtherScale(scale);\n      var stack = createStack(canStack, meta, this.chart);\n      var range = {\n        min: Number.POSITIVE_INFINITY,\n        max: Number.NEGATIVE_INFINITY\n      };\n      var _getUserBounds = getUserBounds(otherScale),\n        otherMin = _getUserBounds.min,\n        otherMax = _getUserBounds.max;\n      var i, parsed;\n      function _skip() {\n        parsed = _parsed[i];\n        var otherValue = parsed[otherScale.axis];\n        return !(0, _helpersSegment.g)(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n      }\n      for (i = 0; i < ilen; ++i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        if (sorted) {\n          break;\n        }\n      }\n      if (sorted) {\n        for (i = ilen - 1; i >= 0; --i) {\n          if (_skip()) {\n            continue;\n          }\n          this.updateRangeFromParsed(range, scale, parsed, stack);\n          break;\n        }\n      }\n      return range;\n    }\n  }, {\n    key: \"getAllParsedValues\",\n    value: function getAllParsedValues(scale) {\n      var parsed = this._cachedMeta._parsed;\n      var values = [];\n      var i, ilen, value;\n      for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n        value = parsed[i][scale.axis];\n        if ((0, _helpersSegment.g)(value)) {\n          values.push(value);\n        }\n      }\n      return values;\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      return false;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var iScale = meta.iScale;\n      var vScale = meta.vScale;\n      var parsed = this.getParsed(index);\n      return {\n        label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n        value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n      };\n    }\n  }, {\n    key: \"_update\",\n    value: function _update(mode) {\n      var meta = this._cachedMeta;\n      this.update(mode || 'default');\n      meta._clip = toClip((0, _helpersSegment.v)(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {}\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var ctx = this._ctx;\n      var chart = this.chart;\n      var meta = this._cachedMeta;\n      var elements = meta.data || [];\n      var area = chart.chartArea;\n      var active = [];\n      var start = this._drawStart || 0;\n      var count = this._drawCount || elements.length - start;\n      var drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n      var i;\n      if (meta.dataset) {\n        meta.dataset.draw(ctx, area, start, count);\n      }\n      for (i = start; i < start + count; ++i) {\n        var element = elements[i];\n        if (element.hidden) {\n          continue;\n        }\n        if (element.active && drawActiveElementsOnTop) {\n          active.push(element);\n        } else {\n          element.draw(ctx, area);\n        }\n      }\n      for (i = 0; i < active.length; ++i) {\n        active[i].draw(ctx, area);\n      }\n    }\n  }, {\n    key: \"getStyle\",\n    value: function getStyle(index, active) {\n      var mode = active ? 'active' : 'default';\n      return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext(index, active, mode) {\n      var dataset = this.getDataset();\n      var context;\n      if (index >= 0 && index < this._cachedMeta.data.length) {\n        var element = this._cachedMeta.data[index];\n        context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n        context.parsed = this.getParsed(index);\n        context.raw = dataset.data[index];\n        context.index = context.dataIndex = index;\n      } else {\n        context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n        context.dataset = dataset;\n        context.index = context.datasetIndex = this.index;\n      }\n      context.active = !!active;\n      context.mode = mode;\n      return context;\n    }\n  }, {\n    key: \"resolveDatasetElementOptions\",\n    value: function resolveDatasetElementOptions(mode) {\n      return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n  }, {\n    key: \"resolveDataElementOptions\",\n    value: function resolveDataElementOptions(index, mode) {\n      return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n  }, {\n    key: \"_resolveElementOptions\",\n    value: function _resolveElementOptions(elementType) {\n      var _this3 = this;\n      var mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n      var index = arguments.length > 2 ? arguments[2] : undefined;\n      var active = mode === 'active';\n      var cache = this._cachedDataOpts;\n      var cacheKey = elementType + '-' + mode;\n      var cached = cache[cacheKey];\n      var sharing = this.enableOptionSharing && (0, _helpersSegment.j)(index);\n      if (cached) {\n        return cloneIfNotShared(cached, sharing);\n      }\n      var config = this.chart.config;\n      var scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n      var prefixes = active ? [\"\".concat(elementType, \"Hover\"), 'hover', elementType, ''] : [elementType, ''];\n      var scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      var names = Object.keys(_helpersSegment.d.elements[elementType]);\n      var context = function context() {\n        return _this3.getContext(index, active);\n      };\n      var values = config.resolveNamedOptions(scopes, names, context, prefixes);\n      if (values.$shared) {\n        values.$shared = sharing;\n        cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n      }\n      return values;\n    }\n  }, {\n    key: \"_resolveAnimations\",\n    value: function _resolveAnimations(index, transition, active) {\n      var chart = this.chart;\n      var cache = this._cachedDataOpts;\n      var cacheKey = \"animation-\".concat(transition);\n      var cached = cache[cacheKey];\n      if (cached) {\n        return cached;\n      }\n      var options;\n      if (chart.options.animation !== false) {\n        var config = this.chart.config;\n        var scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n        var scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        options = config.createResolver(scopes, this.getContext(index, active, transition));\n      }\n      var animations = new Animations(chart, options && options.animations);\n      if (options && options._cacheable) {\n        cache[cacheKey] = Object.freeze(animations);\n      }\n      return animations;\n    }\n  }, {\n    key: \"getSharedOptions\",\n    value: function getSharedOptions(options) {\n      if (!options.$shared) {\n        return;\n      }\n      return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n  }, {\n    key: \"includeOptions\",\n    value: function includeOptions(mode, sharedOptions) {\n      return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n  }, {\n    key: \"_getSharedOptions\",\n    value: function _getSharedOptions(start, mode) {\n      var firstOpts = this.resolveDataElementOptions(start, mode);\n      var previouslySharedOptions = this._sharedOptions;\n      var sharedOptions = this.getSharedOptions(firstOpts);\n      var includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n      this.updateSharedOptions(sharedOptions, mode, firstOpts);\n      return {\n        sharedOptions: sharedOptions,\n        includeOptions: includeOptions\n      };\n    }\n  }, {\n    key: \"updateElement\",\n    value: function updateElement(element, index, properties, mode) {\n      if (isDirectUpdateMode(mode)) {\n        Object.assign(element, properties);\n      } else {\n        this._resolveAnimations(index, mode).update(element, properties);\n      }\n    }\n  }, {\n    key: \"updateSharedOptions\",\n    value: function updateSharedOptions(sharedOptions, mode, newOptions) {\n      if (sharedOptions && !isDirectUpdateMode(mode)) {\n        this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n      }\n    }\n  }, {\n    key: \"_setStyle\",\n    value: function _setStyle(element, index, mode, active) {\n      element.active = active;\n      var options = this.getStyle(index, active);\n      this._resolveAnimations(index, mode, active).update(element, {\n        options: !active && this.getSharedOptions(options) || options\n      });\n    }\n  }, {\n    key: \"removeHoverStyle\",\n    value: function removeHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', false);\n    }\n  }, {\n    key: \"setHoverStyle\",\n    value: function setHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', true);\n    }\n  }, {\n    key: \"_removeDatasetHoverStyle\",\n    value: function _removeDatasetHoverStyle() {\n      var element = this._cachedMeta.dataset;\n      if (element) {\n        this._setStyle(element, undefined, 'active', false);\n      }\n    }\n  }, {\n    key: \"_setDatasetHoverStyle\",\n    value: function _setDatasetHoverStyle() {\n      var element = this._cachedMeta.dataset;\n      if (element) {\n        this._setStyle(element, undefined, 'active', true);\n      }\n    }\n  }, {\n    key: \"_resyncElements\",\n    value: function _resyncElements(resetNewElements) {\n      var data = this._data;\n      var elements = this._cachedMeta.data;\n      var _iterator3 = _createForOfIteratorHelper(this._syncList),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var _step3$value = (0, _slicedToArray2.default)(_step3.value, 3),\n            method = _step3$value[0],\n            arg1 = _step3$value[1],\n            arg2 = _step3$value[2];\n          this[method](arg1, arg2);\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      this._syncList = [];\n      var numMeta = elements.length;\n      var numData = data.length;\n      var count = Math.min(numData, numMeta);\n      if (count) {\n        this.parse(0, count);\n      }\n      if (numData > numMeta) {\n        this._insertElements(numMeta, numData - numMeta, resetNewElements);\n      } else if (numData < numMeta) {\n        this._removeElements(numData, numMeta - numData);\n      }\n    }\n  }, {\n    key: \"_insertElements\",\n    value: function _insertElements(start, count) {\n      var resetNewElements = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var meta = this._cachedMeta;\n      var data = meta.data;\n      var end = start + count;\n      var i;\n      var move = function move(arr) {\n        arr.length += count;\n        for (i = arr.length - 1; i >= end; i--) {\n          arr[i] = arr[i - count];\n        }\n      };\n      move(data);\n      for (i = start; i < end; ++i) {\n        data[i] = new this.dataElementType();\n      }\n      if (this._parsing) {\n        move(meta._parsed);\n      }\n      this.parse(start, count);\n      if (resetNewElements) {\n        this.updateElements(data, start, count, 'reset');\n      }\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(element, start, count, mode) {}\n  }, {\n    key: \"_removeElements\",\n    value: function _removeElements(start, count) {\n      var meta = this._cachedMeta;\n      if (this._parsing) {\n        var removed = meta._parsed.splice(start, count);\n        if (meta._stacked) {\n          clearStacks(meta, removed);\n        }\n      }\n      meta.data.splice(start, count);\n    }\n  }, {\n    key: \"_sync\",\n    value: function _sync(args) {\n      if (this._parsing) {\n        this._syncList.push(args);\n      } else {\n        var _args2 = (0, _slicedToArray2.default)(args, 3),\n          method = _args2[0],\n          arg1 = _args2[1],\n          arg2 = _args2[2];\n        this[method](arg1, arg2);\n      }\n      this.chart._dataChanges.push([this.index].concat((0, _toConsumableArray2.default)(args)));\n    }\n  }, {\n    key: \"_onDataPush\",\n    value: function _onDataPush() {\n      var count = arguments.length;\n      this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n    }\n  }, {\n    key: \"_onDataPop\",\n    value: function _onDataPop() {\n      this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n    }\n  }, {\n    key: \"_onDataShift\",\n    value: function _onDataShift() {\n      this._sync(['_removeElements', 0, 1]);\n    }\n  }, {\n    key: \"_onDataSplice\",\n    value: function _onDataSplice(start, count) {\n      if (count) {\n        this._sync(['_removeElements', start, count]);\n      }\n      var newCount = arguments.length - 2;\n      if (newCount) {\n        this._sync(['_insertElements', start, newCount]);\n      }\n    }\n  }, {\n    key: \"_onDataUnshift\",\n    value: function _onDataUnshift() {\n      this._sync(['_insertElements', 0, arguments.length]);\n    }\n  }]);\n}();\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    var visibleMetas = scale.getMatchingVisibleMetas(type);\n    var values = [];\n    for (var i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = (0, _helpersSegment._)(values.sort(function (a, b) {\n      return a - b;\n    }));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  var scale = meta.iScale;\n  var values = getAllScaleValues(scale, meta.type);\n  var min = scale._length;\n  var i, ilen, curr, prev;\n  var updateMinAndPrev = function updateMinAndPrev() {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if ((0, _helpersSegment.j)(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  var thickness = options.barThickness;\n  var size, ratio;\n  if ((0, _helpersSegment.k)(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio: ratio,\n    start: ruler.pixels[index] - size / 2\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  var pixels = ruler.pixels;\n  var curr = pixels[index];\n  var prev = index > 0 ? pixels[index - 1] : null;\n  var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  var percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  var start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  var size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start: start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  var startValue = vScale.parse(entry[0], i);\n  var endValue = vScale.parse(entry[1], i);\n  var min = Math.min(startValue, endValue);\n  var max = Math.max(startValue, endValue);\n  var barStart = min;\n  var barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart: barStart,\n    barEnd: barEnd,\n    start: startValue,\n    end: endValue,\n    min: min,\n    max: max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if ((0, _helpersSegment.b)(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  var iScale = meta.iScale;\n  var vScale = meta.vScale;\n  var labels = iScale.getLabels();\n  var singleScale = iScale === vScale;\n  var parsed = [];\n  var i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return (0, _helpersSegment.s)(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  var reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {\n    start: start,\n    end: end,\n    reverse: reverse,\n    top: top,\n    bottom: bottom\n  };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  var edge = options.borderSkipped;\n  var res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  if (edge === true) {\n    properties.borderSkipped = {\n      top: true,\n      right: true,\n      bottom: true,\n      left: true\n    };\n    return;\n  }\n  var _borderProps = borderProps(properties),\n    start = _borderProps.start,\n    end = _borderProps.end,\n    reverse = _borderProps.reverse,\n    top = _borderProps.top,\n    bottom = _borderProps.bottom;\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, _ref, ratio) {\n  var inflateAmount = _ref.inflateAmount;\n  properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nvar BarController = exports.BarController = /*#__PURE__*/function (_DatasetController) {\n  function BarController() {\n    (0, _classCallCheck2.default)(this, BarController);\n    return _callSuper(this, BarController, arguments);\n  }\n  (0, _inherits2.default)(BarController, _DatasetController);\n  return (0, _createClass2.default)(BarController, [{\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var iScale = meta.iScale,\n        vScale = meta.vScale;\n      var _this$_parsing2 = this._parsing,\n        _this$_parsing2$xAxis = _this$_parsing2.xAxisKey,\n        xAxisKey = _this$_parsing2$xAxis === void 0 ? 'x' : _this$_parsing2$xAxis,\n        _this$_parsing2$yAxis = _this$_parsing2.yAxisKey,\n        yAxisKey = _this$_parsing2$yAxis === void 0 ? 'y' : _this$_parsing2$yAxis;\n      var iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n      var vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n      var parsed = [];\n      var i, ilen, item, obj;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        obj = data[i];\n        item = {};\n        item[iScale.axis] = iScale.parse((0, _helpersSegment.f)(obj, iAxisKey), i);\n        parsed.push(parseValue((0, _helpersSegment.f)(obj, vAxisKey), item, vScale, i));\n      }\n      return parsed;\n    }\n  }, {\n    key: \"updateRangeFromParsed\",\n    value: function updateRangeFromParsed(range, scale, parsed, stack) {\n      _superPropGet(BarController, \"updateRangeFromParsed\", this, 3)([range, scale, parsed, stack]);\n      var custom = parsed._custom;\n      if (custom && scale === this._cachedMeta.vScale) {\n        range.min = Math.min(range.min, custom.min);\n        range.max = Math.max(range.max, custom.max);\n      }\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      return 0;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var iScale = meta.iScale,\n        vScale = meta.vScale;\n      var parsed = this.getParsed(index);\n      var custom = parsed._custom;\n      var value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n      return {\n        label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n        value: value\n      };\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n      _superPropGet(BarController, \"initialize\", this, 3)([]);\n      var meta = this._cachedMeta;\n      meta.stack = this.getDataset().stack;\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(bars, start, count, mode) {\n      var reset = mode === 'reset';\n      var index = this.index,\n        vScale = this._cachedMeta.vScale;\n      var base = vScale.getBasePixel();\n      var horizontal = vScale.isHorizontal();\n      var ruler = this._getRuler();\n      var _this$_getSharedOptio = this._getSharedOptions(start, mode),\n        sharedOptions = _this$_getSharedOptio.sharedOptions,\n        includeOptions = _this$_getSharedOptio.includeOptions;\n      for (var i = start; i < start + count; i++) {\n        var parsed = this.getParsed(i);\n        var vpixels = reset || (0, _helpersSegment.k)(parsed[vScale.axis]) ? {\n          base: base,\n          head: base\n        } : this._calculateBarValuePixels(i);\n        var ipixels = this._calculateBarIndexPixels(i, ruler);\n        var stack = (parsed._stacks || {})[vScale.axis];\n        var properties = {\n          horizontal: horizontal,\n          base: vpixels.base,\n          enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n          x: horizontal ? vpixels.head : ipixels.center,\n          y: horizontal ? ipixels.center : vpixels.head,\n          height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n          width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n        };\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n        }\n        var options = properties.options || bars[i].options;\n        setBorderSkipped(properties, options, stack, index);\n        setInflateAmount(properties, options, ruler.ratio);\n        this.updateElement(bars[i], i, properties, mode);\n      }\n    }\n  }, {\n    key: \"_getStacks\",\n    value: function _getStacks(last, dataIndex) {\n      var iScale = this._cachedMeta.iScale;\n      var metasets = iScale.getMatchingVisibleMetas(this._type).filter(function (meta) {\n        return meta.controller.options.grouped;\n      });\n      var stacked = iScale.options.stacked;\n      var stacks = [];\n      var skipNull = function skipNull(meta) {\n        var parsed = meta.controller.getParsed(dataIndex);\n        var val = parsed && parsed[meta.vScale.axis];\n        if ((0, _helpersSegment.k)(val) || isNaN(val)) {\n          return true;\n        }\n      };\n      var _iterator4 = _createForOfIteratorHelper(metasets),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var meta = _step4.value;\n          if (dataIndex !== undefined && skipNull(meta)) {\n            continue;\n          }\n          if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n            stacks.push(meta.stack);\n          }\n          if (meta.index === last) {\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n      if (!stacks.length) {\n        stacks.push(undefined);\n      }\n      return stacks;\n    }\n  }, {\n    key: \"_getStackCount\",\n    value: function _getStackCount(index) {\n      return this._getStacks(undefined, index).length;\n    }\n  }, {\n    key: \"_getStackIndex\",\n    value: function _getStackIndex(datasetIndex, name, dataIndex) {\n      var stacks = this._getStacks(datasetIndex, dataIndex);\n      var index = name !== undefined ? stacks.indexOf(name) : -1;\n      return index === -1 ? stacks.length - 1 : index;\n    }\n  }, {\n    key: \"_getRuler\",\n    value: function _getRuler() {\n      var opts = this.options;\n      var meta = this._cachedMeta;\n      var iScale = meta.iScale;\n      var pixels = [];\n      var i, ilen;\n      for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n        pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n      }\n      var barThickness = opts.barThickness;\n      var min = barThickness || computeMinSampleSize(meta);\n      return {\n        min: min,\n        pixels: pixels,\n        start: iScale._startPixel,\n        end: iScale._endPixel,\n        stackCount: this._getStackCount(),\n        scale: iScale,\n        grouped: opts.grouped,\n        ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n      };\n    }\n  }, {\n    key: \"_calculateBarValuePixels\",\n    value: function _calculateBarValuePixels(index) {\n      var _this$_cachedMeta = this._cachedMeta,\n        vScale = _this$_cachedMeta.vScale,\n        _stacked = _this$_cachedMeta._stacked,\n        _this$options = this.options,\n        baseValue = _this$options.base,\n        minBarLength = _this$options.minBarLength;\n      var actualBase = baseValue || 0;\n      var parsed = this.getParsed(index);\n      var custom = parsed._custom;\n      var floating = isFloatBar(custom);\n      var value = parsed[vScale.axis];\n      var start = 0;\n      var length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n      var head, size;\n      if (length !== value) {\n        start = length - value;\n        length = value;\n      }\n      if (floating) {\n        value = custom.barStart;\n        length = custom.barEnd - custom.barStart;\n        if (value !== 0 && (0, _helpersSegment.s)(value) !== (0, _helpersSegment.s)(custom.barEnd)) {\n          start = 0;\n        }\n        start += value;\n      }\n      var startValue = !(0, _helpersSegment.k)(baseValue) && !floating ? baseValue : start;\n      var base = vScale.getPixelForValue(startValue);\n      if (this.chart.getDataVisibility(index)) {\n        head = vScale.getPixelForValue(start + length);\n      } else {\n        head = base;\n      }\n      size = head - base;\n      if (Math.abs(size) < minBarLength) {\n        size = barSign(size, vScale, actualBase) * minBarLength;\n        if (value === actualBase) {\n          base -= size / 2;\n        }\n        var startPixel = vScale.getPixelForDecimal(0);\n        var endPixel = vScale.getPixelForDecimal(1);\n        var min = Math.min(startPixel, endPixel);\n        var max = Math.max(startPixel, endPixel);\n        base = Math.max(Math.min(base, max), min);\n        head = base + size;\n      }\n      if (base === vScale.getPixelForValue(actualBase)) {\n        var halfGrid = (0, _helpersSegment.s)(size) * vScale.getLineWidthForValue(actualBase) / 2;\n        base += halfGrid;\n        size -= halfGrid;\n      }\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    }\n  }, {\n    key: \"_calculateBarIndexPixels\",\n    value: function _calculateBarIndexPixels(index, ruler) {\n      var scale = ruler.scale;\n      var options = this.options;\n      var skipNull = options.skipNull;\n      var maxBarThickness = (0, _helpersSegment.v)(options.maxBarThickness, Infinity);\n      var center, size;\n      if (ruler.grouped) {\n        var stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n        var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n        var stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n        center = range.start + range.chunk * stackIndex + range.chunk / 2;\n        size = Math.min(maxBarThickness, range.chunk * range.ratio);\n      } else {\n        center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n        size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n      }\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var meta = this._cachedMeta;\n      var vScale = meta.vScale;\n      var rects = meta.data;\n      var ilen = rects.length;\n      var i = 0;\n      for (; i < ilen; ++i) {\n        if (this.getParsed(i)[vScale.axis] !== null) {\n          rects[i].draw(this._ctx);\n        }\n      }\n    }\n  }]);\n}(DatasetController);\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true\n    }\n  }\n};\nvar BubbleController = exports.BubbleController = /*#__PURE__*/function (_DatasetController2) {\n  function BubbleController() {\n    (0, _classCallCheck2.default)(this, BubbleController);\n    return _callSuper(this, BubbleController, arguments);\n  }\n  (0, _inherits2.default)(BubbleController, _DatasetController2);\n  return (0, _createClass2.default)(BubbleController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n      _superPropGet(BubbleController, \"initialize\", this, 3)([]);\n    }\n  }, {\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      var parsed = _superPropGet(BubbleController, \"parsePrimitiveData\", this, 3)([meta, data, start, count]);\n      for (var i = 0; i < parsed.length; i++) {\n        parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n      }\n      return parsed;\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      var parsed = _superPropGet(BubbleController, \"parseArrayData\", this, 3)([meta, data, start, count]);\n      for (var i = 0; i < parsed.length; i++) {\n        var item = data[start + i];\n        parsed[i]._custom = (0, _helpersSegment.v)(item[2], this.resolveDataElementOptions(i + start).radius);\n      }\n      return parsed;\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var parsed = _superPropGet(BubbleController, \"parseObjectData\", this, 3)([meta, data, start, count]);\n      for (var i = 0; i < parsed.length; i++) {\n        var item = data[start + i];\n        parsed[i]._custom = (0, _helpersSegment.v)(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n      }\n      return parsed;\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var data = this._cachedMeta.data;\n      var max = 0;\n      for (var i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var xScale = meta.xScale,\n        yScale = meta.yScale;\n      var parsed = this.getParsed(index);\n      var x = xScale.getLabelForValue(parsed.x);\n      var y = yScale.getLabelForValue(parsed.y);\n      var r = parsed._custom;\n      return {\n        label: meta.label,\n        value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var points = this._cachedMeta.data;\n      this.updateElements(points, 0, points.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var reset = mode === 'reset';\n      var _this$_cachedMeta2 = this._cachedMeta,\n        iScale = _this$_cachedMeta2.iScale,\n        vScale = _this$_cachedMeta2.vScale;\n      var _this$_getSharedOptio2 = this._getSharedOptions(start, mode),\n        sharedOptions = _this$_getSharedOptio2.sharedOptions,\n        includeOptions = _this$_getSharedOptio2.includeOptions;\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      for (var i = start; i < start + count; i++) {\n        var point = points[i];\n        var parsed = !reset && this.getParsed(i);\n        var properties = {};\n        var iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n        var vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel);\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n          if (reset) {\n            properties.options.radius = 0;\n          }\n        }\n        this.updateElement(point, i, properties, mode);\n      }\n    }\n  }, {\n    key: \"resolveDataElementOptions\",\n    value: function resolveDataElementOptions(index, mode) {\n      var parsed = this.getParsed(index);\n      var values = _superPropGet(BubbleController, \"resolveDataElementOptions\", this, 3)([index, mode]);\n      if (values.$shared) {\n        values = Object.assign({}, values, {\n          $shared: false\n        });\n      }\n      var radius = values.radius;\n      if (mode !== 'active') {\n        values.radius = 0;\n      }\n      values.radius += (0, _helpersSegment.v)(parsed && parsed._custom, radius);\n      return values;\n    }\n  }]);\n}(DatasetController);\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        }\n      }\n    }\n  }\n};\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  var ratioX = 1;\n  var ratioY = 1;\n  var offsetX = 0;\n  var offsetY = 0;\n  if (circumference < _helpersSegment.T) {\n    var startAngle = rotation;\n    var endAngle = startAngle + circumference;\n    var startX = Math.cos(startAngle);\n    var startY = Math.sin(startAngle);\n    var endX = Math.cos(endAngle);\n    var endY = Math.sin(endAngle);\n    var calcMax = function calcMax(angle, a, b) {\n      return (0, _helpersSegment.p)(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    };\n    var calcMin = function calcMin(angle, a, b) {\n      return (0, _helpersSegment.p)(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    };\n    var maxX = calcMax(0, startX, endX);\n    var maxY = calcMax(_helpersSegment.H, startY, endY);\n    var minX = calcMin(_helpersSegment.P, startX, endX);\n    var minY = calcMin(_helpersSegment.P + _helpersSegment.H, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {\n    ratioX: ratioX,\n    ratioY: ratioY,\n    offsetX: offsetX,\n    offsetY: offsetY\n  };\n}\nvar DoughnutController = exports.DoughnutController = /*#__PURE__*/function (_DatasetController3) {\n  function DoughnutController(chart, datasetIndex) {\n    var _this4;\n    (0, _classCallCheck2.default)(this, DoughnutController);\n    _this4 = _callSuper(this, DoughnutController, [chart, datasetIndex]);\n    _this4.enableOptionSharing = true;\n    _this4.innerRadius = undefined;\n    _this4.outerRadius = undefined;\n    _this4.offsetX = undefined;\n    _this4.offsetY = undefined;\n    return _this4;\n  }\n  (0, _inherits2.default)(DoughnutController, _DatasetController3);\n  return (0, _createClass2.default)(DoughnutController, [{\n    key: \"linkScales\",\n    value: function linkScales() {}\n  }, {\n    key: \"parse\",\n    value: function parse(start, count) {\n      var data = this.getDataset().data;\n      var meta = this._cachedMeta;\n      if (this._parsing === false) {\n        meta._parsed = data;\n      } else {\n        var getter = function getter(i) {\n          return +data[i];\n        };\n        if ((0, _helpersSegment.i)(data[start])) {\n          var _this$_parsing$key = this._parsing.key,\n            key = _this$_parsing$key === void 0 ? 'value' : _this$_parsing$key;\n          getter = function getter(i) {\n            return +(0, _helpersSegment.f)(data[i], key);\n          };\n        }\n        var i, ilen;\n        for (i = start, ilen = start + count; i < ilen; ++i) {\n          meta._parsed[i] = getter(i);\n        }\n      }\n    }\n  }, {\n    key: \"_getRotation\",\n    value: function _getRotation() {\n      return (0, _helpersSegment.t)(this.options.rotation - 90);\n    }\n  }, {\n    key: \"_getCircumference\",\n    value: function _getCircumference() {\n      return (0, _helpersSegment.t)(this.options.circumference);\n    }\n  }, {\n    key: \"_getRotationExtents\",\n    value: function _getRotationExtents() {\n      var min = _helpersSegment.T;\n      var max = -_helpersSegment.T;\n      for (var i = 0; i < this.chart.data.datasets.length; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          var controller = this.chart.getDatasetMeta(i).controller;\n          var rotation = controller._getRotation();\n          var circumference = controller._getCircumference();\n          min = Math.min(min, rotation);\n          max = Math.max(max, rotation + circumference);\n        }\n      }\n      return {\n        rotation: min,\n        circumference: max - min\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var chart = this.chart;\n      var chartArea = chart.chartArea;\n      var meta = this._cachedMeta;\n      var arcs = meta.data;\n      var spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n      var maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n      var cutout = Math.min((0, _helpersSegment.m)(this.options.cutout, maxSize), 1);\n      var chartWeight = this._getRingWeight(this.index);\n      var _this$_getRotationExt = this._getRotationExtents(),\n        circumference = _this$_getRotationExt.circumference,\n        rotation = _this$_getRotationExt.rotation;\n      var _getRatioAndOffset = getRatioAndOffset(rotation, circumference, cutout),\n        ratioX = _getRatioAndOffset.ratioX,\n        ratioY = _getRatioAndOffset.ratioY,\n        offsetX = _getRatioAndOffset.offsetX,\n        offsetY = _getRatioAndOffset.offsetY;\n      var maxWidth = (chartArea.width - spacing) / ratioX;\n      var maxHeight = (chartArea.height - spacing) / ratioY;\n      var maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n      var outerRadius = (0, _helpersSegment.n)(this.options.radius, maxRadius);\n      var innerRadius = Math.max(outerRadius * cutout, 0);\n      var radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n      this.offsetX = offsetX * outerRadius;\n      this.offsetY = offsetY * outerRadius;\n      meta.total = this.calculateTotal();\n      this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n      this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n      this.updateElements(arcs, 0, arcs.length, mode);\n    }\n  }, {\n    key: \"_circumference\",\n    value: function _circumference(i, reset) {\n      var opts = this.options;\n      var meta = this._cachedMeta;\n      var circumference = this._getCircumference();\n      if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n        return 0;\n      }\n      return this.calculateCircumference(meta._parsed[i] * circumference / _helpersSegment.T);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(arcs, start, count, mode) {\n      var reset = mode === 'reset';\n      var chart = this.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var animateScale = reset && animationOpts.animateScale;\n      var innerRadius = animateScale ? 0 : this.innerRadius;\n      var outerRadius = animateScale ? 0 : this.outerRadius;\n      var _this$_getSharedOptio3 = this._getSharedOptions(start, mode),\n        sharedOptions = _this$_getSharedOptio3.sharedOptions,\n        includeOptions = _this$_getSharedOptio3.includeOptions;\n      var startAngle = this._getRotation();\n      var i;\n      for (i = 0; i < start; ++i) {\n        startAngle += this._circumference(i, reset);\n      }\n      for (i = start; i < start + count; ++i) {\n        var circumference = this._circumference(i, reset);\n        var arc = arcs[i];\n        var properties = {\n          x: centerX + this.offsetX,\n          y: centerY + this.offsetY,\n          startAngle: startAngle,\n          endAngle: startAngle + circumference,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius\n        };\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n        }\n        startAngle += circumference;\n        this.updateElement(arc, i, properties, mode);\n      }\n    }\n  }, {\n    key: \"calculateTotal\",\n    value: function calculateTotal() {\n      var meta = this._cachedMeta;\n      var metaData = meta.data;\n      var total = 0;\n      var i;\n      for (i = 0; i < metaData.length; i++) {\n        var value = meta._parsed[i];\n        if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n          total += Math.abs(value);\n        }\n      }\n      return total;\n    }\n  }, {\n    key: \"calculateCircumference\",\n    value: function calculateCircumference(value) {\n      var total = this._cachedMeta.total;\n      if (total > 0 && !isNaN(value)) {\n        return _helpersSegment.T * (Math.abs(value) / total);\n      }\n      return 0;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var chart = this.chart;\n      var labels = chart.data.labels || [];\n      var value = (0, _helpersSegment.o)(meta._parsed[index], chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value: value\n      };\n    }\n  }, {\n    key: \"getMaxBorderWidth\",\n    value: function getMaxBorderWidth(arcs) {\n      var max = 0;\n      var chart = this.chart;\n      var i, ilen, meta, controller, options;\n      if (!arcs) {\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n            controller = meta.controller;\n            break;\n          }\n        }\n      }\n      if (!arcs) {\n        return 0;\n      }\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        options = controller.resolveDataElementOptions(i);\n        if (options.borderAlign !== 'inner') {\n          max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n        }\n      }\n      return max;\n    }\n  }, {\n    key: \"getMaxOffset\",\n    value: function getMaxOffset(arcs) {\n      var max = 0;\n      for (var i = 0, ilen = arcs.length; i < ilen; ++i) {\n        var options = this.resolveDataElementOptions(i);\n        max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n      }\n      return max;\n    }\n  }, {\n    key: \"_getRingWeightOffset\",\n    value: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n      return ringWeightOffset;\n    }\n  }, {\n    key: \"_getRingWeight\",\n    value: function _getRingWeight(datasetIndex) {\n      return Math.max((0, _helpersSegment.v)(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n  }, {\n    key: \"_getVisibleDatasetWeightTotal\",\n    value: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n  }]);\n}(DatasetController);\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    }\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r'\n};\nDoughnutController.descriptors = {\n  _scriptable: function _scriptable(name) {\n    return name !== 'spacing';\n  },\n  _indexable: function _indexable(name) {\n    return name !== 'spacing';\n  }\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            var pointStyle = chart.legend.options.labels.pointStyle;\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem) {\n          var dataLabel = tooltipItem.label;\n          var value = ': ' + tooltipItem.formattedValue;\n          if ((0, _helpersSegment.b)(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\nvar LineController = exports.LineController = /*#__PURE__*/function (_DatasetController4) {\n  function LineController() {\n    (0, _classCallCheck2.default)(this, LineController);\n    return _callSuper(this, LineController, arguments);\n  }\n  (0, _inherits2.default)(LineController, _DatasetController4);\n  return (0, _createClass2.default)(LineController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n      this.supportsDecimation = true;\n      _superPropGet(LineController, \"initialize\", this, 3)([]);\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      var line = meta.dataset,\n        _meta$data = meta.data,\n        points = _meta$data === void 0 ? [] : _meta$data,\n        _dataset = meta._dataset;\n      var animationsDisabled = this.chart._animationsDisabled;\n      var _getStartAndCountOfVi = (0, _helpersSegment.q)(meta, points, animationsDisabled),\n        start = _getStartAndCountOfVi.start,\n        count = _getStartAndCountOfVi.count;\n      this._drawStart = start;\n      this._drawCount = count;\n      if ((0, _helpersSegment.w)(meta)) {\n        start = 0;\n        count = points.length;\n      }\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      var options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options: options\n      }, mode);\n      this.updateElements(points, start, count, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var reset = mode === 'reset';\n      var _this$_cachedMeta3 = this._cachedMeta,\n        iScale = _this$_cachedMeta3.iScale,\n        vScale = _this$_cachedMeta3.vScale,\n        _stacked = _this$_cachedMeta3._stacked,\n        _dataset = _this$_cachedMeta3._dataset;\n      var _this$_getSharedOptio4 = this._getSharedOptions(start, mode),\n        sharedOptions = _this$_getSharedOptio4.sharedOptions,\n        includeOptions = _this$_getSharedOptio4.includeOptions;\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      var _this$options2 = this.options,\n        spanGaps = _this$options2.spanGaps,\n        segment = _this$options2.segment;\n      var maxGapLength = (0, _helpersSegment.x)(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n      var directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n      var prevParsed = start > 0 && this.getParsed(start - 1);\n      for (var i = start; i < start + count; ++i) {\n        var point = points[i];\n        var parsed = this.getParsed(i);\n        var properties = directUpdate ? point : {};\n        var nullData = (0, _helpersSegment.k)(parsed[vAxis]);\n        var iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n        var vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n        properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n        if (segment) {\n          properties.parsed = parsed;\n          properties.raw = _dataset.data[i];\n        }\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        }\n        if (!directUpdate) {\n          this.updateElement(point, i, properties, mode);\n        }\n        prevParsed = parsed;\n      }\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var meta = this._cachedMeta;\n      var dataset = meta.dataset;\n      var border = dataset.options && dataset.options.borderWidth || 0;\n      var data = meta.data || [];\n      if (!data.length) {\n        return border;\n      }\n      var firstPoint = data[0].size(this.resolveDataElementOptions(0));\n      var lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n      return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var meta = this._cachedMeta;\n      meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n      _superPropGet(LineController, \"draw\", this, 3)([]);\n    }\n  }]);\n}(DatasetController);\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category'\n    },\n    _value_: {\n      type: 'linear'\n    }\n  }\n};\nvar PolarAreaController = exports.PolarAreaController = /*#__PURE__*/function (_DatasetController5) {\n  function PolarAreaController(chart, datasetIndex) {\n    var _this5;\n    (0, _classCallCheck2.default)(this, PolarAreaController);\n    _this5 = _callSuper(this, PolarAreaController, [chart, datasetIndex]);\n    _this5.innerRadius = undefined;\n    _this5.outerRadius = undefined;\n    return _this5;\n  }\n  (0, _inherits2.default)(PolarAreaController, _DatasetController5);\n  return (0, _createClass2.default)(PolarAreaController, [{\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var chart = this.chart;\n      var labels = chart.data.labels || [];\n      var value = (0, _helpersSegment.o)(meta._parsed[index].r, chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value: value\n      };\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      return _helpersSegment.y.bind(this)(meta, data, start, count);\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var arcs = this._cachedMeta.data;\n      this._updateRadius();\n      this.updateElements(arcs, 0, arcs.length, mode);\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax() {\n      var _this6 = this;\n      var meta = this._cachedMeta;\n      var range = {\n        min: Number.POSITIVE_INFINITY,\n        max: Number.NEGATIVE_INFINITY\n      };\n      meta.data.forEach(function (element, index) {\n        var parsed = _this6.getParsed(index).r;\n        if (!isNaN(parsed) && _this6.chart.getDataVisibility(index)) {\n          if (parsed < range.min) {\n            range.min = parsed;\n          }\n          if (parsed > range.max) {\n            range.max = parsed;\n          }\n        }\n      });\n      return range;\n    }\n  }, {\n    key: \"_updateRadius\",\n    value: function _updateRadius() {\n      var chart = this.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      var outerRadius = Math.max(minSize / 2, 0);\n      var innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      var radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n      this.outerRadius = outerRadius - radiusLength * this.index;\n      this.innerRadius = this.outerRadius - radiusLength;\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(arcs, start, count, mode) {\n      var reset = mode === 'reset';\n      var chart = this.chart;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = this._cachedMeta.rScale;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter;\n      var datasetStartAngle = scale.getIndexAngle(0) - 0.5 * _helpersSegment.P;\n      var angle = datasetStartAngle;\n      var i;\n      var defaultAngle = 360 / this.countVisibleElements();\n      for (i = 0; i < start; ++i) {\n        angle += this._computeAngle(i, mode, defaultAngle);\n      }\n      for (i = start; i < start + count; i++) {\n        var arc = arcs[i];\n        var startAngle = angle;\n        var endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n        var outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n        angle = endAngle;\n        if (reset) {\n          if (animationOpts.animateScale) {\n            outerRadius = 0;\n          }\n          if (animationOpts.animateRotate) {\n            startAngle = endAngle = datasetStartAngle;\n          }\n        }\n        var properties = {\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: outerRadius,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n        };\n        this.updateElement(arc, i, properties, mode);\n      }\n    }\n  }, {\n    key: \"countVisibleElements\",\n    value: function countVisibleElements() {\n      var _this7 = this;\n      var meta = this._cachedMeta;\n      var count = 0;\n      meta.data.forEach(function (element, index) {\n        if (!isNaN(_this7.getParsed(index).r) && _this7.chart.getDataVisibility(index)) {\n          count++;\n        }\n      });\n      return count;\n    }\n  }, {\n    key: \"_computeAngle\",\n    value: function _computeAngle(index, mode, defaultAngle) {\n      return this.chart.getDataVisibility(index) ? (0, _helpersSegment.t)(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n  }]);\n}(DatasetController);\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    }\n  },\n  indexAxis: 'r',\n  startAngle: 0\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            var pointStyle = chart.legend.options.labels.pointStyle;\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\nvar PieController = exports.PieController = /*#__PURE__*/function (_DoughnutController) {\n  function PieController() {\n    (0, _classCallCheck2.default)(this, PieController);\n    return _callSuper(this, PieController, arguments);\n  }\n  (0, _inherits2.default)(PieController, _DoughnutController);\n  return (0, _createClass2.default)(PieController);\n}(DoughnutController);\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\nvar RadarController = exports.RadarController = /*#__PURE__*/function (_DatasetController6) {\n  function RadarController() {\n    (0, _classCallCheck2.default)(this, RadarController);\n    return _callSuper(this, RadarController, arguments);\n  }\n  (0, _inherits2.default)(RadarController, _DatasetController6);\n  return (0, _createClass2.default)(RadarController, [{\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var vScale = this._cachedMeta.vScale;\n      var parsed = this.getParsed(index);\n      return {\n        label: vScale.getLabels()[index],\n        value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n      };\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      return _helpersSegment.y.bind(this)(meta, data, start, count);\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var labels = meta.iScale.getLabels();\n      line.points = points;\n      if (mode !== 'resize') {\n        var options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n          options.borderWidth = 0;\n        }\n        var properties = {\n          _loop: true,\n          _fullLoop: labels.length === points.length,\n          options: options\n        };\n        this.updateElement(line, undefined, properties, mode);\n      }\n      this.updateElements(points, 0, points.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var scale = this._cachedMeta.rScale;\n      var reset = mode === 'reset';\n      for (var i = start; i < start + count; i++) {\n        var point = points[i];\n        var options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        var pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n        var x = reset ? scale.xCenter : pointPosition.x;\n        var y = reset ? scale.yCenter : pointPosition.y;\n        var properties = {\n          x: x,\n          y: y,\n          angle: pointPosition.angle,\n          skip: isNaN(x) || isNaN(y),\n          options: options\n        };\n        this.updateElement(point, i, properties, mode);\n      }\n    }\n  }]);\n}(DatasetController);\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  }\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear'\n    }\n  }\n};\nvar Element = exports.Element = /*#__PURE__*/function () {\n  function Element() {\n    (0, _classCallCheck2.default)(this, Element);\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  return (0, _createClass2.default)(Element, [{\n    key: \"tooltipPosition\",\n    value: function tooltipPosition(useFinalPosition) {\n      var _this$getProps = this.getProps(['x', 'y'], useFinalPosition),\n        x = _this$getProps.x,\n        y = _this$getProps.y;\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }, {\n    key: \"hasValue\",\n    value: function hasValue() {\n      return (0, _helpersSegment.x)(this.x) && (0, _helpersSegment.x)(this.y);\n    }\n  }, {\n    key: \"getProps\",\n    value: function getProps(props, final) {\n      var _this8 = this;\n      var anims = this.$animations;\n      if (!final || !anims) {\n        return this;\n      }\n      var ret = {};\n      props.forEach(function (prop) {\n        ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : _this8[prop];\n      });\n      return ret;\n    }\n  }]);\n}();\nElement.defaults = {};\nElement.defaultRoutes = undefined;\nvar formatters = {\n  values: function values(value) {\n    return (0, _helpersSegment.b)(value) ? value : '' + value;\n  },\n  numeric: function numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    var locale = this.chart.options.locale;\n    var notation;\n    var delta = tickValue;\n    if (ticks.length > 1) {\n      var maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    var logDelta = (0, _helpersSegment.z)(Math.abs(delta));\n    var numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    var options = {\n      notation: notation,\n      minimumFractionDigits: numDecimal,\n      maximumFractionDigits: numDecimal\n    };\n    Object.assign(options, this.options.ticks.format);\n    return (0, _helpersSegment.o)(tickValue, locale, options);\n  },\n  logarithmic: function logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    var remain = tickValue / Math.pow(10, Math.floor((0, _helpersSegment.z)(tickValue)));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  var delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = exports.Ticks = {\n  formatters: formatters\n};\n_helpersSegment.d.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: function tickWidth(_ctx, options) {\n      return options.lineWidth;\n    },\n    tickColor: function tickColor(_ctx, options) {\n      return options.color;\n    },\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2\n  }\n});\n_helpersSegment.d.route('scale.ticks', 'color', '', 'color');\n_helpersSegment.d.route('scale.grid', 'color', '', 'borderColor');\n_helpersSegment.d.route('scale.grid', 'borderColor', '', 'borderColor');\n_helpersSegment.d.route('scale.title', 'color', '', 'color');\n_helpersSegment.d.describe('scale', {\n  _fallback: false,\n  _scriptable: function _scriptable(name) {\n    return !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser';\n  },\n  _indexable: function _indexable(name) {\n    return name !== 'borderDash' && name !== 'tickBorderDash';\n  }\n});\n_helpersSegment.d.describe('scales', {\n  _fallback: 'scale'\n});\n_helpersSegment.d.describe('scale.ticks', {\n  _scriptable: function _scriptable(name) {\n    return name !== 'backdropPadding' && name !== 'callback';\n  },\n  _indexable: function _indexable(name) {\n    return name !== 'backdropPadding';\n  }\n});\nfunction autoSkip(scale, ticks) {\n  var tickOpts = scale.options.ticks;\n  var ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  var majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  var numMajorIndices = majorIndices.length;\n  var first = majorIndices[0];\n  var last = majorIndices[numMajorIndices - 1];\n  var newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  var spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    var i, ilen;\n    var avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, (0, _helpersSegment.k)(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, (0, _helpersSegment.k)(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  var offset = scale.options.offset;\n  var tickLength = scale._tickSize();\n  var maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  var maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  var evenMajorSpacing = getEvenSpacing(majorIndices);\n  var spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  var factors = (0, _helpersSegment.A)(evenMajorSpacing);\n  for (var i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    var factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  var result = [];\n  var i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  var count = 0;\n  var next = majorIndices[0];\n  var i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  var start = (0, _helpersSegment.v)(majorStart, 0);\n  var end = Math.min((0, _helpersSegment.v)(majorEnd, ticks.length), ticks.length);\n  var count = 0;\n  var length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  var len = arr.length;\n  var i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\nvar reverseAlign = function reverseAlign(align) {\n  return align === 'left' ? 'right' : align === 'right' ? 'left' : align;\n};\nvar offsetFromEdge = function offsetFromEdge(scale, edge, offset) {\n  return edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n};\nfunction sample(arr, numItems) {\n  var result = [];\n  var increment = arr.length / numItems;\n  var len = arr.length;\n  var i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  var length = scale.ticks.length;\n  var validIndex = Math.min(index, length - 1);\n  var start = scale._startPixel;\n  var end = scale._endPixel;\n  var epsilon = 1e-6;\n  var lineValue = scale.getPixelForTick(validIndex);\n  var offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  (0, _helpersSegment.Q)(caches, function (cache) {\n    var gc = cache.gc;\n    var gcLen = gc.length / 2;\n    var i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  var font = (0, _helpersSegment.O)(options.font, fallback);\n  var padding = (0, _helpersSegment.K)(options.padding);\n  var lines = (0, _helpersSegment.b)(options.text) ? options.text.length : 1;\n  return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return (0, _helpersSegment.h)(parent, {\n    scale: scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return (0, _helpersSegment.h)(parent, {\n    tick: tick,\n    index: index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  var ret = (0, _helpersSegment.R)(align);\n  if (reverse && position !== 'right' || !reverse && position === 'right') {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  var top = scale.top,\n    left = scale.left,\n    bottom = scale.bottom,\n    right = scale.right,\n    chart = scale.chart;\n  var chartArea = chart.chartArea,\n    scales = chart.scales;\n  var rotation = 0;\n  var maxWidth, titleX, titleY;\n  var height = bottom - top;\n  var width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = (0, _helpersSegment.S)(align, left, right);\n    if ((0, _helpersSegment.i)(position)) {\n      var positionAxisID = Object.keys(position)[0];\n      var value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if ((0, _helpersSegment.i)(position)) {\n      var _positionAxisID = Object.keys(position)[0];\n      var _value = position[_positionAxisID];\n      titleX = scales[_positionAxisID].getPixelForValue(_value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = (0, _helpersSegment.S)(align, bottom, top);\n    rotation = position === 'left' ? -_helpersSegment.H : _helpersSegment.H;\n  }\n  return {\n    titleX: titleX,\n    titleY: titleY,\n    maxWidth: maxWidth,\n    rotation: rotation\n  };\n}\nvar Scale = exports.Scale = /*#__PURE__*/function (_Element) {\n  function Scale(cfg) {\n    var _this9;\n    (0, _classCallCheck2.default)(this, Scale);\n    _this9 = _callSuper(this, Scale);\n    _this9.id = cfg.id;\n    _this9.type = cfg.type;\n    _this9.options = undefined;\n    _this9.ctx = cfg.ctx;\n    _this9.chart = cfg.chart;\n    _this9.top = undefined;\n    _this9.bottom = undefined;\n    _this9.left = undefined;\n    _this9.right = undefined;\n    _this9.width = undefined;\n    _this9.height = undefined;\n    _this9._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    _this9.maxWidth = undefined;\n    _this9.maxHeight = undefined;\n    _this9.paddingTop = undefined;\n    _this9.paddingBottom = undefined;\n    _this9.paddingLeft = undefined;\n    _this9.paddingRight = undefined;\n    _this9.axis = undefined;\n    _this9.labelRotation = undefined;\n    _this9.min = undefined;\n    _this9.max = undefined;\n    _this9._range = undefined;\n    _this9.ticks = [];\n    _this9._gridLineItems = null;\n    _this9._labelItems = null;\n    _this9._labelSizes = null;\n    _this9._length = 0;\n    _this9._maxLength = 0;\n    _this9._longestTextCache = {};\n    _this9._startPixel = undefined;\n    _this9._endPixel = undefined;\n    _this9._reversePixels = false;\n    _this9._userMax = undefined;\n    _this9._userMin = undefined;\n    _this9._suggestedMax = undefined;\n    _this9._suggestedMin = undefined;\n    _this9._ticksLength = 0;\n    _this9._borderValue = 0;\n    _this9._cache = {};\n    _this9._dataLimitsCached = false;\n    _this9.$context = undefined;\n    return _this9;\n  }\n  (0, _inherits2.default)(Scale, _Element);\n  return (0, _createClass2.default)(Scale, [{\n    key: \"init\",\n    value: function init(options) {\n      this.options = options.setContext(this.getContext());\n      this.axis = options.axis;\n      this._userMin = this.parse(options.min);\n      this._userMax = this.parse(options.max);\n      this._suggestedMin = this.parse(options.suggestedMin);\n      this._suggestedMax = this.parse(options.suggestedMax);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      return raw;\n    }\n  }, {\n    key: \"getUserBounds\",\n    value: function getUserBounds() {\n      var _userMin = this._userMin,\n        _userMax = this._userMax,\n        _suggestedMin = this._suggestedMin,\n        _suggestedMax = this._suggestedMax;\n      _userMin = (0, _helpersSegment.B)(_userMin, Number.POSITIVE_INFINITY);\n      _userMax = (0, _helpersSegment.B)(_userMax, Number.NEGATIVE_INFINITY);\n      _suggestedMin = (0, _helpersSegment.B)(_suggestedMin, Number.POSITIVE_INFINITY);\n      _suggestedMax = (0, _helpersSegment.B)(_suggestedMax, Number.NEGATIVE_INFINITY);\n      return {\n        min: (0, _helpersSegment.B)(_userMin, _suggestedMin),\n        max: (0, _helpersSegment.B)(_userMax, _suggestedMax),\n        minDefined: (0, _helpersSegment.g)(_userMin),\n        maxDefined: (0, _helpersSegment.g)(_userMax)\n      };\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax(canStack) {\n      var _this$getUserBounds = this.getUserBounds(),\n        min = _this$getUserBounds.min,\n        max = _this$getUserBounds.max,\n        minDefined = _this$getUserBounds.minDefined,\n        maxDefined = _this$getUserBounds.maxDefined;\n      var range;\n      if (minDefined && maxDefined) {\n        return {\n          min: min,\n          max: max\n        };\n      }\n      var metas = this.getMatchingVisibleMetas();\n      for (var i = 0, ilen = metas.length; i < ilen; ++i) {\n        range = metas[i].controller.getMinMax(this, canStack);\n        if (!minDefined) {\n          min = Math.min(min, range.min);\n        }\n        if (!maxDefined) {\n          max = Math.max(max, range.max);\n        }\n      }\n      min = maxDefined && min > max ? max : min;\n      max = minDefined && min > max ? min : max;\n      return {\n        min: (0, _helpersSegment.B)(min, (0, _helpersSegment.B)(max, min)),\n        max: (0, _helpersSegment.B)(max, (0, _helpersSegment.B)(min, max))\n      };\n    }\n  }, {\n    key: \"getPadding\",\n    value: function getPadding() {\n      return {\n        left: this.paddingLeft || 0,\n        top: this.paddingTop || 0,\n        right: this.paddingRight || 0,\n        bottom: this.paddingBottom || 0\n      };\n    }\n  }, {\n    key: \"getTicks\",\n    value: function getTicks() {\n      return this.ticks;\n    }\n  }, {\n    key: \"getLabels\",\n    value: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n  }, {\n    key: \"beforeLayout\",\n    value: function beforeLayout() {\n      this._cache = {};\n      this._dataLimitsCached = false;\n    }\n  }, {\n    key: \"beforeUpdate\",\n    value: function beforeUpdate() {\n      (0, _helpersSegment.C)(this.options.beforeUpdate, [this]);\n    }\n  }, {\n    key: \"update\",\n    value: function update(maxWidth, maxHeight, margins) {\n      var _this$options3 = this.options,\n        beginAtZero = _this$options3.beginAtZero,\n        grace = _this$options3.grace,\n        tickOpts = _this$options3.ticks;\n      var sampleSize = tickOpts.sampleSize;\n      this.beforeUpdate();\n      this.maxWidth = maxWidth;\n      this.maxHeight = maxHeight;\n      this._margins = margins = Object.assign({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      this.ticks = null;\n      this._labelSizes = null;\n      this._gridLineItems = null;\n      this._labelItems = null;\n      this.beforeSetDimensions();\n      this.setDimensions();\n      this.afterSetDimensions();\n      this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n      if (!this._dataLimitsCached) {\n        this.beforeDataLimits();\n        this.determineDataLimits();\n        this.afterDataLimits();\n        this._range = (0, _helpersSegment.D)(this, grace, beginAtZero);\n        this._dataLimitsCached = true;\n      }\n      this.beforeBuildTicks();\n      this.ticks = this.buildTicks() || [];\n      this.afterBuildTicks();\n      var samplingEnabled = sampleSize < this.ticks.length;\n      this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n      this.configure();\n      this.beforeCalculateLabelRotation();\n      this.calculateLabelRotation();\n      this.afterCalculateLabelRotation();\n      if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n        this.ticks = autoSkip(this, this.ticks);\n        this._labelSizes = null;\n        this.afterAutoSkip();\n      }\n      if (samplingEnabled) {\n        this._convertTicksToLabels(this.ticks);\n      }\n      this.beforeFit();\n      this.fit();\n      this.afterFit();\n      this.afterUpdate();\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var reversePixels = this.options.reverse;\n      var startPixel, endPixel;\n      if (this.isHorizontal()) {\n        startPixel = this.left;\n        endPixel = this.right;\n      } else {\n        startPixel = this.top;\n        endPixel = this.bottom;\n        reversePixels = !reversePixels;\n      }\n      this._startPixel = startPixel;\n      this._endPixel = endPixel;\n      this._reversePixels = reversePixels;\n      this._length = endPixel - startPixel;\n      this._alignToPixels = this.options.alignToPixels;\n    }\n  }, {\n    key: \"afterUpdate\",\n    value: function afterUpdate() {\n      (0, _helpersSegment.C)(this.options.afterUpdate, [this]);\n    }\n  }, {\n    key: \"beforeSetDimensions\",\n    value: function beforeSetDimensions() {\n      (0, _helpersSegment.C)(this.options.beforeSetDimensions, [this]);\n    }\n  }, {\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      if (this.isHorizontal()) {\n        this.width = this.maxWidth;\n        this.left = 0;\n        this.right = this.width;\n      } else {\n        this.height = this.maxHeight;\n        this.top = 0;\n        this.bottom = this.height;\n      }\n      this.paddingLeft = 0;\n      this.paddingTop = 0;\n      this.paddingRight = 0;\n      this.paddingBottom = 0;\n    }\n  }, {\n    key: \"afterSetDimensions\",\n    value: function afterSetDimensions() {\n      (0, _helpersSegment.C)(this.options.afterSetDimensions, [this]);\n    }\n  }, {\n    key: \"_callHooks\",\n    value: function _callHooks(name) {\n      this.chart.notifyPlugins(name, this.getContext());\n      (0, _helpersSegment.C)(this.options[name], [this]);\n    }\n  }, {\n    key: \"beforeDataLimits\",\n    value: function beforeDataLimits() {\n      this._callHooks('beforeDataLimits');\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {}\n  }, {\n    key: \"afterDataLimits\",\n    value: function afterDataLimits() {\n      this._callHooks('afterDataLimits');\n    }\n  }, {\n    key: \"beforeBuildTicks\",\n    value: function beforeBuildTicks() {\n      this._callHooks('beforeBuildTicks');\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      return [];\n    }\n  }, {\n    key: \"afterBuildTicks\",\n    value: function afterBuildTicks() {\n      this._callHooks('afterBuildTicks');\n    }\n  }, {\n    key: \"beforeTickToLabelConversion\",\n    value: function beforeTickToLabelConversion() {\n      (0, _helpersSegment.C)(this.options.beforeTickToLabelConversion, [this]);\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var tickOpts = this.options.ticks;\n      var i, ilen, tick;\n      for (i = 0, ilen = ticks.length; i < ilen; i++) {\n        tick = ticks[i];\n        tick.label = (0, _helpersSegment.C)(tickOpts.callback, [tick.value, i, ticks], this);\n      }\n    }\n  }, {\n    key: \"afterTickToLabelConversion\",\n    value: function afterTickToLabelConversion() {\n      (0, _helpersSegment.C)(this.options.afterTickToLabelConversion, [this]);\n    }\n  }, {\n    key: \"beforeCalculateLabelRotation\",\n    value: function beforeCalculateLabelRotation() {\n      (0, _helpersSegment.C)(this.options.beforeCalculateLabelRotation, [this]);\n    }\n  }, {\n    key: \"calculateLabelRotation\",\n    value: function calculateLabelRotation() {\n      var options = this.options;\n      var tickOpts = options.ticks;\n      var numTicks = this.ticks.length;\n      var minRotation = tickOpts.minRotation || 0;\n      var maxRotation = tickOpts.maxRotation;\n      var labelRotation = minRotation;\n      var tickWidth, maxHeight, maxLabelDiagonal;\n      if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n        this.labelRotation = minRotation;\n        return;\n      }\n      var labelSizes = this._getLabelSizes();\n      var maxLabelWidth = labelSizes.widest.width;\n      var maxLabelHeight = labelSizes.highest.height;\n      var maxWidth = (0, _helpersSegment.E)(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n      tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n      if (maxLabelWidth + 6 > tickWidth) {\n        tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n        maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n        maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n        labelRotation = (0, _helpersSegment.F)(Math.min(Math.asin((0, _helpersSegment.E)((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin((0, _helpersSegment.E)(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin((0, _helpersSegment.E)(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n        labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n      }\n      this.labelRotation = labelRotation;\n    }\n  }, {\n    key: \"afterCalculateLabelRotation\",\n    value: function afterCalculateLabelRotation() {\n      (0, _helpersSegment.C)(this.options.afterCalculateLabelRotation, [this]);\n    }\n  }, {\n    key: \"afterAutoSkip\",\n    value: function afterAutoSkip() {}\n  }, {\n    key: \"beforeFit\",\n    value: function beforeFit() {\n      (0, _helpersSegment.C)(this.options.beforeFit, [this]);\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var minSize = {\n        width: 0,\n        height: 0\n      };\n      var chart = this.chart,\n        _this$options4 = this.options,\n        tickOpts = _this$options4.ticks,\n        titleOpts = _this$options4.title,\n        gridOpts = _this$options4.grid;\n      var display = this._isVisible();\n      var isHorizontal = this.isHorizontal();\n      if (display) {\n        var titleHeight = getTitleHeight(titleOpts, chart.options.font);\n        if (isHorizontal) {\n          minSize.width = this.maxWidth;\n          minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n        } else {\n          minSize.height = this.maxHeight;\n          minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n        }\n        if (tickOpts.display && this.ticks.length) {\n          var _this$_getLabelSizes = this._getLabelSizes(),\n            first = _this$_getLabelSizes.first,\n            last = _this$_getLabelSizes.last,\n            widest = _this$_getLabelSizes.widest,\n            highest = _this$_getLabelSizes.highest;\n          var tickPadding = tickOpts.padding * 2;\n          var angleRadians = (0, _helpersSegment.t)(this.labelRotation);\n          var cos = Math.cos(angleRadians);\n          var sin = Math.sin(angleRadians);\n          if (isHorizontal) {\n            var labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n            minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n          } else {\n            var labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n            minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n          }\n          this._calculatePadding(first, last, sin, cos);\n        }\n      }\n      this._handleMargins();\n      if (isHorizontal) {\n        this.width = this._length = chart.width - this._margins.left - this._margins.right;\n        this.height = minSize.height;\n      } else {\n        this.width = minSize.width;\n        this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n      }\n    }\n  }, {\n    key: \"_calculatePadding\",\n    value: function _calculatePadding(first, last, sin, cos) {\n      var _this$options5 = this.options,\n        _this$options5$ticks = _this$options5.ticks,\n        align = _this$options5$ticks.align,\n        padding = _this$options5$ticks.padding,\n        position = _this$options5.position;\n      var isRotated = this.labelRotation !== 0;\n      var labelsBelowTicks = position !== 'top' && this.axis === 'x';\n      if (this.isHorizontal()) {\n        var offsetLeft = this.getPixelForTick(0) - this.left;\n        var offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n        var paddingLeft = 0;\n        var paddingRight = 0;\n        if (isRotated) {\n          if (labelsBelowTicks) {\n            paddingLeft = cos * first.width;\n            paddingRight = sin * last.height;\n          } else {\n            paddingLeft = sin * first.height;\n            paddingRight = cos * last.width;\n          }\n        } else if (align === 'start') {\n          paddingRight = last.width;\n        } else if (align === 'end') {\n          paddingLeft = first.width;\n        } else if (align !== 'inner') {\n          paddingLeft = first.width / 2;\n          paddingRight = last.width / 2;\n        }\n        this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n        this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n      } else {\n        var paddingTop = last.height / 2;\n        var paddingBottom = first.height / 2;\n        if (align === 'start') {\n          paddingTop = 0;\n          paddingBottom = first.height;\n        } else if (align === 'end') {\n          paddingTop = last.height;\n          paddingBottom = 0;\n        }\n        this.paddingTop = paddingTop + padding;\n        this.paddingBottom = paddingBottom + padding;\n      }\n    }\n  }, {\n    key: \"_handleMargins\",\n    value: function _handleMargins() {\n      if (this._margins) {\n        this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n        this._margins.top = Math.max(this.paddingTop, this._margins.top);\n        this._margins.right = Math.max(this.paddingRight, this._margins.right);\n        this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n      }\n    }\n  }, {\n    key: \"afterFit\",\n    value: function afterFit() {\n      (0, _helpersSegment.C)(this.options.afterFit, [this]);\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      var _this$options6 = this.options,\n        axis = _this$options6.axis,\n        position = _this$options6.position;\n      return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n  }, {\n    key: \"isFullSize\",\n    value: function isFullSize() {\n      return this.options.fullSize;\n    }\n  }, {\n    key: \"_convertTicksToLabels\",\n    value: function _convertTicksToLabels(ticks) {\n      this.beforeTickToLabelConversion();\n      this.generateTickLabels(ticks);\n      var i, ilen;\n      for (i = 0, ilen = ticks.length; i < ilen; i++) {\n        if ((0, _helpersSegment.k)(ticks[i].label)) {\n          ticks.splice(i, 1);\n          ilen--;\n          i--;\n        }\n      }\n      this.afterTickToLabelConversion();\n    }\n  }, {\n    key: \"_getLabelSizes\",\n    value: function _getLabelSizes() {\n      var labelSizes = this._labelSizes;\n      if (!labelSizes) {\n        var sampleSize = this.options.ticks.sampleSize;\n        var ticks = this.ticks;\n        if (sampleSize < ticks.length) {\n          ticks = sample(ticks, sampleSize);\n        }\n        this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n      }\n      return labelSizes;\n    }\n  }, {\n    key: \"_computeLabelSizes\",\n    value: function _computeLabelSizes(ticks, length) {\n      var ctx = this.ctx,\n        caches = this._longestTextCache;\n      var widths = [];\n      var heights = [];\n      var widestLabelSize = 0;\n      var highestLabelSize = 0;\n      var i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n      for (i = 0; i < length; ++i) {\n        label = ticks[i].label;\n        tickFont = this._resolveTickFontOptions(i);\n        ctx.font = fontString = tickFont.string;\n        cache = caches[fontString] = caches[fontString] || {\n          data: {},\n          gc: []\n        };\n        lineHeight = tickFont.lineHeight;\n        width = height = 0;\n        if (!(0, _helpersSegment.k)(label) && !(0, _helpersSegment.b)(label)) {\n          width = (0, _helpersSegment.G)(ctx, cache.data, cache.gc, width, label);\n          height = lineHeight;\n        } else if ((0, _helpersSegment.b)(label)) {\n          for (j = 0, jlen = label.length; j < jlen; ++j) {\n            nestedLabel = label[j];\n            if (!(0, _helpersSegment.k)(nestedLabel) && !(0, _helpersSegment.b)(nestedLabel)) {\n              width = (0, _helpersSegment.G)(ctx, cache.data, cache.gc, width, nestedLabel);\n              height += lineHeight;\n            }\n          }\n        }\n        widths.push(width);\n        heights.push(height);\n        widestLabelSize = Math.max(width, widestLabelSize);\n        highestLabelSize = Math.max(height, highestLabelSize);\n      }\n      garbageCollect(caches, length);\n      var widest = widths.indexOf(widestLabelSize);\n      var highest = heights.indexOf(highestLabelSize);\n      var valueAt = function valueAt(idx) {\n        return {\n          width: widths[idx] || 0,\n          height: heights[idx] || 0\n        };\n      };\n      return {\n        first: valueAt(0),\n        last: valueAt(length - 1),\n        widest: valueAt(widest),\n        highest: valueAt(highest),\n        widths: widths,\n        heights: heights\n      };\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return value;\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value, index) {\n      return NaN;\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {}\n  }, {\n    key: \"getPixelForTick\",\n    value: function getPixelForTick(index) {\n      var ticks = this.ticks;\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n      return this.getPixelForValue(ticks[index].value);\n    }\n  }, {\n    key: \"getPixelForDecimal\",\n    value: function getPixelForDecimal(decimal) {\n      if (this._reversePixels) {\n        decimal = 1 - decimal;\n      }\n      var pixel = this._startPixel + decimal * this._length;\n      return (0, _helpersSegment.I)(this._alignToPixels ? (0, _helpersSegment.J)(this.chart, pixel, 0) : pixel);\n    }\n  }, {\n    key: \"getDecimalForPixel\",\n    value: function getDecimalForPixel(pixel) {\n      var decimal = (pixel - this._startPixel) / this._length;\n      return this._reversePixels ? 1 - decimal : decimal;\n    }\n  }, {\n    key: \"getBasePixel\",\n    value: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    }\n  }, {\n    key: \"getBaseValue\",\n    value: function getBaseValue() {\n      var min = this.min,\n        max = this.max;\n      return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext(index) {\n      var ticks = this.ticks || [];\n      if (index >= 0 && index < ticks.length) {\n        var tick = ticks[index];\n        return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n      }\n      return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n  }, {\n    key: \"_tickSize\",\n    value: function _tickSize() {\n      var optionTicks = this.options.ticks;\n      var rot = (0, _helpersSegment.t)(this.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var labelSizes = this._getLabelSizes();\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = labelSizes ? labelSizes.widest.width + padding : 0;\n      var h = labelSizes ? labelSizes.highest.height + padding : 0;\n      return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n  }, {\n    key: \"_isVisible\",\n    value: function _isVisible() {\n      var display = this.options.display;\n      if (display !== 'auto') {\n        return !!display;\n      }\n      return this.getMatchingVisibleMetas().length > 0;\n    }\n  }, {\n    key: \"_computeGridLineItems\",\n    value: function _computeGridLineItems(chartArea) {\n      var axis = this.axis;\n      var chart = this.chart;\n      var options = this.options;\n      var grid = options.grid,\n        position = options.position;\n      var offset = grid.offset;\n      var isHorizontal = this.isHorizontal();\n      var ticks = this.ticks;\n      var ticksLength = ticks.length + (offset ? 1 : 0);\n      var tl = getTickMarkLength(grid);\n      var items = [];\n      var borderOpts = grid.setContext(this.getContext());\n      var axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n      var axisHalfWidth = axisWidth / 2;\n      var alignBorderValue = function alignBorderValue(pixel) {\n        return (0, _helpersSegment.J)(chart, pixel, axisWidth);\n      };\n      var borderValue, i, lineValue, alignedLineValue;\n      var tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n      if (position === 'top') {\n        borderValue = alignBorderValue(this.bottom);\n        ty1 = this.bottom - tl;\n        ty2 = borderValue - axisHalfWidth;\n        y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n        y2 = chartArea.bottom;\n      } else if (position === 'bottom') {\n        borderValue = alignBorderValue(this.top);\n        y1 = chartArea.top;\n        y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = this.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignBorderValue(this.right);\n        tx1 = this.right - tl;\n        tx2 = borderValue - axisHalfWidth;\n        x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n        x2 = chartArea.right;\n      } else if (position === 'right') {\n        borderValue = alignBorderValue(this.left);\n        x1 = chartArea.left;\n        x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n        tx1 = borderValue + axisHalfWidth;\n        tx2 = this.left + tl;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n        } else if ((0, _helpersSegment.i)(position)) {\n          var positionAxisID = Object.keys(position)[0];\n          var value = position[positionAxisID];\n          borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n        }\n        y1 = chartArea.top;\n        y2 = chartArea.bottom;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = ty1 + tl;\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n        } else if ((0, _helpersSegment.i)(position)) {\n          var _positionAxisID2 = Object.keys(position)[0];\n          var _value2 = position[_positionAxisID2];\n          borderValue = alignBorderValue(this.chart.scales[_positionAxisID2].getPixelForValue(_value2));\n        }\n        tx1 = borderValue - axisHalfWidth;\n        tx2 = tx1 - tl;\n        x1 = chartArea.left;\n        x2 = chartArea.right;\n      }\n      var limit = (0, _helpersSegment.v)(options.ticks.maxTicksLimit, ticksLength);\n      var step = Math.max(1, Math.ceil(ticksLength / limit));\n      for (i = 0; i < ticksLength; i += step) {\n        var optsAtIndex = grid.setContext(this.getContext(i));\n        var lineWidth = optsAtIndex.lineWidth;\n        var lineColor = optsAtIndex.color;\n        var borderDash = optsAtIndex.borderDash || [];\n        var borderDashOffset = optsAtIndex.borderDashOffset;\n        var tickWidth = optsAtIndex.tickWidth;\n        var tickColor = optsAtIndex.tickColor;\n        var tickBorderDash = optsAtIndex.tickBorderDash || [];\n        var tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n        lineValue = getPixelForGridLine(this, i, offset);\n        if (lineValue === undefined) {\n          continue;\n        }\n        alignedLineValue = (0, _helpersSegment.J)(chart, lineValue, lineWidth);\n        if (isHorizontal) {\n          tx1 = tx2 = x1 = x2 = alignedLineValue;\n        } else {\n          ty1 = ty2 = y1 = y2 = alignedLineValue;\n        }\n        items.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          width: lineWidth,\n          color: lineColor,\n          borderDash: borderDash,\n          borderDashOffset: borderDashOffset,\n          tickWidth: tickWidth,\n          tickColor: tickColor,\n          tickBorderDash: tickBorderDash,\n          tickBorderDashOffset: tickBorderDashOffset\n        });\n      }\n      this._ticksLength = ticksLength;\n      this._borderValue = borderValue;\n      return items;\n    }\n  }, {\n    key: \"_computeLabelItems\",\n    value: function _computeLabelItems(chartArea) {\n      var axis = this.axis;\n      var options = this.options;\n      var position = options.position,\n        optionTicks = options.ticks;\n      var isHorizontal = this.isHorizontal();\n      var ticks = this.ticks;\n      var align = optionTicks.align,\n        crossAlign = optionTicks.crossAlign,\n        padding = optionTicks.padding,\n        mirror = optionTicks.mirror;\n      var tl = getTickMarkLength(options.grid);\n      var tickAndPadding = tl + padding;\n      var hTickAndPadding = mirror ? -padding : tickAndPadding;\n      var rotation = -(0, _helpersSegment.t)(this.labelRotation);\n      var items = [];\n      var i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n      var textBaseline = 'middle';\n      if (position === 'top') {\n        y = this.bottom - hTickAndPadding;\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (position === 'bottom') {\n        y = this.top + hTickAndPadding;\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (position === 'left') {\n        var ret = this._getYAxisLabelAlignment(tl);\n        textAlign = ret.textAlign;\n        x = ret.x;\n      } else if (position === 'right') {\n        var _ret = this._getYAxisLabelAlignment(tl);\n        textAlign = _ret.textAlign;\n        x = _ret.x;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n        } else if ((0, _helpersSegment.i)(position)) {\n          var positionAxisID = Object.keys(position)[0];\n          var value = position[positionAxisID];\n          y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n        }\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n        } else if ((0, _helpersSegment.i)(position)) {\n          var _positionAxisID3 = Object.keys(position)[0];\n          var _value3 = position[_positionAxisID3];\n          x = this.chart.scales[_positionAxisID3].getPixelForValue(_value3);\n        }\n        textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n      }\n      if (axis === 'y') {\n        if (align === 'start') {\n          textBaseline = 'top';\n        } else if (align === 'end') {\n          textBaseline = 'bottom';\n        }\n      }\n      var labelSizes = this._getLabelSizes();\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        label = tick.label;\n        var optsAtIndex = optionTicks.setContext(this.getContext(i));\n        pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n        font = this._resolveTickFontOptions(i);\n        lineHeight = font.lineHeight;\n        lineCount = (0, _helpersSegment.b)(label) ? label.length : 1;\n        var halfCount = lineCount / 2;\n        var color = optsAtIndex.color;\n        var strokeColor = optsAtIndex.textStrokeColor;\n        var strokeWidth = optsAtIndex.textStrokeWidth;\n        var tickTextAlign = textAlign;\n        if (isHorizontal) {\n          x = pixel;\n          if (textAlign === 'inner') {\n            if (i === ilen - 1) {\n              tickTextAlign = !this.options.reverse ? 'right' : 'left';\n            } else if (i === 0) {\n              tickTextAlign = !this.options.reverse ? 'left' : 'right';\n            } else {\n              tickTextAlign = 'center';\n            }\n          }\n          if (position === 'top') {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = -lineCount * lineHeight + lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n            } else {\n              textOffset = -labelSizes.highest.height + lineHeight / 2;\n            }\n          } else {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n            } else {\n              textOffset = labelSizes.highest.height - lineCount * lineHeight;\n            }\n          }\n          if (mirror) {\n            textOffset *= -1;\n          }\n        } else {\n          y = pixel;\n          textOffset = (1 - lineCount) * lineHeight / 2;\n        }\n        var backdrop = void 0;\n        if (optsAtIndex.showLabelBackdrop) {\n          var labelPadding = (0, _helpersSegment.K)(optsAtIndex.backdropPadding);\n          var height = labelSizes.heights[i];\n          var width = labelSizes.widths[i];\n          var top = y + textOffset - labelPadding.top;\n          var left = x - labelPadding.left;\n          switch (textBaseline) {\n            case 'middle':\n              top -= height / 2;\n              break;\n            case 'bottom':\n              top -= height;\n              break;\n          }\n          switch (textAlign) {\n            case 'center':\n              left -= width / 2;\n              break;\n            case 'right':\n              left -= width;\n              break;\n          }\n          backdrop = {\n            left: left,\n            top: top,\n            width: width + labelPadding.width,\n            height: height + labelPadding.height,\n            color: optsAtIndex.backdropColor\n          };\n        }\n        items.push({\n          rotation: rotation,\n          label: label,\n          font: font,\n          color: color,\n          strokeColor: strokeColor,\n          strokeWidth: strokeWidth,\n          textOffset: textOffset,\n          textAlign: tickTextAlign,\n          textBaseline: textBaseline,\n          translation: [x, y],\n          backdrop: backdrop\n        });\n      }\n      return items;\n    }\n  }, {\n    key: \"_getXAxisLabelAlignment\",\n    value: function _getXAxisLabelAlignment() {\n      var _this$options7 = this.options,\n        position = _this$options7.position,\n        ticks = _this$options7.ticks;\n      var rotation = -(0, _helpersSegment.t)(this.labelRotation);\n      if (rotation) {\n        return position === 'top' ? 'left' : 'right';\n      }\n      var align = 'center';\n      if (ticks.align === 'start') {\n        align = 'left';\n      } else if (ticks.align === 'end') {\n        align = 'right';\n      } else if (ticks.align === 'inner') {\n        align = 'inner';\n      }\n      return align;\n    }\n  }, {\n    key: \"_getYAxisLabelAlignment\",\n    value: function _getYAxisLabelAlignment(tl) {\n      var _this$options8 = this.options,\n        position = _this$options8.position,\n        _this$options8$ticks = _this$options8.ticks,\n        crossAlign = _this$options8$ticks.crossAlign,\n        mirror = _this$options8$ticks.mirror,\n        padding = _this$options8$ticks.padding;\n      var labelSizes = this._getLabelSizes();\n      var tickAndPadding = tl + padding;\n      var widest = labelSizes.widest.width;\n      var textAlign;\n      var x;\n      if (position === 'left') {\n        if (mirror) {\n          x = this.right + padding;\n          if (crossAlign === 'near') {\n            textAlign = 'left';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x += widest / 2;\n          } else {\n            textAlign = 'right';\n            x += widest;\n          }\n        } else {\n          x = this.right - tickAndPadding;\n          if (crossAlign === 'near') {\n            textAlign = 'right';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x -= widest / 2;\n          } else {\n            textAlign = 'left';\n            x = this.left;\n          }\n        }\n      } else if (position === 'right') {\n        if (mirror) {\n          x = this.left + padding;\n          if (crossAlign === 'near') {\n            textAlign = 'right';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x -= widest / 2;\n          } else {\n            textAlign = 'left';\n            x -= widest;\n          }\n        } else {\n          x = this.left + tickAndPadding;\n          if (crossAlign === 'near') {\n            textAlign = 'left';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x += widest / 2;\n          } else {\n            textAlign = 'right';\n            x = this.right;\n          }\n        }\n      } else {\n        textAlign = 'right';\n      }\n      return {\n        textAlign: textAlign,\n        x: x\n      };\n    }\n  }, {\n    key: \"_computeLabelArea\",\n    value: function _computeLabelArea() {\n      if (this.options.ticks.mirror) {\n        return;\n      }\n      var chart = this.chart;\n      var position = this.options.position;\n      if (position === 'left' || position === 'right') {\n        return {\n          top: 0,\n          left: this.left,\n          bottom: chart.height,\n          right: this.right\n        };\n      }\n      if (position === 'top' || position === 'bottom') {\n        return {\n          top: this.top,\n          left: 0,\n          bottom: this.bottom,\n          right: chart.width\n        };\n      }\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground() {\n      var ctx = this.ctx,\n        backgroundColor = this.options.backgroundColor,\n        left = this.left,\n        top = this.top,\n        width = this.width,\n        height = this.height;\n      if (backgroundColor) {\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        ctx.fillRect(left, top, width, height);\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"getLineWidthForValue\",\n    value: function getLineWidthForValue(value) {\n      var grid = this.options.grid;\n      if (!this._isVisible() || !grid.display) {\n        return 0;\n      }\n      var ticks = this.ticks;\n      var index = ticks.findIndex(function (t) {\n        return t.value === value;\n      });\n      if (index >= 0) {\n        var opts = grid.setContext(this.getContext(index));\n        return opts.lineWidth;\n      }\n      return 0;\n    }\n  }, {\n    key: \"drawGrid\",\n    value: function drawGrid(chartArea) {\n      var grid = this.options.grid;\n      var ctx = this.ctx;\n      var items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n      var i, ilen;\n      var drawLine = function drawLine(p1, p2, style) {\n        if (!style.width || !style.color) {\n          return;\n        }\n        ctx.save();\n        ctx.lineWidth = style.width;\n        ctx.strokeStyle = style.color;\n        ctx.setLineDash(style.borderDash || []);\n        ctx.lineDashOffset = style.borderDashOffset;\n        ctx.beginPath();\n        ctx.moveTo(p1.x, p1.y);\n        ctx.lineTo(p2.x, p2.y);\n        ctx.stroke();\n        ctx.restore();\n      };\n      if (grid.display) {\n        for (i = 0, ilen = items.length; i < ilen; ++i) {\n          var item = items[i];\n          if (grid.drawOnChartArea) {\n            drawLine({\n              x: item.x1,\n              y: item.y1\n            }, {\n              x: item.x2,\n              y: item.y2\n            }, item);\n          }\n          if (grid.drawTicks) {\n            drawLine({\n              x: item.tx1,\n              y: item.ty1\n            }, {\n              x: item.tx2,\n              y: item.ty2\n            }, {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            });\n          }\n        }\n      }\n    }\n  }, {\n    key: \"drawBorder\",\n    value: function drawBorder() {\n      var chart = this.chart,\n        ctx = this.ctx,\n        grid = this.options.grid;\n      var borderOpts = grid.setContext(this.getContext());\n      var axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n      if (!axisWidth) {\n        return;\n      }\n      var lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n      var borderValue = this._borderValue;\n      var x1, x2, y1, y2;\n      if (this.isHorizontal()) {\n        x1 = (0, _helpersSegment.J)(chart, this.left, axisWidth) - axisWidth / 2;\n        x2 = (0, _helpersSegment.J)(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n        y1 = y2 = borderValue;\n      } else {\n        y1 = (0, _helpersSegment.J)(chart, this.top, axisWidth) - axisWidth / 2;\n        y2 = (0, _helpersSegment.J)(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n        x1 = x2 = borderValue;\n      }\n      ctx.save();\n      ctx.lineWidth = borderOpts.borderWidth;\n      ctx.strokeStyle = borderOpts.borderColor;\n      ctx.beginPath();\n      ctx.moveTo(x1, y1);\n      ctx.lineTo(x2, y2);\n      ctx.stroke();\n      ctx.restore();\n    }\n  }, {\n    key: \"drawLabels\",\n    value: function drawLabels(chartArea) {\n      var optionTicks = this.options.ticks;\n      if (!optionTicks.display) {\n        return;\n      }\n      var ctx = this.ctx;\n      var area = this._computeLabelArea();\n      if (area) {\n        (0, _helpersSegment.L)(ctx, area);\n      }\n      var items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n      var i, ilen;\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        var item = items[i];\n        var tickFont = item.font;\n        var label = item.label;\n        if (item.backdrop) {\n          ctx.fillStyle = item.backdrop.color;\n          ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n        }\n        var y = item.textOffset;\n        (0, _helpersSegment.M)(ctx, label, 0, y, tickFont, item);\n      }\n      if (area) {\n        (0, _helpersSegment.N)(ctx);\n      }\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {\n      var ctx = this.ctx,\n        _this$options9 = this.options,\n        position = _this$options9.position,\n        title = _this$options9.title,\n        reverse = _this$options9.reverse;\n      if (!title.display) {\n        return;\n      }\n      var font = (0, _helpersSegment.O)(title.font);\n      var padding = (0, _helpersSegment.K)(title.padding);\n      var align = title.align;\n      var offset = font.lineHeight / 2;\n      if (position === 'bottom' || position === 'center' || (0, _helpersSegment.i)(position)) {\n        offset += padding.bottom;\n        if ((0, _helpersSegment.b)(title.text)) {\n          offset += font.lineHeight * (title.text.length - 1);\n        }\n      } else {\n        offset += padding.top;\n      }\n      var _titleArgs = titleArgs(this, offset, position, align),\n        titleX = _titleArgs.titleX,\n        titleY = _titleArgs.titleY,\n        maxWidth = _titleArgs.maxWidth,\n        rotation = _titleArgs.rotation;\n      (0, _helpersSegment.M)(ctx, title.text, 0, 0, font, {\n        color: title.color,\n        maxWidth: maxWidth,\n        rotation: rotation,\n        textAlign: titleAlign(align, position, reverse),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(chartArea) {\n      if (!this._isVisible()) {\n        return;\n      }\n      this.drawBackground();\n      this.drawGrid(chartArea);\n      this.drawBorder();\n      this.drawTitle();\n      this.drawLabels(chartArea);\n    }\n  }, {\n    key: \"_layers\",\n    value: function _layers() {\n      var _this0 = this;\n      var opts = this.options;\n      var tz = opts.ticks && opts.ticks.z || 0;\n      var gz = (0, _helpersSegment.v)(opts.grid && opts.grid.z, -1);\n      if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n        return [{\n          z: tz,\n          draw: function draw(chartArea) {\n            _this0.draw(chartArea);\n          }\n        }];\n      }\n      return [{\n        z: gz,\n        draw: function draw(chartArea) {\n          _this0.drawBackground();\n          _this0.drawGrid(chartArea);\n          _this0.drawTitle();\n        }\n      }, {\n        z: gz + 1,\n        draw: function draw() {\n          _this0.drawBorder();\n        }\n      }, {\n        z: tz,\n        draw: function draw(chartArea) {\n          _this0.drawLabels(chartArea);\n        }\n      }];\n    }\n  }, {\n    key: \"getMatchingVisibleMetas\",\n    value: function getMatchingVisibleMetas(type) {\n      var metas = this.chart.getSortedVisibleDatasetMetas();\n      var axisID = this.axis + 'AxisID';\n      var result = [];\n      var i, ilen;\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        var meta = metas[i];\n        if (meta[axisID] === this.id && (!type || meta.type === type)) {\n          result.push(meta);\n        }\n      }\n      return result;\n    }\n  }, {\n    key: \"_resolveTickFontOptions\",\n    value: function _resolveTickFontOptions(index) {\n      var opts = this.options.ticks.setContext(this.getContext(index));\n      return (0, _helpersSegment.O)(opts.font);\n    }\n  }, {\n    key: \"_maxDigits\",\n    value: function _maxDigits() {\n      var fontSize = this._resolveTickFontOptions(0).lineHeight;\n      return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n  }]);\n}(Element);\nvar TypedRegistry = /*#__PURE__*/function () {\n  function TypedRegistry(type, scope, override) {\n    (0, _classCallCheck2.default)(this, TypedRegistry);\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  return (0, _createClass2.default)(TypedRegistry, [{\n    key: \"isForType\",\n    value: function isForType(type) {\n      return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n  }, {\n    key: \"register\",\n    value: function register(item) {\n      var proto = Object.getPrototypeOf(item);\n      var parentScope;\n      if (isIChartComponent(proto)) {\n        parentScope = this.register(proto);\n      }\n      var items = this.items;\n      var id = item.id;\n      var scope = this.scope + '.' + id;\n      if (!id) {\n        throw new Error('class does not have id: ' + item);\n      }\n      if (id in items) {\n        return scope;\n      }\n      items[id] = item;\n      registerDefaults(item, scope, parentScope);\n      if (this.override) {\n        _helpersSegment.d.override(item.id, item.overrides);\n      }\n      return scope;\n    }\n  }, {\n    key: \"get\",\n    value: function get(id) {\n      return this.items[id];\n    }\n  }, {\n    key: \"unregister\",\n    value: function unregister(item) {\n      var items = this.items;\n      var id = item.id;\n      var scope = this.scope;\n      if (id in items) {\n        delete items[id];\n      }\n      if (scope && id in _helpersSegment.d[scope]) {\n        delete _helpersSegment.d[scope][id];\n        if (this.override) {\n          delete _helpersSegment.U[id];\n        }\n      }\n    }\n  }]);\n}();\nfunction registerDefaults(item, scope, parentScope) {\n  var itemDefaults = (0, _helpersSegment.V)(Object.create(null), [parentScope ? _helpersSegment.d.get(parentScope) : {}, _helpersSegment.d.get(scope), item.defaults]);\n  _helpersSegment.d.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    _helpersSegment.d.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(function (property) {\n    var propertyParts = property.split('.');\n    var sourceName = propertyParts.pop();\n    var sourceScope = [scope].concat(propertyParts).join('.');\n    var parts = routes[property].split('.');\n    var targetName = parts.pop();\n    var targetScope = parts.join('.');\n    _helpersSegment.d.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\nvar Registry = /*#__PURE__*/function () {\n  function Registry() {\n    (0, _classCallCheck2.default)(this, Registry);\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  return (0, _createClass2.default)(Registry, [{\n    key: \"add\",\n    value: function add() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      this._each('register', args);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      this._each('unregister', args);\n    }\n  }, {\n    key: \"addControllers\",\n    value: function addControllers() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n      this._each('register', args, this.controllers);\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n      this._each('register', args, this.elements);\n    }\n  }, {\n    key: \"addPlugins\",\n    value: function addPlugins() {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n      this._each('register', args, this.plugins);\n    }\n  }, {\n    key: \"addScales\",\n    value: function addScales() {\n      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n      this._each('register', args, this.scales);\n    }\n  }, {\n    key: \"getController\",\n    value: function getController(id) {\n      return this._get(id, this.controllers, 'controller');\n    }\n  }, {\n    key: \"getElement\",\n    value: function getElement(id) {\n      return this._get(id, this.elements, 'element');\n    }\n  }, {\n    key: \"getPlugin\",\n    value: function getPlugin(id) {\n      return this._get(id, this.plugins, 'plugin');\n    }\n  }, {\n    key: \"getScale\",\n    value: function getScale(id) {\n      return this._get(id, this.scales, 'scale');\n    }\n  }, {\n    key: \"removeControllers\",\n    value: function removeControllers() {\n      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n      this._each('unregister', args, this.controllers);\n    }\n  }, {\n    key: \"removeElements\",\n    value: function removeElements() {\n      for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n        args[_key8] = arguments[_key8];\n      }\n      this._each('unregister', args, this.elements);\n    }\n  }, {\n    key: \"removePlugins\",\n    value: function removePlugins() {\n      for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n        args[_key9] = arguments[_key9];\n      }\n      this._each('unregister', args, this.plugins);\n    }\n  }, {\n    key: \"removeScales\",\n    value: function removeScales() {\n      for (var _len0 = arguments.length, args = new Array(_len0), _key0 = 0; _key0 < _len0; _key0++) {\n        args[_key0] = arguments[_key0];\n      }\n      this._each('unregister', args, this.scales);\n    }\n  }, {\n    key: \"_each\",\n    value: function _each(method, args, typedRegistry) {\n      var _this1 = this;\n      (0, _toConsumableArray2.default)(args).forEach(function (arg) {\n        var reg = typedRegistry || _this1._getRegistryForType(arg);\n        if (typedRegistry || reg.isForType(arg) || reg === _this1.plugins && arg.id) {\n          _this1._exec(method, reg, arg);\n        } else {\n          (0, _helpersSegment.Q)(arg, function (item) {\n            var itemReg = typedRegistry || _this1._getRegistryForType(item);\n            _this1._exec(method, itemReg, item);\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_exec\",\n    value: function _exec(method, registry, component) {\n      var camelMethod = (0, _helpersSegment.W)(method);\n      (0, _helpersSegment.C)(component['before' + camelMethod], [], component);\n      registry[method](component);\n      (0, _helpersSegment.C)(component['after' + camelMethod], [], component);\n    }\n  }, {\n    key: \"_getRegistryForType\",\n    value: function _getRegistryForType(type) {\n      for (var i = 0; i < this._typedRegistries.length; i++) {\n        var reg = this._typedRegistries[i];\n        if (reg.isForType(type)) {\n          return reg;\n        }\n      }\n      return this.plugins;\n    }\n  }, {\n    key: \"_get\",\n    value: function _get(id, typedRegistry, type) {\n      var item = typedRegistry.get(id);\n      if (item === undefined) {\n        throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n      }\n      return item;\n    }\n  }]);\n}();\nvar registry = exports.registry = new Registry();\nvar ScatterController = exports.ScatterController = /*#__PURE__*/function (_DatasetController7) {\n  function ScatterController() {\n    (0, _classCallCheck2.default)(this, ScatterController);\n    return _callSuper(this, ScatterController, arguments);\n  }\n  (0, _inherits2.default)(ScatterController, _DatasetController7);\n  return (0, _createClass2.default)(ScatterController, [{\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      var _meta$data2 = meta.data,\n        points = _meta$data2 === void 0 ? [] : _meta$data2;\n      var animationsDisabled = this.chart._animationsDisabled;\n      var _getStartAndCountOfVi2 = (0, _helpersSegment.q)(meta, points, animationsDisabled),\n        start = _getStartAndCountOfVi2.start,\n        count = _getStartAndCountOfVi2.count;\n      this._drawStart = start;\n      this._drawCount = count;\n      if ((0, _helpersSegment.w)(meta)) {\n        start = 0;\n        count = points.length;\n      }\n      if (this.options.showLine) {\n        var line = meta.dataset,\n          _dataset = meta._dataset;\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        var options = this.resolveDatasetElementOptions(mode);\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n          animated: !animationsDisabled,\n          options: options\n        }, mode);\n      }\n      this.updateElements(points, start, count, mode);\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      var showLine = this.options.showLine;\n      if (!this.datasetElementType && showLine) {\n        this.datasetElementType = registry.getElement('line');\n      }\n      _superPropGet(ScatterController, \"addElements\", this, 3)([]);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var reset = mode === 'reset';\n      var _this$_cachedMeta4 = this._cachedMeta,\n        iScale = _this$_cachedMeta4.iScale,\n        vScale = _this$_cachedMeta4.vScale,\n        _stacked = _this$_cachedMeta4._stacked,\n        _dataset = _this$_cachedMeta4._dataset;\n      var firstOpts = this.resolveDataElementOptions(start, mode);\n      var sharedOptions = this.getSharedOptions(firstOpts);\n      var includeOptions = this.includeOptions(mode, sharedOptions);\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      var _this$options0 = this.options,\n        spanGaps = _this$options0.spanGaps,\n        segment = _this$options0.segment;\n      var maxGapLength = (0, _helpersSegment.x)(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n      var directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n      var prevParsed = start > 0 && this.getParsed(start - 1);\n      for (var i = start; i < start + count; ++i) {\n        var point = points[i];\n        var parsed = this.getParsed(i);\n        var properties = directUpdate ? point : {};\n        var nullData = (0, _helpersSegment.k)(parsed[vAxis]);\n        var iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n        var vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n        properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n        if (segment) {\n          properties.parsed = parsed;\n          properties.raw = _dataset.data[i];\n        }\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        }\n        if (!directUpdate) {\n          this.updateElement(point, i, properties, mode);\n        }\n        prevParsed = parsed;\n      }\n      this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var meta = this._cachedMeta;\n      var data = meta.data || [];\n      if (!this.options.showLine) {\n        var max = 0;\n        for (var i = data.length - 1; i >= 0; --i) {\n          max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n      }\n      var dataset = meta.dataset;\n      var border = dataset.options && dataset.options.borderWidth || 0;\n      if (!data.length) {\n        return border;\n      }\n      var firstPoint = data[0].size(this.resolveDataElementOptions(0));\n      var lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n      return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n  }]);\n}(DatasetController);\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\nvar controllers = exports.controllers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  BarController: BarController,\n  BubbleController: BubbleController,\n  DoughnutController: DoughnutController,\n  LineController: LineController,\n  PolarAreaController: PolarAreaController,\n  PieController: PieController,\n  RadarController: RadarController,\n  ScatterController: ScatterController\n});\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nvar DateAdapter = /*#__PURE__*/function () {\n  function DateAdapter(options) {\n    (0, _classCallCheck2.default)(this, DateAdapter);\n    this.options = options || {};\n  }\n  return (0, _createClass2.default)(DateAdapter, [{\n    key: \"init\",\n    value: function init(chartOptions) {}\n  }, {\n    key: \"formats\",\n    value: function formats() {\n      return abstract();\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(value, format) {\n      return abstract();\n    }\n  }, {\n    key: \"format\",\n    value: function format(timestamp, _format) {\n      return abstract();\n    }\n  }, {\n    key: \"add\",\n    value: function add(timestamp, amount, unit) {\n      return abstract();\n    }\n  }, {\n    key: \"diff\",\n    value: function diff(a, b, unit) {\n      return abstract();\n    }\n  }, {\n    key: \"startOf\",\n    value: function startOf(timestamp, unit, weekday) {\n      return abstract();\n    }\n  }, {\n    key: \"endOf\",\n    value: function endOf(timestamp, unit) {\n      return abstract();\n    }\n  }]);\n}();\nDateAdapter.override = function (members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = exports._adapters = {\n  _date: DateAdapter\n};\nfunction binarySearch(metaset, axis, value, intersect) {\n  var controller = metaset.controller,\n    data = metaset.data,\n    _sorted = metaset._sorted;\n  var iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    var lookupMethod = iScale._reversePixels ? _helpersSegment.Y : _helpersSegment.Z;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      var el = data[0];\n      var range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        var start = lookupMethod(data, axis, value - range);\n        var end = lookupMethod(data, axis, value + range);\n        return {\n          lo: start.lo,\n          hi: end.hi\n        };\n      }\n    }\n  }\n  return {\n    lo: 0,\n    hi: data.length - 1\n  };\n}\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  var metasets = chart.getSortedVisibleDatasetMetas();\n  var value = position[axis];\n  for (var i = 0, ilen = metasets.length; i < ilen; ++i) {\n    var _metasets$i = metasets[i],\n      _index2 = _metasets$i.index,\n      data = _metasets$i.data;\n    var _binarySearch = binarySearch(metasets[i], axis, value, intersect),\n      lo = _binarySearch.lo,\n      hi = _binarySearch.hi;\n    for (var j = lo; j <= hi; ++j) {\n      var element = data[j];\n      if (!element.skip) {\n        handler(element, _index2, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  var useX = axis.indexOf('x') !== -1;\n  var useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  var items = [];\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n  var evaluationFunc = function evaluationFunc(element, datasetIndex, index) {\n    if (!includeInvisible && !(0, _helpersSegment.$)(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  };\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  var items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    var _element$getProps = element.getProps(['startAngle', 'endAngle'], useFinalPosition),\n      startAngle = _element$getProps.startAngle,\n      endAngle = _element$getProps.endAngle;\n    var _getAngleFromPoint = (0, _helpersSegment.a0)(element, {\n        x: position.x,\n        y: position.y\n      }),\n      angle = _getAngleFromPoint.angle;\n    if ((0, _helpersSegment.p)(angle, startAngle, endAngle)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  var items = [];\n  var distanceMetric = getDistanceMetricForAxis(axis);\n  var minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    var inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    var center = element.getCenterPoint(useFinalPosition);\n    var pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    var distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      }];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n  return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  var items = [];\n  var rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  var intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, function (element, datasetIndex, index) {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = exports.Interaction = {\n  evaluateInteractionItems: evaluateInteractionItems,\n  modes: {\n    index: function index(chart, e, options, useFinalPosition) {\n      var position = (0, _helpersSegment.X)(e, chart);\n      var axis = options.axis || 'x';\n      var includeInvisible = options.includeInvisible || false;\n      var items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      var elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach(function (meta) {\n        var index = items[0].index;\n        var element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({\n            element: element,\n            datasetIndex: meta.index,\n            index: index\n          });\n        }\n      });\n      return elements;\n    },\n    dataset: function dataset(chart, e, options, useFinalPosition) {\n      var position = (0, _helpersSegment.X)(e, chart);\n      var axis = options.axis || 'xy';\n      var includeInvisible = options.includeInvisible || false;\n      var items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      if (items.length > 0) {\n        var datasetIndex = items[0].datasetIndex;\n        var data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (var i = 0; i < data.length; ++i) {\n          items.push({\n            element: data[i],\n            datasetIndex: datasetIndex,\n            index: i\n          });\n        }\n      }\n      return items;\n    },\n    point: function point(chart, e, options, useFinalPosition) {\n      var position = (0, _helpersSegment.X)(e, chart);\n      var axis = options.axis || 'xy';\n      var includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest: function nearest(chart, e, options, useFinalPosition) {\n      var position = (0, _helpersSegment.X)(e, chart);\n      var axis = options.axis || 'xy';\n      var includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x: function x(chart, e, options, useFinalPosition) {\n      var position = (0, _helpersSegment.X)(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y: function y(chart, e, options, useFinalPosition) {\n      var position = (0, _helpersSegment.X)(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\nvar STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(function (v) {\n    return v.pos === position;\n  });\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(function (v) {\n    return STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis;\n  });\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort(function (a, b) {\n    var v0 = reverse ? b : a;\n    var v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  var layoutBoxes = [];\n  var i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    var _box = box;\n    pos = _box.position;\n    var _box$options = _box.options;\n    stack = _box$options.stack;\n    var _box$options$stackWei = _box$options.stackWeight;\n    stackWeight = _box$options$stackWei === void 0 ? 1 : _box$options$stackWei;\n    layoutBoxes.push({\n      index: i,\n      box: box,\n      pos: pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && pos + stack,\n      stackWeight: stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  var stacks = {};\n  var _iterator5 = _createForOfIteratorHelper(layouts),\n    _step5;\n  try {\n    for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n      var wrap = _step5.value;\n      var stack = wrap.stack,\n        pos = wrap.pos,\n        stackWeight = wrap.stackWeight;\n      if (!stack || !STATIC_POSITIONS.includes(pos)) {\n        continue;\n      }\n      var _stack = stacks[stack] || (stacks[stack] = {\n        count: 0,\n        placed: 0,\n        weight: 0,\n        size: 0\n      });\n      _stack.count++;\n      _stack.weight += stackWeight;\n    }\n  } catch (err) {\n    _iterator5.e(err);\n  } finally {\n    _iterator5.f();\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  var stacks = buildStacks(layouts);\n  var vBoxMaxWidth = params.vBoxMaxWidth,\n    hBoxMaxHeight = params.hBoxMaxHeight;\n  var i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    var fullSize = layout.box.fullSize;\n    var stack = stacks[layout.stack];\n    var factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  var layoutBoxes = wrapBoxes(boxes);\n  var fullSize = sortByWeight(layoutBoxes.filter(function (wrap) {\n    return wrap.box.fullSize;\n  }), true);\n  var left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  var right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  var top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  var bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  var centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  var centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize: fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  var pos = layout.pos,\n    box = layout.box;\n  var maxPadding = chartArea.maxPadding;\n  if (!(0, _helpersSegment.i)(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    var stack = stacks[layout.stack] || {\n      size: 0,\n      count: 1\n    };\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  var newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  var newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  var widthChanged = newWidth !== chartArea.w;\n  var heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal ? {\n    same: widthChanged,\n    other: heightChanged\n  } : {\n    same: heightChanged,\n    other: widthChanged\n  };\n}\nfunction handleMaxPadding(chartArea) {\n  var maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    var change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  var maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    var margin = {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n    positions.forEach(function (pos) {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  var refitBoxes = [];\n  var i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n    var _updateDims = updateDims(chartArea, params, layout, stacks),\n      same = _updateDims.same,\n      other = _updateDims.other;\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  var userPadding = params.padding;\n  var x = chartArea.x,\n    y = chartArea.y;\n  var _iterator6 = _createForOfIteratorHelper(boxes),\n    _step6;\n  try {\n    for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n      var layout = _step6.value;\n      var box = layout.box;\n      var stack = stacks[layout.stack] || {\n        count: 1,\n        placed: 0,\n        weight: 1\n      };\n      var weight = layout.stackWeight / stack.weight || 1;\n      if (layout.horizontal) {\n        var width = chartArea.w * weight;\n        var height = stack.size || box.height;\n        if ((0, _helpersSegment.j)(stack.start)) {\n          y = stack.start;\n        }\n        if (box.fullSize) {\n          setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n        } else {\n          setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n        }\n        stack.start = y;\n        stack.placed += width;\n        y = box.bottom;\n      } else {\n        var _height = chartArea.h * weight;\n        var _width = stack.size || box.width;\n        if ((0, _helpersSegment.j)(stack.start)) {\n          x = stack.start;\n        }\n        if (box.fullSize) {\n          setBoxDims(box, x, userPadding.top, _width, params.outerHeight - userPadding.bottom - userPadding.top);\n        } else {\n          setBoxDims(box, x, chartArea.top + stack.placed, _width, _height);\n        }\n        stack.start = x;\n        stack.placed += _height;\n        x = box.right;\n      }\n    }\n  } catch (err) {\n    _iterator6.e(err);\n  } finally {\n    _iterator6.f();\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\n_helpersSegment.d.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = exports.layouts = {\n  addBox: function addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function () {\n      return [{\n        z: 0,\n        draw: function draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox: function removeBox(chart, layoutItem) {\n    var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure: function configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update: function update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    var padding = (0, _helpersSegment.K)(chart.options.layout.padding);\n    var availableWidth = Math.max(width - padding.width, 0);\n    var availableHeight = Math.max(height - padding.height, 0);\n    var boxes = buildLayoutBoxes(chart.boxes);\n    var verticalBoxes = boxes.vertical;\n    var horizontalBoxes = boxes.horizontal;\n    (0, _helpersSegment.Q)(chart.boxes, function (box) {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    var visibleVerticalBoxCount = verticalBoxes.reduce(function (total, wrap) {\n      return wrap.box.options && wrap.box.options.display === false ? total : total + 1;\n    }, 0) || 1;\n    var params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding: padding,\n      availableWidth: availableWidth,\n      availableHeight: availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    var maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, (0, _helpersSegment.K)(minPadding));\n    var chartArea = Object.assign({\n      maxPadding: maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    var stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w\n    };\n    (0, _helpersSegment.Q)(boxes.chartArea, function (layout) {\n      var box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0\n      });\n    });\n  }\n};\nvar BasePlatform = exports.BasePlatform = /*#__PURE__*/function () {\n  function BasePlatform() {\n    (0, _classCallCheck2.default)(this, BasePlatform);\n  }\n  return (0, _createClass2.default)(BasePlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(canvas, aspectRatio) {}\n  }, {\n    key: \"releaseContext\",\n    value: function releaseContext(context) {\n      return false;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(chart, type, listener) {}\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(chart, type, listener) {}\n  }, {\n    key: \"getDevicePixelRatio\",\n    value: function getDevicePixelRatio() {\n      return 1;\n    }\n  }, {\n    key: \"getMaximumSize\",\n    value: function getMaximumSize(element, width, height, aspectRatio) {\n      width = Math.max(0, width || element.width);\n      height = height || element.height;\n      return {\n        width: width,\n        height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n      };\n    }\n  }, {\n    key: \"isAttached\",\n    value: function isAttached(canvas) {\n      return true;\n    }\n  }, {\n    key: \"updateConfig\",\n    value: function updateConfig(config) {}\n  }]);\n}();\nvar BasicPlatform = exports.BasicPlatform = /*#__PURE__*/function (_BasePlatform) {\n  function BasicPlatform() {\n    (0, _classCallCheck2.default)(this, BasicPlatform);\n    return _callSuper(this, BasicPlatform, arguments);\n  }\n  (0, _inherits2.default)(BasicPlatform, _BasePlatform);\n  return (0, _createClass2.default)(BasicPlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(item) {\n      return item && item.getContext && item.getContext('2d') || null;\n    }\n  }, {\n    key: \"updateConfig\",\n    value: function updateConfig(config) {\n      config.options.animation = false;\n    }\n  }]);\n}(BasePlatform);\nvar EXPANDO_KEY = '$chartjs';\nvar EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nvar isNullOrEmpty = function isNullOrEmpty(value) {\n  return value === null || value === '';\n};\nfunction initCanvas(canvas, aspectRatio) {\n  var style = canvas.style;\n  var renderHeight = canvas.getAttribute('height');\n  var renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    var displayWidth = (0, _helpersSegment.a3)(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      var displayHeight = (0, _helpersSegment.a3)(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nvar eventListenerOptions = _helpersSegment.a5 ? {\n  passive: true\n} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  var type = EVENT_TYPES[event.type] || event.type;\n  var _getRelativePosition = (0, _helpersSegment.X)(event, chart),\n    x = _getRelativePosition.x,\n    y = _getRelativePosition.y;\n  return {\n    type: type,\n    chart: chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  var _iterator7 = _createForOfIteratorHelper(nodeList),\n    _step7;\n  try {\n    for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n      var node = _step7.value;\n      if (node === canvas || node.contains(canvas)) {\n        return true;\n      }\n    }\n  } catch (err) {\n    _iterator7.e(err);\n  } finally {\n    _iterator7.f();\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n  var observer = new MutationObserver(function (entries) {\n    var trigger = false;\n    var _iterator8 = _createForOfIteratorHelper(entries),\n      _step8;\n    try {\n      for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n        var entry = _step8.value;\n        trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n        trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n      }\n    } catch (err) {\n      _iterator8.e(err);\n    } finally {\n      _iterator8.f();\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n  var observer = new MutationObserver(function (entries) {\n    var trigger = false;\n    var _iterator9 = _createForOfIteratorHelper(entries),\n      _step9;\n    try {\n      for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n        var entry = _step9.value;\n        trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n        trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n      }\n    } catch (err) {\n      _iterator9.e(err);\n    } finally {\n      _iterator9.f();\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\nvar drpListeningCharts = new Map();\nvar oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  var dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach(function (resize, chart) {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n  var container = canvas && (0, _helpersSegment.a2)(canvas);\n  if (!container) {\n    return;\n  }\n  var resize = (0, _helpersSegment.a4)(function (width, height) {\n    var w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  var observer = new ResizeObserver(function (entries) {\n    var entry = entries[0];\n    var width = entry.contentRect.width;\n    var height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  var canvas = chart.canvas;\n  var proxy = (0, _helpersSegment.a4)(function (event) {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, function (args) {\n    var event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nvar DomPlatform = exports.DomPlatform = /*#__PURE__*/function (_BasePlatform2) {\n  function DomPlatform() {\n    (0, _classCallCheck2.default)(this, DomPlatform);\n    return _callSuper(this, DomPlatform, arguments);\n  }\n  (0, _inherits2.default)(DomPlatform, _BasePlatform2);\n  return (0, _createClass2.default)(DomPlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(canvas, aspectRatio) {\n      var context = canvas && canvas.getContext && canvas.getContext('2d');\n      if (context && context.canvas === canvas) {\n        initCanvas(canvas, aspectRatio);\n        return context;\n      }\n      return null;\n    }\n  }, {\n    key: \"releaseContext\",\n    value: function releaseContext(context) {\n      var canvas = context.canvas;\n      if (!canvas[EXPANDO_KEY]) {\n        return false;\n      }\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n        if ((0, _helpersSegment.k)(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      var style = initial.style || {};\n      Object.keys(style).forEach(function (key) {\n        canvas.style[key] = style[key];\n      });\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n      return true;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(chart, type, listener) {\n      this.removeEventListener(chart, type);\n      var proxies = chart.$proxies || (chart.$proxies = {});\n      var handlers = {\n        attach: createAttachObserver,\n        detach: createDetachObserver,\n        resize: createResizeObserver\n      };\n      var handler = handlers[type] || createProxyAndListen;\n      proxies[type] = handler(chart, type, listener);\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(chart, type) {\n      var proxies = chart.$proxies || (chart.$proxies = {});\n      var proxy = proxies[type];\n      if (!proxy) {\n        return;\n      }\n      var handlers = {\n        attach: releaseObserver,\n        detach: releaseObserver,\n        resize: releaseObserver\n      };\n      var handler = handlers[type] || removeListener;\n      handler(chart, type, proxy);\n      proxies[type] = undefined;\n    }\n  }, {\n    key: \"getDevicePixelRatio\",\n    value: function getDevicePixelRatio() {\n      return window.devicePixelRatio;\n    }\n  }, {\n    key: \"getMaximumSize\",\n    value: function getMaximumSize(canvas, width, height, aspectRatio) {\n      return (0, _helpersSegment.a1)(canvas, width, height, aspectRatio);\n    }\n  }, {\n    key: \"isAttached\",\n    value: function isAttached(canvas) {\n      var container = (0, _helpersSegment.a2)(canvas);\n      return !!(container && container.isConnected);\n    }\n  }]);\n}(BasePlatform);\nfunction _detectPlatform(canvas) {\n  if (!(0, _helpersSegment.a6)() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\nvar PluginService = /*#__PURE__*/function () {\n  function PluginService() {\n    (0, _classCallCheck2.default)(this, PluginService);\n    this._init = [];\n  }\n  return (0, _createClass2.default)(PluginService, [{\n    key: \"notify\",\n    value: function notify(chart, hook, args, filter) {\n      if (hook === 'beforeInit') {\n        this._init = this._createDescriptors(chart, true);\n        this._notify(this._init, chart, 'install');\n      }\n      var descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n      var result = this._notify(descriptors, chart, hook, args);\n      if (hook === 'afterDestroy') {\n        this._notify(descriptors, chart, 'stop');\n        this._notify(this._init, chart, 'uninstall');\n      }\n      return result;\n    }\n  }, {\n    key: \"_notify\",\n    value: function _notify(descriptors, chart, hook, args) {\n      args = args || {};\n      var _iterator0 = _createForOfIteratorHelper(descriptors),\n        _step0;\n      try {\n        for (_iterator0.s(); !(_step0 = _iterator0.n()).done;) {\n          var descriptor = _step0.value;\n          var plugin = descriptor.plugin;\n          var method = plugin[hook];\n          var params = [chart, args, descriptor.options];\n          if ((0, _helpersSegment.C)(method, params, plugin) === false && args.cancelable) {\n            return false;\n          }\n        }\n      } catch (err) {\n        _iterator0.e(err);\n      } finally {\n        _iterator0.f();\n      }\n      return true;\n    }\n  }, {\n    key: \"invalidate\",\n    value: function invalidate() {\n      if (!(0, _helpersSegment.k)(this._cache)) {\n        this._oldCache = this._cache;\n        this._cache = undefined;\n      }\n    }\n  }, {\n    key: \"_descriptors\",\n    value: function _descriptors(chart) {\n      if (this._cache) {\n        return this._cache;\n      }\n      var descriptors = this._cache = this._createDescriptors(chart);\n      this._notifyStateChanges(chart);\n      return descriptors;\n    }\n  }, {\n    key: \"_createDescriptors\",\n    value: function _createDescriptors(chart, all) {\n      var config = chart && chart.config;\n      var options = (0, _helpersSegment.v)(config.options && config.options.plugins, {});\n      var plugins = allPlugins(config);\n      return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n  }, {\n    key: \"_notifyStateChanges\",\n    value: function _notifyStateChanges(chart) {\n      var previousDescriptors = this._oldCache || [];\n      var descriptors = this._cache;\n      var diff = function diff(a, b) {\n        return a.filter(function (x) {\n          return !b.some(function (y) {\n            return x.plugin.id === y.plugin.id;\n          });\n        });\n      };\n      this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n      this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n  }]);\n}();\nfunction allPlugins(config) {\n  var localIds = {};\n  var plugins = [];\n  var keys = Object.keys(registry.plugins.items);\n  for (var i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  var local = config.plugins || [];\n  for (var _i2 = 0; _i2 < local.length; _i2++) {\n    var plugin = local[_i2];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n  return {\n    plugins: plugins,\n    localIds: localIds\n  };\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, _ref2, options, all) {\n  var plugins = _ref2.plugins,\n    localIds = _ref2.localIds;\n  var result = [];\n  var context = chart.getContext();\n  var _iterator1 = _createForOfIteratorHelper(plugins),\n    _step1;\n  try {\n    for (_iterator1.s(); !(_step1 = _iterator1.n()).done;) {\n      var plugin = _step1.value;\n      var id = plugin.id;\n      var opts = getOpts(options[id], all);\n      if (opts === null) {\n        continue;\n      }\n      result.push({\n        plugin: plugin,\n        options: pluginOpts(chart.config, {\n          plugin: plugin,\n          local: localIds[id]\n        }, opts, context)\n      });\n    }\n  } catch (err) {\n    _iterator1.e(err);\n  } finally {\n    _iterator1.f();\n  }\n  return result;\n}\nfunction pluginOpts(config, _ref3, opts, context) {\n  var plugin = _ref3.plugin,\n    local = _ref3.local;\n  var keys = config.pluginScopeKeys(plugin);\n  var scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\nfunction getIndexAxis(type, options) {\n  var datasetDefaults = _helpersSegment.d.datasets[type] || {};\n  var datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  var axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  var chartDefaults = _helpersSegment.U[config.type] || {\n    scales: {}\n  };\n  var configScales = options.scales || {};\n  var chartIndexAxis = getIndexAxis(config.type, options);\n  var firstIDs = Object.create(null);\n  var scales = Object.create(null);\n  Object.keys(configScales).forEach(function (id) {\n    var scaleConf = configScales[id];\n    if (!(0, _helpersSegment.i)(scaleConf)) {\n      return console.error(\"Invalid scale configuration for scale: \".concat(id));\n    }\n    if (scaleConf._proxy) {\n      return console.warn(\"Ignoring resolver passed as options for scale: \".concat(id));\n    }\n    var axis = determineAxis(id, scaleConf);\n    var defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    var defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = (0, _helpersSegment.ac)(Object.create(null), [{\n      axis: axis\n    }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(function (dataset) {\n    var type = dataset.type || config.type;\n    var indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    var datasetDefaults = _helpersSegment.U[type] || {};\n    var defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(function (defaultID) {\n      var axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      var id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      (0, _helpersSegment.ac)(scales[id], [{\n        axis: axis\n      }, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(function (key) {\n    var scale = scales[key];\n    (0, _helpersSegment.ac)(scale, [_helpersSegment.d.scales[scale.type], _helpersSegment.d.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  var options = config.options || (config.options = {});\n  options.plugins = (0, _helpersSegment.v)(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nvar keyCache = new Map();\nvar keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  var keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nvar addIfFound = function addIfFound(set, obj, key) {\n  var opts = (0, _helpersSegment.f)(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nvar Config = /*#__PURE__*/function () {\n  function Config(config) {\n    (0, _classCallCheck2.default)(this, Config);\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  return (0, _createClass2.default)(Config, [{\n    key: \"platform\",\n    get: function get() {\n      return this._config.platform;\n    }\n  }, {\n    key: \"type\",\n    get: function get() {\n      return this._config.type;\n    },\n    set: function set(type) {\n      this._config.type = type;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this._config.data;\n    },\n    set: function set(data) {\n      this._config.data = initData(data);\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this._config.options;\n    },\n    set: function set(options) {\n      this._config.options = options;\n    }\n  }, {\n    key: \"plugins\",\n    get: function get() {\n      return this._config.plugins;\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var config = this._config;\n      this.clearCache();\n      initOptions(config);\n    }\n  }, {\n    key: \"clearCache\",\n    value: function clearCache() {\n      this._scopeCache.clear();\n      this._resolverCache.clear();\n    }\n  }, {\n    key: \"datasetScopeKeys\",\n    value: function datasetScopeKeys(datasetType) {\n      return cachedKeys(datasetType, function () {\n        return [[\"datasets.\".concat(datasetType), '']];\n      });\n    }\n  }, {\n    key: \"datasetAnimationScopeKeys\",\n    value: function datasetAnimationScopeKeys(datasetType, transition) {\n      return cachedKeys(\"\".concat(datasetType, \".transition.\").concat(transition), function () {\n        return [[\"datasets.\".concat(datasetType, \".transitions.\").concat(transition), \"transitions.\".concat(transition)], [\"datasets.\".concat(datasetType), '']];\n      });\n    }\n  }, {\n    key: \"datasetElementScopeKeys\",\n    value: function datasetElementScopeKeys(datasetType, elementType) {\n      return cachedKeys(\"\".concat(datasetType, \"-\").concat(elementType), function () {\n        return [[\"datasets.\".concat(datasetType, \".elements.\").concat(elementType), \"datasets.\".concat(datasetType), \"elements.\".concat(elementType), '']];\n      });\n    }\n  }, {\n    key: \"pluginScopeKeys\",\n    value: function pluginScopeKeys(plugin) {\n      var id = plugin.id;\n      var type = this.type;\n      return cachedKeys(\"\".concat(type, \"-plugin-\").concat(id), function () {\n        return [[\"plugins.\".concat(id)].concat((0, _toConsumableArray2.default)(plugin.additionalOptionScopes || []))];\n      });\n    }\n  }, {\n    key: \"_cachedScopes\",\n    value: function _cachedScopes(mainScope, resetCache) {\n      var _scopeCache = this._scopeCache;\n      var cache = _scopeCache.get(mainScope);\n      if (!cache || resetCache) {\n        cache = new Map();\n        _scopeCache.set(mainScope, cache);\n      }\n      return cache;\n    }\n  }, {\n    key: \"getOptionScopes\",\n    value: function getOptionScopes(mainScope, keyLists, resetCache) {\n      var options = this.options,\n        type = this.type;\n      var cache = this._cachedScopes(mainScope, resetCache);\n      var cached = cache.get(keyLists);\n      if (cached) {\n        return cached;\n      }\n      var scopes = new Set();\n      keyLists.forEach(function (keys) {\n        if (mainScope) {\n          scopes.add(mainScope);\n          keys.forEach(function (key) {\n            return addIfFound(scopes, mainScope, key);\n          });\n        }\n        keys.forEach(function (key) {\n          return addIfFound(scopes, options, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, _helpersSegment.U[type] || {}, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, _helpersSegment.d, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, _helpersSegment.a7, key);\n        });\n      });\n      var array = Array.from(scopes);\n      if (array.length === 0) {\n        array.push(Object.create(null));\n      }\n      if (keysCached.has(keyLists)) {\n        cache.set(keyLists, array);\n      }\n      return array;\n    }\n  }, {\n    key: \"chartOptionScopes\",\n    value: function chartOptionScopes() {\n      var options = this.options,\n        type = this.type;\n      return [options, _helpersSegment.U[type] || {}, _helpersSegment.d.datasets[type] || {}, {\n        type: type\n      }, _helpersSegment.d, _helpersSegment.a7];\n    }\n  }, {\n    key: \"resolveNamedOptions\",\n    value: function resolveNamedOptions(scopes, names, context) {\n      var prefixes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [''];\n      var result = {\n        $shared: true\n      };\n      var _getResolver = getResolver(this._resolverCache, scopes, prefixes),\n        resolver = _getResolver.resolver,\n        subPrefixes = _getResolver.subPrefixes;\n      var options = resolver;\n      if (needContext(resolver, names)) {\n        result.$shared = false;\n        context = (0, _helpersSegment.a8)(context) ? context() : context;\n        var subResolver = this.createResolver(scopes, context, subPrefixes);\n        options = (0, _helpersSegment.a9)(resolver, context, subResolver);\n      }\n      var _iterator10 = _createForOfIteratorHelper(names),\n        _step10;\n      try {\n        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n          var prop = _step10.value;\n          result[prop] = options[prop];\n        }\n      } catch (err) {\n        _iterator10.e(err);\n      } finally {\n        _iterator10.f();\n      }\n      return result;\n    }\n  }, {\n    key: \"createResolver\",\n    value: function createResolver(scopes, context) {\n      var prefixes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [''];\n      var descriptorDefaults = arguments.length > 3 ? arguments[3] : undefined;\n      var _getResolver2 = getResolver(this._resolverCache, scopes, prefixes),\n        resolver = _getResolver2.resolver;\n      return (0, _helpersSegment.i)(context) ? (0, _helpersSegment.a9)(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n  }]);\n}();\nfunction getResolver(resolverCache, scopes, prefixes) {\n  var cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  var cacheKey = prefixes.join();\n  var cached = cache.get(cacheKey);\n  if (!cached) {\n    var resolver = (0, _helpersSegment.aa)(scopes, prefixes);\n    cached = {\n      resolver: resolver,\n      subPrefixes: prefixes.filter(function (p) {\n        return !p.toLowerCase().includes('hover');\n      })\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nvar hasFunction = function hasFunction(value) {\n  return (0, _helpersSegment.i)(value) && Object.getOwnPropertyNames(value).reduce(function (acc, key) {\n    return acc || (0, _helpersSegment.a8)(value[key]);\n  }, false);\n};\nfunction needContext(proxy, names) {\n  var _descriptors2 = (0, _helpersSegment.ab)(proxy),\n    isScriptable = _descriptors2.isScriptable,\n    isIndexable = _descriptors2.isIndexable;\n  var _iterator11 = _createForOfIteratorHelper(names),\n    _step11;\n  try {\n    for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n      var prop = _step11.value;\n      var scriptable = isScriptable(prop);\n      var indexable = isIndexable(prop);\n      var value = (indexable || scriptable) && proxy[prop];\n      if (scriptable && ((0, _helpersSegment.a8)(value) || hasFunction(value)) || indexable && (0, _helpersSegment.b)(value)) {\n        return true;\n      }\n    }\n  } catch (err) {\n    _iterator11.e(err);\n  } finally {\n    _iterator11.f();\n  }\n  return false;\n}\nvar version = \"3.9.1\";\nvar KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n  return function (a, b) {\n    return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  var chart = context.chart;\n  var animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  (0, _helpersSegment.C)(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  var chart = context.chart;\n  var animationOptions = chart.options.animation;\n  (0, _helpersSegment.C)(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if ((0, _helpersSegment.a6)() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nvar instances = {};\nvar getChart = function getChart(key) {\n  var canvas = getCanvas(key);\n  return Object.values(instances).filter(function (c) {\n    return c.canvas === canvas;\n  }).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  var keys = Object.keys(obj);\n  for (var _i3 = 0, _keys = keys; _i3 < _keys.length; _i3++) {\n    var key = _keys[_i3];\n    var intKey = +key;\n    if (intKey >= start) {\n      var value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nvar Chart = exports.Chart = /*#__PURE__*/function () {\n  function Chart(item, userConfig) {\n    var _this10 = this;\n    (0, _classCallCheck2.default)(this, Chart);\n    var config = this.config = new Config(userConfig);\n    var initialCanvas = getCanvas(item);\n    var existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n    }\n    var options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    var context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    var canvas = context && context.canvas;\n    var height = canvas && canvas.height;\n    var width = canvas && canvas.width;\n    this.id = (0, _helpersSegment.ad)();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = (0, _helpersSegment.ae)(function (mode) {\n      return _this10.update(mode);\n    }, options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  return (0, _createClass2.default)(Chart, [{\n    key: \"aspectRatio\",\n    get: function get() {\n      var _this$options1 = this.options,\n        aspectRatio = _this$options1.aspectRatio,\n        maintainAspectRatio = _this$options1.maintainAspectRatio,\n        width = this.width,\n        height = this.height,\n        _aspectRatio = this._aspectRatio;\n      if (!(0, _helpersSegment.k)(aspectRatio)) {\n        return aspectRatio;\n      }\n      if (maintainAspectRatio && _aspectRatio) {\n        return _aspectRatio;\n      }\n      return height ? width / height : null;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this.config.data;\n    },\n    set: function set(data) {\n      this.config.data = data;\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this._options;\n    },\n    set: function set(options) {\n      this.config.options = options;\n    }\n  }, {\n    key: \"_initialize\",\n    value: function _initialize() {\n      this.notifyPlugins('beforeInit');\n      if (this.options.responsive) {\n        this.resize();\n      } else {\n        (0, _helpersSegment.af)(this, this.options.devicePixelRatio);\n      }\n      this.bindEvents();\n      this.notifyPlugins('afterInit');\n      return this;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      (0, _helpersSegment.ag)(this.canvas, this.ctx);\n      return this;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      animator.stop(this);\n      return this;\n    }\n  }, {\n    key: \"resize\",\n    value: function resize(width, height) {\n      if (!animator.running(this)) {\n        this._resize(width, height);\n      } else {\n        this._resizeBeforeDraw = {\n          width: width,\n          height: height\n        };\n      }\n    }\n  }, {\n    key: \"_resize\",\n    value: function _resize(width, height) {\n      var options = this.options;\n      var canvas = this.canvas;\n      var aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n      var newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n      var newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n      var mode = this.width ? 'resize' : 'attach';\n      this.width = newSize.width;\n      this.height = newSize.height;\n      this._aspectRatio = this.aspectRatio;\n      if (!(0, _helpersSegment.af)(this, newRatio, true)) {\n        return;\n      }\n      this.notifyPlugins('resize', {\n        size: newSize\n      });\n      (0, _helpersSegment.C)(options.onResize, [this, newSize], this);\n      if (this.attached) {\n        if (this._doResize(mode)) {\n          this.render();\n        }\n      }\n    }\n  }, {\n    key: \"ensureScalesHaveIDs\",\n    value: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      (0, _helpersSegment.Q)(scalesOptions, function (axisOptions, axisID) {\n        axisOptions.id = axisID;\n      });\n    }\n  }, {\n    key: \"buildOrUpdateScales\",\n    value: function buildOrUpdateScales() {\n      var _this11 = this;\n      var options = this.options;\n      var scaleOpts = options.scales;\n      var scales = this.scales;\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n      var items = [];\n      if (scaleOpts) {\n        items = items.concat(Object.keys(scaleOpts).map(function (id) {\n          var scaleOptions = scaleOpts[id];\n          var axis = determineAxis(id, scaleOptions);\n          var isRadial = axis === 'r';\n          var isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        }));\n      }\n      (0, _helpersSegment.Q)(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var axis = determineAxis(id, scaleOptions);\n        var scaleType = (0, _helpersSegment.v)(scaleOptions.type, item.dtype);\n        if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n        updated[id] = true;\n        var scale = null;\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n        } else {\n          var scaleClass = registry.getScale(scaleType);\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            ctx: _this11.ctx,\n            chart: _this11\n          });\n          scales[scale.id] = scale;\n        }\n        scale.init(scaleOptions, options);\n      });\n      (0, _helpersSegment.Q)(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      (0, _helpersSegment.Q)(scales, function (scale) {\n        layouts.configure(_this11, scale, scale.options);\n        layouts.addBox(_this11, scale);\n      });\n    }\n  }, {\n    key: \"_updateMetasets\",\n    value: function _updateMetasets() {\n      var metasets = this._metasets;\n      var numData = this.data.datasets.length;\n      var numMeta = metasets.length;\n      metasets.sort(function (a, b) {\n        return a.index - b.index;\n      });\n      if (numMeta > numData) {\n        for (var i = numData; i < numMeta; ++i) {\n          this._destroyDatasetMeta(i);\n        }\n        metasets.splice(numData, numMeta - numData);\n      }\n      this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n  }, {\n    key: \"_removeUnreferencedMetasets\",\n    value: function _removeUnreferencedMetasets() {\n      var _this12 = this;\n      var metasets = this._metasets,\n        datasets = this.data.datasets;\n      if (metasets.length > datasets.length) {\n        delete this._stacks;\n      }\n      metasets.forEach(function (meta, index) {\n        if (datasets.filter(function (x) {\n          return x === meta._dataset;\n        }).length === 0) {\n          _this12._destroyDatasetMeta(index);\n        }\n      });\n    }\n  }, {\n    key: \"buildOrUpdateControllers\",\n    value: function buildOrUpdateControllers() {\n      var newControllers = [];\n      var datasets = this.data.datasets;\n      var i, ilen;\n      this._removeUnreferencedMetasets();\n      for (i = 0, ilen = datasets.length; i < ilen; i++) {\n        var dataset = datasets[i];\n        var meta = this.getDatasetMeta(i);\n        var type = dataset.type || this.config.type;\n        if (meta.type && meta.type !== type) {\n          this._destroyDatasetMeta(i);\n          meta = this.getDatasetMeta(i);\n        }\n        meta.type = type;\n        meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n        meta.order = dataset.order || 0;\n        meta.index = i;\n        meta.label = '' + dataset.label;\n        meta.visible = this.isDatasetVisible(i);\n        if (meta.controller) {\n          meta.controller.updateIndex(i);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = registry.getController(type);\n          var _defaults$datasets$ty = _helpersSegment.d.datasets[type],\n            datasetElementType = _defaults$datasets$ty.datasetElementType,\n            dataElementType = _defaults$datasets$ty.dataElementType;\n          Object.assign(ControllerClass.prototype, {\n            dataElementType: registry.getElement(dataElementType),\n            datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n          });\n          meta.controller = new ControllerClass(this, i);\n          newControllers.push(meta.controller);\n        }\n      }\n      this._updateMetasets();\n      return newControllers;\n    }\n  }, {\n    key: \"_resetElements\",\n    value: function _resetElements() {\n      var _this13 = this;\n      (0, _helpersSegment.Q)(this.data.datasets, function (dataset, datasetIndex) {\n        _this13.getDatasetMeta(datasetIndex).controller.reset();\n      }, this);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._resetElements();\n      this.notifyPlugins('reset');\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var config = this.config;\n      config.update();\n      var options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n      var animsDisabled = this._animationsDisabled = !options.animation;\n      this._updateScales();\n      this._checkEventBindings();\n      this._updateHiddenIndices();\n      this._plugins.invalidate();\n      if (this.notifyPlugins('beforeUpdate', {\n        mode: mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      var newControllers = this.buildOrUpdateControllers();\n      this.notifyPlugins('beforeElementsUpdate');\n      var minPadding = 0;\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n        var _this$getDatasetMeta = this.getDatasetMeta(i),\n          controller = _this$getDatasetMeta.controller;\n        var reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n        controller.buildOrUpdateElements(reset);\n        minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n      }\n      minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n      this._updateLayout(minPadding);\n      if (!animsDisabled) {\n        (0, _helpersSegment.Q)(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n      this._updateDatasets(mode);\n      this.notifyPlugins('afterUpdate', {\n        mode: mode\n      });\n      this._layers.sort(compare2Level('z', '_idx'));\n      var _active = this._active,\n        _lastEvent = this._lastEvent;\n      if (_lastEvent) {\n        this._eventHandler(_lastEvent, true);\n      } else if (_active.length) {\n        this._updateHoverStyles(_active, _active, true);\n      }\n      this.render();\n    }\n  }, {\n    key: \"_updateScales\",\n    value: function _updateScales() {\n      var _this14 = this;\n      (0, _helpersSegment.Q)(this.scales, function (scale) {\n        layouts.removeBox(_this14, scale);\n      });\n      this.ensureScalesHaveIDs();\n      this.buildOrUpdateScales();\n    }\n  }, {\n    key: \"_checkEventBindings\",\n    value: function _checkEventBindings() {\n      var options = this.options;\n      var existingEvents = new Set(Object.keys(this._listeners));\n      var newEvents = new Set(options.events);\n      if (!(0, _helpersSegment.ah)(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n        this.unbindEvents();\n        this.bindEvents();\n      }\n    }\n  }, {\n    key: \"_updateHiddenIndices\",\n    value: function _updateHiddenIndices() {\n      var _hiddenIndices = this._hiddenIndices;\n      var changes = this._getUniformDataChanges() || [];\n      var _iterator12 = _createForOfIteratorHelper(changes),\n        _step12;\n      try {\n        for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n          var _step12$value = _step12.value,\n            method = _step12$value.method,\n            start = _step12$value.start,\n            count = _step12$value.count;\n          var move = method === '_removeElements' ? -count : count;\n          moveNumericKeys(_hiddenIndices, start, move);\n        }\n      } catch (err) {\n        _iterator12.e(err);\n      } finally {\n        _iterator12.f();\n      }\n    }\n  }, {\n    key: \"_getUniformDataChanges\",\n    value: function _getUniformDataChanges() {\n      var _dataChanges = this._dataChanges;\n      if (!_dataChanges || !_dataChanges.length) {\n        return;\n      }\n      this._dataChanges = [];\n      var datasetCount = this.data.datasets.length;\n      var makeSet = function makeSet(idx) {\n        return new Set(_dataChanges.filter(function (c) {\n          return c[0] === idx;\n        }).map(function (c, i) {\n          return i + ',' + c.splice(1).join(',');\n        }));\n      };\n      var changeSet = makeSet(0);\n      for (var i = 1; i < datasetCount; i++) {\n        if (!(0, _helpersSegment.ah)(changeSet, makeSet(i))) {\n          return;\n        }\n      }\n      return Array.from(changeSet).map(function (c) {\n        return c.split(',');\n      }).map(function (a) {\n        return {\n          method: a[1],\n          start: +a[2],\n          count: +a[3]\n        };\n      });\n    }\n  }, {\n    key: \"_updateLayout\",\n    value: function _updateLayout(minPadding) {\n      var _this15 = this;\n      if (this.notifyPlugins('beforeLayout', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      layouts.update(this, this.width, this.height, minPadding);\n      var area = this.chartArea;\n      var noArea = area.width <= 0 || area.height <= 0;\n      this._layers = [];\n      (0, _helpersSegment.Q)(this.boxes, function (box) {\n        var _this15$_layers;\n        if (noArea && box.position === 'chartArea') {\n          return;\n        }\n        if (box.configure) {\n          box.configure();\n        }\n        (_this15$_layers = _this15._layers).push.apply(_this15$_layers, (0, _toConsumableArray2.default)(box._layers()));\n      }, this);\n      this._layers.forEach(function (item, index) {\n        item._idx = index;\n      });\n      this.notifyPlugins('afterLayout');\n    }\n  }, {\n    key: \"_updateDatasets\",\n    value: function _updateDatasets(mode) {\n      if (this.notifyPlugins('beforeDatasetsUpdate', {\n        mode: mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        this.getDatasetMeta(i).controller.configure();\n      }\n      for (var _i4 = 0, _ilen = this.data.datasets.length; _i4 < _ilen; ++_i4) {\n        this._updateDataset(_i4, (0, _helpersSegment.a8)(mode) ? mode({\n          datasetIndex: _i4\n        }) : mode);\n      }\n      this.notifyPlugins('afterDatasetsUpdate', {\n        mode: mode\n      });\n    }\n  }, {\n    key: \"_updateDataset\",\n    value: function _updateDataset(index, mode) {\n      var meta = this.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        mode: mode,\n        cancelable: true\n      };\n      if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n        return;\n      }\n      meta.controller._update(mode);\n      args.cancelable = false;\n      this.notifyPlugins('afterDatasetUpdate', args);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.notifyPlugins('beforeRender', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      if (animator.has(this)) {\n        if (this.attached && !animator.running(this)) {\n          animator.start(this);\n        }\n      } else {\n        this.draw();\n        onAnimationsComplete({\n          chart: this\n        });\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var i;\n      if (this._resizeBeforeDraw) {\n        var _this$_resizeBeforeDr = this._resizeBeforeDraw,\n          width = _this$_resizeBeforeDr.width,\n          height = _this$_resizeBeforeDr.height;\n        this._resize(width, height);\n        this._resizeBeforeDraw = null;\n      }\n      this.clear();\n      if (this.width <= 0 || this.height <= 0) {\n        return;\n      }\n      if (this.notifyPlugins('beforeDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      var layers = this._layers;\n      for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n        layers[i].draw(this.chartArea);\n      }\n      this._drawDatasets();\n      for (; i < layers.length; ++i) {\n        layers[i].draw(this.chartArea);\n      }\n      this.notifyPlugins('afterDraw');\n    }\n  }, {\n    key: \"_getSortedDatasetMetas\",\n    value: function _getSortedDatasetMetas(filterVisible) {\n      var metasets = this._sortedMetasets;\n      var result = [];\n      var i, ilen;\n      for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n        var meta = metasets[i];\n        if (!filterVisible || meta.visible) {\n          result.push(meta);\n        }\n      }\n      return result;\n    }\n  }, {\n    key: \"getSortedVisibleDatasetMetas\",\n    value: function getSortedVisibleDatasetMetas() {\n      return this._getSortedDatasetMetas(true);\n    }\n  }, {\n    key: \"_drawDatasets\",\n    value: function _drawDatasets() {\n      if (this.notifyPlugins('beforeDatasetsDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      var metasets = this.getSortedVisibleDatasetMetas();\n      for (var i = metasets.length - 1; i >= 0; --i) {\n        this._drawDataset(metasets[i]);\n      }\n      this.notifyPlugins('afterDatasetsDraw');\n    }\n  }, {\n    key: \"_drawDataset\",\n    value: function _drawDataset(meta) {\n      var ctx = this.ctx;\n      var clip = meta._clip;\n      var useClip = !clip.disabled;\n      var area = this.chartArea;\n      var args = {\n        meta: meta,\n        index: meta.index,\n        cancelable: true\n      };\n      if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n        return;\n      }\n      if (useClip) {\n        (0, _helpersSegment.L)(ctx, {\n          left: clip.left === false ? 0 : area.left - clip.left,\n          right: clip.right === false ? this.width : area.right + clip.right,\n          top: clip.top === false ? 0 : area.top - clip.top,\n          bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n        });\n      }\n      meta.controller.draw();\n      if (useClip) {\n        (0, _helpersSegment.N)(ctx);\n      }\n      args.cancelable = false;\n      this.notifyPlugins('afterDatasetDraw', args);\n    }\n  }, {\n    key: \"isPointInArea\",\n    value: function isPointInArea(point) {\n      return (0, _helpersSegment.$)(point, this.chartArea, this._minPadding);\n    }\n  }, {\n    key: \"getElementsAtEventForMode\",\n    value: function getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n      var method = Interaction.modes[mode];\n      if (typeof method === 'function') {\n        return method(this, e, options, useFinalPosition);\n      }\n      return [];\n    }\n  }, {\n    key: \"getDatasetMeta\",\n    value: function getDatasetMeta(datasetIndex) {\n      var dataset = this.data.datasets[datasetIndex];\n      var metasets = this._metasets;\n      var meta = metasets.filter(function (x) {\n        return x && x._dataset === dataset;\n      }).pop();\n      if (!meta) {\n        meta = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          xAxisID: null,\n          yAxisID: null,\n          order: dataset && dataset.order || 0,\n          index: datasetIndex,\n          _dataset: dataset,\n          _parsed: [],\n          _sorted: false\n        };\n        metasets.push(meta);\n      }\n      return meta;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext() {\n      return this.$context || (this.$context = (0, _helpersSegment.h)(null, {\n        chart: this,\n        type: 'chart'\n      }));\n    }\n  }, {\n    key: \"getVisibleDatasetCount\",\n    value: function getVisibleDatasetCount() {\n      return this.getSortedVisibleDatasetMetas().length;\n    }\n  }, {\n    key: \"isDatasetVisible\",\n    value: function isDatasetVisible(datasetIndex) {\n      var dataset = this.data.datasets[datasetIndex];\n      if (!dataset) {\n        return false;\n      }\n      var meta = this.getDatasetMeta(datasetIndex);\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n  }, {\n    key: \"setDatasetVisibility\",\n    value: function setDatasetVisibility(datasetIndex, visible) {\n      var meta = this.getDatasetMeta(datasetIndex);\n      meta.hidden = !visible;\n    }\n  }, {\n    key: \"toggleDataVisibility\",\n    value: function toggleDataVisibility(index) {\n      this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n  }, {\n    key: \"getDataVisibility\",\n    value: function getDataVisibility(index) {\n      return !this._hiddenIndices[index];\n    }\n  }, {\n    key: \"_updateVisibility\",\n    value: function _updateVisibility(datasetIndex, dataIndex, visible) {\n      var mode = visible ? 'show' : 'hide';\n      var meta = this.getDatasetMeta(datasetIndex);\n      var anims = meta.controller._resolveAnimations(undefined, mode);\n      if ((0, _helpersSegment.j)(dataIndex)) {\n        meta.data[dataIndex].hidden = !visible;\n        this.update();\n      } else {\n        this.setDatasetVisibility(datasetIndex, visible);\n        anims.update(meta, {\n          visible: visible\n        });\n        this.update(function (ctx) {\n          return ctx.datasetIndex === datasetIndex ? mode : undefined;\n        });\n      }\n    }\n  }, {\n    key: \"hide\",\n    value: function hide(datasetIndex, dataIndex) {\n      this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n  }, {\n    key: \"show\",\n    value: function show(datasetIndex, dataIndex) {\n      this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n  }, {\n    key: \"_destroyDatasetMeta\",\n    value: function _destroyDatasetMeta(datasetIndex) {\n      var meta = this._metasets[datasetIndex];\n      if (meta && meta.controller) {\n        meta.controller._destroy();\n      }\n      delete this._metasets[datasetIndex];\n    }\n  }, {\n    key: \"_stop\",\n    value: function _stop() {\n      var i, ilen;\n      this.stop();\n      animator.remove(this);\n      for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.notifyPlugins('beforeDestroy');\n      var canvas = this.canvas,\n        ctx = this.ctx;\n      this._stop();\n      this.config.clearCache();\n      if (canvas) {\n        this.unbindEvents();\n        (0, _helpersSegment.ag)(canvas, ctx);\n        this.platform.releaseContext(ctx);\n        this.canvas = null;\n        this.ctx = null;\n      }\n      this.notifyPlugins('destroy');\n      delete instances[this.id];\n      this.notifyPlugins('afterDestroy');\n    }\n  }, {\n    key: \"toBase64Image\",\n    value: function toBase64Image() {\n      var _this$canvas;\n      return (_this$canvas = this.canvas).toDataURL.apply(_this$canvas, arguments);\n    }\n  }, {\n    key: \"bindEvents\",\n    value: function bindEvents() {\n      this.bindUserEvents();\n      if (this.options.responsive) {\n        this.bindResponsiveEvents();\n      } else {\n        this.attached = true;\n      }\n    }\n  }, {\n    key: \"bindUserEvents\",\n    value: function bindUserEvents() {\n      var _this16 = this;\n      var listeners = this._listeners;\n      var platform = this.platform;\n      var _add = function _add(type, listener) {\n        platform.addEventListener(_this16, type, listener);\n        listeners[type] = listener;\n      };\n      var listener = function listener(e, x, y) {\n        e.offsetX = x;\n        e.offsetY = y;\n        _this16._eventHandler(e);\n      };\n      (0, _helpersSegment.Q)(this.options.events, function (type) {\n        return _add(type, listener);\n      });\n    }\n  }, {\n    key: \"bindResponsiveEvents\",\n    value: function bindResponsiveEvents() {\n      var _this17 = this;\n      if (!this._responsiveListeners) {\n        this._responsiveListeners = {};\n      }\n      var listeners = this._responsiveListeners;\n      var platform = this.platform;\n      var _add = function _add(type, listener) {\n        platform.addEventListener(_this17, type, listener);\n        listeners[type] = listener;\n      };\n      var _remove = function _remove(type, listener) {\n        if (listeners[type]) {\n          platform.removeEventListener(_this17, type, listener);\n          delete listeners[type];\n        }\n      };\n      var listener = function listener(width, height) {\n        if (_this17.canvas) {\n          _this17.resize(width, height);\n        }\n      };\n      var detached;\n      var _attached = function attached() {\n        _remove('attach', _attached);\n        _this17.attached = true;\n        _this17.resize();\n        _add('resize', listener);\n        _add('detach', detached);\n      };\n      detached = function detached() {\n        _this17.attached = false;\n        _remove('resize', listener);\n        _this17._stop();\n        _this17._resize(0, 0);\n        _add('attach', _attached);\n      };\n      if (platform.isAttached(this.canvas)) {\n        _attached();\n      } else {\n        detached();\n      }\n    }\n  }, {\n    key: \"unbindEvents\",\n    value: function unbindEvents() {\n      var _this18 = this;\n      (0, _helpersSegment.Q)(this._listeners, function (listener, type) {\n        _this18.platform.removeEventListener(_this18, type, listener);\n      });\n      this._listeners = {};\n      (0, _helpersSegment.Q)(this._responsiveListeners, function (listener, type) {\n        _this18.platform.removeEventListener(_this18, type, listener);\n      });\n      this._responsiveListeners = undefined;\n    }\n  }, {\n    key: \"updateHoverStyle\",\n    value: function updateHoverStyle(items, mode, enabled) {\n      var prefix = enabled ? 'set' : 'remove';\n      var meta, item, i, ilen;\n      if (mode === 'dataset') {\n        meta = this.getDatasetMeta(items[0].datasetIndex);\n        meta.controller['_' + prefix + 'DatasetHoverStyle']();\n      }\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        item = items[i];\n        var controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n        if (controller) {\n          controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n        }\n      }\n    }\n  }, {\n    key: \"getActiveElements\",\n    value: function getActiveElements() {\n      return this._active || [];\n    }\n  }, {\n    key: \"setActiveElements\",\n    value: function setActiveElements(activeElements) {\n      var _this19 = this;\n      var lastActive = this._active || [];\n      var active = activeElements.map(function (_ref4) {\n        var datasetIndex = _ref4.datasetIndex,\n          index = _ref4.index;\n        var meta = _this19.getDatasetMeta(datasetIndex);\n        if (!meta) {\n          throw new Error('No dataset found at index ' + datasetIndex);\n        }\n        return {\n          datasetIndex: datasetIndex,\n          element: meta.data[index],\n          index: index\n        };\n      });\n      var changed = !(0, _helpersSegment.ai)(active, lastActive);\n      if (changed) {\n        this._active = active;\n        this._lastEvent = null;\n        this._updateHoverStyles(active, lastActive);\n      }\n    }\n  }, {\n    key: \"notifyPlugins\",\n    value: function notifyPlugins(hook, args, filter) {\n      return this._plugins.notify(this, hook, args, filter);\n    }\n  }, {\n    key: \"_updateHoverStyles\",\n    value: function _updateHoverStyles(active, lastActive, replay) {\n      var hoverOptions = this.options.hover;\n      var diff = function diff(a, b) {\n        return a.filter(function (x) {\n          return !b.some(function (y) {\n            return x.datasetIndex === y.datasetIndex && x.index === y.index;\n          });\n        });\n      };\n      var deactivated = diff(lastActive, active);\n      var activated = replay ? active : diff(active, lastActive);\n      if (deactivated.length) {\n        this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n      }\n      if (activated.length && hoverOptions.mode) {\n        this.updateHoverStyle(activated, hoverOptions.mode, true);\n      }\n    }\n  }, {\n    key: \"_eventHandler\",\n    value: function _eventHandler(e, replay) {\n      var _this20 = this;\n      var args = {\n        event: e,\n        replay: replay,\n        cancelable: true,\n        inChartArea: this.isPointInArea(e)\n      };\n      var eventFilter = function eventFilter(plugin) {\n        return (plugin.options.events || _this20.options.events).includes(e.native.type);\n      };\n      if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n        return;\n      }\n      var changed = this._handleEvent(e, replay, args.inChartArea);\n      args.cancelable = false;\n      this.notifyPlugins('afterEvent', args, eventFilter);\n      if (changed || args.changed) {\n        this.render();\n      }\n      return this;\n    }\n  }, {\n    key: \"_handleEvent\",\n    value: function _handleEvent(e, replay, inChartArea) {\n      var _this$_active = this._active,\n        lastActive = _this$_active === void 0 ? [] : _this$_active,\n        options = this.options;\n      var useFinalPosition = replay;\n      var active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n      var isClick = (0, _helpersSegment.aj)(e);\n      var lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n      if (inChartArea) {\n        this._lastEvent = null;\n        (0, _helpersSegment.C)(options.onHover, [e, active, this], this);\n        if (isClick) {\n          (0, _helpersSegment.C)(options.onClick, [e, active, this], this);\n        }\n      }\n      var changed = !(0, _helpersSegment.ai)(active, lastActive);\n      if (changed || replay) {\n        this._active = active;\n        this._updateHoverStyles(active, lastActive, replay);\n      }\n      this._lastEvent = lastEvent;\n      return changed;\n    }\n  }, {\n    key: \"_getActiveElements\",\n    value: function _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n      if (e.type === 'mouseout') {\n        return [];\n      }\n      if (!inChartArea) {\n        return lastActive;\n      }\n      var hoverOptions = this.options.hover;\n      return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n  }]);\n}();\nvar invalidatePlugins = function invalidatePlugins() {\n  return (0, _helpersSegment.Q)(Chart.instances, function (chart) {\n    return chart._plugins.invalidate();\n  });\n};\nvar enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable: enumerable,\n    value: _helpersSegment.d\n  },\n  instances: {\n    enumerable: enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable: enumerable,\n    value: _helpersSegment.U\n  },\n  registry: {\n    enumerable: enumerable,\n    value: registry\n  },\n  version: {\n    enumerable: enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable: enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable: enumerable,\n    value: function value() {\n      registry.add.apply(registry, arguments);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable: enumerable,\n    value: function value() {\n      registry.remove.apply(registry, arguments);\n      invalidatePlugins();\n    }\n  }\n});\nfunction clipArc(ctx, element, endAngle) {\n  var startAngle = element.startAngle,\n    pixelMargin = element.pixelMargin,\n    x = element.x,\n    y = element.y,\n    outerRadius = element.outerRadius,\n    innerRadius = element.innerRadius;\n  var angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + _helpersSegment.H, startAngle - _helpersSegment.H);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return (0, _helpersSegment.al)(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  var o = toRadiusCorners(arc.options.borderRadius);\n  var halfThickness = (outerRadius - innerRadius) / 2;\n  var innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  var computeOuterLimit = function computeOuterLimit(val) {\n    var outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return (0, _helpersSegment.E)(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: (0, _helpersSegment.E)(o.innerStart, 0, innerLimit),\n    innerEnd: (0, _helpersSegment.E)(o.innerEnd, 0, innerLimit)\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta)\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end, circular) {\n  var x = element.x,\n    y = element.y,\n    start = element.startAngle,\n    pixelMargin = element.pixelMargin,\n    innerR = element.innerRadius;\n  var outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  var innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  var spacingOffset = 0;\n  var alpha = end - start;\n  if (spacing) {\n    var noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    var noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    var avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    var adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  var beta = Math.max(0.001, alpha * outerRadius - offset / _helpersSegment.P) / outerRadius;\n  var angleOffset = (alpha - beta) / 2;\n  var startAngle = start + angleOffset + spacingOffset;\n  var endAngle = end - angleOffset - spacingOffset;\n  var _parseBorderRadius$ = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle),\n    outerStart = _parseBorderRadius$.outerStart,\n    outerEnd = _parseBorderRadius$.outerEnd,\n    innerStart = _parseBorderRadius$.innerStart,\n    innerEnd = _parseBorderRadius$.innerEnd;\n  var outerStartAdjustedRadius = outerRadius - outerStart;\n  var outerEndAdjustedRadius = outerRadius - outerEnd;\n  var outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  var outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  var innerStartAdjustedRadius = innerRadius + innerStart;\n  var innerEndAdjustedRadius = innerRadius + innerEnd;\n  var innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  var innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  if (circular) {\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n    if (outerEnd > 0) {\n      var pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + _helpersSegment.H);\n    }\n    var p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n    if (innerEnd > 0) {\n      var _pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(_pCenter.x, _pCenter.y, innerEnd, endAngle + _helpersSegment.H, innerEndAdjustedAngle + Math.PI);\n    }\n    ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, startAngle + innerStart / innerRadius, true);\n    if (innerStart > 0) {\n      var _pCenter2 = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(_pCenter2.x, _pCenter2.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - _helpersSegment.H);\n    }\n    var p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n    if (outerStart > 0) {\n      var _pCenter3 = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(_pCenter3.x, _pCenter3.y, outerStart, startAngle - _helpersSegment.H, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n    var outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    var outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n    var outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    var outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n  var fullCircles = element.fullCircles,\n    startAngle = element.startAngle,\n    circumference = element.circumference;\n  var endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + _helpersSegment.T, circular);\n    for (var i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % _helpersSegment.T;\n      if (circumference % _helpersSegment.T === 0) {\n        endAngle += _helpersSegment.T;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  var x = element.x,\n    y = element.y,\n    startAngle = element.startAngle,\n    pixelMargin = element.pixelMargin,\n    fullCircles = element.fullCircles;\n  var outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  var innerRadius = element.innerRadius + pixelMargin;\n  var i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + _helpersSegment.T);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + _helpersSegment.T, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + _helpersSegment.T);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle, circular) {\n  var options = element.options;\n  var borderWidth = options.borderWidth,\n    borderJoinStyle = options.borderJoinStyle;\n  var inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.stroke();\n}\nvar ArcElement = exports.ArcElement = /*#__PURE__*/function (_Element2) {\n  function ArcElement(cfg) {\n    var _this21;\n    (0, _classCallCheck2.default)(this, ArcElement);\n    _this21 = _callSuper(this, ArcElement);\n    _this21.options = undefined;\n    _this21.circumference = undefined;\n    _this21.startAngle = undefined;\n    _this21.endAngle = undefined;\n    _this21.innerRadius = undefined;\n    _this21.outerRadius = undefined;\n    _this21.pixelMargin = 0;\n    _this21.fullCircles = 0;\n    if (cfg) {\n      Object.assign(_this21, cfg);\n    }\n    return _this21;\n  }\n  (0, _inherits2.default)(ArcElement, _Element2);\n  return (0, _createClass2.default)(ArcElement, [{\n    key: \"inRange\",\n    value: function inRange(chartX, chartY, useFinalPosition) {\n      var point = this.getProps(['x', 'y'], useFinalPosition);\n      var _getAngleFromPoint2 = (0, _helpersSegment.a0)(point, {\n          x: chartX,\n          y: chartY\n        }),\n        angle = _getAngleFromPoint2.angle,\n        distance = _getAngleFromPoint2.distance;\n      var _this$getProps2 = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition),\n        startAngle = _this$getProps2.startAngle,\n        endAngle = _this$getProps2.endAngle,\n        innerRadius = _this$getProps2.innerRadius,\n        outerRadius = _this$getProps2.outerRadius,\n        circumference = _this$getProps2.circumference;\n      var rAdjust = this.options.spacing / 2;\n      var _circumference = (0, _helpersSegment.v)(circumference, endAngle - startAngle);\n      var betweenAngles = _circumference >= _helpersSegment.T || (0, _helpersSegment.p)(angle, startAngle, endAngle);\n      var withinRadius = (0, _helpersSegment.ak)(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n      return betweenAngles && withinRadius;\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps3 = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition),\n        x = _this$getProps3.x,\n        y = _this$getProps3.y,\n        startAngle = _this$getProps3.startAngle,\n        endAngle = _this$getProps3.endAngle,\n        innerRadius = _this$getProps3.innerRadius,\n        outerRadius = _this$getProps3.outerRadius;\n      var _this$options10 = this.options,\n        offset = _this$options10.offset,\n        spacing = _this$options10.spacing;\n      var halfAngle = (startAngle + endAngle) / 2;\n      var halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n      return {\n        x: x + Math.cos(halfAngle) * halfRadius,\n        y: y + Math.sin(halfAngle) * halfRadius\n      };\n    }\n  }, {\n    key: \"tooltipPosition\",\n    value: function tooltipPosition(useFinalPosition) {\n      return this.getCenterPoint(useFinalPosition);\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var options = this.options,\n        circumference = this.circumference;\n      var offset = (options.offset || 0) / 2;\n      var spacing = (options.spacing || 0) / 2;\n      var circular = options.circular;\n      this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n      this.fullCircles = circumference > _helpersSegment.T ? Math.floor(circumference / _helpersSegment.T) : 0;\n      if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n        return;\n      }\n      ctx.save();\n      var radiusOffset = 0;\n      if (offset) {\n        radiusOffset = offset / 2;\n        var halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n        if (this.circumference >= _helpersSegment.P) {\n          radiusOffset = offset;\n        }\n      }\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      var endAngle = drawArc(ctx, this, radiusOffset, spacing, circular);\n      drawBorder(ctx, this, radiusOffset, spacing, endAngle, circular);\n      ctx.restore();\n    }\n  }]);\n}(Element);\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n  circular: true\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\nfunction setStyle(ctx, options) {\n  var style = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : options;\n  ctx.lineCap = (0, _helpersSegment.v)(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash((0, _helpersSegment.v)(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = (0, _helpersSegment.v)(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = (0, _helpersSegment.v)(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = (0, _helpersSegment.v)(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = (0, _helpersSegment.v)(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _helpersSegment.as;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _helpersSegment.at;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment) {\n  var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var count = points.length;\n  var _params$start = params.start,\n    paramsStart = _params$start === void 0 ? 0 : _params$start,\n    _params$end = params.end,\n    paramsEnd = _params$end === void 0 ? count - 1 : _params$end;\n  var segmentStart = segment.start,\n    segmentEnd = segment.end;\n  var start = Math.max(paramsStart, segmentStart);\n  var end = Math.min(paramsEnd, segmentEnd);\n  var outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count: count,\n    start: start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  var points = line.points,\n    options = line.options;\n  var _pathVars = pathVars(points, segment, params),\n    count = _pathVars.count,\n    start = _pathVars.start,\n    loop = _pathVars.loop,\n    ilen = _pathVars.ilen;\n  var lineMethod = getLineMethod(options);\n  var _ref5 = params || {},\n    _ref5$move = _ref5.move,\n    move = _ref5$move === void 0 ? true : _ref5$move,\n    reverse = _ref5.reverse;\n  var i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  var points = line.points;\n  var _pathVars2 = pathVars(points, segment, params),\n    count = _pathVars2.count,\n    start = _pathVars2.start,\n    ilen = _pathVars2.ilen;\n  var _ref6 = params || {},\n    _ref6$move = _ref6.move,\n    move = _ref6$move === void 0 ? true : _ref6$move,\n    reverse = _ref6.reverse;\n  var avgX = 0;\n  var countX = 0;\n  var i, point, prevX, minY, maxY, lastY;\n  var pointIndex = function pointIndex(index) {\n    return (start + (reverse ? ilen - index : index)) % count;\n  };\n  var drawX = function drawX() {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    var x = point.x;\n    var y = point.y;\n    var truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  var opts = line.options;\n  var borderDash = opts.borderDash && opts.borderDash.length;\n  var useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _helpersSegment.ap;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _helpersSegment.aq;\n  }\n  return _helpersSegment.ar;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  var path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  var segments = line.segments,\n    options = line.options;\n  var segmentMethod = _getSegmentMethod(line);\n  var _iterator13 = _createForOfIteratorHelper(segments),\n    _step13;\n  try {\n    for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n      var segment = _step13.value;\n      setStyle(ctx, options, segment.style);\n      ctx.beginPath();\n      if (segmentMethod(ctx, line, segment, {\n        start: start,\n        end: start + count - 1\n      })) {\n        ctx.closePath();\n      }\n      ctx.stroke();\n    }\n  } catch (err) {\n    _iterator13.e(err);\n  } finally {\n    _iterator13.f();\n  }\n}\nvar usePath2D = typeof Path2D === 'function';\nfunction _draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nvar LineElement = exports.LineElement = /*#__PURE__*/function (_Element3) {\n  function LineElement(cfg) {\n    var _this22;\n    (0, _classCallCheck2.default)(this, LineElement);\n    _this22 = _callSuper(this, LineElement);\n    _this22.animated = true;\n    _this22.options = undefined;\n    _this22._chart = undefined;\n    _this22._loop = undefined;\n    _this22._fullLoop = undefined;\n    _this22._path = undefined;\n    _this22._points = undefined;\n    _this22._segments = undefined;\n    _this22._decimated = false;\n    _this22._pointsUpdated = false;\n    _this22._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(_this22, cfg);\n    }\n    return _this22;\n  }\n  (0, _inherits2.default)(LineElement, _Element3);\n  return (0, _createClass2.default)(LineElement, [{\n    key: \"updateControlPoints\",\n    value: function updateControlPoints(chartArea, indexAxis) {\n      var options = this.options;\n      if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n        var loop = options.spanGaps ? this._loop : this._fullLoop;\n        (0, _helpersSegment.am)(this._points, options, chartArea, loop, indexAxis);\n        this._pointsUpdated = true;\n      }\n    }\n  }, {\n    key: \"points\",\n    get: function get() {\n      return this._points;\n    },\n    set: function set(points) {\n      this._points = points;\n      delete this._segments;\n      delete this._path;\n      this._pointsUpdated = false;\n    }\n  }, {\n    key: \"segments\",\n    get: function get() {\n      return this._segments || (this._segments = (0, _helpersSegment.an)(this, this.options.segment));\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      var segments = this.segments;\n      var points = this.points;\n      return segments.length && points[segments[0].start];\n    }\n  }, {\n    key: \"last\",\n    value: function last() {\n      var segments = this.segments;\n      var points = this.points;\n      var count = segments.length;\n      return count && points[segments[count - 1].end];\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(point, property) {\n      var options = this.options;\n      var value = point[property];\n      var points = this.points;\n      var segments = (0, _helpersSegment.ao)(this, {\n        property: property,\n        start: value,\n        end: value\n      });\n      if (!segments.length) {\n        return;\n      }\n      var result = [];\n      var _interpolate = _getInterpolationMethod(options);\n      var i, ilen;\n      for (i = 0, ilen = segments.length; i < ilen; ++i) {\n        var _segments$i = segments[i],\n          start = _segments$i.start,\n          end = _segments$i.end;\n        var p1 = points[start];\n        var p2 = points[end];\n        if (p1 === p2) {\n          result.push(p1);\n          continue;\n        }\n        var t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n        var interpolated = _interpolate(p1, p2, t, options.stepped);\n        interpolated[property] = point[property];\n        result.push(interpolated);\n      }\n      return result.length === 1 ? result[0] : result;\n    }\n  }, {\n    key: \"pathSegment\",\n    value: function pathSegment(ctx, segment, params) {\n      var segmentMethod = _getSegmentMethod(this);\n      return segmentMethod(ctx, this, segment, params);\n    }\n  }, {\n    key: \"path\",\n    value: function path(ctx, start, count) {\n      var segments = this.segments;\n      var segmentMethod = _getSegmentMethod(this);\n      var loop = this._loop;\n      start = start || 0;\n      count = count || this.points.length - start;\n      var _iterator14 = _createForOfIteratorHelper(segments),\n        _step14;\n      try {\n        for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n          var segment = _step14.value;\n          loop &= segmentMethod(ctx, this, segment, {\n            start: start,\n            end: start + count - 1\n          });\n        }\n      } catch (err) {\n        _iterator14.e(err);\n      } finally {\n        _iterator14.f();\n      }\n      return !!loop;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx, chartArea, start, count) {\n      var options = this.options || {};\n      var points = this.points || [];\n      if (points.length && options.borderWidth) {\n        ctx.save();\n        _draw(ctx, this, start, count);\n        ctx.restore();\n      }\n      if (this.animated) {\n        this._pointsUpdated = false;\n        this._path = undefined;\n      }\n    }\n  }]);\n}(Element);\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: function _indexable(name) {\n    return name !== 'borderDash' && name !== 'fill';\n  }\n};\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  var options = el.options;\n  var _el$getProps = el.getProps([axis], useFinalPosition),\n    value = _el$getProps[axis];\n  return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nvar PointElement = exports.PointElement = /*#__PURE__*/function (_Element4) {\n  function PointElement(cfg) {\n    var _this23;\n    (0, _classCallCheck2.default)(this, PointElement);\n    _this23 = _callSuper(this, PointElement);\n    _this23.options = undefined;\n    _this23.parsed = undefined;\n    _this23.skip = undefined;\n    _this23.stop = undefined;\n    if (cfg) {\n      Object.assign(_this23, cfg);\n    }\n    return _this23;\n  }\n  (0, _inherits2.default)(PointElement, _Element4);\n  return (0, _createClass2.default)(PointElement, [{\n    key: \"inRange\",\n    value: function inRange(mouseX, mouseY, useFinalPosition) {\n      var options = this.options;\n      var _this$getProps4 = this.getProps(['x', 'y'], useFinalPosition),\n        x = _this$getProps4.x,\n        y = _this$getProps4.y;\n      return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n  }, {\n    key: \"inXRange\",\n    value: function inXRange(mouseX, useFinalPosition) {\n      return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n  }, {\n    key: \"inYRange\",\n    value: function inYRange(mouseY, useFinalPosition) {\n      return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps5 = this.getProps(['x', 'y'], useFinalPosition),\n        x = _this$getProps5.x,\n        y = _this$getProps5.y;\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }, {\n    key: \"size\",\n    value: function size(options) {\n      options = options || this.options || {};\n      var radius = options.radius || 0;\n      radius = Math.max(radius, radius && options.hoverRadius || 0);\n      var borderWidth = radius && options.borderWidth || 0;\n      return (radius + borderWidth) * 2;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx, area) {\n      var options = this.options;\n      if (this.skip || options.radius < 0.1 || !(0, _helpersSegment.$)(this, area, this.size(options) / 2)) {\n        return;\n      }\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.fillStyle = options.backgroundColor;\n      (0, _helpersSegment.au)(ctx, options, this.x, this.y);\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange() {\n      var options = this.options || {};\n      return options.radius + options.hitRadius;\n    }\n  }]);\n}(Element);\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nfunction getBarBounds(bar, useFinalPosition) {\n  var _bar$getProps = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition),\n    x = _bar$getProps.x,\n    y = _bar$getProps.y,\n    base = _bar$getProps.base,\n    width = _bar$getProps.width,\n    height = _bar$getProps.height;\n  var left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {\n    left: left,\n    top: top,\n    right: right,\n    bottom: bottom\n  };\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : (0, _helpersSegment.E)(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  var value = bar.options.borderWidth;\n  var skip = bar.borderSkipped;\n  var o = (0, _helpersSegment.aw)(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  var _bar$getProps2 = bar.getProps(['enableBorderRadius']),\n    enableBorderRadius = _bar$getProps2.enableBorderRadius;\n  var value = bar.options.borderRadius;\n  var o = (0, _helpersSegment.ax)(value);\n  var maxR = Math.min(maxW, maxH);\n  var skip = bar.borderSkipped;\n  var enableBorder = enableBorderRadius || (0, _helpersSegment.i)(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  var bounds = getBarBounds(bar);\n  var width = bounds.right - bounds.left;\n  var height = bounds.bottom - bounds.top;\n  var border = parseBorderWidth(bar, width / 2, height / 2);\n  var radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius: radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n      }\n    }\n  };\n}\nfunction _inRange(bar, x, y, useFinalPosition) {\n  var skipX = x === null;\n  var skipY = y === null;\n  var skipBoth = skipX && skipY;\n  var bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds && (skipX || (0, _helpersSegment.ak)(x, bounds.left, bounds.right)) && (skipY || (0, _helpersSegment.ak)(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount) {\n  var refRect = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var x = rect.x !== refRect.x ? -amount : 0;\n  var y = rect.y !== refRect.y ? -amount : 0;\n  var w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  var h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nvar BarElement = exports.BarElement = /*#__PURE__*/function (_Element5) {\n  function BarElement(cfg) {\n    var _this24;\n    (0, _classCallCheck2.default)(this, BarElement);\n    _this24 = _callSuper(this, BarElement);\n    _this24.options = undefined;\n    _this24.horizontal = undefined;\n    _this24.base = undefined;\n    _this24.width = undefined;\n    _this24.height = undefined;\n    _this24.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(_this24, cfg);\n    }\n    return _this24;\n  }\n  (0, _inherits2.default)(BarElement, _Element5);\n  return (0, _createClass2.default)(BarElement, [{\n    key: \"draw\",\n    value: function draw(ctx) {\n      var inflateAmount = this.inflateAmount,\n        _this$options11 = this.options,\n        borderColor = _this$options11.borderColor,\n        backgroundColor = _this$options11.backgroundColor;\n      var _boundingRects = boundingRects(this),\n        inner = _boundingRects.inner,\n        outer = _boundingRects.outer;\n      var addRectPath = hasRadius(outer.radius) ? _helpersSegment.av : addNormalRectPath;\n      ctx.save();\n      if (outer.w !== inner.w || outer.h !== inner.h) {\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n        ctx.clip();\n        addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n        ctx.fillStyle = borderColor;\n        ctx.fill('evenodd');\n      }\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(inner, inflateAmount));\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }, {\n    key: \"inRange\",\n    value: function inRange(mouseX, mouseY, useFinalPosition) {\n      return _inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n  }, {\n    key: \"inXRange\",\n    value: function inXRange(mouseX, useFinalPosition) {\n      return _inRange(this, mouseX, null, useFinalPosition);\n    }\n  }, {\n    key: \"inYRange\",\n    value: function inYRange(mouseY, useFinalPosition) {\n      return _inRange(this, null, mouseY, useFinalPosition);\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps6 = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition),\n        x = _this$getProps6.x,\n        y = _this$getProps6.y,\n        base = _this$getProps6.base,\n        horizontal = _this$getProps6.horizontal;\n      return {\n        x: horizontal ? (x + base) / 2 : x,\n        y: horizontal ? y : (y + base) / 2\n      };\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange(axis) {\n      return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n  }]);\n}(Element);\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nvar elements = exports.elements = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ArcElement: ArcElement,\n  LineElement: LineElement,\n  PointElement: PointElement,\n  BarElement: BarElement\n});\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  var samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  var decimated = [];\n  var bucketWidth = (count - 2) / (samples - 2);\n  var sampledIndex = 0;\n  var endIndex = start + count - 1;\n  var a = start;\n  var i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    var avgX = 0;\n    var avgY = 0;\n    var j = void 0;\n    var avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    var avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    var avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    var rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    var rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    var _data$a = data[a],\n      pointAx = _data$a.x,\n      pointAy = _data$a.y;\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  var avgX = 0;\n  var countX = 0;\n  var i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  var decimated = [];\n  var endIndex = start + count - 1;\n  var xMin = data[start].x;\n  var xMax = data[endIndex].x;\n  var dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    var truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      var lastIndex = i - 1;\n      if (!(0, _helpersSegment.k)(minIndex) && !(0, _helpersSegment.k)(maxIndex)) {\n        var intermediateIndex1 = Math.min(minIndex, maxIndex);\n        var intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push(_objectSpread(_objectSpread({}, data[intermediateIndex1]), {}, {\n            x: avgX\n          }));\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push(_objectSpread(_objectSpread({}, data[intermediateIndex2]), {}, {\n            x: avgX\n          }));\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    var data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      value: data\n    });\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach(function (dataset) {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  var pointCount = points.length;\n  var start = 0;\n  var count;\n  var iScale = meta.iScale;\n  var _iScale$getUserBounds = iScale.getUserBounds(),\n    min = _iScale$getUserBounds.min,\n    max = _iScale$getUserBounds.max,\n    minDefined = _iScale$getUserBounds.minDefined,\n    maxDefined = _iScale$getUserBounds.maxDefined;\n  if (minDefined) {\n    start = (0, _helpersSegment.E)((0, _helpersSegment.Z)(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = (0, _helpersSegment.E)((0, _helpersSegment.Z)(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {\n    start: start,\n    count: count\n  };\n}\nvar plugin_decimation = exports.Decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false\n  },\n  beforeElementsUpdate: function beforeElementsUpdate(chart, args, options) {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    var availableWidth = chart.width;\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      var _data = dataset._data,\n        indexAxis = dataset.indexAxis;\n      var meta = chart.getDatasetMeta(datasetIndex);\n      var data = _data || dataset.data;\n      if ((0, _helpersSegment.a)([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n      var xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      var _getStartAndCountOfVi3 = getStartAndCountOfVisiblePointsSimplified(meta, data),\n        start = _getStartAndCountOfVi3.start,\n        count = _getStartAndCountOfVi3.count;\n      var threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if ((0, _helpersSegment.k)(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function get() {\n            return this._decimated;\n          },\n          set: function set(d) {\n            this._data = d;\n          }\n        });\n      }\n      var decimated;\n      switch (options.algorithm) {\n        case 'lttb':\n          decimated = lttbDecimation(data, start, count, availableWidth, options);\n          break;\n        case 'min-max':\n          decimated = minMaxDecimation(data, start, count, availableWidth);\n          break;\n        default:\n          throw new Error(\"Unsupported decimation algorithm '\".concat(options.algorithm, \"'\"));\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy: function destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\nfunction _segments(line, target, property) {\n  var segments = line.segments;\n  var points = line.points;\n  var tpoints = target.points;\n  var parts = [];\n  var _iterator15 = _createForOfIteratorHelper(segments),\n    _step15;\n  try {\n    for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n      var segment = _step15.value;\n      var start = segment.start,\n        end = segment.end;\n      end = _findSegmentEnd(start, end, points);\n      var bounds = _getBounds(property, points[start], points[end], segment.loop);\n      if (!target.segments) {\n        parts.push({\n          source: segment,\n          target: bounds,\n          start: points[start],\n          end: points[end]\n        });\n        continue;\n      }\n      var targetSegments = (0, _helpersSegment.ao)(target, bounds);\n      var _iterator16 = _createForOfIteratorHelper(targetSegments),\n        _step16;\n      try {\n        for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n          var tgt = _step16.value;\n          var subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n          var fillSources = (0, _helpersSegment.ay)(segment, points, subBounds);\n          var _iterator17 = _createForOfIteratorHelper(fillSources),\n            _step17;\n          try {\n            for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {\n              var fillSource = _step17.value;\n              parts.push({\n                source: fillSource,\n                target: tgt,\n                start: (0, _defineProperty2.default)({}, property, _getEdge(bounds, subBounds, 'start', Math.max)),\n                end: (0, _defineProperty2.default)({}, property, _getEdge(bounds, subBounds, 'end', Math.min))\n              });\n            }\n          } catch (err) {\n            _iterator17.e(err);\n          } finally {\n            _iterator17.f();\n          }\n        }\n      } catch (err) {\n        _iterator16.e(err);\n      } finally {\n        _iterator16.f();\n      }\n    }\n  } catch (err) {\n    _iterator15.e(err);\n  } finally {\n    _iterator15.f();\n  }\n  return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  var start = first[property];\n  var end = last[property];\n  if (property === 'angle') {\n    start = (0, _helpersSegment.az)(start);\n    end = (0, _helpersSegment.az)(end);\n  }\n  return {\n    property: property,\n    start: start,\n    end: end\n  };\n}\nfunction _pointsFromSegments(boundary, line) {\n  var _ref7 = boundary || {},\n    _ref7$x = _ref7.x,\n    x = _ref7$x === void 0 ? null : _ref7$x,\n    _ref7$y = _ref7.y,\n    y = _ref7$y === void 0 ? null : _ref7$y;\n  var linePoints = line.points;\n  var points = [];\n  line.segments.forEach(function (_ref8) {\n    var start = _ref8.start,\n      end = _ref8.end;\n    end = _findSegmentEnd(start, end, linePoints);\n    var first = linePoints[start];\n    var last = linePoints[end];\n    if (y !== null) {\n      points.push({\n        x: first.x,\n        y: y\n      });\n      points.push({\n        x: last.x,\n        y: y\n      });\n    } else if (x !== null) {\n      points.push({\n        x: x,\n        y: first.y\n      });\n      points.push({\n        x: x,\n        y: last.y\n      });\n    }\n  });\n  return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n  for (; end > start; end--) {\n    var point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _createBoundaryLine(boundary, line) {\n  var points = [];\n  var _loop = false;\n  if ((0, _helpersSegment.b)(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points: points,\n    options: {\n      tension: 0\n    },\n    _loop: _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\nfunction _resolveTarget(sources, index, propagate) {\n  var source = sources[index];\n  var fill = source.fill;\n  var visited = [index];\n  var target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!(0, _helpersSegment.g)(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _decodeFill(line, index, count) {\n  var fill = parseFillOption(line);\n  if ((0, _helpersSegment.i)(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  var target = parseFloat(fill);\n  if ((0, _helpersSegment.g)(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n  return target;\n}\nfunction _getTargetPixel(fill, scale) {\n  var pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if ((0, _helpersSegment.i)(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\nfunction _getTargetValue(fill, scale, startValue) {\n  var value;\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if ((0, _helpersSegment.i)(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\nfunction parseFillOption(line) {\n  var options = line.options;\n  var fillOption = options.fill;\n  var fill = (0, _helpersSegment.v)(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction _buildStackLine(source) {\n  var scale = source.scale,\n    index = source.index,\n    line = source.line;\n  var points = [];\n  var segments = line.segments;\n  var sourcePoints = line.points;\n  var linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({\n    x: null,\n    y: scale.bottom\n  }, line));\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    for (var j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({\n    points: points,\n    options: {}\n  });\n}\nfunction getLinesBelow(scale, index) {\n  var below = [];\n  var metas = scale.getMatchingVisibleMetas('line');\n  for (var i = 0; i < metas.length; i++) {\n    var meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  var postponed = [];\n  for (var j = 0; j < linesBelow.length; j++) {\n    var line = linesBelow[j];\n    var _findPoint = findPoint(line, sourcePoint, 'x'),\n      first = _findPoint.first,\n      last = _findPoint.last,\n      point = _findPoint.point;\n    if (!point || first && last) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push.apply(points, postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  var point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  var pointValue = point[property];\n  var segments = line.segments;\n  var linePoints = line.points;\n  var first = false;\n  var last = false;\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    var firstValue = linePoints[segment.start][property];\n    var lastValue = linePoints[segment.end][property];\n    if ((0, _helpersSegment.ak)(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {\n    first: first,\n    last: last,\n    point: point\n  };\n}\nvar simpleArc = /*#__PURE__*/function () {\n  function simpleArc(opts) {\n    (0, _classCallCheck2.default)(this, simpleArc);\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  return (0, _createClass2.default)(simpleArc, [{\n    key: \"pathSegment\",\n    value: function pathSegment(ctx, bounds, opts) {\n      var x = this.x,\n        y = this.y,\n        radius = this.radius;\n      bounds = bounds || {\n        start: 0,\n        end: _helpersSegment.T\n      };\n      ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n      return !opts.bounds;\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(point) {\n      var x = this.x,\n        y = this.y,\n        radius = this.radius;\n      var angle = point.angle;\n      return {\n        x: x + Math.cos(angle) * radius,\n        y: y + Math.sin(angle) * radius,\n        angle: angle\n      };\n    }\n  }]);\n}();\nfunction _getTarget(source) {\n  var chart = source.chart,\n    fill = source.fill,\n    line = source.line;\n  if ((0, _helpersSegment.g)(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  var boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return _createBoundaryLine(boundary, line);\n}\nfunction getLineByIndex(chart, index) {\n  var meta = chart.getDatasetMeta(index);\n  var visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n  var scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n  var _source$scale = source.scale,\n    scale = _source$scale === void 0 ? {} : _source$scale,\n    fill = source.fill;\n  var pixel = _getTargetPixel(fill, scale);\n  if ((0, _helpersSegment.g)(pixel)) {\n    var horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n  return null;\n}\nfunction computeCircularBoundary(source) {\n  var scale = source.scale,\n    fill = source.fill;\n  var options = scale.options;\n  var length = scale.getLabels().length;\n  var start = options.reverse ? scale.max : scale.min;\n  var value = _getTargetValue(fill, scale, start);\n  var target = [];\n  if (options.grid.circular) {\n    var center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (var i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction _drawfill(ctx, source, area) {\n  var target = _getTarget(source);\n  var line = source.line,\n    scale = source.scale,\n    axis = source.axis;\n  var lineOpts = line.options;\n  var fillOption = lineOpts.fill;\n  var color = lineOpts.backgroundColor;\n  var _ref9 = fillOption || {},\n    _ref9$above = _ref9.above,\n    above = _ref9$above === void 0 ? color : _ref9$above,\n    _ref9$below = _ref9.below,\n    below = _ref9$below === void 0 ? color : _ref9$below;\n  if (target && line.points.length) {\n    (0, _helpersSegment.L)(ctx, area);\n    doFill(ctx, {\n      line: line,\n      target: target,\n      above: above,\n      below: below,\n      area: area,\n      scale: scale,\n      axis: axis\n    });\n    (0, _helpersSegment.N)(ctx);\n  }\n}\nfunction doFill(ctx, cfg) {\n  var line = cfg.line,\n    target = cfg.target,\n    above = cfg.above,\n    below = cfg.below,\n    area = cfg.area,\n    scale = cfg.scale;\n  var property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {\n      line: line,\n      target: target,\n      color: above,\n      scale: scale,\n      property: property\n    });\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {\n    line: line,\n    target: target,\n    color: below,\n    scale: scale,\n    property: property\n  });\n  ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n  var segments = target.segments,\n    points = target.points;\n  var first = true;\n  var lineLoop = false;\n  ctx.beginPath();\n  var _iterator18 = _createForOfIteratorHelper(segments),\n    _step18;\n  try {\n    for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {\n      var segment = _step18.value;\n      var start = segment.start,\n        end = segment.end;\n      var firstPoint = points[start];\n      var lastPoint = points[_findSegmentEnd(start, end, points)];\n      if (first) {\n        ctx.moveTo(firstPoint.x, firstPoint.y);\n        first = false;\n      } else {\n        ctx.lineTo(firstPoint.x, clipY);\n        ctx.lineTo(firstPoint.x, firstPoint.y);\n      }\n      lineLoop = !!target.pathSegment(ctx, segment, {\n        move: lineLoop\n      });\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        ctx.lineTo(lastPoint.x, clipY);\n      }\n    }\n  } catch (err) {\n    _iterator18.e(err);\n  } finally {\n    _iterator18.f();\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction fill(ctx, cfg) {\n  var line = cfg.line,\n    target = cfg.target,\n    property = cfg.property,\n    color = cfg.color,\n    scale = cfg.scale;\n  var segments = _segments(line, target, property);\n  var _iterator19 = _createForOfIteratorHelper(segments),\n    _step19;\n  try {\n    for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {\n      var _step19$value = _step19.value,\n        src = _step19$value.source,\n        tgt = _step19$value.target,\n        start = _step19$value.start,\n        end = _step19$value.end;\n      var _src$style = src.style,\n        _src$style2 = _src$style === void 0 ? {} : _src$style,\n        _src$style2$backgroun = _src$style2.backgroundColor,\n        backgroundColor = _src$style2$backgroun === void 0 ? color : _src$style2$backgroun;\n      var notShape = target !== true;\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n      ctx.beginPath();\n      var lineLoop = !!line.pathSegment(ctx, src);\n      var loop = void 0;\n      if (notShape) {\n        if (lineLoop) {\n          ctx.closePath();\n        } else {\n          interpolatedLineTo(ctx, target, end, property);\n        }\n        var targetLoop = !!target.pathSegment(ctx, tgt, {\n          move: lineLoop,\n          reverse: true\n        });\n        loop = lineLoop && targetLoop;\n        if (!loop) {\n          interpolatedLineTo(ctx, target, start, property);\n        }\n      }\n      ctx.closePath();\n      ctx.fill(loop ? 'evenodd' : 'nonzero');\n      ctx.restore();\n    }\n  } catch (err) {\n    _iterator19.e(err);\n  } finally {\n    _iterator19.f();\n  }\n}\nfunction clipBounds(ctx, scale, bounds) {\n  var _scale$chart$chartAre = scale.chart.chartArea,\n    top = _scale$chart$chartAre.top,\n    bottom = _scale$chart$chartAre.bottom;\n  var _ref0 = bounds || {},\n    property = _ref0.property,\n    start = _ref0.start,\n    end = _ref0.end;\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  var interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nvar index = exports.Filler = {\n  id: 'filler',\n  afterDatasetsUpdate: function afterDatasetsUpdate(chart, _args, options) {\n    var count = (chart.data.datasets || []).length;\n    var sources = [];\n    var meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart: chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line: line\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw: function beforeDraw(chart, _args, options) {\n    var draw = options.drawTime === 'beforeDraw';\n    var metasets = chart.getSortedVisibleDatasetMetas();\n    var area = chart.chartArea;\n    for (var i = metasets.length - 1; i >= 0; --i) {\n      var source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw: function beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    var metasets = chart.getSortedVisibleDatasetMetas();\n    for (var i = metasets.length - 1; i >= 0; --i) {\n      var source = metasets[i].$filler;\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw: function beforeDatasetDraw(chart, args, options) {\n    var source = args.meta.$filler;\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\nvar getBoxSize = function getBoxSize(labelOpts, fontSize) {\n  var _labelOpts$boxHeight = labelOpts.boxHeight,\n    boxHeight = _labelOpts$boxHeight === void 0 ? fontSize : _labelOpts$boxHeight,\n    _labelOpts$boxWidth = labelOpts.boxWidth,\n    boxWidth = _labelOpts$boxWidth === void 0 ? fontSize : _labelOpts$boxWidth;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth: boxWidth,\n    boxHeight: boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nvar itemsEqual = function itemsEqual(a, b) {\n  return a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n};\nvar Legend = /*#__PURE__*/function (_Element6) {\n  function Legend(config) {\n    var _this25;\n    (0, _classCallCheck2.default)(this, Legend);\n    _this25 = _callSuper(this, Legend);\n    _this25._added = false;\n    _this25.legendHitBoxes = [];\n    _this25._hoveredItem = null;\n    _this25.doughnutMode = false;\n    _this25.chart = config.chart;\n    _this25.options = config.options;\n    _this25.ctx = config.ctx;\n    _this25.legendItems = undefined;\n    _this25.columnSizes = undefined;\n    _this25.lineWidths = undefined;\n    _this25.maxHeight = undefined;\n    _this25.maxWidth = undefined;\n    _this25.top = undefined;\n    _this25.bottom = undefined;\n    _this25.left = undefined;\n    _this25.right = undefined;\n    _this25.height = undefined;\n    _this25.width = undefined;\n    _this25._margins = undefined;\n    _this25.position = undefined;\n    _this25.weight = undefined;\n    _this25.fullSize = undefined;\n    return _this25;\n  }\n  (0, _inherits2.default)(Legend, _Element6);\n  return (0, _createClass2.default)(Legend, [{\n    key: \"update\",\n    value: function update(maxWidth, maxHeight, margins) {\n      this.maxWidth = maxWidth;\n      this.maxHeight = maxHeight;\n      this._margins = margins;\n      this.setDimensions();\n      this.buildLabels();\n      this.fit();\n    }\n  }, {\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      if (this.isHorizontal()) {\n        this.width = this.maxWidth;\n        this.left = this._margins.left;\n        this.right = this.width;\n      } else {\n        this.height = this.maxHeight;\n        this.top = this._margins.top;\n        this.bottom = this.height;\n      }\n    }\n  }, {\n    key: \"buildLabels\",\n    value: function buildLabels() {\n      var _this26 = this;\n      var labelOpts = this.options.labels || {};\n      var legendItems = (0, _helpersSegment.C)(labelOpts.generateLabels, [this.chart], this) || [];\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, _this26.chart.data);\n        });\n      }\n      if (labelOpts.sort) {\n        legendItems = legendItems.sort(function (a, b) {\n          return labelOpts.sort(a, b, _this26.chart.data);\n        });\n      }\n      if (this.options.reverse) {\n        legendItems.reverse();\n      }\n      this.legendItems = legendItems;\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var options = this.options,\n        ctx = this.ctx;\n      if (!options.display) {\n        this.width = this.height = 0;\n        return;\n      }\n      var labelOpts = options.labels;\n      var labelFont = (0, _helpersSegment.O)(labelOpts.font);\n      var fontSize = labelFont.size;\n      var titleHeight = this._computeTitleHeight();\n      var _getBoxSize = getBoxSize(labelOpts, fontSize),\n        boxWidth = _getBoxSize.boxWidth,\n        itemHeight = _getBoxSize.itemHeight;\n      var width, height;\n      ctx.font = labelFont.string;\n      if (this.isHorizontal()) {\n        width = this.maxWidth;\n        height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n      } else {\n        height = this.maxHeight;\n        width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n      }\n      this.width = Math.min(width, options.maxWidth || this.maxWidth);\n      this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n  }, {\n    key: \"_fitRows\",\n    value: function _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n      var ctx = this.ctx,\n        maxWidth = this.maxWidth,\n        padding = this.options.labels.padding;\n      var hitboxes = this.legendHitBoxes = [];\n      var lineWidths = this.lineWidths = [0];\n      var lineHeight = itemHeight + padding;\n      var totalHeight = titleHeight;\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n      var row = -1;\n      var top = -lineHeight;\n      this.legendItems.forEach(function (legendItem, i) {\n        var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n        if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n          totalHeight += lineHeight;\n          lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n          top += lineHeight;\n          row++;\n        }\n        hitboxes[i] = {\n          left: 0,\n          top: top,\n          row: row,\n          width: itemWidth,\n          height: itemHeight\n        };\n        lineWidths[lineWidths.length - 1] += itemWidth + padding;\n      });\n      return totalHeight;\n    }\n  }, {\n    key: \"_fitCols\",\n    value: function _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n      var ctx = this.ctx,\n        maxHeight = this.maxHeight,\n        padding = this.options.labels.padding;\n      var hitboxes = this.legendHitBoxes = [];\n      var columnSizes = this.columnSizes = [];\n      var heightLimit = maxHeight - titleHeight;\n      var totalWidth = padding;\n      var currentColWidth = 0;\n      var currentColHeight = 0;\n      var left = 0;\n      var col = 0;\n      this.legendItems.forEach(function (legendItem, i) {\n        var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n        if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n          totalWidth += currentColWidth + padding;\n          columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n          });\n          left += currentColWidth + padding;\n          col++;\n          currentColWidth = currentColHeight = 0;\n        }\n        hitboxes[i] = {\n          left: left,\n          top: currentColHeight,\n          col: col,\n          width: itemWidth,\n          height: itemHeight\n        };\n        currentColWidth = Math.max(currentColWidth, itemWidth);\n        currentColHeight += itemHeight + padding;\n      });\n      totalWidth += currentColWidth;\n      columnSizes.push({\n        width: currentColWidth,\n        height: currentColHeight\n      });\n      return totalWidth;\n    }\n  }, {\n    key: \"adjustHitBoxes\",\n    value: function adjustHitBoxes() {\n      if (!this.options.display) {\n        return;\n      }\n      var titleHeight = this._computeTitleHeight();\n      var hitboxes = this.legendHitBoxes,\n        _this$options12 = this.options,\n        align = _this$options12.align,\n        padding = _this$options12.labels.padding,\n        rtl = _this$options12.rtl;\n      var rtlHelper = (0, _helpersSegment.aA)(rtl, this.left, this.width);\n      if (this.isHorizontal()) {\n        var row = 0;\n        var left = (0, _helpersSegment.S)(align, this.left + padding, this.right - this.lineWidths[row]);\n        var _iterator20 = _createForOfIteratorHelper(hitboxes),\n          _step20;\n        try {\n          for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {\n            var hitbox = _step20.value;\n            if (row !== hitbox.row) {\n              row = hitbox.row;\n              left = (0, _helpersSegment.S)(align, this.left + padding, this.right - this.lineWidths[row]);\n            }\n            hitbox.top += this.top + titleHeight + padding;\n            hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n            left += hitbox.width + padding;\n          }\n        } catch (err) {\n          _iterator20.e(err);\n        } finally {\n          _iterator20.f();\n        }\n      } else {\n        var col = 0;\n        var top = (0, _helpersSegment.S)(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        var _iterator21 = _createForOfIteratorHelper(hitboxes),\n          _step21;\n        try {\n          for (_iterator21.s(); !(_step21 = _iterator21.n()).done;) {\n            var _hitbox = _step21.value;\n            if (_hitbox.col !== col) {\n              col = _hitbox.col;\n              top = (0, _helpersSegment.S)(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            }\n            _hitbox.top = top;\n            _hitbox.left += this.left + padding;\n            _hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(_hitbox.left), _hitbox.width);\n            top += _hitbox.height + padding;\n          }\n        } catch (err) {\n          _iterator21.e(err);\n        } finally {\n          _iterator21.f();\n        }\n      }\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      if (this.options.display) {\n        var ctx = this.ctx;\n        (0, _helpersSegment.L)(ctx, this);\n        this._draw();\n        (0, _helpersSegment.N)(ctx);\n      }\n    }\n  }, {\n    key: \"_draw\",\n    value: function _draw() {\n      var _this27 = this;\n      var opts = this.options,\n        columnSizes = this.columnSizes,\n        lineWidths = this.lineWidths,\n        ctx = this.ctx;\n      var align = opts.align,\n        labelOpts = opts.labels;\n      var defaultColor = _helpersSegment.d.color;\n      var rtlHelper = (0, _helpersSegment.aA)(opts.rtl, this.left, this.width);\n      var labelFont = (0, _helpersSegment.O)(labelOpts.font);\n      var fontColor = labelOpts.color,\n        padding = labelOpts.padding;\n      var fontSize = labelFont.size;\n      var halfFontSize = fontSize / 2;\n      var cursor;\n      this.drawTitle();\n      ctx.textAlign = rtlHelper.textAlign('left');\n      ctx.textBaseline = 'middle';\n      ctx.lineWidth = 0.5;\n      ctx.font = labelFont.string;\n      var _getBoxSize2 = getBoxSize(labelOpts, fontSize),\n        boxWidth = _getBoxSize2.boxWidth,\n        boxHeight = _getBoxSize2.boxHeight,\n        itemHeight = _getBoxSize2.itemHeight;\n      var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n        if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n          return;\n        }\n        ctx.save();\n        var lineWidth = (0, _helpersSegment.v)(legendItem.lineWidth, 1);\n        ctx.fillStyle = (0, _helpersSegment.v)(legendItem.fillStyle, defaultColor);\n        ctx.lineCap = (0, _helpersSegment.v)(legendItem.lineCap, 'butt');\n        ctx.lineDashOffset = (0, _helpersSegment.v)(legendItem.lineDashOffset, 0);\n        ctx.lineJoin = (0, _helpersSegment.v)(legendItem.lineJoin, 'miter');\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = (0, _helpersSegment.v)(legendItem.strokeStyle, defaultColor);\n        ctx.setLineDash((0, _helpersSegment.v)(legendItem.lineDash, []));\n        if (labelOpts.usePointStyle) {\n          var drawOptions = {\n            radius: boxHeight * Math.SQRT2 / 2,\n            pointStyle: legendItem.pointStyle,\n            rotation: legendItem.rotation,\n            borderWidth: lineWidth\n          };\n          var centerX = rtlHelper.xPlus(x, boxWidth / 2);\n          var centerY = y + halfFontSize;\n          (0, _helpersSegment.aE)(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n        } else {\n          var yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n          var xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n          var borderRadius = (0, _helpersSegment.ax)(legendItem.borderRadius);\n          ctx.beginPath();\n          if (Object.values(borderRadius).some(function (v) {\n            return v !== 0;\n          })) {\n            (0, _helpersSegment.av)(ctx, {\n              x: xBoxLeft,\n              y: yBoxTop,\n              w: boxWidth,\n              h: boxHeight,\n              radius: borderRadius\n            });\n          } else {\n            ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n          }\n          ctx.fill();\n          if (lineWidth !== 0) {\n            ctx.stroke();\n          }\n        }\n        ctx.restore();\n      };\n      var fillText = function fillText(x, y, legendItem) {\n        (0, _helpersSegment.M)(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n          strikethrough: legendItem.hidden,\n          textAlign: rtlHelper.textAlign(legendItem.textAlign)\n        });\n      };\n      var isHorizontal = this.isHorizontal();\n      var titleHeight = this._computeTitleHeight();\n      if (isHorizontal) {\n        cursor = {\n          x: (0, _helpersSegment.S)(align, this.left + padding, this.right - lineWidths[0]),\n          y: this.top + padding + titleHeight,\n          line: 0\n        };\n      } else {\n        cursor = {\n          x: this.left + padding,\n          y: (0, _helpersSegment.S)(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n          line: 0\n        };\n      }\n      (0, _helpersSegment.aB)(this.ctx, opts.textDirection);\n      var lineHeight = itemHeight + padding;\n      this.legendItems.forEach(function (legendItem, i) {\n        ctx.strokeStyle = legendItem.fontColor || fontColor;\n        ctx.fillStyle = legendItem.fontColor || fontColor;\n        var textWidth = ctx.measureText(legendItem.text).width;\n        var textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n        var width = boxWidth + halfFontSize + textWidth;\n        var x = cursor.x;\n        var y = cursor.y;\n        rtlHelper.setWidth(_this27.width);\n        if (isHorizontal) {\n          if (i > 0 && x + width + padding > _this27.right) {\n            y = cursor.y += lineHeight;\n            cursor.line++;\n            x = cursor.x = (0, _helpersSegment.S)(align, _this27.left + padding, _this27.right - lineWidths[cursor.line]);\n          }\n        } else if (i > 0 && y + lineHeight > _this27.bottom) {\n          x = cursor.x = x + columnSizes[cursor.line].width + padding;\n          cursor.line++;\n          y = cursor.y = (0, _helpersSegment.S)(align, _this27.top + titleHeight + padding, _this27.bottom - columnSizes[cursor.line].height);\n        }\n        var realX = rtlHelper.x(x);\n        drawLegendBox(realX, y, legendItem);\n        x = (0, _helpersSegment.aC)(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : _this27.right, opts.rtl);\n        fillText(rtlHelper.x(x), y, legendItem);\n        if (isHorizontal) {\n          cursor.x += width + padding;\n        } else {\n          cursor.y += lineHeight;\n        }\n      });\n      (0, _helpersSegment.aD)(this.ctx, opts.textDirection);\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {\n      var opts = this.options;\n      var titleOpts = opts.title;\n      var titleFont = (0, _helpersSegment.O)(titleOpts.font);\n      var titlePadding = (0, _helpersSegment.K)(titleOpts.padding);\n      if (!titleOpts.display) {\n        return;\n      }\n      var rtlHelper = (0, _helpersSegment.aA)(opts.rtl, this.left, this.width);\n      var ctx = this.ctx;\n      var position = titleOpts.position;\n      var halfFontSize = titleFont.size / 2;\n      var topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n      var y;\n      var left = this.left;\n      var maxWidth = this.width;\n      if (this.isHorizontal()) {\n        maxWidth = Math.max.apply(Math, (0, _toConsumableArray2.default)(this.lineWidths));\n        y = this.top + topPaddingPlusHalfFontSize;\n        left = (0, _helpersSegment.S)(opts.align, left, this.right - maxWidth);\n      } else {\n        var maxHeight = this.columnSizes.reduce(function (acc, size) {\n          return Math.max(acc, size.height);\n        }, 0);\n        y = topPaddingPlusHalfFontSize + (0, _helpersSegment.S)(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n      }\n      var x = (0, _helpersSegment.S)(position, left, left + maxWidth);\n      ctx.textAlign = rtlHelper.textAlign((0, _helpersSegment.R)(position));\n      ctx.textBaseline = 'middle';\n      ctx.strokeStyle = titleOpts.color;\n      ctx.fillStyle = titleOpts.color;\n      ctx.font = titleFont.string;\n      (0, _helpersSegment.M)(ctx, titleOpts.text, x, y, titleFont);\n    }\n  }, {\n    key: \"_computeTitleHeight\",\n    value: function _computeTitleHeight() {\n      var titleOpts = this.options.title;\n      var titleFont = (0, _helpersSegment.O)(titleOpts.font);\n      var titlePadding = (0, _helpersSegment.K)(titleOpts.padding);\n      return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n  }, {\n    key: \"_getLegendItemAt\",\n    value: function _getLegendItemAt(x, y) {\n      var i, hitBox, lh;\n      if ((0, _helpersSegment.ak)(x, this.left, this.right) && (0, _helpersSegment.ak)(y, this.top, this.bottom)) {\n        lh = this.legendHitBoxes;\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n          if ((0, _helpersSegment.ak)(x, hitBox.left, hitBox.left + hitBox.width) && (0, _helpersSegment.ak)(y, hitBox.top, hitBox.top + hitBox.height)) {\n            return this.legendItems[i];\n          }\n        }\n      }\n      return null;\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(e) {\n      var opts = this.options;\n      if (!isListened(e.type, opts)) {\n        return;\n      }\n      var hoveredItem = this._getLegendItemAt(e.x, e.y);\n      if (e.type === 'mousemove' || e.type === 'mouseout') {\n        var previous = this._hoveredItem;\n        var sameItem = itemsEqual(previous, hoveredItem);\n        if (previous && !sameItem) {\n          (0, _helpersSegment.C)(opts.onLeave, [e, previous, this], this);\n        }\n        this._hoveredItem = hoveredItem;\n        if (hoveredItem && !sameItem) {\n          (0, _helpersSegment.C)(opts.onHover, [e, hoveredItem, this], this);\n        }\n      } else if (hoveredItem) {\n        (0, _helpersSegment.C)(opts.onClick, [e, hoveredItem, this], this);\n      }\n    }\n  }]);\n}(Element);\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = exports.Legend = {\n  id: 'legend',\n  _element: Legend,\n  start: function start(chart, _args, options) {\n    var legend = chart.legend = new Legend({\n      ctx: chart.ctx,\n      options: options,\n      chart: chart\n    });\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop: function stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate: function afterUpdate(chart) {\n    var legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent: function afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick: function onClick(e, legendItem, legend) {\n      var index = legendItem.datasetIndex;\n      var ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: function color(ctx) {\n        return ctx.chart.options.color;\n      },\n      boxWidth: 40,\n      padding: 10,\n      generateLabels: function generateLabels(chart) {\n        var datasets = chart.data.datasets;\n        var _chart$legend$options = chart.legend.options.labels,\n          usePointStyle = _chart$legend$options.usePointStyle,\n          pointStyle = _chart$legend$options.pointStyle,\n          textAlign = _chart$legend$options.textAlign,\n          color = _chart$legend$options.color;\n        return chart._getSortedDatasetMetas().map(function (meta) {\n          var style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          var borderWidth = (0, _helpersSegment.K)(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: function color(ctx) {\n        return ctx.chart.options.color;\n      },\n      display: false,\n      position: 'center',\n      text: ''\n    }\n  },\n  descriptors: {\n    _scriptable: function _scriptable(name) {\n      return !name.startsWith('on');\n    },\n    labels: {\n      _scriptable: function _scriptable(name) {\n        return !['generateLabels', 'filter', 'sort'].includes(name);\n      }\n    }\n  }\n};\nvar Title = /*#__PURE__*/function (_Element7) {\n  function Title(config) {\n    var _this28;\n    (0, _classCallCheck2.default)(this, Title);\n    _this28 = _callSuper(this, Title);\n    _this28.chart = config.chart;\n    _this28.options = config.options;\n    _this28.ctx = config.ctx;\n    _this28._padding = undefined;\n    _this28.top = undefined;\n    _this28.bottom = undefined;\n    _this28.left = undefined;\n    _this28.right = undefined;\n    _this28.width = undefined;\n    _this28.height = undefined;\n    _this28.position = undefined;\n    _this28.weight = undefined;\n    _this28.fullSize = undefined;\n    return _this28;\n  }\n  (0, _inherits2.default)(Title, _Element7);\n  return (0, _createClass2.default)(Title, [{\n    key: \"update\",\n    value: function update(maxWidth, maxHeight) {\n      var opts = this.options;\n      this.left = 0;\n      this.top = 0;\n      if (!opts.display) {\n        this.width = this.height = this.right = this.bottom = 0;\n        return;\n      }\n      this.width = this.right = maxWidth;\n      this.height = this.bottom = maxHeight;\n      var lineCount = (0, _helpersSegment.b)(opts.text) ? opts.text.length : 1;\n      this._padding = (0, _helpersSegment.K)(opts.padding);\n      var textSize = lineCount * (0, _helpersSegment.O)(opts.font).lineHeight + this._padding.height;\n      if (this.isHorizontal()) {\n        this.height = textSize;\n      } else {\n        this.width = textSize;\n      }\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    }\n  }, {\n    key: \"_drawArgs\",\n    value: function _drawArgs(offset) {\n      var top = this.top,\n        left = this.left,\n        bottom = this.bottom,\n        right = this.right,\n        options = this.options;\n      var align = options.align;\n      var rotation = 0;\n      var maxWidth, titleX, titleY;\n      if (this.isHorizontal()) {\n        titleX = (0, _helpersSegment.S)(align, left, right);\n        titleY = top + offset;\n        maxWidth = right - left;\n      } else {\n        if (options.position === 'left') {\n          titleX = left + offset;\n          titleY = (0, _helpersSegment.S)(align, bottom, top);\n          rotation = _helpersSegment.P * -0.5;\n        } else {\n          titleX = right - offset;\n          titleY = (0, _helpersSegment.S)(align, top, bottom);\n          rotation = _helpersSegment.P * 0.5;\n        }\n        maxWidth = bottom - top;\n      }\n      return {\n        titleX: titleX,\n        titleY: titleY,\n        maxWidth: maxWidth,\n        rotation: rotation\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var ctx = this.ctx;\n      var opts = this.options;\n      if (!opts.display) {\n        return;\n      }\n      var fontOpts = (0, _helpersSegment.O)(opts.font);\n      var lineHeight = fontOpts.lineHeight;\n      var offset = lineHeight / 2 + this._padding.top;\n      var _this$_drawArgs = this._drawArgs(offset),\n        titleX = _this$_drawArgs.titleX,\n        titleY = _this$_drawArgs.titleY,\n        maxWidth = _this$_drawArgs.maxWidth,\n        rotation = _this$_drawArgs.rotation;\n      (0, _helpersSegment.M)(ctx, opts.text, 0, 0, fontOpts, {\n        color: opts.color,\n        maxWidth: maxWidth,\n        rotation: rotation,\n        textAlign: (0, _helpersSegment.R)(opts.align),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n  }]);\n}(Element);\nfunction createTitle(chart, titleOpts) {\n  var title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart: chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = exports.Title = {\n  id: 'title',\n  _element: Title,\n  start: function start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop: function stop(chart) {\n    var titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold'\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nvar map = new WeakMap();\nvar plugin_subtitle = exports.SubTitle = {\n  id: 'subtitle',\n  start: function start(chart, _args, options) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: options,\n      chart: chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop: function stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal'\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nvar positioners = {\n  average: function average(items) {\n    if (!items.length) {\n      return false;\n    }\n    var i, len;\n    var x = 0;\n    var y = 0;\n    var count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      var el = items[i].element;\n      if (el && el.hasValue()) {\n        var pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest: function nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    var x = eventPosition.x;\n    var y = eventPosition.y;\n    var minDistance = Number.POSITIVE_INFINITY;\n    var i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      var el = items[i].element;\n      if (el && el.hasValue()) {\n        var center = el.getCenterPoint();\n        var d = (0, _helpersSegment.aG)(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      var tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x: x,\n      y: y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if ((0, _helpersSegment.b)(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  var element = item.element,\n    datasetIndex = item.datasetIndex,\n    index = item.index;\n  var controller = chart.getDatasetMeta(datasetIndex).controller;\n  var _controller$getLabelA = controller.getLabelAndValue(index),\n    label = _controller$getLabelA.label,\n    value = _controller$getLabelA.value;\n  return {\n    chart: chart,\n    label: label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex: datasetIndex,\n    element: element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  var ctx = tooltip.chart.ctx;\n  var body = tooltip.body,\n    footer = tooltip.footer,\n    title = tooltip.title;\n  var boxWidth = options.boxWidth,\n    boxHeight = options.boxHeight;\n  var bodyFont = (0, _helpersSegment.O)(options.bodyFont);\n  var titleFont = (0, _helpersSegment.O)(options.titleFont);\n  var footerFont = (0, _helpersSegment.O)(options.footerFont);\n  var titleLineCount = title.length;\n  var footerLineCount = footer.length;\n  var bodyLineItemCount = body.length;\n  var padding = (0, _helpersSegment.K)(options.padding);\n  var height = padding.height;\n  var width = 0;\n  var combinedBodyLength = body.reduce(function (count, bodyItem) {\n    return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n  }, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    var bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n  }\n  var widthPadding = 0;\n  var maxLineWidth = function maxLineWidth(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  (0, _helpersSegment.Q)(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  (0, _helpersSegment.Q)(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n  (0, _helpersSegment.Q)(body, function (bodyItem) {\n    (0, _helpersSegment.Q)(bodyItem.before, maxLineWidth);\n    (0, _helpersSegment.Q)(bodyItem.lines, maxLineWidth);\n    (0, _helpersSegment.Q)(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  (0, _helpersSegment.Q)(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {\n    width: width,\n    height: height\n  };\n}\nfunction determineYAlign(chart, size) {\n  var y = size.y,\n    height = size.height;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > chart.height - height / 2) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  var x = size.x,\n    width = size.width;\n  var caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  var x = size.x,\n    width = size.width;\n  var chartWidth = chart.width,\n    _chart$chartArea = chart.chartArea,\n    left = _chart$chartArea.left,\n    right = _chart$chartArea.right;\n  var xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  var yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign: yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  var x = size.x,\n    width = size.width;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= width / 2;\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  var y = size.y,\n    height = size.height;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= height / 2;\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  var caretSize = options.caretSize,\n    caretPadding = options.caretPadding,\n    cornerRadius = options.cornerRadius;\n  var xAlign = alignment.xAlign,\n    yAlign = alignment.yAlign;\n  var paddingAndSize = caretSize + caretPadding;\n  var _toTRBLCorners = (0, _helpersSegment.ax)(cornerRadius),\n    topLeft = _toTRBLCorners.topLeft,\n    topRight = _toTRBLCorners.topRight,\n    bottomLeft = _toTRBLCorners.bottomLeft,\n    bottomRight = _toTRBLCorners.bottomRight;\n  var x = alignX(size, xAlign);\n  var y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: (0, _helpersSegment.E)(x, 0, chart.width - size.width),\n    y: (0, _helpersSegment.E)(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  var padding = (0, _helpersSegment.K)(options.padding);\n  return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return (0, _helpersSegment.h)(parent, {\n    tooltip: tooltip,\n    tooltipItems: tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  var override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nvar Tooltip = /*#__PURE__*/function (_Element8) {\n  function Tooltip(config) {\n    var _this29;\n    (0, _classCallCheck2.default)(this, Tooltip);\n    _this29 = _callSuper(this, Tooltip);\n    _this29.opacity = 0;\n    _this29._active = [];\n    _this29._eventPosition = undefined;\n    _this29._size = undefined;\n    _this29._cachedAnimations = undefined;\n    _this29._tooltipItems = [];\n    _this29.$animations = undefined;\n    _this29.$context = undefined;\n    _this29.chart = config.chart || config._chart;\n    _this29._chart = _this29.chart;\n    _this29.options = config.options;\n    _this29.dataPoints = undefined;\n    _this29.title = undefined;\n    _this29.beforeBody = undefined;\n    _this29.body = undefined;\n    _this29.afterBody = undefined;\n    _this29.footer = undefined;\n    _this29.xAlign = undefined;\n    _this29.yAlign = undefined;\n    _this29.x = undefined;\n    _this29.y = undefined;\n    _this29.height = undefined;\n    _this29.width = undefined;\n    _this29.caretX = undefined;\n    _this29.caretY = undefined;\n    _this29.labelColors = undefined;\n    _this29.labelPointStyles = undefined;\n    _this29.labelTextColors = undefined;\n    return _this29;\n  }\n  (0, _inherits2.default)(Tooltip, _Element8);\n  return (0, _createClass2.default)(Tooltip, [{\n    key: \"initialize\",\n    value: function initialize(options) {\n      this.options = options;\n      this._cachedAnimations = undefined;\n      this.$context = undefined;\n    }\n  }, {\n    key: \"_resolveAnimations\",\n    value: function _resolveAnimations() {\n      var cached = this._cachedAnimations;\n      if (cached) {\n        return cached;\n      }\n      var chart = this.chart;\n      var options = this.options.setContext(this.getContext());\n      var opts = options.enabled && chart.options.animation && options.animations;\n      var animations = new Animations(this.chart, opts);\n      if (opts._cacheable) {\n        this._cachedAnimations = Object.freeze(animations);\n      }\n      return animations;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext() {\n      return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n  }, {\n    key: \"getTitle\",\n    value: function getTitle(context, options) {\n      var callbacks = options.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n      var title = callbacks.title.apply(this, [context]);\n      var afterTitle = callbacks.afterTitle.apply(this, [context]);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    }\n  }, {\n    key: \"getBeforeBody\",\n    value: function getBeforeBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n    }\n  }, {\n    key: \"getBody\",\n    value: function getBody(tooltipItems, options) {\n      var _this30 = this;\n      var callbacks = options.callbacks;\n      var bodyItems = [];\n      (0, _helpersSegment.Q)(tooltipItems, function (context) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        var scoped = overrideCallbacks(callbacks, context);\n        pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(_this30, context)));\n        pushOrConcat(bodyItem.lines, scoped.label.call(_this30, context));\n        pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(_this30, context)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    }\n  }, {\n    key: \"getAfterBody\",\n    value: function getAfterBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n    }\n  }, {\n    key: \"getFooter\",\n    value: function getFooter(tooltipItems, options) {\n      var callbacks = options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n      var footer = callbacks.footer.apply(this, [tooltipItems]);\n      var afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    }\n  }, {\n    key: \"_createItems\",\n    value: function _createItems(options) {\n      var _this31 = this;\n      var active = this._active;\n      var data = this.chart.data;\n      var labelColors = [];\n      var labelPointStyles = [];\n      var labelTextColors = [];\n      var tooltipItems = [];\n      var i, len;\n      for (i = 0, len = active.length; i < len; ++i) {\n        tooltipItems.push(createTooltipItem(this.chart, active[i]));\n      }\n      if (options.filter) {\n        tooltipItems = tooltipItems.filter(function (element, index, array) {\n          return options.filter(element, index, array, data);\n        });\n      }\n      if (options.itemSort) {\n        tooltipItems = tooltipItems.sort(function (a, b) {\n          return options.itemSort(a, b, data);\n        });\n      }\n      (0, _helpersSegment.Q)(tooltipItems, function (context) {\n        var scoped = overrideCallbacks(options.callbacks, context);\n        labelColors.push(scoped.labelColor.call(_this31, context));\n        labelPointStyles.push(scoped.labelPointStyle.call(_this31, context));\n        labelTextColors.push(scoped.labelTextColor.call(_this31, context));\n      });\n      this.labelColors = labelColors;\n      this.labelPointStyles = labelPointStyles;\n      this.labelTextColors = labelTextColors;\n      this.dataPoints = tooltipItems;\n      return tooltipItems;\n    }\n  }, {\n    key: \"update\",\n    value: function update(changed, replay) {\n      var options = this.options.setContext(this.getContext());\n      var active = this._active;\n      var properties;\n      var tooltipItems = [];\n      if (!active.length) {\n        if (this.opacity !== 0) {\n          properties = {\n            opacity: 0\n          };\n        }\n      } else {\n        var position = positioners[options.position].call(this, active, this._eventPosition);\n        tooltipItems = this._createItems(options);\n        this.title = this.getTitle(tooltipItems, options);\n        this.beforeBody = this.getBeforeBody(tooltipItems, options);\n        this.body = this.getBody(tooltipItems, options);\n        this.afterBody = this.getAfterBody(tooltipItems, options);\n        this.footer = this.getFooter(tooltipItems, options);\n        var size = this._size = getTooltipSize(this, options);\n        var positionAndSize = Object.assign({}, position, size);\n        var alignment = determineAlignment(this.chart, options, positionAndSize);\n        var backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        properties = {\n          opacity: 1,\n          x: backgroundPoint.x,\n          y: backgroundPoint.y,\n          width: size.width,\n          height: size.height,\n          caretX: position.x,\n          caretY: position.y\n        };\n      }\n      this._tooltipItems = tooltipItems;\n      this.$context = undefined;\n      if (properties) {\n        this._resolveAnimations().update(this, properties);\n      }\n      if (changed && options.external) {\n        options.external.call(this, {\n          chart: this.chart,\n          tooltip: this,\n          replay: replay\n        });\n      }\n    }\n  }, {\n    key: \"drawCaret\",\n    value: function drawCaret(tooltipPoint, ctx, size, options) {\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n  }, {\n    key: \"getCaretPosition\",\n    value: function getCaretPosition(tooltipPoint, size, options) {\n      var xAlign = this.xAlign,\n        yAlign = this.yAlign;\n      var caretSize = options.caretSize,\n        cornerRadius = options.cornerRadius;\n      var _toTRBLCorners2 = (0, _helpersSegment.ax)(cornerRadius),\n        topLeft = _toTRBLCorners2.topLeft,\n        topRight = _toTRBLCorners2.topRight,\n        bottomLeft = _toTRBLCorners2.bottomLeft,\n        bottomRight = _toTRBLCorners2.bottomRight;\n      var ptX = tooltipPoint.x,\n        ptY = tooltipPoint.y;\n      var width = size.width,\n        height = size.height;\n      var x1, x2, x3, y1, y2, y3;\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n        x3 = x1;\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n        } else {\n          x2 = this.caretX;\n        }\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          x1 = x2 + caretSize;\n          x3 = x2 - caretSize;\n        }\n        y3 = y1;\n      }\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle(pt, ctx, options) {\n      var title = this.title;\n      var length = title.length;\n      var titleFont, titleSpacing, i;\n      if (length) {\n        var rtlHelper = (0, _helpersSegment.aA)(options.rtl, this.x, this.width);\n        pt.x = getAlignedX(this, options.titleAlign, options);\n        ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n        ctx.textBaseline = 'middle';\n        titleFont = (0, _helpersSegment.O)(options.titleFont);\n        titleSpacing = options.titleSpacing;\n        ctx.fillStyle = options.titleColor;\n        ctx.font = titleFont.string;\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n          pt.y += titleFont.lineHeight + titleSpacing;\n          if (i + 1 === length) {\n            pt.y += options.titleMarginBottom - titleSpacing;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_drawColorBox\",\n    value: function _drawColorBox(ctx, pt, i, rtlHelper, options) {\n      var labelColors = this.labelColors[i];\n      var labelPointStyle = this.labelPointStyles[i];\n      var boxHeight = options.boxHeight,\n        boxWidth = options.boxWidth,\n        boxPadding = options.boxPadding;\n      var bodyFont = (0, _helpersSegment.O)(options.bodyFont);\n      var colorX = getAlignedX(this, 'left', options);\n      var rtlColorX = rtlHelper.x(colorX);\n      var yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n      var colorY = pt.y + yOffSet;\n      if (options.usePointStyle) {\n        var drawOptions = {\n          radius: Math.min(boxWidth, boxHeight) / 2,\n          pointStyle: labelPointStyle.pointStyle,\n          rotation: labelPointStyle.rotation,\n          borderWidth: 1\n        };\n        var centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n        var centerY = colorY + boxHeight / 2;\n        ctx.strokeStyle = options.multiKeyBackground;\n        ctx.fillStyle = options.multiKeyBackground;\n        (0, _helpersSegment.au)(ctx, drawOptions, centerX, centerY);\n        ctx.strokeStyle = labelColors.borderColor;\n        ctx.fillStyle = labelColors.backgroundColor;\n        (0, _helpersSegment.au)(ctx, drawOptions, centerX, centerY);\n      } else {\n        ctx.lineWidth = (0, _helpersSegment.i)(labelColors.borderWidth) ? Math.max.apply(Math, (0, _toConsumableArray2.default)(Object.values(labelColors.borderWidth))) : labelColors.borderWidth || 1;\n        ctx.strokeStyle = labelColors.borderColor;\n        ctx.setLineDash(labelColors.borderDash || []);\n        ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n        var outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n        var innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n        var borderRadius = (0, _helpersSegment.ax)(labelColors.borderRadius);\n        if (Object.values(borderRadius).some(function (v) {\n          return v !== 0;\n        })) {\n          ctx.beginPath();\n          ctx.fillStyle = options.multiKeyBackground;\n          (0, _helpersSegment.av)(ctx, {\n            x: outerX,\n            y: colorY,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius\n          });\n          ctx.fill();\n          ctx.stroke();\n          ctx.fillStyle = labelColors.backgroundColor;\n          ctx.beginPath();\n          (0, _helpersSegment.av)(ctx, {\n            x: innerX,\n            y: colorY + 1,\n            w: boxWidth - 2,\n            h: boxHeight - 2,\n            radius: borderRadius\n          });\n          ctx.fill();\n        } else {\n          ctx.fillStyle = options.multiKeyBackground;\n          ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.fillStyle = labelColors.backgroundColor;\n          ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n        }\n      }\n      ctx.fillStyle = this.labelTextColors[i];\n    }\n  }, {\n    key: \"drawBody\",\n    value: function drawBody(pt, ctx, options) {\n      var body = this.body;\n      var bodySpacing = options.bodySpacing,\n        bodyAlign = options.bodyAlign,\n        displayColors = options.displayColors,\n        boxHeight = options.boxHeight,\n        boxWidth = options.boxWidth,\n        boxPadding = options.boxPadding;\n      var bodyFont = (0, _helpersSegment.O)(options.bodyFont);\n      var bodyLineHeight = bodyFont.lineHeight;\n      var xLinePadding = 0;\n      var rtlHelper = (0, _helpersSegment.aA)(options.rtl, this.x, this.width);\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n        pt.y += bodyLineHeight + bodySpacing;\n      };\n      var bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n      var bodyItem, textColor, lines, i, j, ilen, jlen;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'middle';\n      ctx.font = bodyFont.string;\n      pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n      ctx.fillStyle = options.bodyColor;\n      (0, _helpersSegment.Q)(this.beforeBody, fillLineOfText);\n      xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n      for (i = 0, ilen = body.length; i < ilen; ++i) {\n        bodyItem = body[i];\n        textColor = this.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        (0, _helpersSegment.Q)(bodyItem.before, fillLineOfText);\n        lines = bodyItem.lines;\n        if (displayColors && lines.length) {\n          this._drawColorBox(ctx, pt, i, rtlHelper, options);\n          bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n        }\n        for (j = 0, jlen = lines.length; j < jlen; ++j) {\n          fillLineOfText(lines[j]);\n          bodyLineHeight = bodyFont.lineHeight;\n        }\n        (0, _helpersSegment.Q)(bodyItem.after, fillLineOfText);\n      }\n      xLinePadding = 0;\n      bodyLineHeight = bodyFont.lineHeight;\n      (0, _helpersSegment.Q)(this.afterBody, fillLineOfText);\n      pt.y -= bodySpacing;\n    }\n  }, {\n    key: \"drawFooter\",\n    value: function drawFooter(pt, ctx, options) {\n      var footer = this.footer;\n      var length = footer.length;\n      var footerFont, i;\n      if (length) {\n        var rtlHelper = (0, _helpersSegment.aA)(options.rtl, this.x, this.width);\n        pt.x = getAlignedX(this, options.footerAlign, options);\n        pt.y += options.footerMarginTop;\n        ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n        ctx.textBaseline = 'middle';\n        footerFont = (0, _helpersSegment.O)(options.footerFont);\n        ctx.fillStyle = options.footerColor;\n        ctx.font = footerFont.string;\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n          pt.y += footerFont.lineHeight + options.footerSpacing;\n        }\n      }\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground(pt, ctx, tooltipSize, options) {\n      var xAlign = this.xAlign,\n        yAlign = this.yAlign;\n      var x = pt.x,\n        y = pt.y;\n      var width = tooltipSize.width,\n        height = tooltipSize.height;\n      var _toTRBLCorners3 = (0, _helpersSegment.ax)(options.cornerRadius),\n        topLeft = _toTRBLCorners3.topLeft,\n        topRight = _toTRBLCorners3.topRight,\n        bottomLeft = _toTRBLCorners3.bottomLeft,\n        bottomRight = _toTRBLCorners3.bottomRight;\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.beginPath();\n      ctx.moveTo(x + topLeft, y);\n      if (yAlign === 'top') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x + width - topRight, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x + width, y + height - bottomRight);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x + bottomLeft, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x, y + topLeft);\n      ctx.quadraticCurveTo(x, y, x + topLeft, y);\n      ctx.closePath();\n      ctx.fill();\n      if (options.borderWidth > 0) {\n        ctx.stroke();\n      }\n    }\n  }, {\n    key: \"_updateAnimationTarget\",\n    value: function _updateAnimationTarget(options) {\n      var chart = this.chart;\n      var anims = this.$animations;\n      var animX = anims && anims.x;\n      var animY = anims && anims.y;\n      if (animX || animY) {\n        var position = positioners[options.position].call(this, this._active, this._eventPosition);\n        if (!position) {\n          return;\n        }\n        var size = this._size = getTooltipSize(this, options);\n        var positionAndSize = Object.assign({}, position, this._size);\n        var alignment = determineAlignment(chart, options, positionAndSize);\n        var point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n        if (animX._to !== point.x || animY._to !== point.y) {\n          this.xAlign = alignment.xAlign;\n          this.yAlign = alignment.yAlign;\n          this.width = size.width;\n          this.height = size.height;\n          this.caretX = position.x;\n          this.caretY = position.y;\n          this._resolveAnimations().update(this, point);\n        }\n      }\n    }\n  }, {\n    key: \"_willRender\",\n    value: function _willRender() {\n      return !!this.opacity;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var options = this.options.setContext(this.getContext());\n      var opacity = this.opacity;\n      if (!opacity) {\n        return;\n      }\n      this._updateAnimationTarget(options);\n      var tooltipSize = {\n        width: this.width,\n        height: this.height\n      };\n      var pt = {\n        x: this.x,\n        y: this.y\n      };\n      opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n      var padding = (0, _helpersSegment.K)(options.padding);\n      var hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n      if (options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity;\n        this.drawBackground(pt, ctx, tooltipSize, options);\n        (0, _helpersSegment.aB)(ctx, options.textDirection);\n        pt.y += padding.top;\n        this.drawTitle(pt, ctx, options);\n        this.drawBody(pt, ctx, options);\n        this.drawFooter(pt, ctx, options);\n        (0, _helpersSegment.aD)(ctx, options.textDirection);\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"getActiveElements\",\n    value: function getActiveElements() {\n      return this._active || [];\n    }\n  }, {\n    key: \"setActiveElements\",\n    value: function setActiveElements(activeElements, eventPosition) {\n      var _this32 = this;\n      var lastActive = this._active;\n      var active = activeElements.map(function (_ref1) {\n        var datasetIndex = _ref1.datasetIndex,\n          index = _ref1.index;\n        var meta = _this32.chart.getDatasetMeta(datasetIndex);\n        if (!meta) {\n          throw new Error('Cannot find a dataset at index ' + datasetIndex);\n        }\n        return {\n          datasetIndex: datasetIndex,\n          element: meta.data[index],\n          index: index\n        };\n      });\n      var changed = !(0, _helpersSegment.ai)(lastActive, active);\n      var positionChanged = this._positionChanged(active, eventPosition);\n      if (changed || positionChanged) {\n        this._active = active;\n        this._eventPosition = eventPosition;\n        this._ignoreReplayEvents = true;\n        this.update(true);\n      }\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(e, replay) {\n      var inChartArea = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      if (replay && this._ignoreReplayEvents) {\n        return false;\n      }\n      this._ignoreReplayEvents = false;\n      var options = this.options;\n      var lastActive = this._active || [];\n      var active = this._getActiveElements(e, lastActive, replay, inChartArea);\n      var positionChanged = this._positionChanged(active, e);\n      var changed = replay || !(0, _helpersSegment.ai)(active, lastActive) || positionChanged;\n      if (changed) {\n        this._active = active;\n        if (options.enabled || options.external) {\n          this._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          this.update(true, replay);\n        }\n      }\n      return changed;\n    }\n  }, {\n    key: \"_getActiveElements\",\n    value: function _getActiveElements(e, lastActive, replay, inChartArea) {\n      var options = this.options;\n      if (e.type === 'mouseout') {\n        return [];\n      }\n      if (!inChartArea) {\n        return lastActive;\n      }\n      var active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n      return active;\n    }\n  }, {\n    key: \"_positionChanged\",\n    value: function _positionChanged(active, e) {\n      var caretX = this.caretX,\n        caretY = this.caretY,\n        options = this.options;\n      var position = positioners[options.position].call(this, active, e);\n      return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n  }]);\n}(Element);\nTooltip.positioners = positioners;\nvar plugin_tooltip = exports.Tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners: positioners,\n  afterInit: function afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({\n        chart: chart,\n        options: options\n      });\n    }\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset: function reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw: function afterDraw(chart) {\n    var tooltip = chart.tooltip;\n    if (tooltip && tooltip._willRender()) {\n      var args = {\n        tooltip: tooltip\n      };\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n        return;\n      }\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent: function afterEvent(chart, args) {\n    if (chart.tooltip) {\n      var useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold'\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {},\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold'\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: function boxHeight(ctx, opts) {\n      return opts.bodyFont.size;\n    },\n    boxWidth: function boxWidth(ctx, opts) {\n      return opts.bodyFont.size;\n    },\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart'\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: _helpersSegment.aF,\n      title: function title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          var item = tooltipItems[0];\n          var labels = item.chart.data.labels;\n          var labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: _helpersSegment.aF,\n      beforeBody: _helpersSegment.aF,\n      beforeLabel: _helpersSegment.aF,\n      label: function label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        var label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        var value = tooltipItem.formattedValue;\n        if (!(0, _helpersSegment.k)(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor: function labelColor(tooltipItem) {\n        var meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        var options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0\n        };\n      },\n      labelTextColor: function labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle: function labelPointStyle(tooltipItem) {\n        var meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        var options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation\n        };\n      },\n      afterLabel: _helpersSegment.aF,\n      afterBody: _helpersSegment.aF,\n      beforeFooter: _helpersSegment.aF,\n      footer: _helpersSegment.aF,\n      afterFooter: _helpersSegment.aF\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: function _scriptable(name) {\n      return name !== 'filter' && name !== 'itemSort' && name !== 'external';\n    },\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\nvar plugins = exports.plugins = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Decimation: plugin_decimation,\n  Filler: index,\n  Legend: plugin_legend,\n  SubTitle: plugin_subtitle,\n  Title: plugin_title,\n  Tooltip: plugin_tooltip\n});\nvar addIfString = function addIfString(labels, raw, index, addedLabels) {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({\n      index: index,\n      label: raw\n    });\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  var first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  var last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nvar validIndex = function validIndex(index, max) {\n  return index === null ? null : (0, _helpersSegment.E)(Math.round(index), 0, max);\n};\nvar CategoryScale = exports.CategoryScale = /*#__PURE__*/function (_Scale) {\n  function CategoryScale(cfg) {\n    var _this33;\n    (0, _classCallCheck2.default)(this, CategoryScale);\n    _this33 = _callSuper(this, CategoryScale, [cfg]);\n    _this33._startValue = undefined;\n    _this33._valueRange = 0;\n    _this33._addedLabels = [];\n    return _this33;\n  }\n  (0, _inherits2.default)(CategoryScale, _Scale);\n  return (0, _createClass2.default)(CategoryScale, [{\n    key: \"init\",\n    value: function init(scaleOptions) {\n      var added = this._addedLabels;\n      if (added.length) {\n        var labels = this.getLabels();\n        var _iterator22 = _createForOfIteratorHelper(added),\n          _step22;\n        try {\n          for (_iterator22.s(); !(_step22 = _iterator22.n()).done;) {\n            var _step22$value = _step22.value,\n              _index3 = _step22$value.index,\n              label = _step22$value.label;\n            if (labels[_index3] === label) {\n              labels.splice(_index3, 1);\n            }\n          }\n        } catch (err) {\n          _iterator22.e(err);\n        } finally {\n          _iterator22.f();\n        }\n        this._addedLabels = [];\n      }\n      _superPropGet(CategoryScale, \"init\", this, 3)([scaleOptions]);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if ((0, _helpersSegment.k)(raw)) {\n        return null;\n      }\n      var labels = this.getLabels();\n      index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, (0, _helpersSegment.v)(index, raw), this._addedLabels);\n      return validIndex(index, labels.length - 1);\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getUserBounds2 = this.getUserBounds(),\n        minDefined = _this$getUserBounds2.minDefined,\n        maxDefined = _this$getUserBounds2.maxDefined;\n      var _this$getMinMax = this.getMinMax(true),\n        min = _this$getMinMax.min,\n        max = _this$getMinMax.max;\n      if (this.options.bounds === 'ticks') {\n        if (!minDefined) {\n          min = 0;\n        }\n        if (!maxDefined) {\n          max = this.getLabels().length - 1;\n        }\n      }\n      this.min = min;\n      this.max = max;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var min = this.min;\n      var max = this.max;\n      var offset = this.options.offset;\n      var ticks = [];\n      var labels = this.getLabels();\n      labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n      this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n      this._startValue = this.min - (offset ? 0.5 : 0);\n      for (var value = min; value <= max; value++) {\n        ticks.push({\n          value: value\n        });\n      }\n      return ticks;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      var labels = this.getLabels();\n      if (value >= 0 && value < labels.length) {\n        return labels[value];\n      }\n      return value;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      _superPropGet(CategoryScale, \"configure\", this, 3)([]);\n      if (!this.isHorizontal()) {\n        this._reversePixels = !this._reversePixels;\n      }\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      if (typeof value !== 'number') {\n        value = this.parse(value);\n      }\n      return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n  }, {\n    key: \"getPixelForTick\",\n    value: function getPixelForTick(index) {\n      var ticks = this.ticks;\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n      return this.getPixelForValue(ticks[index].value);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n  }, {\n    key: \"getBasePixel\",\n    value: function getBasePixel() {\n      return this.bottom;\n    }\n  }]);\n}(Scale);\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\nfunction generateTicks$1(generationOptions, dataRange) {\n  var ticks = [];\n  var MIN_SPACING = 1e-14;\n  var bounds = generationOptions.bounds,\n    step = generationOptions.step,\n    min = generationOptions.min,\n    max = generationOptions.max,\n    precision = generationOptions.precision,\n    count = generationOptions.count,\n    maxTicks = generationOptions.maxTicks,\n    maxDigits = generationOptions.maxDigits,\n    includeBounds = generationOptions.includeBounds;\n  var unit = step || 1;\n  var maxSpaces = maxTicks - 1;\n  var rmin = dataRange.min,\n    rmax = dataRange.max;\n  var minDefined = !(0, _helpersSegment.k)(min);\n  var maxDefined = !(0, _helpersSegment.k)(max);\n  var countDefined = !(0, _helpersSegment.k)(count);\n  var minSpacing = (rmax - rmin) / (maxDigits + 1);\n  var spacing = (0, _helpersSegment.aI)((rmax - rmin) / maxSpaces / unit) * unit;\n  var factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{\n      value: rmin\n    }, {\n      value: rmax\n    }];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = (0, _helpersSegment.aI)(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!(0, _helpersSegment.k)(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && (0, _helpersSegment.aJ)((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if ((0, _helpersSegment.aK)(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  var decimalPlaces = Math.max((0, _helpersSegment.aL)(spacing), (0, _helpersSegment.aL)(niceMin));\n  factor = Math.pow(10, (0, _helpersSegment.k)(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  var j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({\n        value: min\n      });\n      if (niceMin < min) {\n        j++;\n      }\n      if ((0, _helpersSegment.aK)(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({\n      value: Math.round((niceMin + j * spacing) * factor) / factor\n    });\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && (0, _helpersSegment.aK)(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({\n        value: max\n      });\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({\n      value: niceMax\n    });\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, _ref10) {\n  var horizontal = _ref10.horizontal,\n    minRotation = _ref10.minRotation;\n  var rad = (0, _helpersSegment.t)(minRotation);\n  var ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  var length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nvar LinearScaleBase = /*#__PURE__*/function (_Scale2) {\n  function LinearScaleBase(cfg) {\n    var _this34;\n    (0, _classCallCheck2.default)(this, LinearScaleBase);\n    _this34 = _callSuper(this, LinearScaleBase, [cfg]);\n    _this34.start = undefined;\n    _this34.end = undefined;\n    _this34._startValue = undefined;\n    _this34._endValue = undefined;\n    _this34._valueRange = 0;\n    return _this34;\n  }\n  (0, _inherits2.default)(LinearScaleBase, _Scale2);\n  return (0, _createClass2.default)(LinearScaleBase, [{\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if ((0, _helpersSegment.k)(raw)) {\n        return null;\n      }\n      if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n        return null;\n      }\n      return +raw;\n    }\n  }, {\n    key: \"handleTickRangeOptions\",\n    value: function handleTickRangeOptions() {\n      var beginAtZero = this.options.beginAtZero;\n      var _this$getUserBounds3 = this.getUserBounds(),\n        minDefined = _this$getUserBounds3.minDefined,\n        maxDefined = _this$getUserBounds3.maxDefined;\n      var min = this.min,\n        max = this.max;\n      var setMin = function setMin(v) {\n        return min = minDefined ? min : v;\n      };\n      var setMax = function setMax(v) {\n        return max = maxDefined ? max : v;\n      };\n      if (beginAtZero) {\n        var minSign = (0, _helpersSegment.s)(min);\n        var maxSign = (0, _helpersSegment.s)(max);\n        if (minSign < 0 && maxSign < 0) {\n          setMax(0);\n        } else if (minSign > 0 && maxSign > 0) {\n          setMin(0);\n        }\n      }\n      if (min === max) {\n        var offset = 1;\n        if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n          offset = Math.abs(max * 0.05);\n        }\n        setMax(max + offset);\n        if (!beginAtZero) {\n          setMin(min - offset);\n        }\n      }\n      this.min = min;\n      this.max = max;\n    }\n  }, {\n    key: \"getTickLimit\",\n    value: function getTickLimit() {\n      var tickOpts = this.options.ticks;\n      var maxTicksLimit = tickOpts.maxTicksLimit,\n        stepSize = tickOpts.stepSize;\n      var maxTicks;\n      if (stepSize) {\n        maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n        if (maxTicks > 1000) {\n          console.warn(\"scales.\".concat(this.id, \".ticks.stepSize: \").concat(stepSize, \" would result generating up to \").concat(maxTicks, \" ticks. Limiting to 1000.\"));\n          maxTicks = 1000;\n        }\n      } else {\n        maxTicks = this.computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n      return maxTicks;\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var opts = this.options;\n      var tickOpts = opts.ticks;\n      var maxTicks = this.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        bounds: opts.bounds,\n        min: opts.min,\n        max: opts.max,\n        precision: tickOpts.precision,\n        step: tickOpts.stepSize,\n        count: tickOpts.count,\n        maxDigits: this._maxDigits(),\n        horizontal: this.isHorizontal(),\n        minRotation: tickOpts.minRotation || 0,\n        includeBounds: tickOpts.includeBounds !== false\n      };\n      var dataRange = this._range || this;\n      var ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n      if (opts.bounds === 'ticks') {\n        (0, _helpersSegment.aH)(ticks, this, 'value');\n      }\n      if (opts.reverse) {\n        ticks.reverse();\n        this.start = this.max;\n        this.end = this.min;\n      } else {\n        this.start = this.min;\n        this.end = this.max;\n      }\n      return ticks;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var ticks = this.ticks;\n      var start = this.min;\n      var end = this.max;\n      _superPropGet(LinearScaleBase, \"configure\", this, 3)([]);\n      if (this.options.offset && ticks.length) {\n        var offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n        start -= offset;\n        end += offset;\n      }\n      this._startValue = start;\n      this._endValue = end;\n      this._valueRange = end - start;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return (0, _helpersSegment.o)(value, this.chart.options.locale, this.options.ticks.format);\n    }\n  }]);\n}(Scale);\nvar LinearScale = exports.LinearScale = /*#__PURE__*/function (_LinearScaleBase) {\n  function LinearScale() {\n    (0, _classCallCheck2.default)(this, LinearScale);\n    return _callSuper(this, LinearScale, arguments);\n  }\n  (0, _inherits2.default)(LinearScale, _LinearScaleBase);\n  return (0, _createClass2.default)(LinearScale, [{\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getMinMax2 = this.getMinMax(true),\n        min = _this$getMinMax2.min,\n        max = _this$getMinMax2.max;\n      this.min = (0, _helpersSegment.g)(min) ? min : 0;\n      this.max = (0, _helpersSegment.g)(max) ? max : 1;\n      this.handleTickRangeOptions();\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      var horizontal = this.isHorizontal();\n      var length = horizontal ? this.width : this.height;\n      var minRotation = (0, _helpersSegment.t)(this.options.ticks.minRotation);\n      var ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n      var tickFont = this._resolveTickFontOptions(0);\n      return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n  }]);\n}(LinearScaleBase);\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\nfunction isMajor(tickVal) {\n  var remain = tickVal / Math.pow(10, Math.floor((0, _helpersSegment.z)(tickVal)));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  var endExp = Math.floor((0, _helpersSegment.z)(dataRange.max));\n  var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  var ticks = [];\n  var tickVal = (0, _helpersSegment.B)(generationOptions.min, Math.pow(10, Math.floor((0, _helpersSegment.z)(dataRange.min))));\n  var exp = Math.floor((0, _helpersSegment.z)(tickVal));\n  var significand = Math.floor(tickVal / Math.pow(10, exp));\n  var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({\n      value: tickVal,\n      major: isMajor(tickVal)\n    });\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || exp === endExp && significand < endSignificand);\n  var lastTick = (0, _helpersSegment.B)(generationOptions.max, tickVal);\n  ticks.push({\n    value: lastTick,\n    major: isMajor(tickVal)\n  });\n  return ticks;\n}\nvar LogarithmicScale = exports.LogarithmicScale = /*#__PURE__*/function (_Scale3) {\n  function LogarithmicScale(cfg) {\n    var _this35;\n    (0, _classCallCheck2.default)(this, LogarithmicScale);\n    _this35 = _callSuper(this, LogarithmicScale, [cfg]);\n    _this35.start = undefined;\n    _this35.end = undefined;\n    _this35._startValue = undefined;\n    _this35._valueRange = 0;\n    return _this35;\n  }\n  (0, _inherits2.default)(LogarithmicScale, _Scale3);\n  return (0, _createClass2.default)(LogarithmicScale, [{\n    key: \"parse\",\n    value: function parse(raw, index) {\n      var value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n      if (value === 0) {\n        this._zero = true;\n        return undefined;\n      }\n      return (0, _helpersSegment.g)(value) && value > 0 ? value : null;\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getMinMax3 = this.getMinMax(true),\n        min = _this$getMinMax3.min,\n        max = _this$getMinMax3.max;\n      this.min = (0, _helpersSegment.g)(min) ? Math.max(0, min) : null;\n      this.max = (0, _helpersSegment.g)(max) ? Math.max(0, max) : null;\n      if (this.options.beginAtZero) {\n        this._zero = true;\n      }\n      this.handleTickRangeOptions();\n    }\n  }, {\n    key: \"handleTickRangeOptions\",\n    value: function handleTickRangeOptions() {\n      var _this$getUserBounds4 = this.getUserBounds(),\n        minDefined = _this$getUserBounds4.minDefined,\n        maxDefined = _this$getUserBounds4.maxDefined;\n      var min = this.min;\n      var max = this.max;\n      var setMin = function setMin(v) {\n        return min = minDefined ? min : v;\n      };\n      var setMax = function setMax(v) {\n        return max = maxDefined ? max : v;\n      };\n      var exp = function exp(v, m) {\n        return Math.pow(10, Math.floor((0, _helpersSegment.z)(v)) + m);\n      };\n      if (min === max) {\n        if (min <= 0) {\n          setMin(1);\n          setMax(10);\n        } else {\n          setMin(exp(min, -1));\n          setMax(exp(max, +1));\n        }\n      }\n      if (min <= 0) {\n        setMin(exp(max, -1));\n      }\n      if (max <= 0) {\n        setMax(exp(min, +1));\n      }\n      if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n        setMin(exp(min, -1));\n      }\n      this.min = min;\n      this.max = max;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var opts = this.options;\n      var generationOptions = {\n        min: this._userMin,\n        max: this._userMax\n      };\n      var ticks = generateTicks(generationOptions, this);\n      if (opts.bounds === 'ticks') {\n        (0, _helpersSegment.aH)(ticks, this, 'value');\n      }\n      if (opts.reverse) {\n        ticks.reverse();\n        this.start = this.max;\n        this.end = this.min;\n      } else {\n        this.start = this.min;\n        this.end = this.max;\n      }\n      return ticks;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return value === undefined ? '0' : (0, _helpersSegment.o)(value, this.chart.options.locale, this.options.ticks.format);\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var start = this.min;\n      _superPropGet(LogarithmicScale, \"configure\", this, 3)([]);\n      this._startValue = (0, _helpersSegment.z)(start);\n      this._valueRange = (0, _helpersSegment.z)(this.max) - (0, _helpersSegment.z)(start);\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      if (value === undefined || value === 0) {\n        value = this.min;\n      }\n      if (value === null || isNaN(value)) {\n        return NaN;\n      }\n      return this.getPixelForDecimal(value === this.min ? 0 : ((0, _helpersSegment.z)(value) - this._startValue) / this._valueRange);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var decimal = this.getDecimalForPixel(pixel);\n      return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n  }]);\n}(Scale);\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\nfunction getTickBackdropHeight(opts) {\n  var tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    var padding = (0, _helpersSegment.K)(tickOpts.backdropPadding);\n    return (0, _helpersSegment.v)(tickOpts.font && tickOpts.font.size, _helpersSegment.d.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = (0, _helpersSegment.b)(label) ? label : [label];\n  return {\n    w: (0, _helpersSegment.aM)(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - size / 2,\n      end: pos + size / 2\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  var orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  var limits = Object.assign({}, orig);\n  var labelSizes = [];\n  var padding = [];\n  var valueCount = scale._pointLabels.length;\n  var pointLabelOpts = scale.options.pointLabels;\n  var additionalAngle = pointLabelOpts.centerPointLabels ? _helpersSegment.P / valueCount : 0;\n  for (var i = 0; i < valueCount; i++) {\n    var opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    var pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    var plFont = (0, _helpersSegment.O)(opts.font);\n    var textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    var angleRadians = (0, _helpersSegment.az)(scale.getIndexAngle(i) + additionalAngle);\n    var angle = Math.round((0, _helpersSegment.F)(angleRadians));\n    var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  var sin = Math.abs(Math.sin(angle));\n  var cos = Math.abs(Math.cos(angle));\n  var x = 0;\n  var y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  var items = [];\n  var valueCount = scale._pointLabels.length;\n  var opts = scale.options;\n  var extra = getTickBackdropHeight(opts) / 2;\n  var outerDistance = scale.drawingArea;\n  var additionalAngle = opts.pointLabels.centerPointLabels ? _helpersSegment.P / valueCount : 0;\n  for (var i = 0; i < valueCount; i++) {\n    var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    var angle = Math.round((0, _helpersSegment.F)((0, _helpersSegment.az)(pointLabelPosition.angle + _helpersSegment.H)));\n    var size = labelSizes[i];\n    var y = yForAngle(pointLabelPosition.y, size.h, angle);\n    var textAlign = getTextAlignForAngle(angle);\n    var left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y: y,\n      textAlign: textAlign,\n      left: left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= w / 2;\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= h / 2;\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  var ctx = scale.ctx,\n    pointLabels = scale.options.pointLabels;\n  for (var i = labelCount - 1; i >= 0; i--) {\n    var optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    var plFont = (0, _helpersSegment.O)(optsAtIndex.font);\n    var _scale$_pointLabelIte = scale._pointLabelItems[i],\n      x = _scale$_pointLabelIte.x,\n      y = _scale$_pointLabelIte.y,\n      textAlign = _scale$_pointLabelIte.textAlign,\n      left = _scale$_pointLabelIte.left,\n      top = _scale$_pointLabelIte.top,\n      right = _scale$_pointLabelIte.right,\n      bottom = _scale$_pointLabelIte.bottom;\n    var backdropColor = optsAtIndex.backdropColor;\n    if (!(0, _helpersSegment.k)(backdropColor)) {\n      var borderRadius = (0, _helpersSegment.ax)(optsAtIndex.borderRadius);\n      var padding = (0, _helpersSegment.K)(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      var backdropLeft = left - padding.left;\n      var backdropTop = top - padding.top;\n      var backdropWidth = right - left + padding.width;\n      var backdropHeight = bottom - top + padding.height;\n      if (Object.values(borderRadius).some(function (v) {\n        return v !== 0;\n      })) {\n        ctx.beginPath();\n        (0, _helpersSegment.av)(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n    (0, _helpersSegment.M)(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n      color: optsAtIndex.color,\n      textAlign: textAlign,\n      textBaseline: 'middle'\n    });\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  var ctx = scale.ctx;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, _helpersSegment.T);\n  } else {\n    var pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (var i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  var ctx = scale.ctx;\n  var circular = gridLineOpts.circular;\n  var color = gridLineOpts.color,\n    lineWidth = gridLineOpts.lineWidth;\n  if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return (0, _helpersSegment.h)(parent, {\n    label: label,\n    index: index,\n    type: 'pointLabel'\n  });\n}\nvar RadialLinearScale = exports.RadialLinearScale = /*#__PURE__*/function (_LinearScaleBase2) {\n  function RadialLinearScale(cfg) {\n    var _this36;\n    (0, _classCallCheck2.default)(this, RadialLinearScale);\n    _this36 = _callSuper(this, RadialLinearScale, [cfg]);\n    _this36.xCenter = undefined;\n    _this36.yCenter = undefined;\n    _this36.drawingArea = undefined;\n    _this36._pointLabels = [];\n    _this36._pointLabelItems = [];\n    return _this36;\n  }\n  (0, _inherits2.default)(RadialLinearScale, _LinearScaleBase2);\n  return (0, _createClass2.default)(RadialLinearScale, [{\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      var padding = this._padding = (0, _helpersSegment.K)(getTickBackdropHeight(this.options) / 2);\n      var w = this.width = this.maxWidth - padding.width;\n      var h = this.height = this.maxHeight - padding.height;\n      this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n      this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n      this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getMinMax4 = this.getMinMax(false),\n        min = _this$getMinMax4.min,\n        max = _this$getMinMax4.max;\n      this.min = (0, _helpersSegment.g)(min) && !isNaN(min) ? min : 0;\n      this.max = (0, _helpersSegment.g)(max) && !isNaN(max) ? max : 0;\n      this.handleTickRangeOptions();\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var _this37 = this;\n      LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n      this._pointLabels = this.getLabels().map(function (value, index) {\n        var label = (0, _helpersSegment.C)(_this37.options.pointLabels.callback, [value, index], _this37);\n        return label || label === 0 ? label : '';\n      }).filter(function (v, i) {\n        return _this37.chart.getDataVisibility(i);\n      });\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var opts = this.options;\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(this);\n      } else {\n        this.setCenterPoint(0, 0, 0, 0);\n      }\n    }\n  }, {\n    key: \"setCenterPoint\",\n    value: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n      this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n      this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n  }, {\n    key: \"getIndexAngle\",\n    value: function getIndexAngle(index) {\n      var angleMultiplier = _helpersSegment.T / (this._pointLabels.length || 1);\n      var startAngle = this.options.startAngle || 0;\n      return (0, _helpersSegment.az)(index * angleMultiplier + (0, _helpersSegment.t)(startAngle));\n    }\n  }, {\n    key: \"getDistanceFromCenterForValue\",\n    value: function getDistanceFromCenterForValue(value) {\n      if ((0, _helpersSegment.k)(value)) {\n        return NaN;\n      }\n      var scalingFactor = this.drawingArea / (this.max - this.min);\n      if (this.options.reverse) {\n        return (this.max - value) * scalingFactor;\n      }\n      return (value - this.min) * scalingFactor;\n    }\n  }, {\n    key: \"getValueForDistanceFromCenter\",\n    value: function getValueForDistanceFromCenter(distance) {\n      if ((0, _helpersSegment.k)(distance)) {\n        return NaN;\n      }\n      var scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n      return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n  }, {\n    key: \"getPointLabelContext\",\n    value: function getPointLabelContext(index) {\n      var pointLabels = this._pointLabels || [];\n      if (index >= 0 && index < pointLabels.length) {\n        var pointLabel = pointLabels[index];\n        return createPointLabelContext(this.getContext(), index, pointLabel);\n      }\n    }\n  }, {\n    key: \"getPointPosition\",\n    value: function getPointPosition(index, distanceFromCenter) {\n      var additionalAngle = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var angle = this.getIndexAngle(index) - _helpersSegment.H + additionalAngle;\n      return {\n        x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n        y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n        angle: angle\n      };\n    }\n  }, {\n    key: \"getPointPositionForValue\",\n    value: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n  }, {\n    key: \"getBasePosition\",\n    value: function getBasePosition(index) {\n      return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n  }, {\n    key: \"getPointLabelPosition\",\n    value: function getPointLabelPosition(index) {\n      var _this$_pointLabelItem = this._pointLabelItems[index],\n        left = _this$_pointLabelItem.left,\n        top = _this$_pointLabelItem.top,\n        right = _this$_pointLabelItem.right,\n        bottom = _this$_pointLabelItem.bottom;\n      return {\n        left: left,\n        top: top,\n        right: right,\n        bottom: bottom\n      };\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground() {\n      var _this$options13 = this.options,\n        backgroundColor = _this$options13.backgroundColor,\n        circular = _this$options13.grid.circular;\n      if (backgroundColor) {\n        var ctx = this.ctx;\n        ctx.save();\n        ctx.beginPath();\n        pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n        ctx.closePath();\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"drawGrid\",\n    value: function drawGrid() {\n      var _this38 = this;\n      var ctx = this.ctx;\n      var opts = this.options;\n      var angleLines = opts.angleLines,\n        grid = opts.grid;\n      var labelCount = this._pointLabels.length;\n      var i, offset, position;\n      if (opts.pointLabels.display) {\n        drawPointLabels(this, labelCount);\n      }\n      if (grid.display) {\n        this.ticks.forEach(function (tick, index) {\n          if (index !== 0) {\n            offset = _this38.getDistanceFromCenterForValue(tick.value);\n            var optsAtIndex = grid.setContext(_this38.getContext(index - 1));\n            drawRadiusLine(_this38, optsAtIndex, offset, labelCount);\n          }\n        });\n      }\n      if (angleLines.display) {\n        ctx.save();\n        for (i = labelCount - 1; i >= 0; i--) {\n          var optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n          var color = optsAtIndex.color,\n            lineWidth = optsAtIndex.lineWidth;\n          if (!lineWidth || !color) {\n            continue;\n          }\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = color;\n          ctx.setLineDash(optsAtIndex.borderDash);\n          ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n          offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n          position = this.getPointPosition(i, offset);\n          ctx.beginPath();\n          ctx.moveTo(this.xCenter, this.yCenter);\n          ctx.lineTo(position.x, position.y);\n          ctx.stroke();\n        }\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"drawBorder\",\n    value: function drawBorder() {}\n  }, {\n    key: \"drawLabels\",\n    value: function drawLabels() {\n      var _this39 = this;\n      var ctx = this.ctx;\n      var opts = this.options;\n      var tickOpts = opts.ticks;\n      if (!tickOpts.display) {\n        return;\n      }\n      var startAngle = this.getIndexAngle(0);\n      var offset, width;\n      ctx.save();\n      ctx.translate(this.xCenter, this.yCenter);\n      ctx.rotate(startAngle);\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      this.ticks.forEach(function (tick, index) {\n        if (index === 0 && !opts.reverse) {\n          return;\n        }\n        var optsAtIndex = tickOpts.setContext(_this39.getContext(index));\n        var tickFont = (0, _helpersSegment.O)(optsAtIndex.font);\n        offset = _this39.getDistanceFromCenterForValue(_this39.ticks[index].value);\n        if (optsAtIndex.showLabelBackdrop) {\n          ctx.font = tickFont.string;\n          width = ctx.measureText(tick.label).width;\n          ctx.fillStyle = optsAtIndex.backdropColor;\n          var padding = (0, _helpersSegment.K)(optsAtIndex.backdropPadding);\n          ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n        }\n        (0, _helpersSegment.M)(ctx, tick.label, 0, -offset, tickFont, {\n          color: optsAtIndex.color\n        });\n      });\n      ctx.restore();\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {}\n  }]);\n}(LinearScaleBase);\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback: function callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\nvar INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: 1000\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: 60\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: 60\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: 24\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: 30\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: 4\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: 12\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: 4\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nvar UNITS = Object.keys(INTERVALS);\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction _parse(scale, input) {\n  if ((0, _helpersSegment.k)(input)) {\n    return null;\n  }\n  var adapter = scale._adapter;\n  var _scale$_parseOpts = scale._parseOpts,\n    parser = _scale$_parseOpts.parser,\n    round = _scale$_parseOpts.round,\n    isoWeekday = _scale$_parseOpts.isoWeekday;\n  var value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!(0, _helpersSegment.g)(value)) {\n    value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && ((0, _helpersSegment.x)(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  var ilen = UNITS.length;\n  for (var i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    var interval = INTERVALS[UNITS[i]];\n    var factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (var i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    var unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    var _lookup2 = (0, _helpersSegment.aO)(timestamps, time),\n      lo = _lookup2.lo,\n      hi = _lookup2.hi;\n    var timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  var adapter = scale._adapter;\n  var first = +adapter.startOf(ticks[0].value, majorUnit);\n  var last = ticks[ticks.length - 1].value;\n  var major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  var ticks = [];\n  var map = {};\n  var ilen = values.length;\n  var i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value: value,\n      major: false\n    });\n  }\n  return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nvar TimeScale = exports.TimeScale = /*#__PURE__*/function (_Scale4) {\n  function TimeScale(props) {\n    var _this40;\n    (0, _classCallCheck2.default)(this, TimeScale);\n    _this40 = _callSuper(this, TimeScale, [props]);\n    _this40._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    _this40._unit = 'day';\n    _this40._majorUnit = undefined;\n    _this40._offsets = {};\n    _this40._normalized = false;\n    _this40._parseOpts = undefined;\n    return _this40;\n  }\n  (0, _inherits2.default)(TimeScale, _Scale4);\n  return (0, _createClass2.default)(TimeScale, [{\n    key: \"init\",\n    value: function init(scaleOpts, opts) {\n      var time = scaleOpts.time || (scaleOpts.time = {});\n      var adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n      adapter.init(opts);\n      (0, _helpersSegment.ac)(time.displayFormats, adapter.formats());\n      this._parseOpts = {\n        parser: time.parser,\n        round: time.round,\n        isoWeekday: time.isoWeekday\n      };\n      _superPropGet(TimeScale, \"init\", this, 3)([scaleOpts]);\n      this._normalized = opts.normalized;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (raw === undefined) {\n        return null;\n      }\n      return _parse(this, raw);\n    }\n  }, {\n    key: \"beforeLayout\",\n    value: function beforeLayout() {\n      _superPropGet(TimeScale, \"beforeLayout\", this, 3)([]);\n      this._cache = {\n        data: [],\n        labels: [],\n        all: []\n      };\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var options = this.options;\n      var adapter = this._adapter;\n      var unit = options.time.unit || 'day';\n      var _this$getUserBounds5 = this.getUserBounds(),\n        min = _this$getUserBounds5.min,\n        max = _this$getUserBounds5.max,\n        minDefined = _this$getUserBounds5.minDefined,\n        maxDefined = _this$getUserBounds5.maxDefined;\n      function _applyBounds(bounds) {\n        if (!minDefined && !isNaN(bounds.min)) {\n          min = Math.min(min, bounds.min);\n        }\n        if (!maxDefined && !isNaN(bounds.max)) {\n          max = Math.max(max, bounds.max);\n        }\n      }\n      if (!minDefined || !maxDefined) {\n        _applyBounds(this._getLabelBounds());\n        if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n          _applyBounds(this.getMinMax(false));\n        }\n      }\n      min = (0, _helpersSegment.g)(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n      max = (0, _helpersSegment.g)(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n      this.min = Math.min(min, max - 1);\n      this.max = Math.max(min + 1, max);\n    }\n  }, {\n    key: \"_getLabelBounds\",\n    value: function _getLabelBounds() {\n      var arr = this.getLabelTimestamps();\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      if (arr.length) {\n        min = arr[0];\n        max = arr[arr.length - 1];\n      }\n      return {\n        min: min,\n        max: max\n      };\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var options = this.options;\n      var timeOpts = options.time;\n      var tickOpts = options.ticks;\n      var timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n      if (options.bounds === 'ticks' && timestamps.length) {\n        this.min = this._userMin || timestamps[0];\n        this.max = this._userMax || timestamps[timestamps.length - 1];\n      }\n      var min = this.min;\n      var max = this.max;\n      var ticks = (0, _helpersSegment.aN)(timestamps, min, max);\n      this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n      this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n      this.initOffsets(timestamps);\n      if (options.reverse) {\n        ticks.reverse();\n      }\n      return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n  }, {\n    key: \"afterAutoSkip\",\n    value: function afterAutoSkip() {\n      if (this.options.offsetAfterAutoskip) {\n        this.initOffsets(this.ticks.map(function (tick) {\n          return +tick.value;\n        }));\n      }\n    }\n  }, {\n    key: \"initOffsets\",\n    value: function initOffsets(timestamps) {\n      var start = 0;\n      var end = 0;\n      var first, last;\n      if (this.options.offset && timestamps.length) {\n        first = this.getDecimalForValue(timestamps[0]);\n        if (timestamps.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n        }\n        last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n        if (timestamps.length === 1) {\n          end = last;\n        } else {\n          end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n        }\n      }\n      var limit = timestamps.length < 3 ? 0.5 : 0.25;\n      start = (0, _helpersSegment.E)(start, 0, limit);\n      end = (0, _helpersSegment.E)(end, 0, limit);\n      this._offsets = {\n        start: start,\n        end: end,\n        factor: 1 / (start + 1 + end)\n      };\n    }\n  }, {\n    key: \"_generate\",\n    value: function _generate() {\n      var adapter = this._adapter;\n      var min = this.min;\n      var max = this.max;\n      var options = this.options;\n      var timeOpts = options.time;\n      var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n      var stepSize = (0, _helpersSegment.v)(timeOpts.stepSize, 1);\n      var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n      var hasWeekday = (0, _helpersSegment.x)(weekday) || weekday === true;\n      var ticks = {};\n      var first = min;\n      var time, count;\n      if (hasWeekday) {\n        first = +adapter.startOf(first, 'isoWeek', weekday);\n      }\n      first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n      if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n        throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n      }\n      var timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n      for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n        addTick(ticks, time, timestamps);\n      }\n      if (time === max || options.bounds === 'ticks' || count === 1) {\n        addTick(ticks, time, timestamps);\n      }\n      return Object.keys(ticks).sort(function (a, b) {\n        return a - b;\n      }).map(function (x) {\n        return +x;\n      });\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      var adapter = this._adapter;\n      var timeOpts = this.options.time;\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(value, timeOpts.tooltipFormat);\n      }\n      return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n  }, {\n    key: \"_tickFormatFunction\",\n    value: function _tickFormatFunction(time, index, ticks, format) {\n      var options = this.options;\n      var formats = options.time.displayFormats;\n      var unit = this._unit;\n      var majorUnit = this._majorUnit;\n      var minorFormat = unit && formats[unit];\n      var majorFormat = majorUnit && formats[majorUnit];\n      var tick = ticks[index];\n      var major = majorUnit && majorFormat && tick && tick.major;\n      var label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n      var formatter = options.ticks.callback;\n      return formatter ? (0, _helpersSegment.C)(formatter, [label, index, ticks], this) : label;\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var i, ilen, tick;\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        tick.label = this._tickFormatFunction(tick.value, i, ticks);\n      }\n    }\n  }, {\n    key: \"getDecimalForValue\",\n    value: function getDecimalForValue(value) {\n      return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      var offsets = this._offsets;\n      var pos = this.getDecimalForValue(value);\n      return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var offsets = this._offsets;\n      var pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return this.min + pos * (this.max - this.min);\n    }\n  }, {\n    key: \"_getLabelSize\",\n    value: function _getLabelSize(label) {\n      var ticksOpts = this.options.ticks;\n      var tickLabelWidth = this.ctx.measureText(label).width;\n      var angle = (0, _helpersSegment.t)(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = this._resolveTickFontOptions(0).size;\n      return {\n        w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n        h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n      };\n    }\n  }, {\n    key: \"_getLabelCapacity\",\n    value: function _getLabelCapacity(exampleTime) {\n      var timeOpts = this.options.time;\n      var displayFormats = timeOpts.displayFormats;\n      var format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n      var exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n      var size = this._getLabelSize(exampleLabel);\n      var capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n      return capacity > 0 ? capacity : 1;\n    }\n  }, {\n    key: \"getDataTimestamps\",\n    value: function getDataTimestamps() {\n      var timestamps = this._cache.data || [];\n      var i, ilen;\n      if (timestamps.length) {\n        return timestamps;\n      }\n      var metas = this.getMatchingVisibleMetas();\n      if (this._normalized && metas.length) {\n        return this._cache.data = metas[0].controller.getAllParsedValues(this);\n      }\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n      }\n      return this._cache.data = this.normalize(timestamps);\n    }\n  }, {\n    key: \"getLabelTimestamps\",\n    value: function getLabelTimestamps() {\n      var timestamps = this._cache.labels || [];\n      var i, ilen;\n      if (timestamps.length) {\n        return timestamps;\n      }\n      var labels = this.getLabels();\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        timestamps.push(_parse(this, labels[i]));\n      }\n      return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize(values) {\n      return (0, _helpersSegment._)(values.sort(sorter));\n    }\n  }]);\n}(Scale);\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\nfunction interpolate(table, val, reverse) {\n  var lo = 0;\n  var hi = table.length - 1;\n  var prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      var _lookupByKey2 = (0, _helpersSegment.Z)(table, 'pos', val);\n      lo = _lookupByKey2.lo;\n      hi = _lookupByKey2.hi;\n    }\n    var _table$lo = table[lo];\n    prevSource = _table$lo.pos;\n    prevTarget = _table$lo.time;\n    var _table$hi = table[hi];\n    nextSource = _table$hi.pos;\n    nextTarget = _table$hi.time;\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      var _lookupByKey3 = (0, _helpersSegment.Z)(table, 'time', val);\n      lo = _lookupByKey3.lo;\n      hi = _lookupByKey3.hi;\n    }\n    var _table$lo2 = table[lo];\n    prevSource = _table$lo2.time;\n    prevTarget = _table$lo2.pos;\n    var _table$hi2 = table[hi];\n    nextSource = _table$hi2.time;\n    nextTarget = _table$hi2.pos;\n  }\n  var span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nvar TimeSeriesScale = exports.TimeSeriesScale = /*#__PURE__*/function (_TimeScale) {\n  function TimeSeriesScale(props) {\n    var _this41;\n    (0, _classCallCheck2.default)(this, TimeSeriesScale);\n    _this41 = _callSuper(this, TimeSeriesScale, [props]);\n    _this41._table = [];\n    _this41._minPos = undefined;\n    _this41._tableRange = undefined;\n    return _this41;\n  }\n  (0, _inherits2.default)(TimeSeriesScale, _TimeScale);\n  return (0, _createClass2.default)(TimeSeriesScale, [{\n    key: \"initOffsets\",\n    value: function initOffsets() {\n      var timestamps = this._getTimestampsForTable();\n      var table = this._table = this.buildLookupTable(timestamps);\n      this._minPos = interpolate(table, this.min);\n      this._tableRange = interpolate(table, this.max) - this._minPos;\n      _superPropGet(TimeSeriesScale, \"initOffsets\", this, 3)([timestamps]);\n    }\n  }, {\n    key: \"buildLookupTable\",\n    value: function buildLookupTable(timestamps) {\n      var min = this.min,\n        max = this.max;\n      var items = [];\n      var table = [];\n      var i, ilen, prev, curr, next;\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        curr = timestamps[i];\n        if (curr >= min && curr <= max) {\n          items.push(curr);\n        }\n      }\n      if (items.length < 2) {\n        return [{\n          time: min,\n          pos: 0\n        }, {\n          time: max,\n          pos: 1\n        }];\n      }\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        next = items[i + 1];\n        prev = items[i - 1];\n        curr = items[i];\n        if (Math.round((next + prev) / 2) !== curr) {\n          table.push({\n            time: curr,\n            pos: i / (ilen - 1)\n          });\n        }\n      }\n      return table;\n    }\n  }, {\n    key: \"_getTimestampsForTable\",\n    value: function _getTimestampsForTable() {\n      var timestamps = this._cache.all || [];\n      if (timestamps.length) {\n        return timestamps;\n      }\n      var data = this.getDataTimestamps();\n      var label = this.getLabelTimestamps();\n      if (data.length && label.length) {\n        timestamps = this.normalize(data.concat(label));\n      } else {\n        timestamps = data.length ? data : label;\n      }\n      timestamps = this._cache.all = timestamps;\n      return timestamps;\n    }\n  }, {\n    key: \"getDecimalForValue\",\n    value: function getDecimalForValue(value) {\n      return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var offsets = this._offsets;\n      var decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n  }]);\n}(TimeScale);\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\nvar scales = exports.scales = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CategoryScale: CategoryScale,\n  LinearScale: LinearScale,\n  LogarithmicScale: LogarithmicScale,\n  RadialLinearScale: RadialLinearScale,\n  TimeScale: TimeScale,\n  TimeSeriesScale: TimeSeriesScale\n});\nvar registerables = exports.registerables = [controllers, elements, plugins, scales];",{"version":3,"names":["_helpersSegment","require","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty2","default","getOwnPropertyDescriptors","defineProperties","defineProperty","_callSuper","_getPrototypeOf2","_possibleConstructorReturn2","_isNativeReflectConstruct","Reflect","construct","constructor","Boolean","prototype","valueOf","call","_superPropGet","p","_get2","_createForOfIteratorHelper","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","_n","F","s","n","done","value","f","TypeError","a","u","next","return","_arrayLikeToArray","toString","slice","name","from","test","Animator","_classCallCheck2","_request","_charts","Map","_running","_lastDate","undefined","_createClass2","key","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","fn","initial","currentStep","Math","min","start","_refresh","_this","requestAnimFrame","window","_update","_this2","Date","now","remaining","running","items","i","draw","item","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","add","_this$_getAnims$items","_toConsumableArray2","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","exports","transparent","interpolators","boolean","to","factor","color","c0","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","resolve","_fn","_typeof2","_easing","effects","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","numbers","colors","defaults","animationOptions","animation","describe","_fallback","_indexable","_scriptable","properties","resize","show","animations","visible","hide","v","Animations","config","_chart","_properties","configure","isObject","animatedProps","getOwnPropertyNames","_i","_animationOptions","option","_animateOptions","values","newOptions","options","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","size","assign","anim","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","x","y","top","right","bottom","left","toClip","b","l","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","isNumberFinite","sign","convertObjectDataToArray","data","adata","isStacked","meta","stacked","getStackKey","indexScale","valueScale","concat","id","getUserBounds","_scale$getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","_iterator","getMatchingVisibleMetas","_step","err","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","itemStacks","_top","_bottom","getFirstScaleId","scales","shift","createDatasetContext","parent","createContext","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","_iterator2","_step2","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","addElements","updateIndex","getDataset","chooseId","xid","xAxisID","valueOrDefault","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","unlistenArrayEvents","_dataCheck","isExtensible","listenArrayEvents","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","_this$_parsing","_this$_parsing$xAxisK","xAxisKey","_this$_parsing$yAxisK","yAxisKey","resolveObjectKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","otherScale","_getUserBounds","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","clip","elements","area","chartArea","drawActiveElementsOnTop","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","dataElementType","elementType","_this3","cache","cacheKey","sharing","defined","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","_iterator3","_step3","_step3$value","_slicedToArray2","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_args2","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","_arrayUnique","sort","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","isNullOrUndef","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","base","setBorderSkipped","edge","borderSkipped","_borderProps","enableBorderRadius","parseEdge","swap","startEnd","orig","v1","v2","setInflateAmount","_ref","inflateAmount","BarController","_DatasetController","_inherits2","_this$_parsing2","_this$_parsing2$xAxis","_this$_parsing2$yAxis","iAxisKey","vAxisKey","obj","bars","getBasePixel","_getRuler","_this$_getSharedOptio","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","grouped","skipNull","val","isNaN","_iterator4","_step4","indexOf","_getStackCount","_getStackIndex","_startPixel","_endPixel","_this$_cachedMeta","_this$options","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","overrides","_index_","offset","grid","_value_","beginAtZero","BubbleController","_DatasetController2","radius","points","_this$_cachedMeta2","_this$_getSharedOptio2","point","iPixel","vPixel","skip","plugins","tooltip","title","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","TAU","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","_angleBetween","calcMin","maxX","maxY","HALF_PI","minX","PI","minY","DoughnutController","_DatasetController3","_this4","innerRadius","outerRadius","getter","_this$_parsing$key","_getRotation","toRadians","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","toPercentage","chartWeight","_getRingWeight","_this$_getRotationExt","_getRatioAndOffset","maxWidth","maxHeight","maxRadius","toDimension","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","_this$_getSharedOptio3","arc","metaData","formatNumber","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","descriptors","aspectRatio","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","onClick","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","LineController","_DatasetController4","line","_meta$data","_dataset","animationsDisabled","_getStartAndCountOfVi","_getStartAndCountOfVisiblePoints","_scaleRangesChanged","_datasetIndex","_decimated","showLine","segment","animated","_this$_cachedMeta3","_this$_getSharedOptio4","_this$options2","spanGaps","maxGapLength","isNumber","directUpdate","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","_DatasetController5","_this5","_parseObjectDataRadialScale","bind","_updateRadius","_this6","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","_this7","angleLines","display","circular","pointLabels","PieController","_DoughnutController","RadarController","_DatasetController6","_fullLoop","pointPosition","getPointPositionForValue","fill","Element","tooltipPosition","useFinalPosition","_this$getProps","getProps","hasValue","final","_this8","ret","defaultRoutes","formatters","numeric","tickValue","notation","delta","maxTick","calculateDelta","logDelta","log10","numDecimal","minimumFractionDigits","maximumFractionDigits","format","logarithmic","pow","Ticks","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickLength","tickWidth","tickColor","borderDash","borderDashOffset","padding","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","callback","minor","major","align","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","_factorize","result","ceil","majorStart","majorEnd","len","diff","reverseAlign","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","each","gc","gcLen","getTickMarkLength","getTitleHeight","fallback","font","toFont","toPadding","lines","lineHeight","createScaleContext","createTickContext","titleAlign","position","_toLeftRightCenter","titleArgs","titleX","titleY","_alignStartEnd","positionAxisID","Scale","_Element","_this9","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_reversePixels","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","setContext","suggestedMin","suggestedMax","finiteOrDefault","_this$getUserBounds","metas","getPadding","getTicks","xLabels","yLabels","beforeLayout","beforeUpdate","margins","_this$options3","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","_limitValue","sqrt","toDegrees","asin","_this$options4","titleOpts","gridOpts","titleHeight","_this$_getLabelSizes","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","_this$options5","_this$options5$ticks","isRotated","labelsBelowTicks","offsetLeft","offsetRight","_this$options6","isFullSize","fullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","j","jlen","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","_measureText","valueAt","idx","getValueForPixel","pixel","decimal","_int16Range","_alignPixel","getDecimalForPixel","getBaseValue","optionTicks","rot","w","h","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","tickTextAlign","backdrop","labelPadding","translation","_this$options7","_this$options8","_this$options8$ticks","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","lastLineWidth","drawLabels","clipArea","renderText","unclipArea","drawTitle","_this$options9","_titleArgs","_layers","_this0","tz","z","gz","getSortedVisibleDatasetMetas","axisID","_maxDigits","fontSize","TypedRegistry","scope","override","create","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","Error","registerDefaults","unregister","itemDefaults","merge","routeDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","Registry","controllers","_typedRegistries","_len","_key","_each","_len2","_key2","addControllers","_len3","_key3","_len4","_key4","addPlugins","_len5","_key5","addScales","_len6","_key6","getController","_get","getElement","getPlugin","getScale","removeControllers","_len7","_key7","removeElements","_len8","_key8","removePlugins","_len9","_key9","removeScales","_len0","_key0","typedRegistry","_this1","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","_capitalize","ScatterController","_DatasetController7","_meta$data2","_getStartAndCountOfVi2","_this$_cachedMeta4","_this$options0","interaction","__proto__","abstract","DateAdapter","chartOptions","formats","timestamp","amount","unit","startOf","weekday","endOf","members","adapters","_adapters","_date","binarySearch","metaset","intersect","lookupMethod","_rlookupByKey","_lookupByKey","el","getRange","lo","hi","evaluateInteractionItems","handler","_metasets$i","_binarySearch","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","getIntersectItems","includeInvisible","isPointInArea","evaluationFunc","_isPointInArea","inRange","getNearestRadialItems","_element$getProps","_getAngleFromPoint","getAngleFromPoint","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","getRelativePosition","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","wrapBoxes","boxes","layoutBoxes","stackWeight","_box","_box$options","_box$options$stackWei","buildStacks","layouts","_iterator5","_step5","wrap","includes","_stack","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","changed","_updateDims","setBoxDims","placeBoxes","userPadding","_iterator6","_step6","autoPadding","addBox","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","visibleVerticalBoxCount","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","getMaximumSize","isAttached","updateConfig","BasicPlatform","_BasePlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","readUsedSize","displayHeight","eventListenerOptions","supportsEventListenerOptions","passive","addListener","node","removeListener","fromNativeEvent","_getRelativePosition","native","nodeListContains","nodeList","_iterator7","_step7","contains","createAttachObserver","observer","MutationObserver","entries","trigger","_iterator8","_step8","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","_iterator9","_step9","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","container","_getParentNode","throttled","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","DomPlatform","_BasePlatform2","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","_isDomSupported","OffscreenCanvas","PluginService","_init","notify","hook","_createDescriptors","_descriptors","_iterator0","_step0","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","local","getOpts","_ref2","_iterator1","_step1","pluginOpts","_ref3","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","console","error","_proxy","warn","defaultId","defaultScaleOptions","mergeIf","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","_getResolver","getResolver","resolver","subPrefixes","needContext","isFunction","subResolver","_attachContext","_iterator10","_step10","descriptorDefaults","_getResolver2","resolverCache","_createResolver","hasFunction","_descriptors2","isScriptable","isIndexable","_iterator11","_step11","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","c","moveNumericKeys","_i3","_keys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","Chart","userConfig","_this10","initialCanvas","existingChart","uid","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","debounce","resizeDelay","_initialize","_this$options1","maintainAspectRatio","responsive","retinaScale","bindEvents","clearCanvas","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","_this11","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","_this12","buildOrUpdateControllers","newControllers","order","ControllerClass","_defaults$datasets$ty","_resetElements","_this13","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_this$getDatasetMeta","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","_this14","existingEvents","newEvents","events","setsEqual","unbindEvents","changes","_getUniformDataChanges","_iterator12","_step12","_step12$value","datasetCount","makeSet","changeSet","_this15","noArea","_this15$_layers","_idx","_updateDataset","_this$_resizeBeforeDr","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","_this$canvas","toDataURL","bindUserEvents","bindResponsiveEvents","_this16","_add","_this17","_remove","detached","_this18","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","_this19","lastActive","_ref4","_elementsEqual","replay","hoverOptions","hover","deactivated","activated","_this20","eventFilter","_handleEvent","_this$_active","_getActiveElements","_isClickEvent","onHover","invalidatePlugins","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","_readValueToProps","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","_parseBorderRadius$","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","drawFullCircleBorders","inner","borderJoinStyle","lineJoin","ArcElement","_Element2","_this21","chartX","chartY","_getAngleFromPoint2","_this$getProps2","rAdjust","betweenAngles","withinRadius","_isBetween","_this$getProps3","_this$options10","halfAngle","halfRadius","radiusOffset","translate","setStyle","lineCap","borderCapStyle","previous","getLineMethod","stepped","_steppedLineTo","tension","cubicInterpolationMode","_bezierCurveTo","pathVars","_params$start","paramsStart","_params$end","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","_pathVars","lineMethod","_ref5","_ref5$move","fastPathSegment","_pathVars2","_ref6","_ref6$move","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","_steppedInterpolation","_bezierInterpolation","_pointInLine","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","_iterator13","_step13","usePath2D","LineElement","_Element3","_this22","_points","_segments","_pointsUpdated","_updateBezierControlPoints","_computeSegments","interpolate","_boundSegments","_interpolate","_segments$i","interpolated","_iterator14","_step14","capBezierPoints","inRange$1","_el$getProps","hitRadius","PointElement","_Element4","_this23","mouseX","mouseY","_this$getProps4","inXRange","inYRange","_this$getProps5","hoverRadius","drawPoint","getBarBounds","bar","_bar$getProps","half","skipOrLimit","parseBorderWidth","maxW","maxH","toTRBL","parseBorderRadius","_bar$getProps2","toTRBLCorners","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","inflateRect","refRect","BarElement","_Element5","_this24","_this$options11","_boundingRects","addRectPath","addRoundedRectPath","_this$getProps6","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","_data$a","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","pointCount","_iScale$getUserBounds","plugin_decimation","Decimation","algorithm","beforeElementsUpdate","xAxis","_getStartAndCountOfVi3","threshold","configurable","d","tpoints","_iterator15","_step15","_findSegmentEnd","_getBounds","targetSegments","_iterator16","_step16","tgt","subBounds","fillSources","_boundSegment","_iterator17","_step17","fillSource","_getEdge","_normalizeAngle","_pointsFromSegments","boundary","_ref7","_ref7$x","_ref7$y","linePoints","_ref8","_createBoundaryLine","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","parseFillOption","parseFloat","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","_findPoint","findPoint","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_source$scale","_drawfill","lineOpts","_ref9","_ref9$above","above","_ref9$below","doFill","clipVertical","clipY","lineLoop","_iterator18","_step18","_iterator19","_step19","_step19$value","src","_src$style","_src$style2","_src$style2$backgroun","notShape","clipBounds","interpolatedLineTo","targetLoop","_scale$chart$chartAre","_ref0","interpolatedPoint","Filler","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","_labelOpts$boxHeight","boxHeight","_labelOpts$boxWidth","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_Element6","_this25","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","_this26","labelFont","_computeTitleHeight","_getBoxSize","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","_this$options12","rtl","rtlHelper","getRtlAdapter","_iterator20","_step20","hitbox","leftForLtr","_iterator21","_step21","_draw","_this27","defaultColor","fontColor","halfFontSize","cursor","_getBoxSize2","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","drawPointLegend","yBoxTop","xBoxLeft","fillText","strikethrough","overrideTextDirection","textDirection","textWidth","setWidth","realX","_textX","restoreTextDirection","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","plugin_legend","_element","afterEvent","ci","_chart$legend$options","Title","_Element7","_this28","_padding","textSize","_drawArgs","fontOpts","_this$_drawArgs","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","SubTitle","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","str","String","createTooltipItem","_controller$getLabelA","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","_chart$chartArea","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","_toTRBLCorners","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","Tooltip","_Element8","_this29","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","_this30","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","_this31","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","_toTRBLCorners2","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","_toTRBLCorners3","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","_this32","_ref1","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","noop","labelCount","addIfString","addedLabels","findOrAddLabel","lastIndexOf","CategoryScale","_Scale","_this33","_startValue","_valueRange","_addedLabels","added","_iterator22","_step22","_step22$value","isFinite","_this$getUserBounds2","_this$getMinMax","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceNum","niceMin","niceMax","numSpaces","almostWhole","almostEquals","decimalPlaces","_decimalPlaces","relativeLabelSize","_ref10","rad","LinearScaleBase","_Scale2","_this34","_endValue","handleTickRangeOptions","_this$getUserBounds3","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","_setMinAndMaxByKey","LinearScale","_LinearScaleBase","_this$getMinMax2","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","LogarithmicScale","_Scale3","_this35","_zero","_this$getMinMax3","_this$getUserBounds4","m","getTickBackdropHeight","measureLabelSize","_longestText","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","_scale$_pointLabelIte","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","_LinearScaleBase2","_this36","_this$getMinMax4","_this37","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","_this$_pointLabelItem","_this$options13","_this38","_this39","rotate","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","_scale$_parseOpts","_parseOpts","parser","isoWeekday","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","_lookup2","_lookup","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_Scale4","_this40","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_this$getUserBounds5","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","formatter","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","_lookupByKey2","_table$lo","_table$hi","_lookupByKey3","_table$lo2","_table$hi2","span","TimeSeriesScale","_TimeScale","_this41","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables"],"sources":["G:/device-management/project-sky-admin-vue-ts/node_modules/chart.js/dist/chart.mjs"],"sourcesContent":["/*!\n * Chart.js v3.9.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as log10, A as _factorize, B as finiteOrDefault, C as callback, D as _addGrace, E as _limitValue, F as toDegrees, G as _measureText, I as _int16Range, J as _alignPixel, K as toPadding, L as clipArea, M as renderText, N as unclipArea, O as toFont, Q as each, R as _toLeftRightCenter, S as _alignStartEnd, U as overrides, V as merge, W as _capitalize, X as getRelativePosition, Y as _rlookupByKey, Z as _lookupByKey, $ as _isPointInArea, a0 as getAngleFromPoint, a1 as getMaximumSize, a2 as _getParentNode, a3 as readUsedSize, a4 as throttled, a5 as supportsEventListenerOptions, a6 as _isDomSupported, a7 as descriptors, a8 as isFunction, a9 as _attachContext, aa as _createResolver, ab as _descriptors, ac as mergeIf, ad as uid, ae as debounce, af as retinaScale, ag as clearCanvas, ah as setsEqual, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _readValueToProps, am as _updateBezierControlPoints, an as _computeSegments, ao as _boundSegments, ap as _steppedInterpolation, aq as _bezierInterpolation, ar as _pointInLine, as as _steppedLineTo, at as _bezierCurveTo, au as drawPoint, av as addRoundedRectPath, aw as toTRBL, ax as toTRBLCorners, ay as _boundSegment, az as _normalizeAngle, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as noop, aG as distanceBetweenPoints, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as _longestText, aN as _filterBetween, aO as _lookup } from './chunks/helpers.segment.mjs';\nexport { d as defaults } from './chunks/helpers.segment.mjs';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n    return range;\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndex.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n      if (isHorizontal) {\n        x = pixel;\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass ScatterController extends DatasetController {\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    if (this.options.showLine) {\n      const {dataset: line, _dataset} = meta;\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n    this.updateElements(points, start, count, mode);\n  }\n  addElements() {\n    const {showLine} = this.options;\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = registry.getElement('line');\n    }\n    super.addElements();\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  init(chartOptions) {}\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  evaluateInteractionItems,\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n  return {plugins, localIds};\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.9.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end, circular) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  if (circular) {\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle, circular) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle, circular);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n  circular: true,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n  return target;\n}\nfunction _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\nfunction _getTargetValue(fill, scale, startValue) {\n  let value;\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n\nfunction _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n\nfunction _getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return _createBoundaryLine(boundary, line);\n}\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n  if (isNumberFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n  return null;\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nvar index = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  _willRender() {\n    return !!this.opacity;\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n        return;\n      }\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    adapter.init(opts);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  afterAutoSkip() {\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"],"mappings":"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","ignoreList":[]}]}