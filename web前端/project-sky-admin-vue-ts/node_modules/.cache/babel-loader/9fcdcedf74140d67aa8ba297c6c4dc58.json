{"remainingRequest":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\babel-loader\\lib\\index.js!G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\vue-esign\\src\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\vue-esign\\src\\index.vue","mtime":499162500000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/toConsumableArray\"));\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\n//\n//\n//\n//\n//\nvar _default = {\n  props: {\n    width: {\n      type: Number,\n      default: 800\n    },\n    height: {\n      type: Number,\n      default: 300\n    },\n    lineWidth: {\n      type: Number,\n      default: 4\n    },\n    lineColor: {\n      type: String,\n      default: '#000000'\n    },\n    bgColor: {\n      type: String,\n      default: ''\n    },\n    isCrop: {\n      type: Boolean,\n      default: false\n    },\n    isClearBgColor: {\n      type: Boolean,\n      default: true\n    },\n    format: {\n      type: String,\n      default: 'image/png'\n    },\n    quality: {\n      type: Number,\n      default: 1\n    }\n  },\n  data: function data() {\n    return {\n      hasDrew: false,\n      resultImg: '',\n      points: [],\n      canvasTxt: null,\n      startX: 0,\n      startY: 0,\n      isDrawing: false,\n      sratio: 1\n    };\n  },\n  computed: {\n    ratio: function ratio() {\n      return this.height / this.width;\n    },\n    stageInfo: function stageInfo() {\n      return this.$refs.canvas.getBoundingClientRect();\n    },\n    myBg: function myBg() {\n      return this.bgColor ? this.bgColor : 'rgba(255, 255, 255, 0)';\n    }\n  },\n  watch: {\n    'myBg': function myBg(newVal) {\n      this.$refs.canvas.style.background = newVal;\n    }\n  },\n  beforeMount: function beforeMount() {\n    window.addEventListener('resize', this.$_resizeHandler);\n  },\n  beforeDestroy: function beforeDestroy() {\n    window.removeEventListener('resize', this.$_resizeHandler);\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    var canvas = this.$refs.canvas;\n    canvas.height = this.height;\n    canvas.width = this.width;\n    canvas.style.background = this.myBg;\n    this.$_resizeHandler(); // 在画板以外松开鼠标后冻结画笔\n\n    document.onmouseup = function () {\n      _this.isDrawing = false;\n    };\n  },\n  methods: {\n    $_resizeHandler: function $_resizeHandler() {\n      var canvas = this.$refs.canvas;\n      canvas.style.width = this.width + \"px\";\n      var realw = parseFloat(window.getComputedStyle(canvas).width);\n      canvas.style.height = this.ratio * realw + \"px\";\n      this.canvasTxt = canvas.getContext('2d');\n      this.canvasTxt.scale(1 * this.sratio, 1 * this.sratio);\n      this.sratio = realw / this.width;\n      this.canvasTxt.scale(1 / this.sratio, 1 / this.sratio);\n    },\n    // pc\n    mouseDown: function mouseDown(e) {\n      e = e || event;\n      e.preventDefault();\n      this.isDrawing = true;\n      this.hasDrew = true;\n      var obj = {\n        x: e.offsetX,\n        y: e.offsetY\n      };\n      this.drawStart(obj);\n    },\n    mouseMove: function mouseMove(e) {\n      e = e || event;\n      e.preventDefault();\n\n      if (this.isDrawing) {\n        var obj = {\n          x: e.offsetX,\n          y: e.offsetY\n        };\n        this.drawMove(obj);\n      }\n    },\n    mouseUp: function mouseUp(e) {\n      e = e || event;\n      e.preventDefault();\n      var obj = {\n        x: e.offsetX,\n        y: e.offsetY\n      };\n      this.drawEnd(obj);\n      this.isDrawing = false;\n    },\n    // mobile\n    touchStart: function touchStart(e) {\n      e = e || event;\n      e.preventDefault();\n      this.hasDrew = true;\n\n      if (e.touches.length === 1) {\n        var obj = {\n          x: e.targetTouches[0].clientX - this.$refs.canvas.getBoundingClientRect().left,\n          y: e.targetTouches[0].clientY - this.$refs.canvas.getBoundingClientRect().top\n        };\n        this.drawStart(obj);\n      }\n    },\n    touchMove: function touchMove(e) {\n      e = e || event;\n      e.preventDefault();\n\n      if (e.touches.length === 1) {\n        var obj = {\n          x: e.targetTouches[0].clientX - this.$refs.canvas.getBoundingClientRect().left,\n          y: e.targetTouches[0].clientY - this.$refs.canvas.getBoundingClientRect().top\n        };\n        this.drawMove(obj);\n      }\n    },\n    touchEnd: function touchEnd(e) {\n      e = e || event;\n      e.preventDefault();\n\n      if (e.touches.length === 1) {\n        var obj = {\n          x: e.targetTouches[0].clientX - this.$refs.canvas.getBoundingClientRect().left,\n          y: e.targetTouches[0].clientY - this.$refs.canvas.getBoundingClientRect().top\n        };\n        this.drawEnd(obj);\n      }\n    },\n    // 绘制\n    drawStart: function drawStart(obj) {\n      this.startX = obj.x;\n      this.startY = obj.y;\n      this.canvasTxt.beginPath();\n      this.canvasTxt.moveTo(this.startX, this.startY);\n      this.canvasTxt.lineTo(obj.x, obj.y);\n      this.canvasTxt.lineCap = 'round';\n      this.canvasTxt.lineJoin = 'round';\n      this.canvasTxt.lineWidth = this.lineWidth * this.sratio;\n      this.canvasTxt.stroke();\n      this.canvasTxt.closePath();\n      this.points.push(obj);\n    },\n    drawMove: function drawMove(obj) {\n      this.canvasTxt.beginPath();\n      this.canvasTxt.moveTo(this.startX, this.startY);\n      this.canvasTxt.lineTo(obj.x, obj.y);\n      this.canvasTxt.strokeStyle = this.lineColor;\n      this.canvasTxt.lineWidth = this.lineWidth * this.sratio;\n      this.canvasTxt.lineCap = 'round';\n      this.canvasTxt.lineJoin = 'round';\n      this.canvasTxt.stroke();\n      this.canvasTxt.closePath();\n      this.startY = obj.y;\n      this.startX = obj.x;\n      this.points.push(obj);\n    },\n    drawEnd: function drawEnd(obj) {\n      this.canvasTxt.beginPath();\n      this.canvasTxt.moveTo(this.startX, this.startY);\n      this.canvasTxt.lineTo(obj.x, obj.y);\n      this.canvasTxt.lineCap = 'round';\n      this.canvasTxt.lineJoin = 'round';\n      this.canvasTxt.stroke();\n      this.canvasTxt.closePath();\n      this.points.push(obj);\n      this.points.push({\n        x: -1,\n        y: -1\n      });\n    },\n    // 操作\n    generate: function generate(options) {\n      var _this2 = this;\n\n      var imgFormat = options && options.format ? options.format : this.format;\n      var imgQuality = options && options.quality ? options.quality : this.quality;\n      var pm = new Promise(function (resolve, reject) {\n        if (!_this2.hasDrew) {\n          reject(\"Warning: Not Signned!\");\n          return;\n        }\n\n        var resImgData = _this2.canvasTxt.getImageData(0, 0, _this2.$refs.canvas.width, _this2.$refs.canvas.height);\n\n        _this2.canvasTxt.globalCompositeOperation = \"destination-over\";\n        _this2.canvasTxt.fillStyle = _this2.myBg;\n\n        _this2.canvasTxt.fillRect(0, 0, _this2.$refs.canvas.width, _this2.$refs.canvas.height);\n\n        _this2.resultImg = _this2.$refs.canvas.toDataURL(imgFormat, imgQuality);\n        var resultImg = _this2.resultImg;\n\n        _this2.canvasTxt.clearRect(0, 0, _this2.$refs.canvas.width, _this2.$refs.canvas.height);\n\n        _this2.canvasTxt.putImageData(resImgData, 0, 0);\n\n        _this2.canvasTxt.globalCompositeOperation = \"source-over\";\n\n        if (_this2.isCrop) {\n          var _this2$canvasTxt;\n\n          var crop_area = _this2.getCropArea(resImgData.data);\n\n          var crop_canvas = document.createElement('canvas');\n          var crop_ctx = crop_canvas.getContext('2d');\n          crop_canvas.width = crop_area[2] - crop_area[0];\n          crop_canvas.height = crop_area[3] - crop_area[1];\n\n          var crop_imgData = (_this2$canvasTxt = _this2.canvasTxt).getImageData.apply(_this2$canvasTxt, (0, _toConsumableArray2.default)(crop_area));\n\n          crop_ctx.globalCompositeOperation = \"destination-over\";\n          crop_ctx.putImageData(crop_imgData, 0, 0);\n          crop_ctx.fillStyle = _this2.myBg;\n          crop_ctx.fillRect(0, 0, crop_canvas.width, crop_canvas.height);\n          resultImg = crop_canvas.toDataURL(imgFormat, imgQuality);\n          crop_canvas = null;\n        }\n\n        resolve(resultImg);\n      });\n      return pm;\n    },\n    reset: function reset() {\n      this.canvasTxt.clearRect(0, 0, this.$refs.canvas.width, this.$refs.canvas.height);\n\n      if (this.isClearBgColor) {\n        this.$emit('update:bgColor', '');\n        this.$refs.canvas.style.background = 'rgba(255, 255, 255, 0)';\n      }\n\n      this.points = [];\n      this.hasDrew = false;\n      this.resultImg = '';\n    },\n    getCropArea: function getCropArea(imgData) {\n      var topX = this.$refs.canvas.width;\n      var btmX = 0;\n      var topY = this.$refs.canvas.height;\n      var btnY = 0;\n\n      for (var i = 0; i < this.$refs.canvas.width; i++) {\n        for (var j = 0; j < this.$refs.canvas.height; j++) {\n          var pos = (i + this.$refs.canvas.width * j) * 4;\n\n          if (imgData[pos] > 0 || imgData[pos + 1] > 0 || imgData[pos + 2] || imgData[pos + 3] > 0) {\n            btnY = Math.max(j, btnY);\n            btmX = Math.max(i, btmX);\n            topY = Math.min(j, topY);\n            topX = Math.min(i, topX);\n          }\n        }\n      }\n\n      topX++;\n      btmX++;\n      topY++;\n      btnY++;\n      var data = [topX, topY, btmX, btnY];\n      return data;\n    }\n  }\n};\nexports.default = _default;",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <canvas ref=\"canvas\" @mousedown=\"mouseDown\" @mousemove=\"mouseMove\" @mouseup=\"mouseUp\"\n  @touchstart=\"touchStart\" @touchmove=\"touchMove\" @touchend=\"touchEnd\"></canvas>\n</template>\n\n<script>\nexport default {\n  props: {\n    width: {\n      type: Number,\n      default: 800\n    },\n    height: {\n      type: Number,\n      default: 300\n    },\n    lineWidth: {\n      type: Number,\n      default: 4\n    },\n    lineColor: {\n      type: String,\n      default: '#000000'\n    },\n    bgColor: {\n      type: String,\n      default: ''\n    },\n    isCrop: {\n      type: Boolean,\n      default: false\n    },\n    isClearBgColor: {\n      type: Boolean,\n      default: true\n    },\n    format: {\n      type: String,\n      default: 'image/png'\n    },\n    quality: {\n      type: Number,\n      default: 1\n    }\n  },\n  data () {\n    return {\n      hasDrew: false,\n      resultImg: '',\n      points: [],\n      canvasTxt: null,\n      startX: 0,\n      startY: 0,\n      isDrawing: false,\n      sratio: 1\n    }\n  },\n  computed: {\n    ratio () {\n      return this.height / this.width\n    },\n    stageInfo () {\n      return this.$refs.canvas.getBoundingClientRect()\n    },\n    myBg () {\n      return this.bgColor ? this.bgColor : 'rgba(255, 255, 255, 0)'\n    }\n  },\n  watch: {\n    'myBg': function (newVal) {\n      this.$refs.canvas.style.background = newVal\n    }\n  },\n  beforeMount () {\n    window.addEventListener('resize', this.$_resizeHandler)\n  },\n  beforeDestroy () {\n    window.removeEventListener('resize', this.$_resizeHandler)\n  },\n  mounted () {\n    const canvas = this.$refs.canvas\n    canvas.height = this.height\n    canvas.width = this.width\n    canvas.style.background = this.myBg\n    this.$_resizeHandler()\n    // 在画板以外松开鼠标后冻结画笔\n    document.onmouseup = () => {\n      this.isDrawing = false\n    }\n  },\n  methods: {\n    $_resizeHandler () {\n      const canvas = this.$refs.canvas\n      canvas.style.width = this.width + \"px\"\n      const realw = parseFloat(window.getComputedStyle(canvas).width)\n      canvas.style.height = this.ratio * realw + \"px\";\n      this.canvasTxt = canvas.getContext('2d')\n      this.canvasTxt.scale(1 * this.sratio, 1 * this.sratio)\n      this.sratio = realw / this.width\n      this.canvasTxt.scale(1 / this.sratio, 1 / this.sratio)\n    },\n    // pc\n    mouseDown (e) {\n      e = e || event\n      e.preventDefault()\n      this.isDrawing = true\n      this.hasDrew = true\n      let obj = {\n        x: e.offsetX,\n        y: e.offsetY\n      }\n      this.drawStart(obj)\n    },\n    mouseMove (e) {\n      e = e || event\n      e.preventDefault()\n      if (this.isDrawing) {\n        let obj = {\n          x: e.offsetX,\n          y: e.offsetY\n        }\n        this.drawMove(obj)\n      }\n    },\n    mouseUp (e) {\n      e = e || event\n      e.preventDefault()\n      let obj = {\n        x: e.offsetX,\n        y: e.offsetY\n      }\n      this.drawEnd(obj)\n      this.isDrawing = false\n    },\n    // mobile\n    touchStart (e) {\n      e = e || event\n      e.preventDefault()\n      this.hasDrew = true\n      if (e.touches.length === 1) {\n        let obj = {\n          x: e.targetTouches[0].clientX - this.$refs.canvas.getBoundingClientRect().left,\n          y: e.targetTouches[0].clientY - this.$refs.canvas.getBoundingClientRect().top\n        }\n        this.drawStart(obj)\n      }\n    },\n    touchMove (e) {\n      e = e || event\n      e.preventDefault()\n      if (e.touches.length === 1) {\n        let obj = {\n          x: e.targetTouches[0].clientX - this.$refs.canvas.getBoundingClientRect().left,\n          y: e.targetTouches[0].clientY - this.$refs.canvas.getBoundingClientRect().top\n        }\n        this.drawMove(obj)\n      }\n    },\n    touchEnd (e) {\n      e = e || event\n      e.preventDefault()\n      if (e.touches.length === 1) {\n        let obj = {\n          x: e.targetTouches[0].clientX - this.$refs.canvas.getBoundingClientRect().left,\n          y: e.targetTouches[0].clientY - this.$refs.canvas.getBoundingClientRect().top\n        }\n        this.drawEnd(obj)\n      }\n    },\n    // 绘制\n    drawStart (obj) {\n      this.startX = obj.x\n      this.startY = obj.y\n      this.canvasTxt.beginPath()\n      this.canvasTxt.moveTo(this.startX, this.startY)\n      this.canvasTxt.lineTo(obj.x, obj.y)\n      this.canvasTxt.lineCap = 'round'\n      this.canvasTxt.lineJoin = 'round'\n      this.canvasTxt.lineWidth = this.lineWidth * this.sratio\n      this.canvasTxt.stroke()\n      this.canvasTxt.closePath()\n      this.points.push(obj)\n    },\n    drawMove (obj) {\n      this.canvasTxt.beginPath()\n      this.canvasTxt.moveTo(this.startX, this.startY)\n      this.canvasTxt.lineTo(obj.x, obj.y)\n      this.canvasTxt.strokeStyle = this.lineColor\n      this.canvasTxt.lineWidth = this.lineWidth * this.sratio\n      this.canvasTxt.lineCap = 'round'\n      this.canvasTxt.lineJoin = 'round'\n      this.canvasTxt.stroke()\n      this.canvasTxt.closePath()\n      this.startY = obj.y\n      this.startX = obj.x\n      this.points.push(obj)\n    },\n    drawEnd (obj) {\n      this.canvasTxt.beginPath()\n      this.canvasTxt.moveTo(this.startX, this.startY)\n      this.canvasTxt.lineTo(obj.x, obj.y)\n      this.canvasTxt.lineCap = 'round'\n      this.canvasTxt.lineJoin = 'round'\n      this.canvasTxt.stroke()\n      this.canvasTxt.closePath()\n      this.points.push(obj)\n      this.points.push({x: -1, y: -1})\n    },\n    // 操作\n    generate (options) {\n      let imgFormat = options && options.format ? options.format: this.format\n      let imgQuality = options && options.quality ? options.quality: this.quality\n      const pm =  new Promise((resolve, reject) => {\n        if (!this.hasDrew) {\n          reject(`Warning: Not Signned!`)\n          return\n        }\n        var resImgData = this.canvasTxt.getImageData(0, 0, this.$refs.canvas.width, this.$refs.canvas.height)\n        this.canvasTxt.globalCompositeOperation = \"destination-over\"\n        this.canvasTxt.fillStyle = this.myBg\n        this.canvasTxt.fillRect(0,0,this.$refs.canvas.width ,this.$refs.canvas.height)\n        this.resultImg = this.$refs.canvas.toDataURL(imgFormat, imgQuality)\n        var resultImg = this.resultImg\n        this.canvasTxt.clearRect(0, 0, this.$refs.canvas.width ,this.$refs.canvas.height)\n        this.canvasTxt.putImageData(resImgData, 0, 0)\n        this.canvasTxt.globalCompositeOperation = \"source-over\"\n        if (this.isCrop) {\n          const crop_area = this.getCropArea(resImgData.data)\n          var crop_canvas = document.createElement('canvas')\n          const crop_ctx = crop_canvas.getContext('2d')\n          crop_canvas.width = crop_area[2] - crop_area[0]\n          crop_canvas.height = crop_area[3] - crop_area[1]\n          const crop_imgData = this.canvasTxt.getImageData(...crop_area)\n          crop_ctx.globalCompositeOperation = \"destination-over\"\n          crop_ctx.putImageData(crop_imgData, 0, 0)\n          crop_ctx.fillStyle = this.myBg\n          crop_ctx.fillRect(0, 0, crop_canvas.width , crop_canvas.height)\n          resultImg = crop_canvas.toDataURL(imgFormat, imgQuality)\n          crop_canvas = null\n        }\n        resolve(resultImg)\n      })\n      return pm\n    },\n    reset () {\n      this.canvasTxt.clearRect(\n        0,\n        0,\n        this.$refs.canvas.width,\n        this.$refs.canvas.height\n      )\n      if (this.isClearBgColor) {\n        this.$emit('update:bgColor', '')\n        this.$refs.canvas.style.background = 'rgba(255, 255, 255, 0)'\n      }\n      this.points = []\n      this.hasDrew = false\n      this.resultImg = ''\n    },\n    getCropArea (imgData) {\n      var topX = this.$refs.canvas.width; var btmX = 0; var topY = this.$refs.canvas.height; var btnY = 0\n      for (var i = 0; i < this.$refs.canvas.width; i++) {\n        for (var j = 0; j < this.$refs.canvas.height; j++) {\n          var pos = (i + this.$refs.canvas.width * j) * 4\n          if (imgData[pos] > 0 || imgData[pos + 1] > 0 || imgData[pos + 2] || imgData[pos + 3] > 0) {\n            btnY = Math.max(j, btnY)\n            btmX = Math.max(i, btmX)\n            topY = Math.min(j, topY)\n            topX = Math.min(i, topX)\n          }\n        }\n      }\n      topX++\n      btmX++\n      topY++\n      btnY++\n      const data = [topX, topY, btmX, btnY]\n      return data\n    }\n  }\n}\n</script>\n\n<style scoped>\ncanvas {\n  max-width: 100%;\n  display: block;\n}\n</style>\n"],"sourceRoot":"node_modules/vue-esign/src"}]}