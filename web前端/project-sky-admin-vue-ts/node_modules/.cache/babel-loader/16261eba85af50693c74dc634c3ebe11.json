{"remainingRequest":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\babel-loader\\lib\\index.js!G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\chart.js\\dist\\chart.js","dependencies":[{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\chart.js\\dist\\chart.js","mtime":499162500000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime/helpers/interopRequireDefault\");\n\nrequire(\"core-js/modules/es7.object.get-own-property-descriptors\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._detectPlatform = _detectPlatform;\nObject.defineProperty(exports, \"defaults\", {\n  enumerable: true,\n  get: function get() {\n    return _helpersDataset.d;\n  }\n});\nObject.defineProperty(exports, \"Ticks\", {\n  enumerable: true,\n  get: function get() {\n    return _helpersDataset.aM;\n  }\n});\nexports.scales = exports.registry = exports.registerables = exports.plugins = exports.layouts = exports.elements = exports.controllers = exports.animator = exports._adapters = exports.Tooltip = exports.Title = exports.TimeSeriesScale = exports.TimeScale = exports.SubTitle = exports.ScatterController = exports.Scale = exports.RadialLinearScale = exports.RadarController = exports.PolarAreaController = exports.PointElement = exports.PieController = exports.LogarithmicScale = exports.LinearScale = exports.LineElement = exports.LineController = exports.Legend = exports.Interaction = exports.Filler = exports.Element = exports.DoughnutController = exports.DomPlatform = exports.Decimation = exports.DatasetController = exports.Colors = exports.Chart = exports.CategoryScale = exports.BubbleController = exports.BasicPlatform = exports.BasePlatform = exports.BarElement = exports.BarController = exports.ArcElement = exports.Animations = exports.Animation = void 0;\n\nrequire(\"core-js/modules/es6.number.max-safe-integer\");\n\nrequire(\"core-js/modules/es6.weak-map\");\n\nrequire(\"core-js/modules/es6.string.starts-with\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/assertThisInitialized\"));\n\nrequire(\"core-js/modules/es7.object.values\");\n\nrequire(\"core-js/modules/es6.string.includes\");\n\nrequire(\"core-js/modules/es6.array.from\");\n\nrequire(\"core-js/modules/es6.set\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es7.array.includes\");\n\nrequire(\"core-js/modules/es6.array.find-index\");\n\nrequire(\"core-js/modules/es6.array.find\");\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/getPrototypeOf\"));\n\nvar _get2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/get\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/inherits\"));\n\nrequire(\"core-js/modules/es6.array.sort\");\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/slicedToArray\"));\n\nrequire(\"core-js/modules/es6.object.freeze\");\n\nrequire(\"core-js/modules/es6.object.is-extensible\");\n\nrequire(\"core-js/modules/es6.array.fill\");\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nvar _defineProperty2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/defineProperty\"));\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nvar _typeof2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/typeof\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/toConsumableArray\"));\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.string.iterator\");\n\nrequire(\"core-js/modules/es6.map\");\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/createClass\"));\n\nvar _helpersDataset = require(\"./chunks/helpers.dataset.js\");\n\nrequire(\"@kurkle/color\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar Animator =\n/*#__PURE__*/\nfunction () {\n  function Animator() {\n    (0, _classCallCheck2.default)(this, Animator);\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  (0, _createClass2.default)(Animator, [{\n    key: \"_notify\",\n    value: function _notify(chart, anims, date, type) {\n      var callbacks = anims.listeners[type];\n      var numSteps = anims.duration;\n      callbacks.forEach(function (fn) {\n        return fn({\n          chart: chart,\n          initial: anims.initial,\n          numSteps: numSteps,\n          currentStep: Math.min(date - anims.start, numSteps)\n        });\n      });\n    }\n  }, {\n    key: \"_refresh\",\n    value: function _refresh() {\n      var _this = this;\n\n      if (this._request) {\n        return;\n      }\n\n      this._running = true;\n      this._request = _helpersDataset.r.call(window, function () {\n        _this._update();\n\n        _this._request = null;\n\n        if (_this._running) {\n          _this._refresh();\n        }\n      });\n    }\n  }, {\n    key: \"_update\",\n    value: function _update() {\n      var _this2 = this;\n\n      var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Date.now();\n      var remaining = 0;\n\n      this._charts.forEach(function (anims, chart) {\n        if (!anims.running || !anims.items.length) {\n          return;\n        }\n\n        var items = anims.items;\n        var i = items.length - 1;\n        var draw = false;\n        var item;\n\n        for (; i >= 0; --i) {\n          item = items[i];\n\n          if (item._active) {\n            if (item._total > anims.duration) {\n              anims.duration = item._total;\n            }\n\n            item.tick(date);\n            draw = true;\n          } else {\n            items[i] = items[items.length - 1];\n            items.pop();\n          }\n        }\n\n        if (draw) {\n          chart.draw();\n\n          _this2._notify(chart, anims, date, 'progress');\n        }\n\n        if (!items.length) {\n          anims.running = false;\n\n          _this2._notify(chart, anims, date, 'complete');\n\n          anims.initial = false;\n        }\n\n        remaining += items.length;\n      });\n\n      this._lastDate = date;\n\n      if (remaining === 0) {\n        this._running = false;\n      }\n    }\n  }, {\n    key: \"_getAnims\",\n    value: function _getAnims(chart) {\n      var charts = this._charts;\n      var anims = charts.get(chart);\n\n      if (!anims) {\n        anims = {\n          running: false,\n          initial: true,\n          items: [],\n          listeners: {\n            complete: [],\n            progress: []\n          }\n        };\n        charts.set(chart, anims);\n      }\n\n      return anims;\n    }\n  }, {\n    key: \"listen\",\n    value: function listen(chart, event, cb) {\n      this._getAnims(chart).listeners[event].push(cb);\n    }\n  }, {\n    key: \"add\",\n    value: function add(chart, items) {\n      var _this$_getAnims$items;\n\n      if (!items || !items.length) {\n        return;\n      }\n\n      (_this$_getAnims$items = this._getAnims(chart).items).push.apply(_this$_getAnims$items, (0, _toConsumableArray2.default)(items));\n    }\n  }, {\n    key: \"has\",\n    value: function has(chart) {\n      return this._getAnims(chart).items.length > 0;\n    }\n  }, {\n    key: \"start\",\n    value: function start(chart) {\n      var anims = this._charts.get(chart);\n\n      if (!anims) {\n        return;\n      }\n\n      anims.running = true;\n      anims.start = Date.now();\n      anims.duration = anims.items.reduce(function (acc, cur) {\n        return Math.max(acc, cur._duration);\n      }, 0);\n\n      this._refresh();\n    }\n  }, {\n    key: \"running\",\n    value: function running(chart) {\n      if (!this._running) {\n        return false;\n      }\n\n      var anims = this._charts.get(chart);\n\n      if (!anims || !anims.running || !anims.items.length) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop(chart) {\n      var anims = this._charts.get(chart);\n\n      if (!anims || !anims.items.length) {\n        return;\n      }\n\n      var items = anims.items;\n      var i = items.length - 1;\n\n      for (; i >= 0; --i) {\n        items[i].cancel();\n      }\n\n      anims.items = [];\n\n      this._notify(chart, anims, Date.now(), 'complete');\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(chart) {\n      return this._charts.delete(chart);\n    }\n  }]);\n  return Animator;\n}();\n\nvar animator =\n/* #__PURE__ */\nnew Animator();\nexports.animator = animator;\nvar transparent = 'transparent';\nvar interpolators = {\n  boolean: function boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color: function color(from, to, factor) {\n    var c0 = (0, _helpersDataset.c)(from || transparent);\n    var c1 = c0.valid && (0, _helpersDataset.c)(to || transparent);\n    return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n  },\n  number: function number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nvar Animation =\n/*#__PURE__*/\nfunction () {\n  function Animation(cfg, target, prop, to) {\n    (0, _classCallCheck2.default)(this, Animation);\n    var currentValue = target[prop];\n    to = (0, _helpersDataset.a)([cfg.to, to, currentValue, cfg.from]);\n    var from = (0, _helpersDataset.a)([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || (0, _typeof2.default)(from)];\n    this._easing = _helpersDataset.e[cfg.easing] || _helpersDataset.e.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  (0, _createClass2.default)(Animation, [{\n    key: \"active\",\n    value: function active() {\n      return this._active;\n    }\n  }, {\n    key: \"update\",\n    value: function update(cfg, to, date) {\n      if (this._active) {\n        this._notify(false);\n\n        var currentValue = this._target[this._prop];\n        var elapsed = date - this._start;\n        var remain = this._duration - elapsed;\n        this._start = date;\n        this._duration = Math.floor(Math.max(remain, cfg.duration));\n        this._total += elapsed;\n        this._loop = !!cfg.loop;\n        this._to = (0, _helpersDataset.a)([cfg.to, to, currentValue, cfg.from]);\n        this._from = (0, _helpersDataset.a)([cfg.from, currentValue, to]);\n      }\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      if (this._active) {\n        this.tick(Date.now());\n        this._active = false;\n\n        this._notify(false);\n      }\n    }\n  }, {\n    key: \"tick\",\n    value: function tick(date) {\n      var elapsed = date - this._start;\n      var duration = this._duration;\n      var prop = this._prop;\n      var from = this._from;\n      var loop = this._loop;\n      var to = this._to;\n      var factor;\n      this._active = from !== to && (loop || elapsed < duration);\n\n      if (!this._active) {\n        this._target[prop] = to;\n\n        this._notify(true);\n\n        return;\n      }\n\n      if (elapsed < 0) {\n        this._target[prop] = from;\n        return;\n      }\n\n      factor = elapsed / duration % 2;\n      factor = loop && factor > 1 ? 2 - factor : factor;\n      factor = this._easing(Math.min(1, Math.max(0, factor)));\n      this._target[prop] = this._fn(from, to, factor);\n    }\n  }, {\n    key: \"wait\",\n    value: function wait() {\n      var promises = this._promises || (this._promises = []);\n      return new Promise(function (res, rej) {\n        promises.push({\n          res: res,\n          rej: rej\n        });\n      });\n    }\n  }, {\n    key: \"_notify\",\n    value: function _notify(resolved) {\n      var method = resolved ? 'res' : 'rej';\n      var promises = this._promises || [];\n\n      for (var i = 0; i < promises.length; i++) {\n        promises[i][method]();\n      }\n    }\n  }]);\n  return Animation;\n}();\n\nexports.Animation = Animation;\n\nvar Animations =\n/*#__PURE__*/\nfunction () {\n  function Animations(chart, config) {\n    (0, _classCallCheck2.default)(this, Animations);\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  (0, _createClass2.default)(Animations, [{\n    key: \"configure\",\n    value: function configure(config) {\n      if (!(0, _helpersDataset.i)(config)) {\n        return;\n      }\n\n      var animationOptions = Object.keys(_helpersDataset.d.animation);\n      var animatedProps = this._properties;\n      Object.getOwnPropertyNames(config).forEach(function (key) {\n        var cfg = config[key];\n\n        if (!(0, _helpersDataset.i)(cfg)) {\n          return;\n        }\n\n        var resolved = {};\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = animationOptions[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var option = _step.value;\n            resolved[option] = cfg[option];\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        ((0, _helpersDataset.b)(cfg.properties) && cfg.properties || [key]).forEach(function (prop) {\n          if (prop === key || !animatedProps.has(prop)) {\n            animatedProps.set(prop, resolved);\n          }\n        });\n      });\n    }\n  }, {\n    key: \"_animateOptions\",\n    value: function _animateOptions(target, values) {\n      var newOptions = values.options;\n      var options = resolveTargetOptions(target, newOptions);\n\n      if (!options) {\n        return [];\n      }\n\n      var animations = this._createAnimations(options, newOptions);\n\n      if (newOptions.$shared) {\n        awaitAll(target.options.$animations, newOptions).then(function () {\n          target.options = newOptions;\n        }, function () {});\n      }\n\n      return animations;\n    }\n  }, {\n    key: \"_createAnimations\",\n    value: function _createAnimations(target, values) {\n      var animatedProps = this._properties;\n      var animations = [];\n      var running = target.$animations || (target.$animations = {});\n      var props = Object.keys(values);\n      var date = Date.now();\n      var i;\n\n      for (i = props.length - 1; i >= 0; --i) {\n        var prop = props[i];\n\n        if (prop.charAt(0) === '$') {\n          continue;\n        }\n\n        if (prop === 'options') {\n          animations.push.apply(animations, (0, _toConsumableArray2.default)(this._animateOptions(target, values)));\n          continue;\n        }\n\n        var value = values[prop];\n        var animation = running[prop];\n        var cfg = animatedProps.get(prop);\n\n        if (animation) {\n          if (cfg && animation.active()) {\n            animation.update(cfg, value, date);\n            continue;\n          } else {\n            animation.cancel();\n          }\n        }\n\n        if (!cfg || !cfg.duration) {\n          target[prop] = value;\n          continue;\n        }\n\n        running[prop] = animation = new Animation(cfg, target, prop, value);\n        animations.push(animation);\n      }\n\n      return animations;\n    }\n  }, {\n    key: \"update\",\n    value: function update(target, values) {\n      if (this._properties.size === 0) {\n        Object.assign(target, values);\n        return;\n      }\n\n      var animations = this._createAnimations(target, values);\n\n      if (animations.length) {\n        animator.add(this._chart, animations);\n        return true;\n      }\n    }\n  }]);\n  return Animations;\n}();\n\nexports.Animations = Animations;\n\nfunction awaitAll(animations, properties) {\n  var running = [];\n  var keys = Object.keys(properties);\n\n  for (var i = 0; i < keys.length; i++) {\n    var anim = animations[keys[i]];\n\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n\n  var options = target.options;\n\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {\n      $shared: false,\n      $animations: {}\n    });\n  }\n\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  var opts = scale && scale.options || {};\n  var reverse = opts.reverse;\n  var min = opts.min === undefined ? allowedOverflow : 0;\n  var max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n\n  var x = scaleClip(xScale, allowedOverflow);\n  var y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  var t, r, b, l;\n\n  if ((0, _helpersDataset.i)(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  var keys = [];\n\n  var metasets = chart._getSortedDatasetMetas(filterVisible);\n\n  var i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n\n  return keys;\n}\n\nfunction _applyStack(stack, value, dsIndex) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var keys = stack.keys;\n  var singleMode = options.mode === 'single';\n  var i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  var found = false;\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n\n    if (datasetIndex === dsIndex) {\n      found = true;\n\n      if (options.all) {\n        continue;\n      }\n\n      break;\n    }\n\n    otherValue = stack.values[datasetIndex];\n\n    if ((0, _helpersDataset.g)(otherValue) && (singleMode || value === 0 || (0, _helpersDataset.s)(value) === (0, _helpersDataset.s)(otherValue))) {\n      value += otherValue;\n    }\n  }\n\n  if (!found && !options.all) {\n    return 0;\n  }\n\n  return value;\n}\n\nfunction convertObjectDataToArray(data, meta) {\n  var iScale = meta.iScale,\n      vScale = meta.vScale;\n  var iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n  var vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n  var keys = Object.keys(data);\n  var adata = new Array(keys.length);\n  var i, ilen, key;\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    var _adata$i;\n\n    key = keys[i];\n    adata[i] = (_adata$i = {}, (0, _defineProperty2.default)(_adata$i, iAxisKey, key), (0, _defineProperty2.default)(_adata$i, vAxisKey, data[key]), _adata$i);\n  }\n\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  var stacked = scale && scale.options.stacked;\n  return stacked || stacked === undefined && meta.stack !== undefined;\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return \"\".concat(indexScale.id, \".\").concat(valueScale.id, \".\").concat(meta.stack || meta.type);\n}\n\nfunction getUserBounds(scale) {\n  var _scale$getUserBounds = scale.getUserBounds(),\n      min = _scale$getUserBounds.min,\n      max = _scale$getUserBounds.max,\n      minDefined = _scale$getUserBounds.minDefined,\n      maxDefined = _scale$getUserBounds.maxDefined;\n\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  var subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = vScale.getMatchingVisibleMetas(type).reverse()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var meta = _step2.value;\n      var value = stack[meta.index];\n\n      if (positive && value > 0 || !positive && value < 0) {\n        return meta.index;\n      }\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  var chart = controller.chart,\n      meta = controller._cachedMeta;\n  var stacks = chart._stacks || (chart._stacks = {});\n  var iScale = meta.iScale,\n      vScale = meta.vScale,\n      datasetIndex = meta.index;\n  var iAxis = iScale.axis;\n  var vAxis = vScale.axis;\n  var key = getStackKey(iScale, vScale, meta);\n  var ilen = parsed.length;\n  var stack;\n\n  for (var i = 0; i < ilen; ++i) {\n    var item = parsed[i];\n    var _index = item[iAxis],\n        value = item[vAxis];\n    var itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, _index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n    var visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  var scales = chart.scales;\n  return Object.keys(scales).filter(function (key) {\n    return scales[key].axis === axis;\n  }).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return (0, _helpersDataset.j)(parent, {\n    active: false,\n    dataset: undefined,\n    datasetIndex: index,\n    index: index,\n    mode: 'default',\n    type: 'dataset'\n  });\n}\n\nfunction createDataContext(parent, index, element) {\n  return (0, _helpersDataset.j)(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element: element,\n    index: index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  var datasetIndex = meta.controller.index;\n  var axis = meta.vScale && meta.vScale.axis;\n\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  var _iteratorNormalCompletion3 = true;\n  var _didIteratorError3 = false;\n  var _iteratorError3 = undefined;\n\n  try {\n    for (var _iterator3 = items[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n      var parsed = _step3.value;\n      var stacks = parsed._stacks;\n\n      if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n        return;\n      }\n\n      delete stacks[axis][datasetIndex];\n\n      if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n        delete stacks[axis]._visualValues[datasetIndex];\n      }\n    }\n  } catch (err) {\n    _didIteratorError3 = true;\n    _iteratorError3 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n        _iterator3.return();\n      }\n    } finally {\n      if (_didIteratorError3) {\n        throw _iteratorError3;\n      }\n    }\n  }\n}\n\nvar isDirectUpdateMode = function isDirectUpdateMode(mode) {\n  return mode === 'reset' || mode === 'none';\n};\n\nvar cloneIfNotShared = function cloneIfNotShared(cached, shared) {\n  return shared ? cached : Object.assign({}, cached);\n};\n\nvar createStack = function createStack(canStack, meta, chart) {\n  return canStack && !meta.hidden && meta._stacked && {\n    keys: getSortedDatasetIndices(chart, true),\n    values: null\n  };\n};\n\nvar DatasetController =\n/*#__PURE__*/\nfunction () {\n  function DatasetController(chart, datasetIndex) {\n    (0, _classCallCheck2.default)(this, DatasetController);\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = (this instanceof DatasetController ? this.constructor : void 0).datasetElementType;\n    this.dataElementType = (this instanceof DatasetController ? this.constructor : void 0).dataElementType;\n    this.initialize();\n  }\n\n  (0, _createClass2.default)(DatasetController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      var meta = this._cachedMeta;\n      this.configure();\n      this.linkScales();\n      meta._stacked = isStacked(meta.vScale, meta);\n      this.addElements();\n\n      if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n        console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n      }\n    }\n  }, {\n    key: \"updateIndex\",\n    value: function updateIndex(datasetIndex) {\n      if (this.index !== datasetIndex) {\n        clearStacks(this._cachedMeta);\n      }\n\n      this.index = datasetIndex;\n    }\n  }, {\n    key: \"linkScales\",\n    value: function linkScales() {\n      var chart = this.chart;\n      var meta = this._cachedMeta;\n      var dataset = this.getDataset();\n\n      var chooseId = function chooseId(axis, x, y, r) {\n        return axis === 'x' ? x : axis === 'r' ? r : y;\n      };\n\n      var xid = meta.xAxisID = (0, _helpersDataset.v)(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n      var yid = meta.yAxisID = (0, _helpersDataset.v)(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n      var rid = meta.rAxisID = (0, _helpersDataset.v)(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n      var indexAxis = meta.indexAxis;\n      var iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n      var vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n      meta.xScale = this.getScaleForId(xid);\n      meta.yScale = this.getScaleForId(yid);\n      meta.rScale = this.getScaleForId(rid);\n      meta.iScale = this.getScaleForId(iid);\n      meta.vScale = this.getScaleForId(vid);\n    }\n  }, {\n    key: \"getDataset\",\n    value: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    }\n  }, {\n    key: \"getMeta\",\n    value: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    }\n  }, {\n    key: \"getScaleForId\",\n    value: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    }\n  }, {\n    key: \"_getOtherScale\",\n    value: function _getOtherScale(scale) {\n      var meta = this._cachedMeta;\n      return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._update('reset');\n    }\n  }, {\n    key: \"_destroy\",\n    value: function _destroy() {\n      var meta = this._cachedMeta;\n\n      if (this._data) {\n        (0, _helpersDataset.u)(this._data, this);\n      }\n\n      if (meta._stacked) {\n        clearStacks(meta);\n      }\n    }\n  }, {\n    key: \"_dataCheck\",\n    value: function _dataCheck() {\n      var dataset = this.getDataset();\n      var data = dataset.data || (dataset.data = []);\n      var _data = this._data;\n\n      if ((0, _helpersDataset.i)(data)) {\n        var meta = this._cachedMeta;\n        this._data = convertObjectDataToArray(data, meta);\n      } else if (_data !== data) {\n        if (_data) {\n          (0, _helpersDataset.u)(_data, this);\n          var _meta = this._cachedMeta;\n          clearStacks(_meta);\n          _meta._parsed = [];\n        }\n\n        if (data && Object.isExtensible(data)) {\n          (0, _helpersDataset.l)(data, this);\n        }\n\n        this._syncList = [];\n        this._data = data;\n      }\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      var meta = this._cachedMeta;\n\n      this._dataCheck();\n\n      if (this.datasetElementType) {\n        meta.dataset = new this.datasetElementType();\n      }\n    }\n  }, {\n    key: \"buildOrUpdateElements\",\n    value: function buildOrUpdateElements(resetNewElements) {\n      var meta = this._cachedMeta;\n      var dataset = this.getDataset();\n      var stackChanged = false;\n\n      this._dataCheck();\n\n      var oldStacked = meta._stacked;\n      meta._stacked = isStacked(meta.vScale, meta);\n\n      if (meta.stack !== dataset.stack) {\n        stackChanged = true;\n        clearStacks(meta);\n        meta.stack = dataset.stack;\n      }\n\n      this._resyncElements(resetNewElements);\n\n      if (stackChanged || oldStacked !== meta._stacked) {\n        updateStacks(this, meta._parsed);\n        meta._stacked = isStacked(meta.vScale, meta);\n      }\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var config = this.chart.config;\n      var scopeKeys = config.datasetScopeKeys(this._type);\n      var scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n      this.options = config.createResolver(scopes, this.getContext());\n      this._parsing = this.options.parsing;\n      this._cachedDataOpts = {};\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(start, count) {\n      var meta = this._cachedMeta,\n          data = this._data;\n      var iScale = meta.iScale,\n          _stacked = meta._stacked;\n      var iAxis = iScale.axis;\n      var sorted = start === 0 && count === data.length ? true : meta._sorted;\n      var prev = start > 0 && meta._parsed[start - 1];\n      var i, cur, parsed;\n\n      if (this._parsing === false) {\n        meta._parsed = data;\n        meta._sorted = true;\n        parsed = data;\n      } else {\n        if ((0, _helpersDataset.b)(data[start])) {\n          parsed = this.parseArrayData(meta, data, start, count);\n        } else if ((0, _helpersDataset.i)(data[start])) {\n          parsed = this.parseObjectData(meta, data, start, count);\n        } else {\n          parsed = this.parsePrimitiveData(meta, data, start, count);\n        }\n\n        var isNotInOrderComparedToPrev = function isNotInOrderComparedToPrev() {\n          return cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n        };\n\n        for (i = 0; i < count; ++i) {\n          meta._parsed[i + start] = cur = parsed[i];\n\n          if (sorted) {\n            if (isNotInOrderComparedToPrev()) {\n              sorted = false;\n            }\n\n            prev = cur;\n          }\n        }\n\n        meta._sorted = sorted;\n      }\n\n      if (_stacked) {\n        updateStacks(this, parsed);\n      }\n    }\n  }, {\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      var iScale = meta.iScale,\n          vScale = meta.vScale;\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      var labels = iScale.getLabels();\n      var singleScale = iScale === vScale;\n      var parsed = new Array(count);\n      var i, ilen, index;\n\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        var _parsed$i;\n\n        index = i + start;\n        parsed[i] = (_parsed$i = {}, (0, _defineProperty2.default)(_parsed$i, iAxis, singleScale || iScale.parse(labels[index], index)), (0, _defineProperty2.default)(_parsed$i, vAxis, vScale.parse(data[index], index)), _parsed$i);\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      var xScale = meta.xScale,\n          yScale = meta.yScale;\n      var parsed = new Array(count);\n      var i, ilen, index, item;\n\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(item[0], index),\n          y: yScale.parse(item[1], index)\n        };\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var xScale = meta.xScale,\n          yScale = meta.yScale;\n      var _this$_parsing = this._parsing,\n          _this$_parsing$xAxisK = _this$_parsing.xAxisKey,\n          xAxisKey = _this$_parsing$xAxisK === void 0 ? 'x' : _this$_parsing$xAxisK,\n          _this$_parsing$yAxisK = _this$_parsing.yAxisKey,\n          yAxisKey = _this$_parsing$yAxisK === void 0 ? 'y' : _this$_parsing$yAxisK;\n      var parsed = new Array(count);\n      var i, ilen, index, item;\n\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse((0, _helpersDataset.f)(item, xAxisKey), index),\n          y: yScale.parse((0, _helpersDataset.f)(item, yAxisKey), index)\n        };\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"getParsed\",\n    value: function getParsed(index) {\n      return this._cachedMeta._parsed[index];\n    }\n  }, {\n    key: \"getDataElement\",\n    value: function getDataElement(index) {\n      return this._cachedMeta.data[index];\n    }\n  }, {\n    key: \"applyStack\",\n    value: function applyStack(scale, parsed, mode) {\n      var chart = this.chart;\n      var meta = this._cachedMeta;\n      var value = parsed[scale.axis];\n      var stack = {\n        keys: getSortedDatasetIndices(chart, true),\n        values: parsed._stacks[scale.axis]._visualValues\n      };\n      return _applyStack(stack, value, meta.index, {\n        mode: mode\n      });\n    }\n  }, {\n    key: \"updateRangeFromParsed\",\n    value: function updateRangeFromParsed(range, scale, parsed, stack) {\n      var parsedValue = parsed[scale.axis];\n      var value = parsedValue === null ? NaN : parsedValue;\n      var values = stack && parsed._stacks[scale.axis];\n\n      if (stack && values) {\n        stack.values = values;\n        value = _applyStack(stack, parsedValue, this._cachedMeta.index);\n      }\n\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax(scale, canStack) {\n      var meta = this._cachedMeta;\n      var _parsed = meta._parsed;\n      var sorted = meta._sorted && scale === meta.iScale;\n      var ilen = _parsed.length;\n\n      var otherScale = this._getOtherScale(scale);\n\n      var stack = createStack(canStack, meta, this.chart);\n      var range = {\n        min: Number.POSITIVE_INFINITY,\n        max: Number.NEGATIVE_INFINITY\n      };\n\n      var _getUserBounds = getUserBounds(otherScale),\n          otherMin = _getUserBounds.min,\n          otherMax = _getUserBounds.max;\n\n      var i, parsed;\n\n      function _skip() {\n        parsed = _parsed[i];\n        var otherValue = parsed[otherScale.axis];\n        return !(0, _helpersDataset.g)(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n      }\n\n      for (i = 0; i < ilen; ++i) {\n        if (_skip()) {\n          continue;\n        }\n\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n\n        if (sorted) {\n          break;\n        }\n      }\n\n      if (sorted) {\n        for (i = ilen - 1; i >= 0; --i) {\n          if (_skip()) {\n            continue;\n          }\n\n          this.updateRangeFromParsed(range, scale, parsed, stack);\n          break;\n        }\n      }\n\n      return range;\n    }\n  }, {\n    key: \"getAllParsedValues\",\n    value: function getAllParsedValues(scale) {\n      var parsed = this._cachedMeta._parsed;\n      var values = [];\n      var i, ilen, value;\n\n      for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n        value = parsed[i][scale.axis];\n\n        if ((0, _helpersDataset.g)(value)) {\n          values.push(value);\n        }\n      }\n\n      return values;\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      return false;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var iScale = meta.iScale;\n      var vScale = meta.vScale;\n      var parsed = this.getParsed(index);\n      return {\n        label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n        value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n      };\n    }\n  }, {\n    key: \"_update\",\n    value: function _update(mode) {\n      var meta = this._cachedMeta;\n      this.update(mode || 'default');\n      meta._clip = toClip((0, _helpersDataset.v)(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {}\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var ctx = this._ctx;\n      var chart = this.chart;\n      var meta = this._cachedMeta;\n      var elements = meta.data || [];\n      var area = chart.chartArea;\n      var active = [];\n      var start = this._drawStart || 0;\n      var count = this._drawCount || elements.length - start;\n      var drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n      var i;\n\n      if (meta.dataset) {\n        meta.dataset.draw(ctx, area, start, count);\n      }\n\n      for (i = start; i < start + count; ++i) {\n        var element = elements[i];\n\n        if (element.hidden) {\n          continue;\n        }\n\n        if (element.active && drawActiveElementsOnTop) {\n          active.push(element);\n        } else {\n          element.draw(ctx, area);\n        }\n      }\n\n      for (i = 0; i < active.length; ++i) {\n        active[i].draw(ctx, area);\n      }\n    }\n  }, {\n    key: \"getStyle\",\n    value: function getStyle(index, active) {\n      var mode = active ? 'active' : 'default';\n      return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext(index, active, mode) {\n      var dataset = this.getDataset();\n      var context;\n\n      if (index >= 0 && index < this._cachedMeta.data.length) {\n        var element = this._cachedMeta.data[index];\n        context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n        context.parsed = this.getParsed(index);\n        context.raw = dataset.data[index];\n        context.index = context.dataIndex = index;\n      } else {\n        context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n        context.dataset = dataset;\n        context.index = context.datasetIndex = this.index;\n      }\n\n      context.active = !!active;\n      context.mode = mode;\n      return context;\n    }\n  }, {\n    key: \"resolveDatasetElementOptions\",\n    value: function resolveDatasetElementOptions(mode) {\n      return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n  }, {\n    key: \"resolveDataElementOptions\",\n    value: function resolveDataElementOptions(index, mode) {\n      return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n  }, {\n    key: \"_resolveElementOptions\",\n    value: function _resolveElementOptions(elementType) {\n      var _this3 = this;\n\n      var mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n      var index = arguments.length > 2 ? arguments[2] : undefined;\n      var active = mode === 'active';\n      var cache = this._cachedDataOpts;\n      var cacheKey = elementType + '-' + mode;\n      var cached = cache[cacheKey];\n      var sharing = this.enableOptionSharing && (0, _helpersDataset.h)(index);\n\n      if (cached) {\n        return cloneIfNotShared(cached, sharing);\n      }\n\n      var config = this.chart.config;\n      var scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n      var prefixes = active ? [\"\".concat(elementType, \"Hover\"), 'hover', elementType, ''] : [elementType, ''];\n      var scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      var names = Object.keys(_helpersDataset.d.elements[elementType]);\n\n      var context = function context() {\n        return _this3.getContext(index, active, mode);\n      };\n\n      var values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n      if (values.$shared) {\n        values.$shared = sharing;\n        cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n      }\n\n      return values;\n    }\n  }, {\n    key: \"_resolveAnimations\",\n    value: function _resolveAnimations(index, transition, active) {\n      var chart = this.chart;\n      var cache = this._cachedDataOpts;\n      var cacheKey = \"animation-\".concat(transition);\n      var cached = cache[cacheKey];\n\n      if (cached) {\n        return cached;\n      }\n\n      var options;\n\n      if (chart.options.animation !== false) {\n        var config = this.chart.config;\n        var scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n        var scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        options = config.createResolver(scopes, this.getContext(index, active, transition));\n      }\n\n      var animations = new Animations(chart, options && options.animations);\n\n      if (options && options._cacheable) {\n        cache[cacheKey] = Object.freeze(animations);\n      }\n\n      return animations;\n    }\n  }, {\n    key: \"getSharedOptions\",\n    value: function getSharedOptions(options) {\n      if (!options.$shared) {\n        return;\n      }\n\n      return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n  }, {\n    key: \"includeOptions\",\n    value: function includeOptions(mode, sharedOptions) {\n      return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n  }, {\n    key: \"_getSharedOptions\",\n    value: function _getSharedOptions(start, mode) {\n      var firstOpts = this.resolveDataElementOptions(start, mode);\n      var previouslySharedOptions = this._sharedOptions;\n      var sharedOptions = this.getSharedOptions(firstOpts);\n      var includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n      this.updateSharedOptions(sharedOptions, mode, firstOpts);\n      return {\n        sharedOptions: sharedOptions,\n        includeOptions: includeOptions\n      };\n    }\n  }, {\n    key: \"updateElement\",\n    value: function updateElement(element, index, properties, mode) {\n      if (isDirectUpdateMode(mode)) {\n        Object.assign(element, properties);\n      } else {\n        this._resolveAnimations(index, mode).update(element, properties);\n      }\n    }\n  }, {\n    key: \"updateSharedOptions\",\n    value: function updateSharedOptions(sharedOptions, mode, newOptions) {\n      if (sharedOptions && !isDirectUpdateMode(mode)) {\n        this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n      }\n    }\n  }, {\n    key: \"_setStyle\",\n    value: function _setStyle(element, index, mode, active) {\n      element.active = active;\n      var options = this.getStyle(index, active);\n\n      this._resolveAnimations(index, mode, active).update(element, {\n        options: !active && this.getSharedOptions(options) || options\n      });\n    }\n  }, {\n    key: \"removeHoverStyle\",\n    value: function removeHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', false);\n    }\n  }, {\n    key: \"setHoverStyle\",\n    value: function setHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', true);\n    }\n  }, {\n    key: \"_removeDatasetHoverStyle\",\n    value: function _removeDatasetHoverStyle() {\n      var element = this._cachedMeta.dataset;\n\n      if (element) {\n        this._setStyle(element, undefined, 'active', false);\n      }\n    }\n  }, {\n    key: \"_setDatasetHoverStyle\",\n    value: function _setDatasetHoverStyle() {\n      var element = this._cachedMeta.dataset;\n\n      if (element) {\n        this._setStyle(element, undefined, 'active', true);\n      }\n    }\n  }, {\n    key: \"_resyncElements\",\n    value: function _resyncElements(resetNewElements) {\n      var data = this._data;\n      var elements = this._cachedMeta.data;\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = this._syncList[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var _step4$value = (0, _slicedToArray2.default)(_step4.value, 3),\n              method = _step4$value[0],\n              arg1 = _step4$value[1],\n              arg2 = _step4$value[2];\n\n          this[method](arg1, arg2);\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      this._syncList = [];\n      var numMeta = elements.length;\n      var numData = data.length;\n      var count = Math.min(numData, numMeta);\n\n      if (count) {\n        this.parse(0, count);\n      }\n\n      if (numData > numMeta) {\n        this._insertElements(numMeta, numData - numMeta, resetNewElements);\n      } else if (numData < numMeta) {\n        this._removeElements(numData, numMeta - numData);\n      }\n    }\n  }, {\n    key: \"_insertElements\",\n    value: function _insertElements(start, count) {\n      var resetNewElements = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var meta = this._cachedMeta;\n      var data = meta.data;\n      var end = start + count;\n      var i;\n\n      var move = function move(arr) {\n        arr.length += count;\n\n        for (i = arr.length - 1; i >= end; i--) {\n          arr[i] = arr[i - count];\n        }\n      };\n\n      move(data);\n\n      for (i = start; i < end; ++i) {\n        data[i] = new this.dataElementType();\n      }\n\n      if (this._parsing) {\n        move(meta._parsed);\n      }\n\n      this.parse(start, count);\n\n      if (resetNewElements) {\n        this.updateElements(data, start, count, 'reset');\n      }\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(element, start, count, mode) {}\n  }, {\n    key: \"_removeElements\",\n    value: function _removeElements(start, count) {\n      var meta = this._cachedMeta;\n\n      if (this._parsing) {\n        var removed = meta._parsed.splice(start, count);\n\n        if (meta._stacked) {\n          clearStacks(meta, removed);\n        }\n      }\n\n      meta.data.splice(start, count);\n    }\n  }, {\n    key: \"_sync\",\n    value: function _sync(args) {\n      if (this._parsing) {\n        this._syncList.push(args);\n      } else {\n        var _args2 = (0, _slicedToArray2.default)(args, 3),\n            method = _args2[0],\n            arg1 = _args2[1],\n            arg2 = _args2[2];\n\n        this[method](arg1, arg2);\n      }\n\n      this.chart._dataChanges.push([this.index].concat((0, _toConsumableArray2.default)(args)));\n    }\n  }, {\n    key: \"_onDataPush\",\n    value: function _onDataPush() {\n      var count = arguments.length;\n\n      this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n    }\n  }, {\n    key: \"_onDataPop\",\n    value: function _onDataPop() {\n      this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n    }\n  }, {\n    key: \"_onDataShift\",\n    value: function _onDataShift() {\n      this._sync(['_removeElements', 0, 1]);\n    }\n  }, {\n    key: \"_onDataSplice\",\n    value: function _onDataSplice(start, count) {\n      if (count) {\n        this._sync(['_removeElements', start, count]);\n      }\n\n      var newCount = arguments.length - 2;\n\n      if (newCount) {\n        this._sync(['_insertElements', start, newCount]);\n      }\n    }\n  }, {\n    key: \"_onDataUnshift\",\n    value: function _onDataUnshift() {\n      this._sync(['_insertElements', 0, arguments.length]);\n    }\n  }]);\n  return DatasetController;\n}();\n\nexports.DatasetController = DatasetController;\n(0, _defineProperty2.default)(DatasetController, \"defaults\", {});\n(0, _defineProperty2.default)(DatasetController, \"datasetElementType\", null);\n(0, _defineProperty2.default)(DatasetController, \"dataElementType\", null);\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    var visibleMetas = scale.getMatchingVisibleMetas(type);\n    var values = [];\n\n    for (var i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n\n    scale._cache.$bar = (0, _helpersDataset._)(values.sort(function (a, b) {\n      return a - b;\n    }));\n  }\n\n  return scale._cache.$bar;\n}\n\nfunction computeMinSampleSize(meta) {\n  var scale = meta.iScale;\n  var values = getAllScaleValues(scale, meta.type);\n  var min = scale._length;\n  var i, ilen, curr, prev;\n\n  var updateMinAndPrev = function updateMinAndPrev() {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n\n    if ((0, _helpersDataset.h)(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  var thickness = options.barThickness;\n  var size, ratio;\n\n  if ((0, _helpersDataset.k)(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio: ratio,\n    start: ruler.pixels[index] - size / 2\n  };\n}\n\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  var pixels = ruler.pixels;\n  var curr = pixels[index];\n  var prev = index > 0 ? pixels[index - 1] : null;\n  var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  var percent = options.categoryPercentage;\n\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n\n  var start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  var size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start: start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  var startValue = vScale.parse(entry[0], i);\n  var endValue = vScale.parse(entry[1], i);\n  var min = Math.min(startValue, endValue);\n  var max = Math.max(startValue, endValue);\n  var barStart = min;\n  var barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart: barStart,\n    barEnd: barEnd,\n    start: startValue,\n    end: endValue,\n    min: min,\n    max: max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if ((0, _helpersDataset.b)(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  var iScale = meta.iScale;\n  var vScale = meta.vScale;\n  var labels = iScale.getLabels();\n  var singleScale = iScale === vScale;\n  var parsed = [];\n  var i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return (0, _helpersDataset.s)(size);\n  }\n\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  var reverse, start, end, top, bottom;\n\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n\n  return {\n    start: start,\n    end: end,\n    reverse: reverse,\n    top: top,\n    bottom: bottom\n  };\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  var edge = options.borderSkipped;\n  var res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {\n      top: true,\n      right: true,\n      bottom: true,\n      left: true\n    };\n    return;\n  }\n\n  var _borderProps = borderProps(properties),\n      start = _borderProps.start,\n      end = _borderProps.end,\n      reverse = _borderProps.reverse,\n      top = _borderProps.top,\n      bottom = _borderProps.bottom;\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, _ref, ratio) {\n  var inflateAmount = _ref.inflateAmount;\n  properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\n\nvar BarController =\n/*#__PURE__*/\nfunction (_DatasetController) {\n  (0, _inherits2.default)(BarController, _DatasetController);\n\n  function BarController() {\n    (0, _classCallCheck2.default)(this, BarController);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(BarController).apply(this, arguments));\n  }\n\n  (0, _createClass2.default)(BarController, [{\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var iScale = meta.iScale,\n          vScale = meta.vScale;\n      var _this$_parsing2 = this._parsing,\n          _this$_parsing2$xAxis = _this$_parsing2.xAxisKey,\n          xAxisKey = _this$_parsing2$xAxis === void 0 ? 'x' : _this$_parsing2$xAxis,\n          _this$_parsing2$yAxis = _this$_parsing2.yAxisKey,\n          yAxisKey = _this$_parsing2$yAxis === void 0 ? 'y' : _this$_parsing2$yAxis;\n      var iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n      var vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n      var parsed = [];\n      var i, ilen, item, obj;\n\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        obj = data[i];\n        item = {};\n        item[iScale.axis] = iScale.parse((0, _helpersDataset.f)(obj, iAxisKey), i);\n        parsed.push(parseValue((0, _helpersDataset.f)(obj, vAxisKey), item, vScale, i));\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"updateRangeFromParsed\",\n    value: function updateRangeFromParsed(range, scale, parsed, stack) {\n      (0, _get2.default)((0, _getPrototypeOf2.default)(BarController.prototype), \"updateRangeFromParsed\", this).call(this, range, scale, parsed, stack);\n      var custom = parsed._custom;\n\n      if (custom && scale === this._cachedMeta.vScale) {\n        range.min = Math.min(range.min, custom.min);\n        range.max = Math.max(range.max, custom.max);\n      }\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      return 0;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var iScale = meta.iScale,\n          vScale = meta.vScale;\n      var parsed = this.getParsed(index);\n      var custom = parsed._custom;\n      var value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n      return {\n        label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n        value: value\n      };\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n      (0, _get2.default)((0, _getPrototypeOf2.default)(BarController.prototype), \"initialize\", this).call(this);\n      var meta = this._cachedMeta;\n      meta.stack = this.getDataset().stack;\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(bars, start, count, mode) {\n      var reset = mode === 'reset';\n      var index = this.index,\n          vScale = this._cachedMeta.vScale;\n      var base = vScale.getBasePixel();\n      var horizontal = vScale.isHorizontal();\n\n      var ruler = this._getRuler();\n\n      var _this$_getSharedOptio = this._getSharedOptions(start, mode),\n          sharedOptions = _this$_getSharedOptio.sharedOptions,\n          includeOptions = _this$_getSharedOptio.includeOptions;\n\n      for (var i = start; i < start + count; i++) {\n        var parsed = this.getParsed(i);\n        var vpixels = reset || (0, _helpersDataset.k)(parsed[vScale.axis]) ? {\n          base: base,\n          head: base\n        } : this._calculateBarValuePixels(i);\n\n        var ipixels = this._calculateBarIndexPixels(i, ruler);\n\n        var stack = (parsed._stacks || {})[vScale.axis];\n        var properties = {\n          horizontal: horizontal,\n          base: vpixels.base,\n          enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n          x: horizontal ? vpixels.head : ipixels.center,\n          y: horizontal ? ipixels.center : vpixels.head,\n          height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n          width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n        };\n\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n        }\n\n        var options = properties.options || bars[i].options;\n        setBorderSkipped(properties, options, stack, index);\n        setInflateAmount(properties, options, ruler.ratio);\n        this.updateElement(bars[i], i, properties, mode);\n      }\n    }\n  }, {\n    key: \"_getStacks\",\n    value: function _getStacks(last, dataIndex) {\n      var iScale = this._cachedMeta.iScale;\n      var metasets = iScale.getMatchingVisibleMetas(this._type).filter(function (meta) {\n        return meta.controller.options.grouped;\n      });\n      var stacked = iScale.options.stacked;\n      var stacks = [];\n\n      var currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n\n      var iScaleValue = currentParsed && currentParsed[iScale.axis];\n\n      var skipNull = function skipNull(meta) {\n        var parsed = meta._parsed.find(function (item) {\n          return item[iScale.axis] === iScaleValue;\n        });\n\n        var val = parsed && parsed[meta.vScale.axis];\n\n        if ((0, _helpersDataset.k)(val) || isNaN(val)) {\n          return true;\n        }\n      };\n\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = metasets[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var meta = _step5.value;\n\n          if (dataIndex !== undefined && skipNull(meta)) {\n            continue;\n          }\n\n          if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n            stacks.push(meta.stack);\n          }\n\n          if (meta.index === last) {\n            break;\n          }\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      if (!stacks.length) {\n        stacks.push(undefined);\n      }\n\n      return stacks;\n    }\n  }, {\n    key: \"_getStackCount\",\n    value: function _getStackCount(index) {\n      return this._getStacks(undefined, index).length;\n    }\n  }, {\n    key: \"_getStackIndex\",\n    value: function _getStackIndex(datasetIndex, name, dataIndex) {\n      var stacks = this._getStacks(datasetIndex, dataIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1;\n      return index === -1 ? stacks.length - 1 : index;\n    }\n  }, {\n    key: \"_getRuler\",\n    value: function _getRuler() {\n      var opts = this.options;\n      var meta = this._cachedMeta;\n      var iScale = meta.iScale;\n      var pixels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n        pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n      }\n\n      var barThickness = opts.barThickness;\n      var min = barThickness || computeMinSampleSize(meta);\n      return {\n        min: min,\n        pixels: pixels,\n        start: iScale._startPixel,\n        end: iScale._endPixel,\n        stackCount: this._getStackCount(),\n        scale: iScale,\n        grouped: opts.grouped,\n        ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n      };\n    }\n  }, {\n    key: \"_calculateBarValuePixels\",\n    value: function _calculateBarValuePixels(index) {\n      var _this$_cachedMeta = this._cachedMeta,\n          vScale = _this$_cachedMeta.vScale,\n          _stacked = _this$_cachedMeta._stacked,\n          datasetIndex = _this$_cachedMeta.index,\n          _this$options = this.options,\n          baseValue = _this$options.base,\n          minBarLength = _this$options.minBarLength;\n      var actualBase = baseValue || 0;\n      var parsed = this.getParsed(index);\n      var custom = parsed._custom;\n      var floating = isFloatBar(custom);\n      var value = parsed[vScale.axis];\n      var start = 0;\n      var length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n      var head, size;\n\n      if (length !== value) {\n        start = length - value;\n        length = value;\n      }\n\n      if (floating) {\n        value = custom.barStart;\n        length = custom.barEnd - custom.barStart;\n\n        if (value !== 0 && (0, _helpersDataset.s)(value) !== (0, _helpersDataset.s)(custom.barEnd)) {\n          start = 0;\n        }\n\n        start += value;\n      }\n\n      var startValue = !(0, _helpersDataset.k)(baseValue) && !floating ? baseValue : start;\n      var base = vScale.getPixelForValue(startValue);\n\n      if (this.chart.getDataVisibility(index)) {\n        head = vScale.getPixelForValue(start + length);\n      } else {\n        head = base;\n      }\n\n      size = head - base;\n\n      if (Math.abs(size) < minBarLength) {\n        size = barSign(size, vScale, actualBase) * minBarLength;\n\n        if (value === actualBase) {\n          base -= size / 2;\n        }\n\n        var startPixel = vScale.getPixelForDecimal(0);\n        var endPixel = vScale.getPixelForDecimal(1);\n        var min = Math.min(startPixel, endPixel);\n        var max = Math.max(startPixel, endPixel);\n        base = Math.max(Math.min(base, max), min);\n        head = base + size;\n\n        if (_stacked && !floating) {\n          parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n        }\n      }\n\n      if (base === vScale.getPixelForValue(actualBase)) {\n        var halfGrid = (0, _helpersDataset.s)(size) * vScale.getLineWidthForValue(actualBase) / 2;\n        base += halfGrid;\n        size -= halfGrid;\n      }\n\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    }\n  }, {\n    key: \"_calculateBarIndexPixels\",\n    value: function _calculateBarIndexPixels(index, ruler) {\n      var scale = ruler.scale;\n      var options = this.options;\n      var skipNull = options.skipNull;\n      var maxBarThickness = (0, _helpersDataset.v)(options.maxBarThickness, Infinity);\n      var center, size;\n\n      if (ruler.grouped) {\n        var stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n        var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n        var stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n\n        center = range.start + range.chunk * stackIndex + range.chunk / 2;\n        size = Math.min(maxBarThickness, range.chunk * range.ratio);\n      } else {\n        center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n        size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n      }\n\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var meta = this._cachedMeta;\n      var vScale = meta.vScale;\n      var rects = meta.data;\n      var ilen = rects.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n          rects[i].draw(this._ctx);\n        }\n      }\n    }\n  }]);\n  return BarController;\n}(DatasetController);\n\nexports.BarController = BarController;\n(0, _defineProperty2.default)(BarController, \"id\", 'bar');\n(0, _defineProperty2.default)(BarController, \"defaults\", {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n});\n(0, _defineProperty2.default)(BarController, \"overrides\", {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true\n    }\n  }\n});\n\nvar BubbleController =\n/*#__PURE__*/\nfunction (_DatasetController2) {\n  (0, _inherits2.default)(BubbleController, _DatasetController2);\n\n  function BubbleController() {\n    (0, _classCallCheck2.default)(this, BubbleController);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(BubbleController).apply(this, arguments));\n  }\n\n  (0, _createClass2.default)(BubbleController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n      (0, _get2.default)((0, _getPrototypeOf2.default)(BubbleController.prototype), \"initialize\", this).call(this);\n    }\n  }, {\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      var parsed = (0, _get2.default)((0, _getPrototypeOf2.default)(BubbleController.prototype), \"parsePrimitiveData\", this).call(this, meta, data, start, count);\n\n      for (var i = 0; i < parsed.length; i++) {\n        parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      var parsed = (0, _get2.default)((0, _getPrototypeOf2.default)(BubbleController.prototype), \"parseArrayData\", this).call(this, meta, data, start, count);\n\n      for (var i = 0; i < parsed.length; i++) {\n        var item = data[start + i];\n        parsed[i]._custom = (0, _helpersDataset.v)(item[2], this.resolveDataElementOptions(i + start).radius);\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var parsed = (0, _get2.default)((0, _getPrototypeOf2.default)(BubbleController.prototype), \"parseObjectData\", this).call(this, meta, data, start, count);\n\n      for (var i = 0; i < parsed.length; i++) {\n        var item = data[start + i];\n        parsed[i]._custom = (0, _helpersDataset.v)(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var data = this._cachedMeta.data;\n      var max = 0;\n\n      for (var i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n\n      return max > 0 && max;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var labels = this.chart.data.labels || [];\n      var xScale = meta.xScale,\n          yScale = meta.yScale;\n      var parsed = this.getParsed(index);\n      var x = xScale.getLabelForValue(parsed.x);\n      var y = yScale.getLabelForValue(parsed.y);\n      var r = parsed._custom;\n      return {\n        label: labels[index] || '',\n        value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var points = this._cachedMeta.data;\n      this.updateElements(points, 0, points.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var reset = mode === 'reset';\n      var _this$_cachedMeta2 = this._cachedMeta,\n          iScale = _this$_cachedMeta2.iScale,\n          vScale = _this$_cachedMeta2.vScale;\n\n      var _this$_getSharedOptio2 = this._getSharedOptions(start, mode),\n          sharedOptions = _this$_getSharedOptio2.sharedOptions,\n          includeOptions = _this$_getSharedOptio2.includeOptions;\n\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n\n      for (var i = start; i < start + count; i++) {\n        var point = points[i];\n        var parsed = !reset && this.getParsed(i);\n        var properties = {};\n        var iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n        var vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n          if (reset) {\n            properties.options.radius = 0;\n          }\n        }\n\n        this.updateElement(point, i, properties, mode);\n      }\n    }\n  }, {\n    key: \"resolveDataElementOptions\",\n    value: function resolveDataElementOptions(index, mode) {\n      var parsed = this.getParsed(index);\n      var values = (0, _get2.default)((0, _getPrototypeOf2.default)(BubbleController.prototype), \"resolveDataElementOptions\", this).call(this, index, mode);\n\n      if (values.$shared) {\n        values = Object.assign({}, values, {\n          $shared: false\n        });\n      }\n\n      var radius = values.radius;\n\n      if (mode !== 'active') {\n        values.radius = 0;\n      }\n\n      values.radius += (0, _helpersDataset.v)(parsed && parsed._custom, radius);\n      return values;\n    }\n  }]);\n  return BubbleController;\n}(DatasetController);\n\nexports.BubbleController = BubbleController;\n(0, _defineProperty2.default)(BubbleController, \"id\", 'bubble');\n(0, _defineProperty2.default)(BubbleController, \"defaults\", {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n});\n(0, _defineProperty2.default)(BubbleController, \"overrides\", {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n});\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  var ratioX = 1;\n  var ratioY = 1;\n  var offsetX = 0;\n  var offsetY = 0;\n\n  if (circumference < _helpersDataset.T) {\n    var startAngle = rotation;\n    var endAngle = startAngle + circumference;\n    var startX = Math.cos(startAngle);\n    var startY = Math.sin(startAngle);\n    var endX = Math.cos(endAngle);\n    var endY = Math.sin(endAngle);\n\n    var calcMax = function calcMax(angle, a, b) {\n      return (0, _helpersDataset.p)(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    };\n\n    var calcMin = function calcMin(angle, a, b) {\n      return (0, _helpersDataset.p)(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    };\n\n    var maxX = calcMax(0, startX, endX);\n    var maxY = calcMax(_helpersDataset.H, startY, endY);\n    var minX = calcMin(_helpersDataset.P, startX, endX);\n    var minY = calcMin(_helpersDataset.P + _helpersDataset.H, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n\n  return {\n    ratioX: ratioX,\n    ratioY: ratioY,\n    offsetX: offsetX,\n    offsetY: offsetY\n  };\n}\n\nvar DoughnutController =\n/*#__PURE__*/\nfunction (_DatasetController3) {\n  (0, _inherits2.default)(DoughnutController, _DatasetController3);\n\n  function DoughnutController(chart, datasetIndex) {\n    var _this4;\n\n    (0, _classCallCheck2.default)(this, DoughnutController);\n    _this4 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DoughnutController).call(this, chart, datasetIndex));\n    _this4.enableOptionSharing = true;\n    _this4.innerRadius = undefined;\n    _this4.outerRadius = undefined;\n    _this4.offsetX = undefined;\n    _this4.offsetY = undefined;\n    return _this4;\n  }\n\n  (0, _createClass2.default)(DoughnutController, [{\n    key: \"linkScales\",\n    value: function linkScales() {}\n  }, {\n    key: \"parse\",\n    value: function parse(start, count) {\n      var data = this.getDataset().data;\n      var meta = this._cachedMeta;\n\n      if (this._parsing === false) {\n        meta._parsed = data;\n      } else {\n        var getter = function getter(i) {\n          return +data[i];\n        };\n\n        if ((0, _helpersDataset.i)(data[start])) {\n          var _this$_parsing$key = this._parsing.key,\n              key = _this$_parsing$key === void 0 ? 'value' : _this$_parsing$key;\n\n          getter = function getter(i) {\n            return +(0, _helpersDataset.f)(data[i], key);\n          };\n        }\n\n        var i, ilen;\n\n        for (i = start, ilen = start + count; i < ilen; ++i) {\n          meta._parsed[i] = getter(i);\n        }\n      }\n    }\n  }, {\n    key: \"_getRotation\",\n    value: function _getRotation() {\n      return (0, _helpersDataset.t)(this.options.rotation - 90);\n    }\n  }, {\n    key: \"_getCircumference\",\n    value: function _getCircumference() {\n      return (0, _helpersDataset.t)(this.options.circumference);\n    }\n  }, {\n    key: \"_getRotationExtents\",\n    value: function _getRotationExtents() {\n      var min = _helpersDataset.T;\n      var max = -_helpersDataset.T;\n\n      for (var i = 0; i < this.chart.data.datasets.length; ++i) {\n        if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n          var controller = this.chart.getDatasetMeta(i).controller;\n\n          var rotation = controller._getRotation();\n\n          var circumference = controller._getCircumference();\n\n          min = Math.min(min, rotation);\n          max = Math.max(max, rotation + circumference);\n        }\n      }\n\n      return {\n        rotation: min,\n        circumference: max - min\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var chart = this.chart;\n      var chartArea = chart.chartArea;\n      var meta = this._cachedMeta;\n      var arcs = meta.data;\n      var spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n      var maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n      var cutout = Math.min((0, _helpersDataset.m)(this.options.cutout, maxSize), 1);\n\n      var chartWeight = this._getRingWeight(this.index);\n\n      var _this$_getRotationExt = this._getRotationExtents(),\n          circumference = _this$_getRotationExt.circumference,\n          rotation = _this$_getRotationExt.rotation;\n\n      var _getRatioAndOffset = getRatioAndOffset(rotation, circumference, cutout),\n          ratioX = _getRatioAndOffset.ratioX,\n          ratioY = _getRatioAndOffset.ratioY,\n          offsetX = _getRatioAndOffset.offsetX,\n          offsetY = _getRatioAndOffset.offsetY;\n\n      var maxWidth = (chartArea.width - spacing) / ratioX;\n      var maxHeight = (chartArea.height - spacing) / ratioY;\n      var maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n      var outerRadius = (0, _helpersDataset.n)(this.options.radius, maxRadius);\n      var innerRadius = Math.max(outerRadius * cutout, 0);\n\n      var radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n\n      this.offsetX = offsetX * outerRadius;\n      this.offsetY = offsetY * outerRadius;\n      meta.total = this.calculateTotal();\n      this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n      this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n      this.updateElements(arcs, 0, arcs.length, mode);\n    }\n  }, {\n    key: \"_circumference\",\n    value: function _circumference(i, reset) {\n      var opts = this.options;\n      var meta = this._cachedMeta;\n\n      var circumference = this._getCircumference();\n\n      if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n        return 0;\n      }\n\n      return this.calculateCircumference(meta._parsed[i] * circumference / _helpersDataset.T);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(arcs, start, count, mode) {\n      var reset = mode === 'reset';\n      var chart = this.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var animateScale = reset && animationOpts.animateScale;\n      var innerRadius = animateScale ? 0 : this.innerRadius;\n      var outerRadius = animateScale ? 0 : this.outerRadius;\n\n      var _this$_getSharedOptio3 = this._getSharedOptions(start, mode),\n          sharedOptions = _this$_getSharedOptio3.sharedOptions,\n          includeOptions = _this$_getSharedOptio3.includeOptions;\n\n      var startAngle = this._getRotation();\n\n      var i;\n\n      for (i = 0; i < start; ++i) {\n        startAngle += this._circumference(i, reset);\n      }\n\n      for (i = start; i < start + count; ++i) {\n        var circumference = this._circumference(i, reset);\n\n        var arc = arcs[i];\n        var properties = {\n          x: centerX + this.offsetX,\n          y: centerY + this.offsetY,\n          startAngle: startAngle,\n          endAngle: startAngle + circumference,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius\n        };\n\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n        }\n\n        startAngle += circumference;\n        this.updateElement(arc, i, properties, mode);\n      }\n    }\n  }, {\n    key: \"calculateTotal\",\n    value: function calculateTotal() {\n      var meta = this._cachedMeta;\n      var metaData = meta.data;\n      var total = 0;\n      var i;\n\n      for (i = 0; i < metaData.length; i++) {\n        var value = meta._parsed[i];\n\n        if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n          total += Math.abs(value);\n        }\n      }\n\n      return total;\n    }\n  }, {\n    key: \"calculateCircumference\",\n    value: function calculateCircumference(value) {\n      var total = this._cachedMeta.total;\n\n      if (total > 0 && !isNaN(value)) {\n        return _helpersDataset.T * (Math.abs(value) / total);\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var chart = this.chart;\n      var labels = chart.data.labels || [];\n      var value = (0, _helpersDataset.o)(meta._parsed[index], chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value: value\n      };\n    }\n  }, {\n    key: \"getMaxBorderWidth\",\n    value: function getMaxBorderWidth(arcs) {\n      var max = 0;\n      var chart = this.chart;\n      var i, ilen, meta, controller, options;\n\n      if (!arcs) {\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n            controller = meta.controller;\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        options = controller.resolveDataElementOptions(i);\n\n        if (options.borderAlign !== 'inner') {\n          max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n        }\n      }\n\n      return max;\n    }\n  }, {\n    key: \"getMaxOffset\",\n    value: function getMaxOffset(arcs) {\n      var max = 0;\n\n      for (var i = 0, ilen = arcs.length; i < ilen; ++i) {\n        var options = this.resolveDataElementOptions(i);\n        max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n      }\n\n      return max;\n    }\n  }, {\n    key: \"_getRingWeightOffset\",\n    value: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    }\n  }, {\n    key: \"_getRingWeight\",\n    value: function _getRingWeight(datasetIndex) {\n      return Math.max((0, _helpersDataset.v)(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n  }, {\n    key: \"_getVisibleDatasetWeightTotal\",\n    value: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n  }]);\n  return DoughnutController;\n}(DatasetController);\n\nexports.DoughnutController = DoughnutController;\n(0, _defineProperty2.default)(DoughnutController, \"id\", 'doughnut');\n(0, _defineProperty2.default)(DoughnutController, \"defaults\", {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    }\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r'\n});\n(0, _defineProperty2.default)(DoughnutController, \"descriptors\", {\n  _scriptable: function _scriptable(name) {\n    return name !== 'spacing';\n  },\n  _indexable: function _indexable(name) {\n    return name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash');\n  }\n});\n(0, _defineProperty2.default)(DoughnutController, \"overrides\", {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            var _chart$legend$options2 = chart.legend.options.labels,\n                pointStyle = _chart$legend$options2.pointStyle,\n                color = _chart$legend$options2.color;\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                fontColor: color,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    }\n  }\n});\n\nvar LineController =\n/*#__PURE__*/\nfunction (_DatasetController4) {\n  (0, _inherits2.default)(LineController, _DatasetController4);\n\n  function LineController() {\n    (0, _classCallCheck2.default)(this, LineController);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LineController).apply(this, arguments));\n  }\n\n  (0, _createClass2.default)(LineController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n      this.supportsDecimation = true;\n      (0, _get2.default)((0, _getPrototypeOf2.default)(LineController.prototype), \"initialize\", this).call(this);\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      var line = meta.dataset,\n          _meta$data = meta.data,\n          points = _meta$data === void 0 ? [] : _meta$data,\n          _dataset = meta._dataset;\n      var animationsDisabled = this.chart._animationsDisabled;\n\n      var _getStartAndCountOfVi = (0, _helpersDataset.q)(meta, points, animationsDisabled),\n          start = _getStartAndCountOfVi.start,\n          count = _getStartAndCountOfVi.count;\n\n      this._drawStart = start;\n      this._drawCount = count;\n\n      if ((0, _helpersDataset.w)(meta)) {\n        start = 0;\n        count = points.length;\n      }\n\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      var options = this.resolveDatasetElementOptions(mode);\n\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options: options\n      }, mode);\n      this.updateElements(points, start, count, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var reset = mode === 'reset';\n      var _this$_cachedMeta3 = this._cachedMeta,\n          iScale = _this$_cachedMeta3.iScale,\n          vScale = _this$_cachedMeta3.vScale,\n          _stacked = _this$_cachedMeta3._stacked,\n          _dataset = _this$_cachedMeta3._dataset;\n\n      var _this$_getSharedOptio4 = this._getSharedOptions(start, mode),\n          sharedOptions = _this$_getSharedOptio4.sharedOptions,\n          includeOptions = _this$_getSharedOptio4.includeOptions;\n\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      var _this$options2 = this.options,\n          spanGaps = _this$options2.spanGaps,\n          segment = _this$options2.segment;\n      var maxGapLength = (0, _helpersDataset.x)(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n      var directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n      var end = start + count;\n      var pointsCount = points.length;\n      var prevParsed = start > 0 && this.getParsed(start - 1);\n\n      for (var i = 0; i < pointsCount; ++i) {\n        var point = points[i];\n        var properties = directUpdate ? point : {};\n\n        if (i < start || i >= end) {\n          properties.skip = true;\n          continue;\n        }\n\n        var parsed = this.getParsed(i);\n        var nullData = (0, _helpersDataset.k)(parsed[vAxis]);\n        var iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n        var vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n        properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n\n        if (segment) {\n          properties.parsed = parsed;\n          properties.raw = _dataset.data[i];\n        }\n\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        }\n\n        if (!directUpdate) {\n          this.updateElement(point, i, properties, mode);\n        }\n\n        prevParsed = parsed;\n      }\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var meta = this._cachedMeta;\n      var dataset = meta.dataset;\n      var border = dataset.options && dataset.options.borderWidth || 0;\n      var data = meta.data || [];\n\n      if (!data.length) {\n        return border;\n      }\n\n      var firstPoint = data[0].size(this.resolveDataElementOptions(0));\n      var lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n      return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var meta = this._cachedMeta;\n      meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n      (0, _get2.default)((0, _getPrototypeOf2.default)(LineController.prototype), \"draw\", this).call(this);\n    }\n  }]);\n  return LineController;\n}(DatasetController);\n\nexports.LineController = LineController;\n(0, _defineProperty2.default)(LineController, \"id\", 'line');\n(0, _defineProperty2.default)(LineController, \"defaults\", {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false\n});\n(0, _defineProperty2.default)(LineController, \"overrides\", {\n  scales: {\n    _index_: {\n      type: 'category'\n    },\n    _value_: {\n      type: 'linear'\n    }\n  }\n});\n\nvar PolarAreaController =\n/*#__PURE__*/\nfunction (_DatasetController5) {\n  (0, _inherits2.default)(PolarAreaController, _DatasetController5);\n\n  function PolarAreaController(chart, datasetIndex) {\n    var _this5;\n\n    (0, _classCallCheck2.default)(this, PolarAreaController);\n    _this5 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(PolarAreaController).call(this, chart, datasetIndex));\n    _this5.innerRadius = undefined;\n    _this5.outerRadius = undefined;\n    return _this5;\n  }\n\n  (0, _createClass2.default)(PolarAreaController, [{\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var chart = this.chart;\n      var labels = chart.data.labels || [];\n      var value = (0, _helpersDataset.o)(meta._parsed[index].r, chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value: value\n      };\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      return _helpersDataset.y.bind(this)(meta, data, start, count);\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var arcs = this._cachedMeta.data;\n\n      this._updateRadius();\n\n      this.updateElements(arcs, 0, arcs.length, mode);\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax() {\n      var _this6 = this;\n\n      var meta = this._cachedMeta;\n      var range = {\n        min: Number.POSITIVE_INFINITY,\n        max: Number.NEGATIVE_INFINITY\n      };\n      meta.data.forEach(function (element, index) {\n        var parsed = _this6.getParsed(index).r;\n\n        if (!isNaN(parsed) && _this6.chart.getDataVisibility(index)) {\n          if (parsed < range.min) {\n            range.min = parsed;\n          }\n\n          if (parsed > range.max) {\n            range.max = parsed;\n          }\n        }\n      });\n      return range;\n    }\n  }, {\n    key: \"_updateRadius\",\n    value: function _updateRadius() {\n      var chart = this.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      var outerRadius = Math.max(minSize / 2, 0);\n      var innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      var radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n      this.outerRadius = outerRadius - radiusLength * this.index;\n      this.innerRadius = this.outerRadius - radiusLength;\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(arcs, start, count, mode) {\n      var reset = mode === 'reset';\n      var chart = this.chart;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = this._cachedMeta.rScale;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter;\n\n      var datasetStartAngle = scale.getIndexAngle(0) - 0.5 * _helpersDataset.P;\n\n      var angle = datasetStartAngle;\n      var i;\n      var defaultAngle = 360 / this.countVisibleElements();\n\n      for (i = 0; i < start; ++i) {\n        angle += this._computeAngle(i, mode, defaultAngle);\n      }\n\n      for (i = start; i < start + count; i++) {\n        var arc = arcs[i];\n        var startAngle = angle;\n\n        var endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n\n        var outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n        angle = endAngle;\n\n        if (reset) {\n          if (animationOpts.animateScale) {\n            outerRadius = 0;\n          }\n\n          if (animationOpts.animateRotate) {\n            startAngle = endAngle = datasetStartAngle;\n          }\n        }\n\n        var properties = {\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: outerRadius,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n        };\n        this.updateElement(arc, i, properties, mode);\n      }\n    }\n  }, {\n    key: \"countVisibleElements\",\n    value: function countVisibleElements() {\n      var _this7 = this;\n\n      var meta = this._cachedMeta;\n      var count = 0;\n      meta.data.forEach(function (element, index) {\n        if (!isNaN(_this7.getParsed(index).r) && _this7.chart.getDataVisibility(index)) {\n          count++;\n        }\n      });\n      return count;\n    }\n  }, {\n    key: \"_computeAngle\",\n    value: function _computeAngle(index, mode, defaultAngle) {\n      return this.chart.getDataVisibility(index) ? (0, _helpersDataset.t)(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n  }]);\n  return PolarAreaController;\n}(DatasetController);\n\nexports.PolarAreaController = PolarAreaController;\n(0, _defineProperty2.default)(PolarAreaController, \"id\", 'polarArea');\n(0, _defineProperty2.default)(PolarAreaController, \"defaults\", {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    }\n  },\n  indexAxis: 'r',\n  startAngle: 0\n});\n(0, _defineProperty2.default)(PolarAreaController, \"overrides\", {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            var _chart$legend$options3 = chart.legend.options.labels,\n                pointStyle = _chart$legend$options3.pointStyle,\n                color = _chart$legend$options3.color;\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                fontColor: color,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n});\n\nvar PieController =\n/*#__PURE__*/\nfunction (_DoughnutController) {\n  (0, _inherits2.default)(PieController, _DoughnutController);\n\n  function PieController() {\n    (0, _classCallCheck2.default)(this, PieController);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(PieController).apply(this, arguments));\n  }\n\n  return PieController;\n}(DoughnutController);\n\nexports.PieController = PieController;\n(0, _defineProperty2.default)(PieController, \"id\", 'pie');\n(0, _defineProperty2.default)(PieController, \"defaults\", {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n});\n\nvar RadarController =\n/*#__PURE__*/\nfunction (_DatasetController6) {\n  (0, _inherits2.default)(RadarController, _DatasetController6);\n\n  function RadarController() {\n    (0, _classCallCheck2.default)(this, RadarController);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(RadarController).apply(this, arguments));\n  }\n\n  (0, _createClass2.default)(RadarController, [{\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var vScale = this._cachedMeta.vScale;\n      var parsed = this.getParsed(index);\n      return {\n        label: vScale.getLabels()[index],\n        value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n      };\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      return _helpersDataset.y.bind(this)(meta, data, start, count);\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var labels = meta.iScale.getLabels();\n      line.points = points;\n\n      if (mode !== 'resize') {\n        var options = this.resolveDatasetElementOptions(mode);\n\n        if (!this.options.showLine) {\n          options.borderWidth = 0;\n        }\n\n        var properties = {\n          _loop: true,\n          _fullLoop: labels.length === points.length,\n          options: options\n        };\n        this.updateElement(line, undefined, properties, mode);\n      }\n\n      this.updateElements(points, 0, points.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var scale = this._cachedMeta.rScale;\n      var reset = mode === 'reset';\n\n      for (var i = start; i < start + count; i++) {\n        var point = points[i];\n        var options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        var pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n        var x = reset ? scale.xCenter : pointPosition.x;\n        var y = reset ? scale.yCenter : pointPosition.y;\n        var properties = {\n          x: x,\n          y: y,\n          angle: pointPosition.angle,\n          skip: isNaN(x) || isNaN(y),\n          options: options\n        };\n        this.updateElement(point, i, properties, mode);\n      }\n    }\n  }]);\n  return RadarController;\n}(DatasetController);\n\nexports.RadarController = RadarController;\n(0, _defineProperty2.default)(RadarController, \"id\", 'radar');\n(0, _defineProperty2.default)(RadarController, \"defaults\", {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  }\n});\n(0, _defineProperty2.default)(RadarController, \"overrides\", {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear'\n    }\n  }\n});\n\nvar ScatterController =\n/*#__PURE__*/\nfunction (_DatasetController7) {\n  (0, _inherits2.default)(ScatterController, _DatasetController7);\n\n  function ScatterController() {\n    (0, _classCallCheck2.default)(this, ScatterController);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ScatterController).apply(this, arguments));\n  }\n\n  (0, _createClass2.default)(ScatterController, [{\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var labels = this.chart.data.labels || [];\n      var xScale = meta.xScale,\n          yScale = meta.yScale;\n      var parsed = this.getParsed(index);\n      var x = xScale.getLabelForValue(parsed.x);\n      var y = yScale.getLabelForValue(parsed.y);\n      return {\n        label: labels[index] || '',\n        value: '(' + x + ', ' + y + ')'\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      var _meta$data2 = meta.data,\n          points = _meta$data2 === void 0 ? [] : _meta$data2;\n      var animationsDisabled = this.chart._animationsDisabled;\n\n      var _getStartAndCountOfVi2 = (0, _helpersDataset.q)(meta, points, animationsDisabled),\n          start = _getStartAndCountOfVi2.start,\n          count = _getStartAndCountOfVi2.count;\n\n      this._drawStart = start;\n      this._drawCount = count;\n\n      if ((0, _helpersDataset.w)(meta)) {\n        start = 0;\n        count = points.length;\n      }\n\n      if (this.options.showLine) {\n        if (!this.datasetElementType) {\n          this.addElements();\n        }\n\n        var line = meta.dataset,\n            _dataset = meta._dataset;\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        var options = this.resolveDatasetElementOptions(mode);\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n          animated: !animationsDisabled,\n          options: options\n        }, mode);\n      } else if (this.datasetElementType) {\n        delete meta.dataset;\n        this.datasetElementType = false;\n      }\n\n      this.updateElements(points, start, count, mode);\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      var showLine = this.options.showLine;\n\n      if (!this.datasetElementType && showLine) {\n        this.datasetElementType = this.chart.registry.getElement('line');\n      }\n\n      (0, _get2.default)((0, _getPrototypeOf2.default)(ScatterController.prototype), \"addElements\", this).call(this);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var reset = mode === 'reset';\n      var _this$_cachedMeta4 = this._cachedMeta,\n          iScale = _this$_cachedMeta4.iScale,\n          vScale = _this$_cachedMeta4.vScale,\n          _stacked = _this$_cachedMeta4._stacked,\n          _dataset = _this$_cachedMeta4._dataset;\n      var firstOpts = this.resolveDataElementOptions(start, mode);\n      var sharedOptions = this.getSharedOptions(firstOpts);\n      var includeOptions = this.includeOptions(mode, sharedOptions);\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      var _this$options3 = this.options,\n          spanGaps = _this$options3.spanGaps,\n          segment = _this$options3.segment;\n      var maxGapLength = (0, _helpersDataset.x)(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n      var directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n      var prevParsed = start > 0 && this.getParsed(start - 1);\n\n      for (var i = start; i < start + count; ++i) {\n        var point = points[i];\n        var parsed = this.getParsed(i);\n        var properties = directUpdate ? point : {};\n        var nullData = (0, _helpersDataset.k)(parsed[vAxis]);\n        var iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n        var vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n        properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n\n        if (segment) {\n          properties.parsed = parsed;\n          properties.raw = _dataset.data[i];\n        }\n\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        }\n\n        if (!directUpdate) {\n          this.updateElement(point, i, properties, mode);\n        }\n\n        prevParsed = parsed;\n      }\n\n      this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var meta = this._cachedMeta;\n      var data = meta.data || [];\n\n      if (!this.options.showLine) {\n        var max = 0;\n\n        for (var i = data.length - 1; i >= 0; --i) {\n          max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n\n        return max > 0 && max;\n      }\n\n      var dataset = meta.dataset;\n      var border = dataset.options && dataset.options.borderWidth || 0;\n\n      if (!data.length) {\n        return border;\n      }\n\n      var firstPoint = data[0].size(this.resolveDataElementOptions(0));\n      var lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n      return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n  }]);\n  return ScatterController;\n}(DatasetController);\n\nexports.ScatterController = ScatterController;\n(0, _defineProperty2.default)(ScatterController, \"id\", 'scatter');\n(0, _defineProperty2.default)(ScatterController, \"defaults\", {\n  datasetElementType: false,\n  dataElementType: 'point',\n  showLine: false,\n  fill: false\n});\n(0, _defineProperty2.default)(ScatterController, \"overrides\", {\n  interaction: {\n    mode: 'point'\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n});\nvar controllers =\n/*#__PURE__*/\nObject.freeze({\n  __proto__: null,\n  BarController: BarController,\n  BubbleController: BubbleController,\n  DoughnutController: DoughnutController,\n  LineController: LineController,\n  PieController: PieController,\n  PolarAreaController: PolarAreaController,\n  RadarController: RadarController,\n  ScatterController: ScatterController\n});\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nexports.controllers = controllers;\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\n\n\nvar DateAdapterBase =\n/*#__PURE__*/\nfunction () {\n  (0, _createClass2.default)(DateAdapterBase, null, [{\n    key: \"override\",\n\n    /**\n    * Override default date adapter methods.\n    * Accepts type parameter to define options type.\n    * @example\n    * Chart._adapters._date.override<{myAdapterOption: string}>({\n    *   init() {\n    *     console.log(this.options.myAdapterOption);\n    *   }\n    * })\n    */\n    value: function override(members) {\n      Object.assign(DateAdapterBase.prototype, members);\n    }\n  }]);\n\n  function DateAdapterBase(options) {\n    (0, _classCallCheck2.default)(this, DateAdapterBase);\n    (0, _defineProperty2.default)(this, \"options\", void 0);\n    this.options = options || {};\n  } // eslint-disable-next-line @typescript-eslint/no-empty-function\n\n\n  (0, _createClass2.default)(DateAdapterBase, [{\n    key: \"init\",\n    value: function init() {}\n  }, {\n    key: \"formats\",\n    value: function formats() {\n      return abstract();\n    }\n  }, {\n    key: \"parse\",\n    value: function parse() {\n      return abstract();\n    }\n  }, {\n    key: \"format\",\n    value: function format() {\n      return abstract();\n    }\n  }, {\n    key: \"add\",\n    value: function add() {\n      return abstract();\n    }\n  }, {\n    key: \"diff\",\n    value: function diff() {\n      return abstract();\n    }\n  }, {\n    key: \"startOf\",\n    value: function startOf() {\n      return abstract();\n    }\n  }, {\n    key: \"endOf\",\n    value: function endOf() {\n      return abstract();\n    }\n  }]);\n  return DateAdapterBase;\n}();\n\nvar adapters = {\n  _date: DateAdapterBase\n};\nexports._adapters = adapters;\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  var controller = metaset.controller,\n      data = metaset.data,\n      _sorted = metaset._sorted;\n  var iScale = controller._cachedMeta.iScale;\n  var spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    var lookupMethod = iScale._reversePixels ? _helpersDataset.A : _helpersDataset.B;\n\n    if (!intersect) {\n      var result = lookupMethod(data, axis, value);\n\n      if (spanGaps) {\n        var vScale = controller._cachedMeta.vScale;\n        var _parsed = metaset._parsed;\n\n        var distanceToDefinedLo = _parsed.slice(0, result.lo + 1).reverse().findIndex(function (point) {\n          return !(0, _helpersDataset.k)(point[vScale.axis]);\n        });\n\n        result.lo -= Math.max(0, distanceToDefinedLo);\n\n        var distanceToDefinedHi = _parsed.slice(result.hi).findIndex(function (point) {\n          return !(0, _helpersDataset.k)(point[vScale.axis]);\n        });\n\n        result.hi += Math.max(0, distanceToDefinedHi);\n      }\n\n      return result;\n    } else if (controller._sharedOptions) {\n      var el = data[0];\n      var range = typeof el.getRange === 'function' && el.getRange(axis);\n\n      if (range) {\n        var start = lookupMethod(data, axis, value - range);\n        var end = lookupMethod(data, axis, value + range);\n        return {\n          lo: start.lo,\n          hi: end.hi\n        };\n      }\n    }\n  }\n\n  return {\n    lo: 0,\n    hi: data.length - 1\n  };\n}\n\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  var metasets = chart.getSortedVisibleDatasetMetas();\n  var value = position[axis];\n\n  for (var i = 0, ilen = metasets.length; i < ilen; ++i) {\n    var _metasets$i = metasets[i],\n        _index2 = _metasets$i.index,\n        data = _metasets$i.data;\n\n    var _binarySearch = binarySearch(metasets[i], axis, value, intersect),\n        lo = _binarySearch.lo,\n        hi = _binarySearch.hi;\n\n    for (var j = lo; j <= hi; ++j) {\n      var element = data[j];\n\n      if (!element.skip) {\n        handler(element, _index2, j);\n      }\n    }\n  }\n}\n\nfunction getDistanceMetricForAxis(axis) {\n  var useX = axis.indexOf('x') !== -1;\n  var useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  var items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  var evaluationFunc = function evaluationFunc(element, datasetIndex, index) {\n    if (!includeInvisible && !(0, _helpersDataset.C)(element, chart.chartArea, 0)) {\n      return;\n    }\n\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  var items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    var _element$getProps = element.getProps(['startAngle', 'endAngle'], useFinalPosition),\n        startAngle = _element$getProps.startAngle,\n        endAngle = _element$getProps.endAngle;\n\n    var _getAngleFromPoint = (0, _helpersDataset.D)(element, {\n      x: position.x,\n      y: position.y\n    }),\n        angle = _getAngleFromPoint.angle;\n\n    if ((0, _helpersDataset.p)(angle, startAngle, endAngle)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  var items = [];\n  var distanceMetric = getDistanceMetricForAxis(axis);\n  var minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    var inRange = element.inRange(position.x, position.y, useFinalPosition);\n\n    if (intersect && !inRange) {\n      return;\n    }\n\n    var center = element.getCenterPoint(useFinalPosition);\n    var pointInArea = !!includeInvisible || chart.isPointInArea(center);\n\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    var distance = distanceMetric(position, center);\n\n    if (distance < minDistance) {\n      items = [{\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      }];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  var items = [];\n  var rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  var intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, function (element, datasetIndex, index) {\n    if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n\n  return items;\n}\n\nvar Interaction = {\n  evaluateInteractionItems: evaluateInteractionItems,\n  modes: {\n    index: function index(chart, e, options, useFinalPosition) {\n      var position = (0, _helpersDataset.z)(e, chart);\n      var axis = options.axis || 'x';\n      var includeInvisible = options.includeInvisible || false;\n      var items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      var elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach(function (meta) {\n        var index = items[0].index;\n        var element = meta.data[index];\n\n        if (element && !element.skip) {\n          elements.push({\n            element: element,\n            datasetIndex: meta.index,\n            index: index\n          });\n        }\n      });\n      return elements;\n    },\n    dataset: function dataset(chart, e, options, useFinalPosition) {\n      var position = (0, _helpersDataset.z)(e, chart);\n      var axis = options.axis || 'xy';\n      var includeInvisible = options.includeInvisible || false;\n      var items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        var datasetIndex = items[0].datasetIndex;\n        var data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n\n        for (var i = 0; i < data.length; ++i) {\n          items.push({\n            element: data[i],\n            datasetIndex: datasetIndex,\n            index: i\n          });\n        }\n      }\n\n      return items;\n    },\n    point: function point(chart, e, options, useFinalPosition) {\n      var position = (0, _helpersDataset.z)(e, chart);\n      var axis = options.axis || 'xy';\n      var includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest: function nearest(chart, e, options, useFinalPosition) {\n      var position = (0, _helpersDataset.z)(e, chart);\n      var axis = options.axis || 'xy';\n      var includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x: function x(chart, e, options, useFinalPosition) {\n      var position = (0, _helpersDataset.z)(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y: function y(chart, e, options, useFinalPosition) {\n      var position = (0, _helpersDataset.z)(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\nexports.Interaction = Interaction;\nvar STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(function (v) {\n    return v.pos === position;\n  });\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(function (v) {\n    return STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis;\n  });\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort(function (a, b) {\n    var v0 = reverse ? b : a;\n    var v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  var layoutBoxes = [];\n  var i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    var _box = box;\n    pos = _box.position;\n    var _box$options = _box.options;\n    stack = _box$options.stack;\n    var _box$options$stackWei = _box$options.stackWeight;\n    stackWeight = _box$options$stackWei === void 0 ? 1 : _box$options$stackWei;\n    layoutBoxes.push({\n      index: i,\n      box: box,\n      pos: pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && pos + stack,\n      stackWeight: stackWeight\n    });\n  }\n\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  var stacks = {};\n  var _iteratorNormalCompletion6 = true;\n  var _didIteratorError6 = false;\n  var _iteratorError6 = undefined;\n\n  try {\n    for (var _iterator6 = layouts[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n      var wrap = _step6.value;\n      var stack = wrap.stack,\n          pos = wrap.pos,\n          stackWeight = wrap.stackWeight;\n\n      if (!stack || !STATIC_POSITIONS.includes(pos)) {\n        continue;\n      }\n\n      var _stack = stacks[stack] || (stacks[stack] = {\n        count: 0,\n        placed: 0,\n        weight: 0,\n        size: 0\n      });\n\n      _stack.count++;\n      _stack.weight += stackWeight;\n    }\n  } catch (err) {\n    _didIteratorError6 = true;\n    _iteratorError6 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n        _iterator6.return();\n      }\n    } finally {\n      if (_didIteratorError6) {\n        throw _iteratorError6;\n      }\n    }\n  }\n\n  return stacks;\n}\n\nfunction setLayoutDims(layouts, params) {\n  var stacks = buildStacks(layouts);\n  var vBoxMaxWidth = params.vBoxMaxWidth,\n      hBoxMaxHeight = params.hBoxMaxHeight;\n  var i, ilen, layout;\n\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    var fullSize = layout.box.fullSize;\n    var stack = stacks[layout.stack];\n    var factor = stack && layout.stackWeight / stack.weight;\n\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  var layoutBoxes = wrapBoxes(boxes);\n  var fullSize = sortByWeight(layoutBoxes.filter(function (wrap) {\n    return wrap.box.fullSize;\n  }), true);\n  var left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  var right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  var top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  var bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  var centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  var centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize: fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  var pos = layout.pos,\n      box = layout.box;\n  var maxPadding = chartArea.maxPadding;\n\n  if (!(0, _helpersDataset.i)(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n\n    var stack = stacks[layout.stack] || {\n      size: 0,\n      count: 1\n    };\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  var newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  var newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  var widthChanged = newWidth !== chartArea.w;\n  var heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal ? {\n    same: widthChanged,\n    other: heightChanged\n  } : {\n    same: heightChanged,\n    other: widthChanged\n  };\n}\n\nfunction handleMaxPadding(chartArea) {\n  var maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    var change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  var maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    var margin = {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n    positions.forEach(function (pos) {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  var refitBoxes = [];\n  var i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n\n    var _updateDims = updateDims(chartArea, params, layout, stacks),\n        same = _updateDims.same,\n        other = _updateDims.other;\n\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  var userPadding = params.padding;\n  var x = chartArea.x,\n      y = chartArea.y;\n  var _iteratorNormalCompletion7 = true;\n  var _didIteratorError7 = false;\n  var _iteratorError7 = undefined;\n\n  try {\n    for (var _iterator7 = boxes[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n      var layout = _step7.value;\n      var box = layout.box;\n      var stack = stacks[layout.stack] || {\n        count: 1,\n        placed: 0,\n        weight: 1\n      };\n      var weight = layout.stackWeight / stack.weight || 1;\n\n      if (layout.horizontal) {\n        var width = chartArea.w * weight;\n        var height = stack.size || box.height;\n\n        if ((0, _helpersDataset.h)(stack.start)) {\n          y = stack.start;\n        }\n\n        if (box.fullSize) {\n          setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n        } else {\n          setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n        }\n\n        stack.start = y;\n        stack.placed += width;\n        y = box.bottom;\n      } else {\n        var _height = chartArea.h * weight;\n\n        var _width = stack.size || box.width;\n\n        if ((0, _helpersDataset.h)(stack.start)) {\n          x = stack.start;\n        }\n\n        if (box.fullSize) {\n          setBoxDims(box, x, userPadding.top, _width, params.outerHeight - userPadding.bottom - userPadding.top);\n        } else {\n          setBoxDims(box, x, chartArea.top + stack.placed, _width, _height);\n        }\n\n        stack.start = x;\n        stack.placed += _height;\n        x = box.right;\n      }\n    }\n  } catch (err) {\n    _didIteratorError7 = true;\n    _iteratorError7 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion7 && _iterator7.return != null) {\n        _iterator7.return();\n      }\n    } finally {\n      if (_didIteratorError7) {\n        throw _iteratorError7;\n      }\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\nvar layouts = {\n  addBox: function addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n\n    item._layers = item._layers || function () {\n      return [{\n        z: 0,\n        draw: function draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n  removeBox: function removeBox(chart, layoutItem) {\n    var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure: function configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update: function update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    var padding = (0, _helpersDataset.E)(chart.options.layout.padding);\n    var availableWidth = Math.max(width - padding.width, 0);\n    var availableHeight = Math.max(height - padding.height, 0);\n    var boxes = buildLayoutBoxes(chart.boxes);\n    var verticalBoxes = boxes.vertical;\n    var horizontalBoxes = boxes.horizontal;\n    (0, _helpersDataset.F)(chart.boxes, function (box) {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    var visibleVerticalBoxCount = verticalBoxes.reduce(function (total, wrap) {\n      return wrap.box.options && wrap.box.options.display === false ? total : total + 1;\n    }, 0) || 1;\n    var params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding: padding,\n      availableWidth: availableWidth,\n      availableHeight: availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    var maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, (0, _helpersDataset.E)(minPadding));\n    var chartArea = Object.assign({\n      maxPadding: maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    var stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w\n    };\n    (0, _helpersDataset.F)(boxes.chartArea, function (layout) {\n      var box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0\n      });\n    });\n  }\n};\nexports.layouts = layouts;\n\nvar BasePlatform =\n/*#__PURE__*/\nfunction () {\n  function BasePlatform() {\n    (0, _classCallCheck2.default)(this, BasePlatform);\n  }\n\n  (0, _createClass2.default)(BasePlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(canvas, aspectRatio) {}\n  }, {\n    key: \"releaseContext\",\n    value: function releaseContext(context) {\n      return false;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(chart, type, listener) {}\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(chart, type, listener) {}\n  }, {\n    key: \"getDevicePixelRatio\",\n    value: function getDevicePixelRatio() {\n      return 1;\n    }\n  }, {\n    key: \"getMaximumSize\",\n    value: function getMaximumSize(element, width, height, aspectRatio) {\n      width = Math.max(0, width || element.width);\n      height = height || element.height;\n      return {\n        width: width,\n        height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n      };\n    }\n  }, {\n    key: \"isAttached\",\n    value: function isAttached(canvas) {\n      return true;\n    }\n  }, {\n    key: \"updateConfig\",\n    value: function updateConfig(config) {}\n  }]);\n  return BasePlatform;\n}();\n\nexports.BasePlatform = BasePlatform;\n\nvar BasicPlatform =\n/*#__PURE__*/\nfunction (_BasePlatform) {\n  (0, _inherits2.default)(BasicPlatform, _BasePlatform);\n\n  function BasicPlatform() {\n    (0, _classCallCheck2.default)(this, BasicPlatform);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(BasicPlatform).apply(this, arguments));\n  }\n\n  (0, _createClass2.default)(BasicPlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(item) {\n      return item && item.getContext && item.getContext('2d') || null;\n    }\n  }, {\n    key: \"updateConfig\",\n    value: function updateConfig(config) {\n      config.options.animation = false;\n    }\n  }]);\n  return BasicPlatform;\n}(BasePlatform);\n\nexports.BasicPlatform = BasicPlatform;\nvar EXPANDO_KEY = '$chartjs';\nvar EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nvar isNullOrEmpty = function isNullOrEmpty(value) {\n  return value === null || value === '';\n};\n\nfunction initCanvas(canvas, aspectRatio) {\n  var style = canvas.style;\n  var renderHeight = canvas.getAttribute('height');\n  var renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    var displayWidth = (0, _helpersDataset.J)(canvas, 'width');\n\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      var displayHeight = (0, _helpersDataset.J)(canvas, 'height');\n\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\nvar eventListenerOptions = _helpersDataset.K ? {\n  passive: true\n} : false;\n\nfunction addListener(node, type, listener) {\n  if (node) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction removeListener(chart, type, listener) {\n  if (chart && chart.canvas) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction fromNativeEvent(event, chart) {\n  var type = EVENT_TYPES[event.type] || event.type;\n\n  var _getRelativePosition = (0, _helpersDataset.z)(event, chart),\n      x = _getRelativePosition.x,\n      y = _getRelativePosition.y;\n\n  return {\n    type: type,\n    chart: chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  var _iteratorNormalCompletion8 = true;\n  var _didIteratorError8 = false;\n  var _iteratorError8 = undefined;\n\n  try {\n    for (var _iterator8 = nodeList[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n      var node = _step8.value;\n\n      if (node === canvas || node.contains(canvas)) {\n        return true;\n      }\n    }\n  } catch (err) {\n    _didIteratorError8 = true;\n    _iteratorError8 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion8 && _iterator8.return != null) {\n        _iterator8.return();\n      }\n    } finally {\n      if (_didIteratorError8) {\n        throw _iteratorError8;\n      }\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n  var observer = new MutationObserver(function (entries) {\n    var trigger = false;\n    var _iteratorNormalCompletion9 = true;\n    var _didIteratorError9 = false;\n    var _iteratorError9 = undefined;\n\n    try {\n      for (var _iterator9 = entries[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n        var entry = _step9.value;\n        trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n        trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n      }\n    } catch (err) {\n      _didIteratorError9 = true;\n      _iteratorError9 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion9 && _iterator9.return != null) {\n          _iterator9.return();\n        }\n      } finally {\n        if (_didIteratorError9) {\n          throw _iteratorError9;\n        }\n      }\n    }\n\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n  var observer = new MutationObserver(function (entries) {\n    var trigger = false;\n    var _iteratorNormalCompletion10 = true;\n    var _didIteratorError10 = false;\n    var _iteratorError10 = undefined;\n\n    try {\n      for (var _iterator10 = entries[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n        var entry = _step10.value;\n        trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n        trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n      }\n    } catch (err) {\n      _didIteratorError10 = true;\n      _iteratorError10 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion10 && _iterator10.return != null) {\n          _iterator10.return();\n        }\n      } finally {\n        if (_didIteratorError10) {\n          throw _iteratorError10;\n        }\n      }\n    }\n\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\n\nvar drpListeningCharts = new Map();\nvar oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  var dpr = window.devicePixelRatio;\n\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach(function (resize, chart) {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n  var container = canvas && (0, _helpersDataset.I)(canvas);\n\n  if (!container) {\n    return;\n  }\n\n  var resize = (0, _helpersDataset.L)(function (width, height) {\n    var w = container.clientWidth;\n    listener(width, height);\n\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  var observer = new ResizeObserver(function (entries) {\n    var entry = entries[0];\n    var width = entry.contentRect.width;\n    var height = entry.contentRect.height;\n\n    if (width === 0 && height === 0) {\n      return;\n    }\n\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  var canvas = chart.canvas;\n  var proxy = (0, _helpersDataset.L)(function (event) {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n  addListener(canvas, type, proxy);\n  return proxy;\n}\n\nvar DomPlatform =\n/*#__PURE__*/\nfunction (_BasePlatform2) {\n  (0, _inherits2.default)(DomPlatform, _BasePlatform2);\n\n  function DomPlatform() {\n    (0, _classCallCheck2.default)(this, DomPlatform);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DomPlatform).apply(this, arguments));\n  }\n\n  (0, _createClass2.default)(DomPlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(canvas, aspectRatio) {\n      var context = canvas && canvas.getContext && canvas.getContext('2d');\n\n      if (context && context.canvas === canvas) {\n        initCanvas(canvas, aspectRatio);\n        return context;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"releaseContext\",\n    value: function releaseContext(context) {\n      var canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return false;\n      }\n\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n\n        if ((0, _helpersDataset.k)(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      var style = initial.style || {};\n      Object.keys(style).forEach(function (key) {\n        canvas.style[key] = style[key];\n      });\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n      return true;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(chart, type, listener) {\n      this.removeEventListener(chart, type);\n      var proxies = chart.$proxies || (chart.$proxies = {});\n      var handlers = {\n        attach: createAttachObserver,\n        detach: createDetachObserver,\n        resize: createResizeObserver\n      };\n      var handler = handlers[type] || createProxyAndListen;\n      proxies[type] = handler(chart, type, listener);\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(chart, type) {\n      var proxies = chart.$proxies || (chart.$proxies = {});\n      var proxy = proxies[type];\n\n      if (!proxy) {\n        return;\n      }\n\n      var handlers = {\n        attach: releaseObserver,\n        detach: releaseObserver,\n        resize: releaseObserver\n      };\n      var handler = handlers[type] || removeListener;\n      handler(chart, type, proxy);\n      proxies[type] = undefined;\n    }\n  }, {\n    key: \"getDevicePixelRatio\",\n    value: function getDevicePixelRatio() {\n      return window.devicePixelRatio;\n    }\n  }, {\n    key: \"getMaximumSize\",\n    value: function getMaximumSize(canvas, width, height, aspectRatio) {\n      return (0, _helpersDataset.G)(canvas, width, height, aspectRatio);\n    }\n  }, {\n    key: \"isAttached\",\n    value: function isAttached(canvas) {\n      var container = canvas && (0, _helpersDataset.I)(canvas);\n      return !!(container && container.isConnected);\n    }\n  }]);\n  return DomPlatform;\n}(BasePlatform);\n\nexports.DomPlatform = DomPlatform;\n\nfunction _detectPlatform(canvas) {\n  if (!(0, _helpersDataset.M)() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n    return BasicPlatform;\n  }\n\n  return DomPlatform;\n}\n\nvar Element =\n/*#__PURE__*/\nfunction () {\n  function Element() {\n    (0, _classCallCheck2.default)(this, Element);\n    (0, _defineProperty2.default)(this, \"x\", void 0);\n    (0, _defineProperty2.default)(this, \"y\", void 0);\n    (0, _defineProperty2.default)(this, \"active\", false);\n    (0, _defineProperty2.default)(this, \"options\", void 0);\n    (0, _defineProperty2.default)(this, \"$animations\", void 0);\n  }\n\n  (0, _createClass2.default)(Element, [{\n    key: \"tooltipPosition\",\n    value: function tooltipPosition(useFinalPosition) {\n      var _this$getProps = this.getProps(['x', 'y'], useFinalPosition),\n          x = _this$getProps.x,\n          y = _this$getProps.y;\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }, {\n    key: \"hasValue\",\n    value: function hasValue() {\n      return (0, _helpersDataset.x)(this.x) && (0, _helpersDataset.x)(this.y);\n    }\n  }, {\n    key: \"getProps\",\n    value: function getProps(props, final) {\n      var _this8 = this;\n\n      var anims = this.$animations;\n\n      if (!final || !anims) {\n        // let's not create an object, if not needed\n        return this;\n      }\n\n      var ret = {};\n      props.forEach(function (prop) {\n        ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : _this8[prop];\n      });\n      return ret;\n    }\n  }]);\n  return Element;\n}();\n\nexports.Element = Element;\n(0, _defineProperty2.default)(Element, \"defaults\", {});\n(0, _defineProperty2.default)(Element, \"defaultRoutes\", undefined);\n\nfunction autoSkip(scale, ticks) {\n  var tickOpts = scale.options.ticks;\n  var determinedMaxTicks = determineMaxTicks(scale);\n  var ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  var majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  var numMajorIndices = majorIndices.length;\n  var first = majorIndices[0];\n  var last = majorIndices[numMajorIndices - 1];\n  var newTicks = [];\n\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  var spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    var i, ilen;\n    var avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, (0, _helpersDataset.k)(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n\n    skip(ticks, newTicks, spacing, last, (0, _helpersDataset.k)(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  var offset = scale.options.offset;\n\n  var tickLength = scale._tickSize();\n\n  var maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  var maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  var evenMajorSpacing = getEvenSpacing(majorIndices);\n  var spacing = ticks.length / ticksLimit;\n\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  var factors = (0, _helpersDataset.N)(evenMajorSpacing);\n\n  for (var i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    var factor = factors[i];\n\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n\n  return Math.max(spacing, 1);\n}\n\nfunction getMajorIndices(ticks) {\n  var result = [];\n  var i, ilen;\n\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n\n  return result;\n}\n\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  var count = 0;\n  var next = majorIndices[0];\n  var i;\n  spacing = Math.ceil(spacing);\n\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  var start = (0, _helpersDataset.v)(majorStart, 0);\n  var end = Math.min((0, _helpersDataset.v)(majorEnd, ticks.length), ticks.length);\n  var count = 0;\n  var length, i, next;\n  spacing = Math.ceil(spacing);\n\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\nfunction getEvenSpacing(arr) {\n  var len = arr.length;\n  var i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n\n  return diff;\n}\n\nvar reverseAlign = function reverseAlign(align) {\n  return align === 'left' ? 'right' : align === 'right' ? 'left' : align;\n};\n\nvar offsetFromEdge = function offsetFromEdge(scale, edge, offset) {\n  return edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n};\n\nvar getTicksLimit = function getTicksLimit(ticksLength, maxTicksLimit) {\n  return Math.min(maxTicksLimit || ticksLength, ticksLength);\n};\n\nfunction sample(arr, numItems) {\n  var result = [];\n  var increment = arr.length / numItems;\n  var len = arr.length;\n  var i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n\n  return result;\n}\n\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  var length = scale.ticks.length;\n  var validIndex = Math.min(index, length - 1);\n  var start = scale._startPixel;\n  var end = scale._endPixel;\n  var epsilon = 1e-6;\n  var lineValue = scale.getPixelForTick(validIndex);\n  var offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n\n    lineValue += validIndex < index ? offset : -offset;\n\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n\n  return lineValue;\n}\n\nfunction garbageCollect(caches, length) {\n  (0, _helpersDataset.F)(caches, function (cache) {\n    var gc = cache.gc;\n    var gcLen = gc.length / 2;\n    var i;\n\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  var font = (0, _helpersDataset.a0)(options.font, fallback);\n  var padding = (0, _helpersDataset.E)(options.padding);\n  var lines = (0, _helpersDataset.b)(options.text) ? options.text.length : 1;\n  return lines * font.lineHeight + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return (0, _helpersDataset.j)(parent, {\n    scale: scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return (0, _helpersDataset.j)(parent, {\n    tick: tick,\n    index: index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  var ret = (0, _helpersDataset.a1)(align);\n\n  if (reverse && position !== 'right' || !reverse && position === 'right') {\n    ret = reverseAlign(ret);\n  }\n\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  var top = scale.top,\n      left = scale.left,\n      bottom = scale.bottom,\n      right = scale.right,\n      chart = scale.chart;\n  var chartArea = chart.chartArea,\n      scales = chart.scales;\n  var rotation = 0;\n  var maxWidth, titleX, titleY;\n  var height = bottom - top;\n  var width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = (0, _helpersDataset.a2)(align, left, right);\n\n    if ((0, _helpersDataset.i)(position)) {\n      var positionAxisID = Object.keys(position)[0];\n      var value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n\n    maxWidth = right - left;\n  } else {\n    if ((0, _helpersDataset.i)(position)) {\n      var _positionAxisID = Object.keys(position)[0];\n      var _value = position[_positionAxisID];\n      titleX = scales[_positionAxisID].getPixelForValue(_value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n\n    titleY = (0, _helpersDataset.a2)(align, bottom, top);\n    rotation = position === 'left' ? -_helpersDataset.H : _helpersDataset.H;\n  }\n\n  return {\n    titleX: titleX,\n    titleY: titleY,\n    maxWidth: maxWidth,\n    rotation: rotation\n  };\n}\n\nvar Scale =\n/*#__PURE__*/\nfunction (_Element) {\n  (0, _inherits2.default)(Scale, _Element);\n\n  function Scale(cfg) {\n    var _this9;\n\n    (0, _classCallCheck2.default)(this, Scale);\n    _this9 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Scale).call(this));\n    _this9.id = cfg.id;\n    _this9.type = cfg.type;\n    _this9.options = undefined;\n    _this9.ctx = cfg.ctx;\n    _this9.chart = cfg.chart;\n    _this9.top = undefined;\n    _this9.bottom = undefined;\n    _this9.left = undefined;\n    _this9.right = undefined;\n    _this9.width = undefined;\n    _this9.height = undefined;\n    _this9._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    _this9.maxWidth = undefined;\n    _this9.maxHeight = undefined;\n    _this9.paddingTop = undefined;\n    _this9.paddingBottom = undefined;\n    _this9.paddingLeft = undefined;\n    _this9.paddingRight = undefined;\n    _this9.axis = undefined;\n    _this9.labelRotation = undefined;\n    _this9.min = undefined;\n    _this9.max = undefined;\n    _this9._range = undefined;\n    _this9.ticks = [];\n    _this9._gridLineItems = null;\n    _this9._labelItems = null;\n    _this9._labelSizes = null;\n    _this9._length = 0;\n    _this9._maxLength = 0;\n    _this9._longestTextCache = {};\n    _this9._startPixel = undefined;\n    _this9._endPixel = undefined;\n    _this9._reversePixels = false;\n    _this9._userMax = undefined;\n    _this9._userMin = undefined;\n    _this9._suggestedMax = undefined;\n    _this9._suggestedMin = undefined;\n    _this9._ticksLength = 0;\n    _this9._borderValue = 0;\n    _this9._cache = {};\n    _this9._dataLimitsCached = false;\n    _this9.$context = undefined;\n    return _this9;\n  }\n\n  (0, _createClass2.default)(Scale, [{\n    key: \"init\",\n    value: function init(options) {\n      this.options = options.setContext(this.getContext());\n      this.axis = options.axis;\n      this._userMin = this.parse(options.min);\n      this._userMax = this.parse(options.max);\n      this._suggestedMin = this.parse(options.suggestedMin);\n      this._suggestedMax = this.parse(options.suggestedMax);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      return raw;\n    }\n  }, {\n    key: \"getUserBounds\",\n    value: function getUserBounds() {\n      var _userMin = this._userMin,\n          _userMax = this._userMax,\n          _suggestedMin = this._suggestedMin,\n          _suggestedMax = this._suggestedMax;\n      _userMin = (0, _helpersDataset.O)(_userMin, Number.POSITIVE_INFINITY);\n      _userMax = (0, _helpersDataset.O)(_userMax, Number.NEGATIVE_INFINITY);\n      _suggestedMin = (0, _helpersDataset.O)(_suggestedMin, Number.POSITIVE_INFINITY);\n      _suggestedMax = (0, _helpersDataset.O)(_suggestedMax, Number.NEGATIVE_INFINITY);\n      return {\n        min: (0, _helpersDataset.O)(_userMin, _suggestedMin),\n        max: (0, _helpersDataset.O)(_userMax, _suggestedMax),\n        minDefined: (0, _helpersDataset.g)(_userMin),\n        maxDefined: (0, _helpersDataset.g)(_userMax)\n      };\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax(canStack) {\n      var _this$getUserBounds = this.getUserBounds(),\n          min = _this$getUserBounds.min,\n          max = _this$getUserBounds.max,\n          minDefined = _this$getUserBounds.minDefined,\n          maxDefined = _this$getUserBounds.maxDefined;\n\n      var range;\n\n      if (minDefined && maxDefined) {\n        return {\n          min: min,\n          max: max\n        };\n      }\n\n      var metas = this.getMatchingVisibleMetas();\n\n      for (var i = 0, ilen = metas.length; i < ilen; ++i) {\n        range = metas[i].controller.getMinMax(this, canStack);\n\n        if (!minDefined) {\n          min = Math.min(min, range.min);\n        }\n\n        if (!maxDefined) {\n          max = Math.max(max, range.max);\n        }\n      }\n\n      min = maxDefined && min > max ? max : min;\n      max = minDefined && min > max ? min : max;\n      return {\n        min: (0, _helpersDataset.O)(min, (0, _helpersDataset.O)(max, min)),\n        max: (0, _helpersDataset.O)(max, (0, _helpersDataset.O)(min, max))\n      };\n    }\n  }, {\n    key: \"getPadding\",\n    value: function getPadding() {\n      return {\n        left: this.paddingLeft || 0,\n        top: this.paddingTop || 0,\n        right: this.paddingRight || 0,\n        bottom: this.paddingBottom || 0\n      };\n    }\n  }, {\n    key: \"getTicks\",\n    value: function getTicks() {\n      return this.ticks;\n    }\n  }, {\n    key: \"getLabels\",\n    value: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n  }, {\n    key: \"getLabelItems\",\n    value: function getLabelItems() {\n      var chartArea = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.chart.chartArea;\n\n      var items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n\n      return items;\n    }\n  }, {\n    key: \"beforeLayout\",\n    value: function beforeLayout() {\n      this._cache = {};\n      this._dataLimitsCached = false;\n    }\n  }, {\n    key: \"beforeUpdate\",\n    value: function beforeUpdate() {\n      (0, _helpersDataset.Q)(this.options.beforeUpdate, [this]);\n    }\n  }, {\n    key: \"update\",\n    value: function update(maxWidth, maxHeight, margins) {\n      var _this$options4 = this.options,\n          beginAtZero = _this$options4.beginAtZero,\n          grace = _this$options4.grace,\n          tickOpts = _this$options4.ticks;\n      var sampleSize = tickOpts.sampleSize;\n      this.beforeUpdate();\n      this.maxWidth = maxWidth;\n      this.maxHeight = maxHeight;\n      this._margins = margins = Object.assign({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      this.ticks = null;\n      this._labelSizes = null;\n      this._gridLineItems = null;\n      this._labelItems = null;\n      this.beforeSetDimensions();\n      this.setDimensions();\n      this.afterSetDimensions();\n      this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n\n      if (!this._dataLimitsCached) {\n        this.beforeDataLimits();\n        this.determineDataLimits();\n        this.afterDataLimits();\n        this._range = (0, _helpersDataset.R)(this, grace, beginAtZero);\n        this._dataLimitsCached = true;\n      }\n\n      this.beforeBuildTicks();\n      this.ticks = this.buildTicks() || [];\n      this.afterBuildTicks();\n      var samplingEnabled = sampleSize < this.ticks.length;\n\n      this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n      this.configure();\n      this.beforeCalculateLabelRotation();\n      this.calculateLabelRotation();\n      this.afterCalculateLabelRotation();\n\n      if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n        this.ticks = autoSkip(this, this.ticks);\n        this._labelSizes = null;\n        this.afterAutoSkip();\n      }\n\n      if (samplingEnabled) {\n        this._convertTicksToLabels(this.ticks);\n      }\n\n      this.beforeFit();\n      this.fit();\n      this.afterFit();\n      this.afterUpdate();\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var reversePixels = this.options.reverse;\n      var startPixel, endPixel;\n\n      if (this.isHorizontal()) {\n        startPixel = this.left;\n        endPixel = this.right;\n      } else {\n        startPixel = this.top;\n        endPixel = this.bottom;\n        reversePixels = !reversePixels;\n      }\n\n      this._startPixel = startPixel;\n      this._endPixel = endPixel;\n      this._reversePixels = reversePixels;\n      this._length = endPixel - startPixel;\n      this._alignToPixels = this.options.alignToPixels;\n    }\n  }, {\n    key: \"afterUpdate\",\n    value: function afterUpdate() {\n      (0, _helpersDataset.Q)(this.options.afterUpdate, [this]);\n    }\n  }, {\n    key: \"beforeSetDimensions\",\n    value: function beforeSetDimensions() {\n      (0, _helpersDataset.Q)(this.options.beforeSetDimensions, [this]);\n    }\n  }, {\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      if (this.isHorizontal()) {\n        this.width = this.maxWidth;\n        this.left = 0;\n        this.right = this.width;\n      } else {\n        this.height = this.maxHeight;\n        this.top = 0;\n        this.bottom = this.height;\n      }\n\n      this.paddingLeft = 0;\n      this.paddingTop = 0;\n      this.paddingRight = 0;\n      this.paddingBottom = 0;\n    }\n  }, {\n    key: \"afterSetDimensions\",\n    value: function afterSetDimensions() {\n      (0, _helpersDataset.Q)(this.options.afterSetDimensions, [this]);\n    }\n  }, {\n    key: \"_callHooks\",\n    value: function _callHooks(name) {\n      this.chart.notifyPlugins(name, this.getContext());\n      (0, _helpersDataset.Q)(this.options[name], [this]);\n    }\n  }, {\n    key: \"beforeDataLimits\",\n    value: function beforeDataLimits() {\n      this._callHooks('beforeDataLimits');\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {}\n  }, {\n    key: \"afterDataLimits\",\n    value: function afterDataLimits() {\n      this._callHooks('afterDataLimits');\n    }\n  }, {\n    key: \"beforeBuildTicks\",\n    value: function beforeBuildTicks() {\n      this._callHooks('beforeBuildTicks');\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      return [];\n    }\n  }, {\n    key: \"afterBuildTicks\",\n    value: function afterBuildTicks() {\n      this._callHooks('afterBuildTicks');\n    }\n  }, {\n    key: \"beforeTickToLabelConversion\",\n    value: function beforeTickToLabelConversion() {\n      (0, _helpersDataset.Q)(this.options.beforeTickToLabelConversion, [this]);\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var tickOpts = this.options.ticks;\n      var i, ilen, tick;\n\n      for (i = 0, ilen = ticks.length; i < ilen; i++) {\n        tick = ticks[i];\n        tick.label = (0, _helpersDataset.Q)(tickOpts.callback, [tick.value, i, ticks], this);\n      }\n    }\n  }, {\n    key: \"afterTickToLabelConversion\",\n    value: function afterTickToLabelConversion() {\n      (0, _helpersDataset.Q)(this.options.afterTickToLabelConversion, [this]);\n    }\n  }, {\n    key: \"beforeCalculateLabelRotation\",\n    value: function beforeCalculateLabelRotation() {\n      (0, _helpersDataset.Q)(this.options.beforeCalculateLabelRotation, [this]);\n    }\n  }, {\n    key: \"calculateLabelRotation\",\n    value: function calculateLabelRotation() {\n      var options = this.options;\n      var tickOpts = options.ticks;\n      var numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n      var minRotation = tickOpts.minRotation || 0;\n      var maxRotation = tickOpts.maxRotation;\n      var labelRotation = minRotation;\n      var tickWidth, maxHeight, maxLabelDiagonal;\n\n      if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n        this.labelRotation = minRotation;\n        return;\n      }\n\n      var labelSizes = this._getLabelSizes();\n\n      var maxLabelWidth = labelSizes.widest.width;\n      var maxLabelHeight = labelSizes.highest.height;\n      var maxWidth = (0, _helpersDataset.S)(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n      tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n      if (maxLabelWidth + 6 > tickWidth) {\n        tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n        maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n        maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n        labelRotation = (0, _helpersDataset.U)(Math.min(Math.asin((0, _helpersDataset.S)((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin((0, _helpersDataset.S)(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin((0, _helpersDataset.S)(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n        labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n      }\n\n      this.labelRotation = labelRotation;\n    }\n  }, {\n    key: \"afterCalculateLabelRotation\",\n    value: function afterCalculateLabelRotation() {\n      (0, _helpersDataset.Q)(this.options.afterCalculateLabelRotation, [this]);\n    }\n  }, {\n    key: \"afterAutoSkip\",\n    value: function afterAutoSkip() {}\n  }, {\n    key: \"beforeFit\",\n    value: function beforeFit() {\n      (0, _helpersDataset.Q)(this.options.beforeFit, [this]);\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var minSize = {\n        width: 0,\n        height: 0\n      };\n      var chart = this.chart,\n          _this$options5 = this.options,\n          tickOpts = _this$options5.ticks,\n          titleOpts = _this$options5.title,\n          gridOpts = _this$options5.grid;\n\n      var display = this._isVisible();\n\n      var isHorizontal = this.isHorizontal();\n\n      if (display) {\n        var titleHeight = getTitleHeight(titleOpts, chart.options.font);\n\n        if (isHorizontal) {\n          minSize.width = this.maxWidth;\n          minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n        } else {\n          minSize.height = this.maxHeight;\n          minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n        }\n\n        if (tickOpts.display && this.ticks.length) {\n          var _this$_getLabelSizes = this._getLabelSizes(),\n              first = _this$_getLabelSizes.first,\n              last = _this$_getLabelSizes.last,\n              widest = _this$_getLabelSizes.widest,\n              highest = _this$_getLabelSizes.highest;\n\n          var tickPadding = tickOpts.padding * 2;\n          var angleRadians = (0, _helpersDataset.t)(this.labelRotation);\n          var cos = Math.cos(angleRadians);\n          var sin = Math.sin(angleRadians);\n\n          if (isHorizontal) {\n            var labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n            minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n          } else {\n            var labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n            minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n          }\n\n          this._calculatePadding(first, last, sin, cos);\n        }\n      }\n\n      this._handleMargins();\n\n      if (isHorizontal) {\n        this.width = this._length = chart.width - this._margins.left - this._margins.right;\n        this.height = minSize.height;\n      } else {\n        this.width = minSize.width;\n        this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n      }\n    }\n  }, {\n    key: \"_calculatePadding\",\n    value: function _calculatePadding(first, last, sin, cos) {\n      var _this$options6 = this.options,\n          _this$options6$ticks = _this$options6.ticks,\n          align = _this$options6$ticks.align,\n          padding = _this$options6$ticks.padding,\n          position = _this$options6.position;\n      var isRotated = this.labelRotation !== 0;\n      var labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n      if (this.isHorizontal()) {\n        var offsetLeft = this.getPixelForTick(0) - this.left;\n        var offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n        var paddingLeft = 0;\n        var paddingRight = 0;\n\n        if (isRotated) {\n          if (labelsBelowTicks) {\n            paddingLeft = cos * first.width;\n            paddingRight = sin * last.height;\n          } else {\n            paddingLeft = sin * first.height;\n            paddingRight = cos * last.width;\n          }\n        } else if (align === 'start') {\n          paddingRight = last.width;\n        } else if (align === 'end') {\n          paddingLeft = first.width;\n        } else if (align !== 'inner') {\n          paddingLeft = first.width / 2;\n          paddingRight = last.width / 2;\n        }\n\n        this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n        this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n      } else {\n        var paddingTop = last.height / 2;\n        var paddingBottom = first.height / 2;\n\n        if (align === 'start') {\n          paddingTop = 0;\n          paddingBottom = first.height;\n        } else if (align === 'end') {\n          paddingTop = last.height;\n          paddingBottom = 0;\n        }\n\n        this.paddingTop = paddingTop + padding;\n        this.paddingBottom = paddingBottom + padding;\n      }\n    }\n  }, {\n    key: \"_handleMargins\",\n    value: function _handleMargins() {\n      if (this._margins) {\n        this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n        this._margins.top = Math.max(this.paddingTop, this._margins.top);\n        this._margins.right = Math.max(this.paddingRight, this._margins.right);\n        this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n      }\n    }\n  }, {\n    key: \"afterFit\",\n    value: function afterFit() {\n      (0, _helpersDataset.Q)(this.options.afterFit, [this]);\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      var _this$options7 = this.options,\n          axis = _this$options7.axis,\n          position = _this$options7.position;\n      return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n  }, {\n    key: \"isFullSize\",\n    value: function isFullSize() {\n      return this.options.fullSize;\n    }\n  }, {\n    key: \"_convertTicksToLabels\",\n    value: function _convertTicksToLabels(ticks) {\n      this.beforeTickToLabelConversion();\n      this.generateTickLabels(ticks);\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; i++) {\n        if ((0, _helpersDataset.k)(ticks[i].label)) {\n          ticks.splice(i, 1);\n          ilen--;\n          i--;\n        }\n      }\n\n      this.afterTickToLabelConversion();\n    }\n  }, {\n    key: \"_getLabelSizes\",\n    value: function _getLabelSizes() {\n      var labelSizes = this._labelSizes;\n\n      if (!labelSizes) {\n        var sampleSize = this.options.ticks.sampleSize;\n        var ticks = this.ticks;\n\n        if (sampleSize < ticks.length) {\n          ticks = sample(ticks, sampleSize);\n        }\n\n        this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n      }\n\n      return labelSizes;\n    }\n  }, {\n    key: \"_computeLabelSizes\",\n    value: function _computeLabelSizes(ticks, length, maxTicksLimit) {\n      var ctx = this.ctx,\n          caches = this._longestTextCache;\n      var widths = [];\n      var heights = [];\n      var increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n      var widestLabelSize = 0;\n      var highestLabelSize = 0;\n      var i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n      for (i = 0; i < length; i += increment) {\n        label = ticks[i].label;\n        tickFont = this._resolveTickFontOptions(i);\n        ctx.font = fontString = tickFont.string;\n        cache = caches[fontString] = caches[fontString] || {\n          data: {},\n          gc: []\n        };\n        lineHeight = tickFont.lineHeight;\n        width = height = 0;\n\n        if (!(0, _helpersDataset.k)(label) && !(0, _helpersDataset.b)(label)) {\n          width = (0, _helpersDataset.V)(ctx, cache.data, cache.gc, width, label);\n          height = lineHeight;\n        } else if ((0, _helpersDataset.b)(label)) {\n          for (j = 0, jlen = label.length; j < jlen; ++j) {\n            nestedLabel = label[j];\n\n            if (!(0, _helpersDataset.k)(nestedLabel) && !(0, _helpersDataset.b)(nestedLabel)) {\n              width = (0, _helpersDataset.V)(ctx, cache.data, cache.gc, width, nestedLabel);\n              height += lineHeight;\n            }\n          }\n        }\n\n        widths.push(width);\n        heights.push(height);\n        widestLabelSize = Math.max(width, widestLabelSize);\n        highestLabelSize = Math.max(height, highestLabelSize);\n      }\n\n      garbageCollect(caches, length);\n      var widest = widths.indexOf(widestLabelSize);\n      var highest = heights.indexOf(highestLabelSize);\n\n      var valueAt = function valueAt(idx) {\n        return {\n          width: widths[idx] || 0,\n          height: heights[idx] || 0\n        };\n      };\n\n      return {\n        first: valueAt(0),\n        last: valueAt(length - 1),\n        widest: valueAt(widest),\n        highest: valueAt(highest),\n        widths: widths,\n        heights: heights\n      };\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return value;\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value, index) {\n      return NaN;\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {}\n  }, {\n    key: \"getPixelForTick\",\n    value: function getPixelForTick(index) {\n      var ticks = this.ticks;\n\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n\n      return this.getPixelForValue(ticks[index].value);\n    }\n  }, {\n    key: \"getPixelForDecimal\",\n    value: function getPixelForDecimal(decimal) {\n      if (this._reversePixels) {\n        decimal = 1 - decimal;\n      }\n\n      var pixel = this._startPixel + decimal * this._length;\n      return (0, _helpersDataset.W)(this._alignToPixels ? (0, _helpersDataset.X)(this.chart, pixel, 0) : pixel);\n    }\n  }, {\n    key: \"getDecimalForPixel\",\n    value: function getDecimalForPixel(pixel) {\n      var decimal = (pixel - this._startPixel) / this._length;\n      return this._reversePixels ? 1 - decimal : decimal;\n    }\n  }, {\n    key: \"getBasePixel\",\n    value: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    }\n  }, {\n    key: \"getBaseValue\",\n    value: function getBaseValue() {\n      var min = this.min,\n          max = this.max;\n      return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext(index) {\n      var ticks = this.ticks || [];\n\n      if (index >= 0 && index < ticks.length) {\n        var tick = ticks[index];\n        return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n      }\n\n      return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n  }, {\n    key: \"_tickSize\",\n    value: function _tickSize() {\n      var optionTicks = this.options.ticks;\n      var rot = (0, _helpersDataset.t)(this.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n\n      var labelSizes = this._getLabelSizes();\n\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = labelSizes ? labelSizes.widest.width + padding : 0;\n      var h = labelSizes ? labelSizes.highest.height + padding : 0;\n      return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n  }, {\n    key: \"_isVisible\",\n    value: function _isVisible() {\n      var display = this.options.display;\n\n      if (display !== 'auto') {\n        return !!display;\n      }\n\n      return this.getMatchingVisibleMetas().length > 0;\n    }\n  }, {\n    key: \"_computeGridLineItems\",\n    value: function _computeGridLineItems(chartArea) {\n      var axis = this.axis;\n      var chart = this.chart;\n      var options = this.options;\n      var grid = options.grid,\n          position = options.position,\n          border = options.border;\n      var offset = grid.offset;\n      var isHorizontal = this.isHorizontal();\n      var ticks = this.ticks;\n      var ticksLength = ticks.length + (offset ? 1 : 0);\n      var tl = getTickMarkLength(grid);\n      var items = [];\n      var borderOpts = border.setContext(this.getContext());\n      var axisWidth = borderOpts.display ? borderOpts.width : 0;\n      var axisHalfWidth = axisWidth / 2;\n\n      var alignBorderValue = function alignBorderValue(pixel) {\n        return (0, _helpersDataset.X)(chart, pixel, axisWidth);\n      };\n\n      var borderValue, i, lineValue, alignedLineValue;\n      var tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n      if (position === 'top') {\n        borderValue = alignBorderValue(this.bottom);\n        ty1 = this.bottom - tl;\n        ty2 = borderValue - axisHalfWidth;\n        y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n        y2 = chartArea.bottom;\n      } else if (position === 'bottom') {\n        borderValue = alignBorderValue(this.top);\n        y1 = chartArea.top;\n        y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = this.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignBorderValue(this.right);\n        tx1 = this.right - tl;\n        tx2 = borderValue - axisHalfWidth;\n        x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n        x2 = chartArea.right;\n      } else if (position === 'right') {\n        borderValue = alignBorderValue(this.left);\n        x1 = chartArea.left;\n        x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n        tx1 = borderValue + axisHalfWidth;\n        tx2 = this.left + tl;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n        } else if ((0, _helpersDataset.i)(position)) {\n          var positionAxisID = Object.keys(position)[0];\n          var value = position[positionAxisID];\n          borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n        }\n\n        y1 = chartArea.top;\n        y2 = chartArea.bottom;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = ty1 + tl;\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n        } else if ((0, _helpersDataset.i)(position)) {\n          var _positionAxisID2 = Object.keys(position)[0];\n          var _value2 = position[_positionAxisID2];\n          borderValue = alignBorderValue(this.chart.scales[_positionAxisID2].getPixelForValue(_value2));\n        }\n\n        tx1 = borderValue - axisHalfWidth;\n        tx2 = tx1 - tl;\n        x1 = chartArea.left;\n        x2 = chartArea.right;\n      }\n\n      var limit = (0, _helpersDataset.v)(options.ticks.maxTicksLimit, ticksLength);\n      var step = Math.max(1, Math.ceil(ticksLength / limit));\n\n      for (i = 0; i < ticksLength; i += step) {\n        var context = this.getContext(i);\n        var optsAtIndex = grid.setContext(context);\n        var optsAtIndexBorder = border.setContext(context);\n        var lineWidth = optsAtIndex.lineWidth;\n        var lineColor = optsAtIndex.color;\n        var borderDash = optsAtIndexBorder.dash || [];\n        var borderDashOffset = optsAtIndexBorder.dashOffset;\n        var tickWidth = optsAtIndex.tickWidth;\n        var tickColor = optsAtIndex.tickColor;\n        var tickBorderDash = optsAtIndex.tickBorderDash || [];\n        var tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n        lineValue = getPixelForGridLine(this, i, offset);\n\n        if (lineValue === undefined) {\n          continue;\n        }\n\n        alignedLineValue = (0, _helpersDataset.X)(chart, lineValue, lineWidth);\n\n        if (isHorizontal) {\n          tx1 = tx2 = x1 = x2 = alignedLineValue;\n        } else {\n          ty1 = ty2 = y1 = y2 = alignedLineValue;\n        }\n\n        items.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          width: lineWidth,\n          color: lineColor,\n          borderDash: borderDash,\n          borderDashOffset: borderDashOffset,\n          tickWidth: tickWidth,\n          tickColor: tickColor,\n          tickBorderDash: tickBorderDash,\n          tickBorderDashOffset: tickBorderDashOffset\n        });\n      }\n\n      this._ticksLength = ticksLength;\n      this._borderValue = borderValue;\n      return items;\n    }\n  }, {\n    key: \"_computeLabelItems\",\n    value: function _computeLabelItems(chartArea) {\n      var axis = this.axis;\n      var options = this.options;\n      var position = options.position,\n          optionTicks = options.ticks;\n      var isHorizontal = this.isHorizontal();\n      var ticks = this.ticks;\n      var align = optionTicks.align,\n          crossAlign = optionTicks.crossAlign,\n          padding = optionTicks.padding,\n          mirror = optionTicks.mirror;\n      var tl = getTickMarkLength(options.grid);\n      var tickAndPadding = tl + padding;\n      var hTickAndPadding = mirror ? -padding : tickAndPadding;\n      var rotation = -(0, _helpersDataset.t)(this.labelRotation);\n      var items = [];\n      var i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n      var textBaseline = 'middle';\n\n      if (position === 'top') {\n        y = this.bottom - hTickAndPadding;\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (position === 'bottom') {\n        y = this.top + hTickAndPadding;\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (position === 'left') {\n        var ret = this._getYAxisLabelAlignment(tl);\n\n        textAlign = ret.textAlign;\n        x = ret.x;\n      } else if (position === 'right') {\n        var _ret = this._getYAxisLabelAlignment(tl);\n\n        textAlign = _ret.textAlign;\n        x = _ret.x;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n        } else if ((0, _helpersDataset.i)(position)) {\n          var positionAxisID = Object.keys(position)[0];\n          var value = position[positionAxisID];\n          y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n        }\n\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n        } else if ((0, _helpersDataset.i)(position)) {\n          var _positionAxisID3 = Object.keys(position)[0];\n          var _value3 = position[_positionAxisID3];\n          x = this.chart.scales[_positionAxisID3].getPixelForValue(_value3);\n        }\n\n        textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n      }\n\n      if (axis === 'y') {\n        if (align === 'start') {\n          textBaseline = 'top';\n        } else if (align === 'end') {\n          textBaseline = 'bottom';\n        }\n      }\n\n      var labelSizes = this._getLabelSizes();\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        label = tick.label;\n        var optsAtIndex = optionTicks.setContext(this.getContext(i));\n        pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n        font = this._resolveTickFontOptions(i);\n        lineHeight = font.lineHeight;\n        lineCount = (0, _helpersDataset.b)(label) ? label.length : 1;\n        var halfCount = lineCount / 2;\n        var color = optsAtIndex.color;\n        var strokeColor = optsAtIndex.textStrokeColor;\n        var strokeWidth = optsAtIndex.textStrokeWidth;\n        var tickTextAlign = textAlign;\n\n        if (isHorizontal) {\n          x = pixel;\n\n          if (textAlign === 'inner') {\n            if (i === ilen - 1) {\n              tickTextAlign = !this.options.reverse ? 'right' : 'left';\n            } else if (i === 0) {\n              tickTextAlign = !this.options.reverse ? 'left' : 'right';\n            } else {\n              tickTextAlign = 'center';\n            }\n          }\n\n          if (position === 'top') {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = -lineCount * lineHeight + lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n            } else {\n              textOffset = -labelSizes.highest.height + lineHeight / 2;\n            }\n          } else {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n            } else {\n              textOffset = labelSizes.highest.height - lineCount * lineHeight;\n            }\n          }\n\n          if (mirror) {\n            textOffset *= -1;\n          }\n\n          if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n            x += lineHeight / 2 * Math.sin(rotation);\n          }\n        } else {\n          y = pixel;\n          textOffset = (1 - lineCount) * lineHeight / 2;\n        }\n\n        var backdrop = void 0;\n\n        if (optsAtIndex.showLabelBackdrop) {\n          var labelPadding = (0, _helpersDataset.E)(optsAtIndex.backdropPadding);\n          var height = labelSizes.heights[i];\n          var width = labelSizes.widths[i];\n          var top = textOffset - labelPadding.top;\n          var left = 0 - labelPadding.left;\n\n          switch (textBaseline) {\n            case 'middle':\n              top -= height / 2;\n              break;\n\n            case 'bottom':\n              top -= height;\n              break;\n          }\n\n          switch (textAlign) {\n            case 'center':\n              left -= width / 2;\n              break;\n\n            case 'right':\n              left -= width;\n              break;\n\n            case 'inner':\n              if (i === ilen - 1) {\n                left -= width;\n              } else if (i > 0) {\n                left -= width / 2;\n              }\n\n              break;\n          }\n\n          backdrop = {\n            left: left,\n            top: top,\n            width: width + labelPadding.width,\n            height: height + labelPadding.height,\n            color: optsAtIndex.backdropColor\n          };\n        }\n\n        items.push({\n          label: label,\n          font: font,\n          textOffset: textOffset,\n          options: {\n            rotation: rotation,\n            color: color,\n            strokeColor: strokeColor,\n            strokeWidth: strokeWidth,\n            textAlign: tickTextAlign,\n            textBaseline: textBaseline,\n            translation: [x, y],\n            backdrop: backdrop\n          }\n        });\n      }\n\n      return items;\n    }\n  }, {\n    key: \"_getXAxisLabelAlignment\",\n    value: function _getXAxisLabelAlignment() {\n      var _this$options8 = this.options,\n          position = _this$options8.position,\n          ticks = _this$options8.ticks;\n      var rotation = -(0, _helpersDataset.t)(this.labelRotation);\n\n      if (rotation) {\n        return position === 'top' ? 'left' : 'right';\n      }\n\n      var align = 'center';\n\n      if (ticks.align === 'start') {\n        align = 'left';\n      } else if (ticks.align === 'end') {\n        align = 'right';\n      } else if (ticks.align === 'inner') {\n        align = 'inner';\n      }\n\n      return align;\n    }\n  }, {\n    key: \"_getYAxisLabelAlignment\",\n    value: function _getYAxisLabelAlignment(tl) {\n      var _this$options9 = this.options,\n          position = _this$options9.position,\n          _this$options9$ticks = _this$options9.ticks,\n          crossAlign = _this$options9$ticks.crossAlign,\n          mirror = _this$options9$ticks.mirror,\n          padding = _this$options9$ticks.padding;\n\n      var labelSizes = this._getLabelSizes();\n\n      var tickAndPadding = tl + padding;\n      var widest = labelSizes.widest.width;\n      var textAlign;\n      var x;\n\n      if (position === 'left') {\n        if (mirror) {\n          x = this.right + padding;\n\n          if (crossAlign === 'near') {\n            textAlign = 'left';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x += widest / 2;\n          } else {\n            textAlign = 'right';\n            x += widest;\n          }\n        } else {\n          x = this.right - tickAndPadding;\n\n          if (crossAlign === 'near') {\n            textAlign = 'right';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x -= widest / 2;\n          } else {\n            textAlign = 'left';\n            x = this.left;\n          }\n        }\n      } else if (position === 'right') {\n        if (mirror) {\n          x = this.left + padding;\n\n          if (crossAlign === 'near') {\n            textAlign = 'right';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x -= widest / 2;\n          } else {\n            textAlign = 'left';\n            x -= widest;\n          }\n        } else {\n          x = this.left + tickAndPadding;\n\n          if (crossAlign === 'near') {\n            textAlign = 'left';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x += widest / 2;\n          } else {\n            textAlign = 'right';\n            x = this.right;\n          }\n        }\n      } else {\n        textAlign = 'right';\n      }\n\n      return {\n        textAlign: textAlign,\n        x: x\n      };\n    }\n  }, {\n    key: \"_computeLabelArea\",\n    value: function _computeLabelArea() {\n      if (this.options.ticks.mirror) {\n        return;\n      }\n\n      var chart = this.chart;\n      var position = this.options.position;\n\n      if (position === 'left' || position === 'right') {\n        return {\n          top: 0,\n          left: this.left,\n          bottom: chart.height,\n          right: this.right\n        };\n      }\n\n      if (position === 'top' || position === 'bottom') {\n        return {\n          top: this.top,\n          left: 0,\n          bottom: this.bottom,\n          right: chart.width\n        };\n      }\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground() {\n      var ctx = this.ctx,\n          backgroundColor = this.options.backgroundColor,\n          left = this.left,\n          top = this.top,\n          width = this.width,\n          height = this.height;\n\n      if (backgroundColor) {\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        ctx.fillRect(left, top, width, height);\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"getLineWidthForValue\",\n    value: function getLineWidthForValue(value) {\n      var grid = this.options.grid;\n\n      if (!this._isVisible() || !grid.display) {\n        return 0;\n      }\n\n      var ticks = this.ticks;\n      var index = ticks.findIndex(function (t) {\n        return t.value === value;\n      });\n\n      if (index >= 0) {\n        var opts = grid.setContext(this.getContext(index));\n        return opts.lineWidth;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"drawGrid\",\n    value: function drawGrid(chartArea) {\n      var grid = this.options.grid;\n      var ctx = this.ctx;\n\n      var items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n\n      var i, ilen;\n\n      var drawLine = function drawLine(p1, p2, style) {\n        if (!style.width || !style.color) {\n          return;\n        }\n\n        ctx.save();\n        ctx.lineWidth = style.width;\n        ctx.strokeStyle = style.color;\n        ctx.setLineDash(style.borderDash || []);\n        ctx.lineDashOffset = style.borderDashOffset;\n        ctx.beginPath();\n        ctx.moveTo(p1.x, p1.y);\n        ctx.lineTo(p2.x, p2.y);\n        ctx.stroke();\n        ctx.restore();\n      };\n\n      if (grid.display) {\n        for (i = 0, ilen = items.length; i < ilen; ++i) {\n          var item = items[i];\n\n          if (grid.drawOnChartArea) {\n            drawLine({\n              x: item.x1,\n              y: item.y1\n            }, {\n              x: item.x2,\n              y: item.y2\n            }, item);\n          }\n\n          if (grid.drawTicks) {\n            drawLine({\n              x: item.tx1,\n              y: item.ty1\n            }, {\n              x: item.tx2,\n              y: item.ty2\n            }, {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            });\n          }\n        }\n      }\n    }\n  }, {\n    key: \"drawBorder\",\n    value: function drawBorder() {\n      var chart = this.chart,\n          ctx = this.ctx,\n          _this$options10 = this.options,\n          border = _this$options10.border,\n          grid = _this$options10.grid;\n      var borderOpts = border.setContext(this.getContext());\n      var axisWidth = border.display ? borderOpts.width : 0;\n\n      if (!axisWidth) {\n        return;\n      }\n\n      var lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n      var borderValue = this._borderValue;\n      var x1, x2, y1, y2;\n\n      if (this.isHorizontal()) {\n        x1 = (0, _helpersDataset.X)(chart, this.left, axisWidth) - axisWidth / 2;\n        x2 = (0, _helpersDataset.X)(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n        y1 = y2 = borderValue;\n      } else {\n        y1 = (0, _helpersDataset.X)(chart, this.top, axisWidth) - axisWidth / 2;\n        y2 = (0, _helpersDataset.X)(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n        x1 = x2 = borderValue;\n      }\n\n      ctx.save();\n      ctx.lineWidth = borderOpts.width;\n      ctx.strokeStyle = borderOpts.color;\n      ctx.beginPath();\n      ctx.moveTo(x1, y1);\n      ctx.lineTo(x2, y2);\n      ctx.stroke();\n      ctx.restore();\n    }\n  }, {\n    key: \"drawLabels\",\n    value: function drawLabels(chartArea) {\n      var optionTicks = this.options.ticks;\n\n      if (!optionTicks.display) {\n        return;\n      }\n\n      var ctx = this.ctx;\n\n      var area = this._computeLabelArea();\n\n      if (area) {\n        (0, _helpersDataset.Y)(ctx, area);\n      }\n\n      var items = this.getLabelItems(chartArea);\n      var _iteratorNormalCompletion11 = true;\n      var _didIteratorError11 = false;\n      var _iteratorError11 = undefined;\n\n      try {\n        for (var _iterator11 = items[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n          var item = _step11.value;\n          var renderTextOptions = item.options;\n          var tickFont = item.font;\n          var label = item.label;\n          var y = item.textOffset;\n          (0, _helpersDataset.Z)(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n      } catch (err) {\n        _didIteratorError11 = true;\n        _iteratorError11 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion11 && _iterator11.return != null) {\n            _iterator11.return();\n          }\n        } finally {\n          if (_didIteratorError11) {\n            throw _iteratorError11;\n          }\n        }\n      }\n\n      if (area) {\n        (0, _helpersDataset.$)(ctx);\n      }\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {\n      var ctx = this.ctx,\n          _this$options11 = this.options,\n          position = _this$options11.position,\n          title = _this$options11.title,\n          reverse = _this$options11.reverse;\n\n      if (!title.display) {\n        return;\n      }\n\n      var font = (0, _helpersDataset.a0)(title.font);\n      var padding = (0, _helpersDataset.E)(title.padding);\n      var align = title.align;\n      var offset = font.lineHeight / 2;\n\n      if (position === 'bottom' || position === 'center' || (0, _helpersDataset.i)(position)) {\n        offset += padding.bottom;\n\n        if ((0, _helpersDataset.b)(title.text)) {\n          offset += font.lineHeight * (title.text.length - 1);\n        }\n      } else {\n        offset += padding.top;\n      }\n\n      var _titleArgs = titleArgs(this, offset, position, align),\n          titleX = _titleArgs.titleX,\n          titleY = _titleArgs.titleY,\n          maxWidth = _titleArgs.maxWidth,\n          rotation = _titleArgs.rotation;\n\n      (0, _helpersDataset.Z)(ctx, title.text, 0, 0, font, {\n        color: title.color,\n        maxWidth: maxWidth,\n        rotation: rotation,\n        textAlign: titleAlign(align, position, reverse),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(chartArea) {\n      if (!this._isVisible()) {\n        return;\n      }\n\n      this.drawBackground();\n      this.drawGrid(chartArea);\n      this.drawBorder();\n      this.drawTitle();\n      this.drawLabels(chartArea);\n    }\n  }, {\n    key: \"_layers\",\n    value: function _layers() {\n      var _this10 = this;\n\n      var opts = this.options;\n      var tz = opts.ticks && opts.ticks.z || 0;\n      var gz = (0, _helpersDataset.v)(opts.grid && opts.grid.z, -1);\n      var bz = (0, _helpersDataset.v)(opts.border && opts.border.z, 0);\n\n      if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n        return [{\n          z: tz,\n          draw: function draw(chartArea) {\n            _this10.draw(chartArea);\n          }\n        }];\n      }\n\n      return [{\n        z: gz,\n        draw: function draw(chartArea) {\n          _this10.drawBackground();\n\n          _this10.drawGrid(chartArea);\n\n          _this10.drawTitle();\n        }\n      }, {\n        z: bz,\n        draw: function draw() {\n          _this10.drawBorder();\n        }\n      }, {\n        z: tz,\n        draw: function draw(chartArea) {\n          _this10.drawLabels(chartArea);\n        }\n      }];\n    }\n  }, {\n    key: \"getMatchingVisibleMetas\",\n    value: function getMatchingVisibleMetas(type) {\n      var metas = this.chart.getSortedVisibleDatasetMetas();\n      var axisID = this.axis + 'AxisID';\n      var result = [];\n      var i, ilen;\n\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        var meta = metas[i];\n\n        if (meta[axisID] === this.id && (!type || meta.type === type)) {\n          result.push(meta);\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_resolveTickFontOptions\",\n    value: function _resolveTickFontOptions(index) {\n      var opts = this.options.ticks.setContext(this.getContext(index));\n      return (0, _helpersDataset.a0)(opts.font);\n    }\n  }, {\n    key: \"_maxDigits\",\n    value: function _maxDigits() {\n      var fontSize = this._resolveTickFontOptions(0).lineHeight;\n\n      return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n  }]);\n  return Scale;\n}(Element);\n\nexports.Scale = Scale;\n\nvar TypedRegistry =\n/*#__PURE__*/\nfunction () {\n  function TypedRegistry(type, scope, override) {\n    (0, _classCallCheck2.default)(this, TypedRegistry);\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  (0, _createClass2.default)(TypedRegistry, [{\n    key: \"isForType\",\n    value: function isForType(type) {\n      return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n  }, {\n    key: \"register\",\n    value: function register(item) {\n      var proto = Object.getPrototypeOf(item);\n      var parentScope;\n\n      if (isIChartComponent(proto)) {\n        parentScope = this.register(proto);\n      }\n\n      var items = this.items;\n      var id = item.id;\n      var scope = this.scope + '.' + id;\n\n      if (!id) {\n        throw new Error('class does not have id: ' + item);\n      }\n\n      if (id in items) {\n        return scope;\n      }\n\n      items[id] = item;\n      registerDefaults(item, scope, parentScope);\n\n      if (this.override) {\n        _helpersDataset.d.override(item.id, item.overrides);\n      }\n\n      return scope;\n    }\n  }, {\n    key: \"get\",\n    value: function get(id) {\n      return this.items[id];\n    }\n  }, {\n    key: \"unregister\",\n    value: function unregister(item) {\n      var items = this.items;\n      var id = item.id;\n      var scope = this.scope;\n\n      if (id in items) {\n        delete items[id];\n      }\n\n      if (scope && id in _helpersDataset.d[scope]) {\n        delete _helpersDataset.d[scope][id];\n\n        if (this.override) {\n          delete _helpersDataset.a3[id];\n        }\n      }\n    }\n  }]);\n  return TypedRegistry;\n}();\n\nfunction registerDefaults(item, scope, parentScope) {\n  var itemDefaults = (0, _helpersDataset.a4)(Object.create(null), [parentScope ? _helpersDataset.d.get(parentScope) : {}, _helpersDataset.d.get(scope), item.defaults]);\n\n  _helpersDataset.d.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    _helpersDataset.d.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(function (property) {\n    var propertyParts = property.split('.');\n    var sourceName = propertyParts.pop();\n    var sourceScope = [scope].concat(propertyParts).join('.');\n    var parts = routes[property].split('.');\n    var targetName = parts.pop();\n    var targetScope = parts.join('.');\n\n    _helpersDataset.d.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nvar Registry =\n/*#__PURE__*/\nfunction () {\n  function Registry() {\n    (0, _classCallCheck2.default)(this, Registry);\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  (0, _createClass2.default)(Registry, [{\n    key: \"add\",\n    value: function add() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      this._each('register', args);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      this._each('unregister', args);\n    }\n  }, {\n    key: \"addControllers\",\n    value: function addControllers() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      this._each('register', args, this.controllers);\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      this._each('register', args, this.elements);\n    }\n  }, {\n    key: \"addPlugins\",\n    value: function addPlugins() {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n\n      this._each('register', args, this.plugins);\n    }\n  }, {\n    key: \"addScales\",\n    value: function addScales() {\n      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n\n      this._each('register', args, this.scales);\n    }\n  }, {\n    key: \"getController\",\n    value: function getController(id) {\n      return this._get(id, this.controllers, 'controller');\n    }\n  }, {\n    key: \"getElement\",\n    value: function getElement(id) {\n      return this._get(id, this.elements, 'element');\n    }\n  }, {\n    key: \"getPlugin\",\n    value: function getPlugin(id) {\n      return this._get(id, this.plugins, 'plugin');\n    }\n  }, {\n    key: \"getScale\",\n    value: function getScale(id) {\n      return this._get(id, this.scales, 'scale');\n    }\n  }, {\n    key: \"removeControllers\",\n    value: function removeControllers() {\n      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n\n      this._each('unregister', args, this.controllers);\n    }\n  }, {\n    key: \"removeElements\",\n    value: function removeElements() {\n      for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n        args[_key8] = arguments[_key8];\n      }\n\n      this._each('unregister', args, this.elements);\n    }\n  }, {\n    key: \"removePlugins\",\n    value: function removePlugins() {\n      for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n        args[_key9] = arguments[_key9];\n      }\n\n      this._each('unregister', args, this.plugins);\n    }\n  }, {\n    key: \"removeScales\",\n    value: function removeScales() {\n      for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n        args[_key10] = arguments[_key10];\n      }\n\n      this._each('unregister', args, this.scales);\n    }\n  }, {\n    key: \"_each\",\n    value: function _each(method, args, typedRegistry) {\n      var _this11 = this;\n\n      (0, _toConsumableArray2.default)(args).forEach(function (arg) {\n        var reg = typedRegistry || _this11._getRegistryForType(arg);\n\n        if (typedRegistry || reg.isForType(arg) || reg === _this11.plugins && arg.id) {\n          _this11._exec(method, reg, arg);\n        } else {\n          (0, _helpersDataset.F)(arg, function (item) {\n            var itemReg = typedRegistry || _this11._getRegistryForType(item);\n\n            _this11._exec(method, itemReg, item);\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_exec\",\n    value: function _exec(method, registry, component) {\n      var camelMethod = (0, _helpersDataset.a5)(method);\n      (0, _helpersDataset.Q)(component['before' + camelMethod], [], component);\n      registry[method](component);\n      (0, _helpersDataset.Q)(component['after' + camelMethod], [], component);\n    }\n  }, {\n    key: \"_getRegistryForType\",\n    value: function _getRegistryForType(type) {\n      for (var i = 0; i < this._typedRegistries.length; i++) {\n        var reg = this._typedRegistries[i];\n\n        if (reg.isForType(type)) {\n          return reg;\n        }\n      }\n\n      return this.plugins;\n    }\n  }, {\n    key: \"_get\",\n    value: function _get(id, typedRegistry, type) {\n      var item = typedRegistry.get(id);\n\n      if (item === undefined) {\n        throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n      }\n\n      return item;\n    }\n  }]);\n  return Registry;\n}();\n\nvar registry =\n/* #__PURE__ */\nnew Registry();\nexports.registry = registry;\n\nvar PluginService =\n/*#__PURE__*/\nfunction () {\n  function PluginService() {\n    (0, _classCallCheck2.default)(this, PluginService);\n    this._init = [];\n  }\n\n  (0, _createClass2.default)(PluginService, [{\n    key: \"notify\",\n    value: function notify(chart, hook, args, filter) {\n      if (hook === 'beforeInit') {\n        this._init = this._createDescriptors(chart, true);\n\n        this._notify(this._init, chart, 'install');\n      }\n\n      var descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n\n      var result = this._notify(descriptors, chart, hook, args);\n\n      if (hook === 'afterDestroy') {\n        this._notify(descriptors, chart, 'stop');\n\n        this._notify(this._init, chart, 'uninstall');\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_notify\",\n    value: function _notify(descriptors, chart, hook, args) {\n      args = args || {};\n      var _iteratorNormalCompletion12 = true;\n      var _didIteratorError12 = false;\n      var _iteratorError12 = undefined;\n\n      try {\n        for (var _iterator12 = descriptors[Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {\n          var descriptor = _step12.value;\n          var plugin = descriptor.plugin;\n          var method = plugin[hook];\n          var params = [chart, args, descriptor.options];\n\n          if ((0, _helpersDataset.Q)(method, params, plugin) === false && args.cancelable) {\n            return false;\n          }\n        }\n      } catch (err) {\n        _didIteratorError12 = true;\n        _iteratorError12 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion12 && _iterator12.return != null) {\n            _iterator12.return();\n          }\n        } finally {\n          if (_didIteratorError12) {\n            throw _iteratorError12;\n          }\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"invalidate\",\n    value: function invalidate() {\n      if (!(0, _helpersDataset.k)(this._cache)) {\n        this._oldCache = this._cache;\n        this._cache = undefined;\n      }\n    }\n  }, {\n    key: \"_descriptors\",\n    value: function _descriptors(chart) {\n      if (this._cache) {\n        return this._cache;\n      }\n\n      var descriptors = this._cache = this._createDescriptors(chart);\n\n      this._notifyStateChanges(chart);\n\n      return descriptors;\n    }\n  }, {\n    key: \"_createDescriptors\",\n    value: function _createDescriptors(chart, all) {\n      var config = chart && chart.config;\n      var options = (0, _helpersDataset.v)(config.options && config.options.plugins, {});\n      var plugins = allPlugins(config);\n      return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n  }, {\n    key: \"_notifyStateChanges\",\n    value: function _notifyStateChanges(chart) {\n      var previousDescriptors = this._oldCache || [];\n      var descriptors = this._cache;\n\n      var diff = function diff(a, b) {\n        return a.filter(function (x) {\n          return !b.some(function (y) {\n            return x.plugin.id === y.plugin.id;\n          });\n        });\n      };\n\n      this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n\n      this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n  }]);\n  return PluginService;\n}();\n\nfunction allPlugins(config) {\n  var localIds = {};\n  var plugins = [];\n  var keys = Object.keys(registry.plugins.items);\n\n  for (var i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  var local = config.plugins || [];\n\n  for (var _i = 0; _i < local.length; _i++) {\n    var plugin = local[_i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {\n    plugins: plugins,\n    localIds: localIds\n  };\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n\n  if (options === true) {\n    return {};\n  }\n\n  return options;\n}\n\nfunction createDescriptors(chart, _ref2, options, all) {\n  var plugins = _ref2.plugins,\n      localIds = _ref2.localIds;\n  var result = [];\n  var context = chart.getContext();\n  var _iteratorNormalCompletion13 = true;\n  var _didIteratorError13 = false;\n  var _iteratorError13 = undefined;\n\n  try {\n    for (var _iterator13 = plugins[Symbol.iterator](), _step13; !(_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done); _iteratorNormalCompletion13 = true) {\n      var plugin = _step13.value;\n      var id = plugin.id;\n      var opts = getOpts(options[id], all);\n\n      if (opts === null) {\n        continue;\n      }\n\n      result.push({\n        plugin: plugin,\n        options: pluginOpts(chart.config, {\n          plugin: plugin,\n          local: localIds[id]\n        }, opts, context)\n      });\n    }\n  } catch (err) {\n    _didIteratorError13 = true;\n    _iteratorError13 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion13 && _iterator13.return != null) {\n        _iterator13.return();\n      }\n    } finally {\n      if (_didIteratorError13) {\n        throw _iteratorError13;\n      }\n    }\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, _ref3, opts, context) {\n  var plugin = _ref3.plugin,\n      local = _ref3.local;\n  var keys = config.pluginScopeKeys(plugin);\n  var scopes = config.getOptionScopes(opts, keys);\n\n  if (local && plugin.defaults) {\n    scopes.push(plugin.defaults);\n  }\n\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n\nfunction getIndexAxis(type, options) {\n  var datasetDefaults = _helpersDataset.d.datasets[type] || {};\n  var datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  var axis = id;\n\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nfunction determineAxis(id) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n\n  for (var _len11 = arguments.length, scaleOptions = new Array(_len11 > 1 ? _len11 - 1 : 0), _key11 = 1; _key11 < _len11; _key11++) {\n    scaleOptions[_key11 - 1] = arguments[_key11];\n  }\n\n  for (var _i2 = 0, _scaleOptions = scaleOptions; _i2 < _scaleOptions.length; _i2++) {\n    var opts = _scaleOptions[_i2];\n    var axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n\n    if (axis) {\n      return axis;\n    }\n  }\n\n  throw new Error(\"Cannot determine type of '\".concat(id, \"' axis. Please provide 'axis' or 'position' option.\"));\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {\n      axis: axis\n    };\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    var boundDs = config.data.datasets.filter(function (d) {\n      return d.xAxisID === id || d.yAxisID === id;\n    });\n\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  var chartDefaults = _helpersDataset.a3[config.type] || {\n    scales: {}\n  };\n  var configScales = options.scales || {};\n  var chartIndexAxis = getIndexAxis(config.type, options);\n  var scales = Object.create(null);\n  Object.keys(configScales).forEach(function (id) {\n    var scaleConf = configScales[id];\n\n    if (!(0, _helpersDataset.i)(scaleConf)) {\n      return console.error(\"Invalid scale configuration for scale: \".concat(id));\n    }\n\n    if (scaleConf._proxy) {\n      return console.warn(\"Ignoring resolver passed as options for scale: \".concat(id));\n    }\n\n    var axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), _helpersDataset.d.scales[scaleConf.type]);\n    var defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    var defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = (0, _helpersDataset.ab)(Object.create(null), [{\n      axis: axis\n    }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(function (dataset) {\n    var type = dataset.type || config.type;\n    var indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    var datasetDefaults = _helpersDataset.a3[type] || {};\n    var defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(function (defaultID) {\n      var axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      var id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      (0, _helpersDataset.ab)(scales[id], [{\n        axis: axis\n      }, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(function (key) {\n    var scale = scales[key];\n    (0, _helpersDataset.ab)(scale, [_helpersDataset.d.scales[scale.type], _helpersDataset.d.scale]);\n  });\n  return scales;\n}\n\nfunction initOptions(config) {\n  var options = config.options || (config.options = {});\n  options.plugins = (0, _helpersDataset.v)(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\n\nvar keyCache = new Map();\nvar keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  var keys = keyCache.get(cacheKey);\n\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n\n  return keys;\n}\n\nvar addIfFound = function addIfFound(set, obj, key) {\n  var opts = (0, _helpersDataset.f)(obj, key);\n\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nvar Config =\n/*#__PURE__*/\nfunction () {\n  function Config(config) {\n    (0, _classCallCheck2.default)(this, Config);\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  (0, _createClass2.default)(Config, [{\n    key: \"update\",\n    value: function update() {\n      var config = this._config;\n      this.clearCache();\n      initOptions(config);\n    }\n  }, {\n    key: \"clearCache\",\n    value: function clearCache() {\n      this._scopeCache.clear();\n\n      this._resolverCache.clear();\n    }\n  }, {\n    key: \"datasetScopeKeys\",\n    value: function datasetScopeKeys(datasetType) {\n      return cachedKeys(datasetType, function () {\n        return [[\"datasets.\".concat(datasetType), '']];\n      });\n    }\n  }, {\n    key: \"datasetAnimationScopeKeys\",\n    value: function datasetAnimationScopeKeys(datasetType, transition) {\n      return cachedKeys(\"\".concat(datasetType, \".transition.\").concat(transition), function () {\n        return [[\"datasets.\".concat(datasetType, \".transitions.\").concat(transition), \"transitions.\".concat(transition)], [\"datasets.\".concat(datasetType), '']];\n      });\n    }\n  }, {\n    key: \"datasetElementScopeKeys\",\n    value: function datasetElementScopeKeys(datasetType, elementType) {\n      return cachedKeys(\"\".concat(datasetType, \"-\").concat(elementType), function () {\n        return [[\"datasets.\".concat(datasetType, \".elements.\").concat(elementType), \"datasets.\".concat(datasetType), \"elements.\".concat(elementType), '']];\n      });\n    }\n  }, {\n    key: \"pluginScopeKeys\",\n    value: function pluginScopeKeys(plugin) {\n      var id = plugin.id;\n      var type = this.type;\n      return cachedKeys(\"\".concat(type, \"-plugin-\").concat(id), function () {\n        return [[\"plugins.\".concat(id)].concat((0, _toConsumableArray2.default)(plugin.additionalOptionScopes || []))];\n      });\n    }\n  }, {\n    key: \"_cachedScopes\",\n    value: function _cachedScopes(mainScope, resetCache) {\n      var _scopeCache = this._scopeCache;\n\n      var cache = _scopeCache.get(mainScope);\n\n      if (!cache || resetCache) {\n        cache = new Map();\n\n        _scopeCache.set(mainScope, cache);\n      }\n\n      return cache;\n    }\n  }, {\n    key: \"getOptionScopes\",\n    value: function getOptionScopes(mainScope, keyLists, resetCache) {\n      var options = this.options,\n          type = this.type;\n\n      var cache = this._cachedScopes(mainScope, resetCache);\n\n      var cached = cache.get(keyLists);\n\n      if (cached) {\n        return cached;\n      }\n\n      var scopes = new Set();\n      keyLists.forEach(function (keys) {\n        if (mainScope) {\n          scopes.add(mainScope);\n          keys.forEach(function (key) {\n            return addIfFound(scopes, mainScope, key);\n          });\n        }\n\n        keys.forEach(function (key) {\n          return addIfFound(scopes, options, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, _helpersDataset.a3[type] || {}, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, _helpersDataset.d, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, _helpersDataset.a6, key);\n        });\n      });\n      var array = Array.from(scopes);\n\n      if (array.length === 0) {\n        array.push(Object.create(null));\n      }\n\n      if (keysCached.has(keyLists)) {\n        cache.set(keyLists, array);\n      }\n\n      return array;\n    }\n  }, {\n    key: \"chartOptionScopes\",\n    value: function chartOptionScopes() {\n      var options = this.options,\n          type = this.type;\n      return [options, _helpersDataset.a3[type] || {}, _helpersDataset.d.datasets[type] || {}, {\n        type: type\n      }, _helpersDataset.d, _helpersDataset.a6];\n    }\n  }, {\n    key: \"resolveNamedOptions\",\n    value: function resolveNamedOptions(scopes, names, context) {\n      var prefixes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [''];\n      var result = {\n        $shared: true\n      };\n\n      var _getResolver = getResolver(this._resolverCache, scopes, prefixes),\n          resolver = _getResolver.resolver,\n          subPrefixes = _getResolver.subPrefixes;\n\n      var options = resolver;\n\n      if (needContext(resolver, names)) {\n        result.$shared = false;\n        context = (0, _helpersDataset.a7)(context) ? context() : context;\n        var subResolver = this.createResolver(scopes, context, subPrefixes);\n        options = (0, _helpersDataset.a8)(resolver, context, subResolver);\n      }\n\n      var _iteratorNormalCompletion14 = true;\n      var _didIteratorError14 = false;\n      var _iteratorError14 = undefined;\n\n      try {\n        for (var _iterator14 = names[Symbol.iterator](), _step14; !(_iteratorNormalCompletion14 = (_step14 = _iterator14.next()).done); _iteratorNormalCompletion14 = true) {\n          var prop = _step14.value;\n          result[prop] = options[prop];\n        }\n      } catch (err) {\n        _didIteratorError14 = true;\n        _iteratorError14 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion14 && _iterator14.return != null) {\n            _iterator14.return();\n          }\n        } finally {\n          if (_didIteratorError14) {\n            throw _iteratorError14;\n          }\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"createResolver\",\n    value: function createResolver(scopes, context) {\n      var prefixes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [''];\n      var descriptorDefaults = arguments.length > 3 ? arguments[3] : undefined;\n\n      var _getResolver2 = getResolver(this._resolverCache, scopes, prefixes),\n          resolver = _getResolver2.resolver;\n\n      return (0, _helpersDataset.i)(context) ? (0, _helpersDataset.a8)(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n  }, {\n    key: \"platform\",\n    get: function get() {\n      return this._config.platform;\n    }\n  }, {\n    key: \"type\",\n    get: function get() {\n      return this._config.type;\n    },\n    set: function set(type) {\n      this._config.type = type;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this._config.data;\n    },\n    set: function set(data) {\n      this._config.data = initData(data);\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this._config.options;\n    },\n    set: function set(options) {\n      this._config.options = options;\n    }\n  }, {\n    key: \"plugins\",\n    get: function get() {\n      return this._config.plugins;\n    }\n  }]);\n  return Config;\n}();\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  var cache = resolverCache.get(scopes);\n\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n\n  var cacheKey = prefixes.join();\n  var cached = cache.get(cacheKey);\n\n  if (!cached) {\n    var resolver = (0, _helpersDataset.a9)(scopes, prefixes);\n    cached = {\n      resolver: resolver,\n      subPrefixes: prefixes.filter(function (p) {\n        return !p.toLowerCase().includes('hover');\n      })\n    };\n    cache.set(cacheKey, cached);\n  }\n\n  return cached;\n}\n\nvar hasFunction = function hasFunction(value) {\n  return (0, _helpersDataset.i)(value) && Object.getOwnPropertyNames(value).some(function (key) {\n    return (0, _helpersDataset.a7)(value[key]);\n  });\n};\n\nfunction needContext(proxy, names) {\n  var _descriptors2 = (0, _helpersDataset.aa)(proxy),\n      isScriptable = _descriptors2.isScriptable,\n      isIndexable = _descriptors2.isIndexable;\n\n  var _iteratorNormalCompletion15 = true;\n  var _didIteratorError15 = false;\n  var _iteratorError15 = undefined;\n\n  try {\n    for (var _iterator15 = names[Symbol.iterator](), _step15; !(_iteratorNormalCompletion15 = (_step15 = _iterator15.next()).done); _iteratorNormalCompletion15 = true) {\n      var prop = _step15.value;\n      var scriptable = isScriptable(prop);\n      var indexable = isIndexable(prop);\n      var value = (indexable || scriptable) && proxy[prop];\n\n      if (scriptable && ((0, _helpersDataset.a7)(value) || hasFunction(value)) || indexable && (0, _helpersDataset.b)(value)) {\n        return true;\n      }\n    }\n  } catch (err) {\n    _didIteratorError15 = true;\n    _iteratorError15 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion15 && _iterator15.return != null) {\n        _iterator15.return();\n      }\n    } finally {\n      if (_didIteratorError15) {\n        throw _iteratorError15;\n      }\n    }\n  }\n\n  return false;\n}\n\nvar version = \"4.4.9\";\nvar KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\n\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\n\nfunction compare2Level(l1, l2) {\n  return function (a, b) {\n    return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  var chart = context.chart;\n  var animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  (0, _helpersDataset.Q)(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  var chart = context.chart;\n  var animationOptions = chart.options.animation;\n  (0, _helpersDataset.Q)(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\nfunction getCanvas(item) {\n  if ((0, _helpersDataset.M)() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n\n  return item;\n}\n\nvar instances = {};\n\nvar getChart = function getChart(key) {\n  var canvas = getCanvas(key);\n  return Object.values(instances).filter(function (c) {\n    return c.canvas === canvas;\n  }).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  var keys = Object.keys(obj);\n\n  for (var _i3 = 0, _keys = keys; _i3 < _keys.length; _i3++) {\n    var key = _keys[_i3];\n    var intKey = +key;\n\n    if (intKey >= start) {\n      var value = obj[key];\n      delete obj[key];\n\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n\n  if (isClick) {\n    return lastEvent;\n  }\n\n  return e;\n}\n\nvar Chart =\n/*#__PURE__*/\nfunction () {\n  (0, _createClass2.default)(Chart, null, [{\n    key: \"register\",\n    value: function register() {\n      registry.add.apply(registry, arguments);\n      invalidatePlugins();\n    }\n  }, {\n    key: \"unregister\",\n    value: function unregister() {\n      registry.remove.apply(registry, arguments);\n      invalidatePlugins();\n    }\n  }]);\n\n  function Chart(item, userConfig) {\n    var _this12 = this;\n\n    (0, _classCallCheck2.default)(this, Chart);\n    var config = this.config = new Config(userConfig);\n    var initialCanvas = getCanvas(item);\n    var existingChart = getChart(initialCanvas);\n\n    if (existingChart) {\n      throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n    }\n\n    var options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    var context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    var canvas = context && context.canvas;\n    var height = canvas && canvas.height;\n    var width = canvas && canvas.width;\n    this.id = (0, _helpersDataset.ac)();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = (0, _helpersDataset.ad)(function (mode) {\n      return _this12.update(mode);\n    }, options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  (0, _createClass2.default)(Chart, [{\n    key: \"_initialize\",\n    value: function _initialize() {\n      this.notifyPlugins('beforeInit');\n\n      if (this.options.responsive) {\n        this.resize();\n      } else {\n        (0, _helpersDataset.ae)(this, this.options.devicePixelRatio);\n      }\n\n      this.bindEvents();\n      this.notifyPlugins('afterInit');\n      return this;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      (0, _helpersDataset.af)(this.canvas, this.ctx);\n      return this;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      animator.stop(this);\n      return this;\n    }\n  }, {\n    key: \"resize\",\n    value: function resize(width, height) {\n      if (!animator.running(this)) {\n        this._resize(width, height);\n      } else {\n        this._resizeBeforeDraw = {\n          width: width,\n          height: height\n        };\n      }\n    }\n  }, {\n    key: \"_resize\",\n    value: function _resize(width, height) {\n      var options = this.options;\n      var canvas = this.canvas;\n      var aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n      var newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n      var newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n      var mode = this.width ? 'resize' : 'attach';\n      this.width = newSize.width;\n      this.height = newSize.height;\n      this._aspectRatio = this.aspectRatio;\n\n      if (!(0, _helpersDataset.ae)(this, newRatio, true)) {\n        return;\n      }\n\n      this.notifyPlugins('resize', {\n        size: newSize\n      });\n      (0, _helpersDataset.Q)(options.onResize, [this, newSize], this);\n\n      if (this.attached) {\n        if (this._doResize(mode)) {\n          this.render();\n        }\n      }\n    }\n  }, {\n    key: \"ensureScalesHaveIDs\",\n    value: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      (0, _helpersDataset.F)(scalesOptions, function (axisOptions, axisID) {\n        axisOptions.id = axisID;\n      });\n    }\n  }, {\n    key: \"buildOrUpdateScales\",\n    value: function buildOrUpdateScales() {\n      var _this13 = this;\n\n      var options = this.options;\n      var scaleOpts = options.scales;\n      var scales = this.scales;\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n      var items = [];\n\n      if (scaleOpts) {\n        items = items.concat(Object.keys(scaleOpts).map(function (id) {\n          var scaleOptions = scaleOpts[id];\n          var axis = determineAxis(id, scaleOptions);\n          var isRadial = axis === 'r';\n          var isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        }));\n      }\n\n      (0, _helpersDataset.F)(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var axis = determineAxis(id, scaleOptions);\n        var scaleType = (0, _helpersDataset.v)(scaleOptions.type, item.dtype);\n\n        if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n        } else {\n          var scaleClass = registry.getScale(scaleType);\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            ctx: _this13.ctx,\n            chart: _this13\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.init(scaleOptions, options);\n      });\n      (0, _helpersDataset.F)(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      (0, _helpersDataset.F)(scales, function (scale) {\n        layouts.configure(_this13, scale, scale.options);\n        layouts.addBox(_this13, scale);\n      });\n    }\n  }, {\n    key: \"_updateMetasets\",\n    value: function _updateMetasets() {\n      var metasets = this._metasets;\n      var numData = this.data.datasets.length;\n      var numMeta = metasets.length;\n      metasets.sort(function (a, b) {\n        return a.index - b.index;\n      });\n\n      if (numMeta > numData) {\n        for (var i = numData; i < numMeta; ++i) {\n          this._destroyDatasetMeta(i);\n        }\n\n        metasets.splice(numData, numMeta - numData);\n      }\n\n      this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n  }, {\n    key: \"_removeUnreferencedMetasets\",\n    value: function _removeUnreferencedMetasets() {\n      var _this14 = this;\n\n      var metasets = this._metasets,\n          datasets = this.data.datasets;\n\n      if (metasets.length > datasets.length) {\n        delete this._stacks;\n      }\n\n      metasets.forEach(function (meta, index) {\n        if (datasets.filter(function (x) {\n          return x === meta._dataset;\n        }).length === 0) {\n          _this14._destroyDatasetMeta(index);\n        }\n      });\n    }\n  }, {\n    key: \"buildOrUpdateControllers\",\n    value: function buildOrUpdateControllers() {\n      var newControllers = [];\n      var datasets = this.data.datasets;\n      var i, ilen;\n\n      this._removeUnreferencedMetasets();\n\n      for (i = 0, ilen = datasets.length; i < ilen; i++) {\n        var dataset = datasets[i];\n        var meta = this.getDatasetMeta(i);\n        var type = dataset.type || this.config.type;\n\n        if (meta.type && meta.type !== type) {\n          this._destroyDatasetMeta(i);\n\n          meta = this.getDatasetMeta(i);\n        }\n\n        meta.type = type;\n        meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n        meta.order = dataset.order || 0;\n        meta.index = i;\n        meta.label = '' + dataset.label;\n        meta.visible = this.isDatasetVisible(i);\n\n        if (meta.controller) {\n          meta.controller.updateIndex(i);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = registry.getController(type);\n          var _defaults$datasets$ty = _helpersDataset.d.datasets[type],\n              datasetElementType = _defaults$datasets$ty.datasetElementType,\n              dataElementType = _defaults$datasets$ty.dataElementType;\n          Object.assign(ControllerClass, {\n            dataElementType: registry.getElement(dataElementType),\n            datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n          });\n          meta.controller = new ControllerClass(this, i);\n          newControllers.push(meta.controller);\n        }\n      }\n\n      this._updateMetasets();\n\n      return newControllers;\n    }\n  }, {\n    key: \"_resetElements\",\n    value: function _resetElements() {\n      var _this15 = this;\n\n      (0, _helpersDataset.F)(this.data.datasets, function (dataset, datasetIndex) {\n        _this15.getDatasetMeta(datasetIndex).controller.reset();\n      }, this);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._resetElements();\n\n      this.notifyPlugins('reset');\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var config = this.config;\n      config.update();\n      var options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n      var animsDisabled = this._animationsDisabled = !options.animation;\n\n      this._updateScales();\n\n      this._checkEventBindings();\n\n      this._updateHiddenIndices();\n\n      this._plugins.invalidate();\n\n      if (this.notifyPlugins('beforeUpdate', {\n        mode: mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      var newControllers = this.buildOrUpdateControllers();\n      this.notifyPlugins('beforeElementsUpdate');\n      var minPadding = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n        var _this$getDatasetMeta = this.getDatasetMeta(i),\n            controller = _this$getDatasetMeta.controller;\n\n        var reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n        controller.buildOrUpdateElements(reset);\n        minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n      }\n\n      minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n\n      this._updateLayout(minPadding);\n\n      if (!animsDisabled) {\n        (0, _helpersDataset.F)(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      this._updateDatasets(mode);\n\n      this.notifyPlugins('afterUpdate', {\n        mode: mode\n      });\n\n      this._layers.sort(compare2Level('z', '_idx'));\n\n      var _active = this._active,\n          _lastEvent = this._lastEvent;\n\n      if (_lastEvent) {\n        this._eventHandler(_lastEvent, true);\n      } else if (_active.length) {\n        this._updateHoverStyles(_active, _active, true);\n      }\n\n      this.render();\n    }\n  }, {\n    key: \"_updateScales\",\n    value: function _updateScales() {\n      var _this16 = this;\n\n      (0, _helpersDataset.F)(this.scales, function (scale) {\n        layouts.removeBox(_this16, scale);\n      });\n      this.ensureScalesHaveIDs();\n      this.buildOrUpdateScales();\n    }\n  }, {\n    key: \"_checkEventBindings\",\n    value: function _checkEventBindings() {\n      var options = this.options;\n      var existingEvents = new Set(Object.keys(this._listeners));\n      var newEvents = new Set(options.events);\n\n      if (!(0, _helpersDataset.ag)(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n        this.unbindEvents();\n        this.bindEvents();\n      }\n    }\n  }, {\n    key: \"_updateHiddenIndices\",\n    value: function _updateHiddenIndices() {\n      var _hiddenIndices = this._hiddenIndices;\n      var changes = this._getUniformDataChanges() || [];\n      var _iteratorNormalCompletion16 = true;\n      var _didIteratorError16 = false;\n      var _iteratorError16 = undefined;\n\n      try {\n        for (var _iterator16 = changes[Symbol.iterator](), _step16; !(_iteratorNormalCompletion16 = (_step16 = _iterator16.next()).done); _iteratorNormalCompletion16 = true) {\n          var _step16$value = _step16.value,\n              method = _step16$value.method,\n              start = _step16$value.start,\n              count = _step16$value.count;\n          var move = method === '_removeElements' ? -count : count;\n          moveNumericKeys(_hiddenIndices, start, move);\n        }\n      } catch (err) {\n        _didIteratorError16 = true;\n        _iteratorError16 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion16 && _iterator16.return != null) {\n            _iterator16.return();\n          }\n        } finally {\n          if (_didIteratorError16) {\n            throw _iteratorError16;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_getUniformDataChanges\",\n    value: function _getUniformDataChanges() {\n      var _dataChanges = this._dataChanges;\n\n      if (!_dataChanges || !_dataChanges.length) {\n        return;\n      }\n\n      this._dataChanges = [];\n      var datasetCount = this.data.datasets.length;\n\n      var makeSet = function makeSet(idx) {\n        return new Set(_dataChanges.filter(function (c) {\n          return c[0] === idx;\n        }).map(function (c, i) {\n          return i + ',' + c.splice(1).join(',');\n        }));\n      };\n\n      var changeSet = makeSet(0);\n\n      for (var i = 1; i < datasetCount; i++) {\n        if (!(0, _helpersDataset.ag)(changeSet, makeSet(i))) {\n          return;\n        }\n      }\n\n      return Array.from(changeSet).map(function (c) {\n        return c.split(',');\n      }).map(function (a) {\n        return {\n          method: a[1],\n          start: +a[2],\n          count: +a[3]\n        };\n      });\n    }\n  }, {\n    key: \"_updateLayout\",\n    value: function _updateLayout(minPadding) {\n      var _this17 = this;\n\n      if (this.notifyPlugins('beforeLayout', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      layouts.update(this, this.width, this.height, minPadding);\n      var area = this.chartArea;\n      var noArea = area.width <= 0 || area.height <= 0;\n      this._layers = [];\n      (0, _helpersDataset.F)(this.boxes, function (box) {\n        var _this17$_layers;\n\n        if (noArea && box.position === 'chartArea') {\n          return;\n        }\n\n        if (box.configure) {\n          box.configure();\n        }\n\n        (_this17$_layers = _this17._layers).push.apply(_this17$_layers, (0, _toConsumableArray2.default)(box._layers()));\n      }, this);\n\n      this._layers.forEach(function (item, index) {\n        item._idx = index;\n      });\n\n      this.notifyPlugins('afterLayout');\n    }\n  }, {\n    key: \"_updateDatasets\",\n    value: function _updateDatasets(mode) {\n      if (this.notifyPlugins('beforeDatasetsUpdate', {\n        mode: mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        this.getDatasetMeta(i).controller.configure();\n      }\n\n      for (var _i4 = 0, _ilen = this.data.datasets.length; _i4 < _ilen; ++_i4) {\n        this._updateDataset(_i4, (0, _helpersDataset.a7)(mode) ? mode({\n          datasetIndex: _i4\n        }) : mode);\n      }\n\n      this.notifyPlugins('afterDatasetsUpdate', {\n        mode: mode\n      });\n    }\n  }, {\n    key: \"_updateDataset\",\n    value: function _updateDataset(index, mode) {\n      var meta = this.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        mode: mode,\n        cancelable: true\n      };\n\n      if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n        return;\n      }\n\n      meta.controller._update(mode);\n\n      args.cancelable = false;\n      this.notifyPlugins('afterDatasetUpdate', args);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.notifyPlugins('beforeRender', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      if (animator.has(this)) {\n        if (this.attached && !animator.running(this)) {\n          animator.start(this);\n        }\n      } else {\n        this.draw();\n        onAnimationsComplete({\n          chart: this\n        });\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var i;\n\n      if (this._resizeBeforeDraw) {\n        var _this$_resizeBeforeDr = this._resizeBeforeDraw,\n            width = _this$_resizeBeforeDr.width,\n            height = _this$_resizeBeforeDr.height;\n        this._resizeBeforeDraw = null;\n\n        this._resize(width, height);\n      }\n\n      this.clear();\n\n      if (this.width <= 0 || this.height <= 0) {\n        return;\n      }\n\n      if (this.notifyPlugins('beforeDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      var layers = this._layers;\n\n      for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n        layers[i].draw(this.chartArea);\n      }\n\n      this._drawDatasets();\n\n      for (; i < layers.length; ++i) {\n        layers[i].draw(this.chartArea);\n      }\n\n      this.notifyPlugins('afterDraw');\n    }\n  }, {\n    key: \"_getSortedDatasetMetas\",\n    value: function _getSortedDatasetMetas(filterVisible) {\n      var metasets = this._sortedMetasets;\n      var result = [];\n      var i, ilen;\n\n      for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n        var meta = metasets[i];\n\n        if (!filterVisible || meta.visible) {\n          result.push(meta);\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"getSortedVisibleDatasetMetas\",\n    value: function getSortedVisibleDatasetMetas() {\n      return this._getSortedDatasetMetas(true);\n    }\n  }, {\n    key: \"_drawDatasets\",\n    value: function _drawDatasets() {\n      if (this.notifyPlugins('beforeDatasetsDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      var metasets = this.getSortedVisibleDatasetMetas();\n\n      for (var i = metasets.length - 1; i >= 0; --i) {\n        this._drawDataset(metasets[i]);\n      }\n\n      this.notifyPlugins('afterDatasetsDraw');\n    }\n  }, {\n    key: \"_drawDataset\",\n    value: function _drawDataset(meta) {\n      var ctx = this.ctx;\n      var args = {\n        meta: meta,\n        index: meta.index,\n        cancelable: true\n      };\n      var clip = (0, _helpersDataset.ah)(this, meta);\n\n      if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n        return;\n      }\n\n      if (clip) {\n        (0, _helpersDataset.Y)(ctx, clip);\n      }\n\n      meta.controller.draw();\n\n      if (clip) {\n        (0, _helpersDataset.$)(ctx);\n      }\n\n      args.cancelable = false;\n      this.notifyPlugins('afterDatasetDraw', args);\n    }\n  }, {\n    key: \"isPointInArea\",\n    value: function isPointInArea(point) {\n      return (0, _helpersDataset.C)(point, this.chartArea, this._minPadding);\n    }\n  }, {\n    key: \"getElementsAtEventForMode\",\n    value: function getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n      var method = Interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options, useFinalPosition);\n      }\n\n      return [];\n    }\n  }, {\n    key: \"getDatasetMeta\",\n    value: function getDatasetMeta(datasetIndex) {\n      var dataset = this.data.datasets[datasetIndex];\n      var metasets = this._metasets;\n      var meta = metasets.filter(function (x) {\n        return x && x._dataset === dataset;\n      }).pop();\n\n      if (!meta) {\n        meta = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          xAxisID: null,\n          yAxisID: null,\n          order: dataset && dataset.order || 0,\n          index: datasetIndex,\n          _dataset: dataset,\n          _parsed: [],\n          _sorted: false\n        };\n        metasets.push(meta);\n      }\n\n      return meta;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext() {\n      return this.$context || (this.$context = (0, _helpersDataset.j)(null, {\n        chart: this,\n        type: 'chart'\n      }));\n    }\n  }, {\n    key: \"getVisibleDatasetCount\",\n    value: function getVisibleDatasetCount() {\n      return this.getSortedVisibleDatasetMetas().length;\n    }\n  }, {\n    key: \"isDatasetVisible\",\n    value: function isDatasetVisible(datasetIndex) {\n      var dataset = this.data.datasets[datasetIndex];\n\n      if (!dataset) {\n        return false;\n      }\n\n      var meta = this.getDatasetMeta(datasetIndex);\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n  }, {\n    key: \"setDatasetVisibility\",\n    value: function setDatasetVisibility(datasetIndex, visible) {\n      var meta = this.getDatasetMeta(datasetIndex);\n      meta.hidden = !visible;\n    }\n  }, {\n    key: \"toggleDataVisibility\",\n    value: function toggleDataVisibility(index) {\n      this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n  }, {\n    key: \"getDataVisibility\",\n    value: function getDataVisibility(index) {\n      return !this._hiddenIndices[index];\n    }\n  }, {\n    key: \"_updateVisibility\",\n    value: function _updateVisibility(datasetIndex, dataIndex, visible) {\n      var mode = visible ? 'show' : 'hide';\n      var meta = this.getDatasetMeta(datasetIndex);\n\n      var anims = meta.controller._resolveAnimations(undefined, mode);\n\n      if ((0, _helpersDataset.h)(dataIndex)) {\n        meta.data[dataIndex].hidden = !visible;\n        this.update();\n      } else {\n        this.setDatasetVisibility(datasetIndex, visible);\n        anims.update(meta, {\n          visible: visible\n        });\n        this.update(function (ctx) {\n          return ctx.datasetIndex === datasetIndex ? mode : undefined;\n        });\n      }\n    }\n  }, {\n    key: \"hide\",\n    value: function hide(datasetIndex, dataIndex) {\n      this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n  }, {\n    key: \"show\",\n    value: function show(datasetIndex, dataIndex) {\n      this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n  }, {\n    key: \"_destroyDatasetMeta\",\n    value: function _destroyDatasetMeta(datasetIndex) {\n      var meta = this._metasets[datasetIndex];\n\n      if (meta && meta.controller) {\n        meta.controller._destroy();\n      }\n\n      delete this._metasets[datasetIndex];\n    }\n  }, {\n    key: \"_stop\",\n    value: function _stop() {\n      var i, ilen;\n      this.stop();\n      animator.remove(this);\n\n      for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.notifyPlugins('beforeDestroy');\n      var canvas = this.canvas,\n          ctx = this.ctx;\n\n      this._stop();\n\n      this.config.clearCache();\n\n      if (canvas) {\n        this.unbindEvents();\n        (0, _helpersDataset.af)(canvas, ctx);\n        this.platform.releaseContext(ctx);\n        this.canvas = null;\n        this.ctx = null;\n      }\n\n      delete instances[this.id];\n      this.notifyPlugins('afterDestroy');\n    }\n  }, {\n    key: \"toBase64Image\",\n    value: function toBase64Image() {\n      var _this$canvas;\n\n      return (_this$canvas = this.canvas).toDataURL.apply(_this$canvas, arguments);\n    }\n  }, {\n    key: \"bindEvents\",\n    value: function bindEvents() {\n      this.bindUserEvents();\n\n      if (this.options.responsive) {\n        this.bindResponsiveEvents();\n      } else {\n        this.attached = true;\n      }\n    }\n  }, {\n    key: \"bindUserEvents\",\n    value: function bindUserEvents() {\n      var _this18 = this;\n\n      var listeners = this._listeners;\n      var platform = this.platform;\n\n      var _add = function _add(type, listener) {\n        platform.addEventListener(_this18, type, listener);\n        listeners[type] = listener;\n      };\n\n      var listener = function listener(e, x, y) {\n        e.offsetX = x;\n        e.offsetY = y;\n\n        _this18._eventHandler(e);\n      };\n\n      (0, _helpersDataset.F)(this.options.events, function (type) {\n        return _add(type, listener);\n      });\n    }\n  }, {\n    key: \"bindResponsiveEvents\",\n    value: function bindResponsiveEvents() {\n      var _this19 = this;\n\n      if (!this._responsiveListeners) {\n        this._responsiveListeners = {};\n      }\n\n      var listeners = this._responsiveListeners;\n      var platform = this.platform;\n\n      var _add = function _add(type, listener) {\n        platform.addEventListener(_this19, type, listener);\n        listeners[type] = listener;\n      };\n\n      var _remove = function _remove(type, listener) {\n        if (listeners[type]) {\n          platform.removeEventListener(_this19, type, listener);\n          delete listeners[type];\n        }\n      };\n\n      var listener = function listener(width, height) {\n        if (_this19.canvas) {\n          _this19.resize(width, height);\n        }\n      };\n\n      var detached;\n\n      var attached = function attached() {\n        _remove('attach', attached);\n\n        _this19.attached = true;\n\n        _this19.resize();\n\n        _add('resize', listener);\n\n        _add('detach', detached);\n      };\n\n      detached = function detached() {\n        _this19.attached = false;\n\n        _remove('resize', listener);\n\n        _this19._stop();\n\n        _this19._resize(0, 0);\n\n        _add('attach', attached);\n      };\n\n      if (platform.isAttached(this.canvas)) {\n        attached();\n      } else {\n        detached();\n      }\n    }\n  }, {\n    key: \"unbindEvents\",\n    value: function unbindEvents() {\n      var _this20 = this;\n\n      (0, _helpersDataset.F)(this._listeners, function (listener, type) {\n        _this20.platform.removeEventListener(_this20, type, listener);\n      });\n      this._listeners = {};\n      (0, _helpersDataset.F)(this._responsiveListeners, function (listener, type) {\n        _this20.platform.removeEventListener(_this20, type, listener);\n      });\n      this._responsiveListeners = undefined;\n    }\n  }, {\n    key: \"updateHoverStyle\",\n    value: function updateHoverStyle(items, mode, enabled) {\n      var prefix = enabled ? 'set' : 'remove';\n      var meta, item, i, ilen;\n\n      if (mode === 'dataset') {\n        meta = this.getDatasetMeta(items[0].datasetIndex);\n        meta.controller['_' + prefix + 'DatasetHoverStyle']();\n      }\n\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        item = items[i];\n        var controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n\n        if (controller) {\n          controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n        }\n      }\n    }\n  }, {\n    key: \"getActiveElements\",\n    value: function getActiveElements() {\n      return this._active || [];\n    }\n  }, {\n    key: \"setActiveElements\",\n    value: function setActiveElements(activeElements) {\n      var _this21 = this;\n\n      var lastActive = this._active || [];\n      var active = activeElements.map(function (_ref4) {\n        var datasetIndex = _ref4.datasetIndex,\n            index = _ref4.index;\n\n        var meta = _this21.getDatasetMeta(datasetIndex);\n\n        if (!meta) {\n          throw new Error('No dataset found at index ' + datasetIndex);\n        }\n\n        return {\n          datasetIndex: datasetIndex,\n          element: meta.data[index],\n          index: index\n        };\n      });\n      var changed = !(0, _helpersDataset.ai)(active, lastActive);\n\n      if (changed) {\n        this._active = active;\n        this._lastEvent = null;\n\n        this._updateHoverStyles(active, lastActive);\n      }\n    }\n  }, {\n    key: \"notifyPlugins\",\n    value: function notifyPlugins(hook, args, filter) {\n      return this._plugins.notify(this, hook, args, filter);\n    }\n  }, {\n    key: \"isPluginEnabled\",\n    value: function isPluginEnabled(pluginId) {\n      return this._plugins._cache.filter(function (p) {\n        return p.plugin.id === pluginId;\n      }).length === 1;\n    }\n  }, {\n    key: \"_updateHoverStyles\",\n    value: function _updateHoverStyles(active, lastActive, replay) {\n      var hoverOptions = this.options.hover;\n\n      var diff = function diff(a, b) {\n        return a.filter(function (x) {\n          return !b.some(function (y) {\n            return x.datasetIndex === y.datasetIndex && x.index === y.index;\n          });\n        });\n      };\n\n      var deactivated = diff(lastActive, active);\n      var activated = replay ? active : diff(active, lastActive);\n\n      if (deactivated.length) {\n        this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n      }\n\n      if (activated.length && hoverOptions.mode) {\n        this.updateHoverStyle(activated, hoverOptions.mode, true);\n      }\n    }\n  }, {\n    key: \"_eventHandler\",\n    value: function _eventHandler(e, replay) {\n      var _this22 = this;\n\n      var args = {\n        event: e,\n        replay: replay,\n        cancelable: true,\n        inChartArea: this.isPointInArea(e)\n      };\n\n      var eventFilter = function eventFilter(plugin) {\n        return (plugin.options.events || _this22.options.events).includes(e.native.type);\n      };\n\n      if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n        return;\n      }\n\n      var changed = this._handleEvent(e, replay, args.inChartArea);\n\n      args.cancelable = false;\n      this.notifyPlugins('afterEvent', args, eventFilter);\n\n      if (changed || args.changed) {\n        this.render();\n      }\n\n      return this;\n    }\n  }, {\n    key: \"_handleEvent\",\n    value: function _handleEvent(e, replay, inChartArea) {\n      var _this$_active = this._active,\n          lastActive = _this$_active === void 0 ? [] : _this$_active,\n          options = this.options;\n      var useFinalPosition = replay;\n\n      var active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n\n      var isClick = (0, _helpersDataset.aj)(e);\n      var lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n      if (inChartArea) {\n        this._lastEvent = null;\n        (0, _helpersDataset.Q)(options.onHover, [e, active, this], this);\n\n        if (isClick) {\n          (0, _helpersDataset.Q)(options.onClick, [e, active, this], this);\n        }\n      }\n\n      var changed = !(0, _helpersDataset.ai)(active, lastActive);\n\n      if (changed || replay) {\n        this._active = active;\n\n        this._updateHoverStyles(active, lastActive, replay);\n      }\n\n      this._lastEvent = lastEvent;\n      return changed;\n    }\n  }, {\n    key: \"_getActiveElements\",\n    value: function _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n      if (e.type === 'mouseout') {\n        return [];\n      }\n\n      if (!inChartArea) {\n        return lastActive;\n      }\n\n      var hoverOptions = this.options.hover;\n      return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n  }, {\n    key: \"aspectRatio\",\n    get: function get() {\n      var _this$options12 = this.options,\n          aspectRatio = _this$options12.aspectRatio,\n          maintainAspectRatio = _this$options12.maintainAspectRatio,\n          width = this.width,\n          height = this.height,\n          _aspectRatio = this._aspectRatio;\n\n      if (!(0, _helpersDataset.k)(aspectRatio)) {\n        return aspectRatio;\n      }\n\n      if (maintainAspectRatio && _aspectRatio) {\n        return _aspectRatio;\n      }\n\n      return height ? width / height : null;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this.config.data;\n    },\n    set: function set(data) {\n      this.config.data = data;\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this._options;\n    },\n    set: function set(options) {\n      this.config.options = options;\n    }\n  }, {\n    key: \"registry\",\n    get: function get() {\n      return registry;\n    }\n  }]);\n  return Chart;\n}();\n\nexports.Chart = Chart;\n(0, _defineProperty2.default)(Chart, \"defaults\", _helpersDataset.d);\n(0, _defineProperty2.default)(Chart, \"instances\", instances);\n(0, _defineProperty2.default)(Chart, \"overrides\", _helpersDataset.a3);\n(0, _defineProperty2.default)(Chart, \"registry\", registry);\n(0, _defineProperty2.default)(Chart, \"version\", version);\n(0, _defineProperty2.default)(Chart, \"getChart\", getChart);\n\nfunction invalidatePlugins() {\n  return (0, _helpersDataset.F)(Chart.instances, function (chart) {\n    return chart._plugins.invalidate();\n  });\n}\n\nfunction clipArc(ctx, element, endAngle) {\n  var startAngle = element.startAngle,\n      pixelMargin = element.pixelMargin,\n      x = element.x,\n      y = element.y,\n      outerRadius = element.outerRadius,\n      innerRadius = element.innerRadius;\n  var angleMargin = pixelMargin / outerRadius; // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + _helpersDataset.H, startAngle - _helpersDataset.H);\n  }\n\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return (0, _helpersDataset.al)(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n/**\n * Parse border radius from the provided options\n */\n\n\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  var o = toRadiusCorners(arc.options.borderRadius);\n  var halfThickness = (outerRadius - innerRadius) / 2;\n  var innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2); // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n\n  var computeOuterLimit = function computeOuterLimit(val) {\n    var outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return (0, _helpersDataset.S)(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: (0, _helpersDataset.S)(o.innerStart, 0, innerLimit),\n    innerEnd: (0, _helpersDataset.S)(o.innerEnd, 0, innerLimit)\n  };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */\n\n\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta)\n  };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\n\n\nfunction pathArc(ctx, element, offset, spacing, end, circular) {\n  var x = element.x,\n      y = element.y,\n      start = element.startAngle,\n      pixelMargin = element.pixelMargin,\n      innerR = element.innerRadius;\n  var outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  var innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  var spacingOffset = 0;\n  var alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    var noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    var noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    var avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    var adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  var beta = Math.max(0.001, alpha * outerRadius - offset / _helpersDataset.P) / outerRadius;\n  var angleOffset = (alpha - beta) / 2;\n  var startAngle = start + angleOffset + spacingOffset;\n  var endAngle = end - angleOffset - spacingOffset;\n\n  var _parseBorderRadius$ = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle),\n      outerStart = _parseBorderRadius$.outerStart,\n      outerEnd = _parseBorderRadius$.outerEnd,\n      innerStart = _parseBorderRadius$.innerStart,\n      innerEnd = _parseBorderRadius$.innerEnd;\n\n  var outerStartAdjustedRadius = outerRadius - outerStart;\n  var outerEndAdjustedRadius = outerRadius - outerEnd;\n  var outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  var outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  var innerStartAdjustedRadius = innerRadius + innerStart;\n  var innerEndAdjustedRadius = innerRadius + innerEnd;\n  var innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  var innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    var outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle); // The corner segment from point 2 to point 3\n\n    if (outerEnd > 0) {\n      var pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + _helpersDataset.H);\n    } // The line from point 3 to point 4\n\n\n    var p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y); // The corner segment from point 4 to point 5\n\n    if (innerEnd > 0) {\n      var _pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n\n      ctx.arc(_pCenter.x, _pCenter.y, innerEnd, endAngle + _helpersDataset.H, innerEndAdjustedAngle + Math.PI);\n    } // The inner arc from point 5 to point b to point 6\n\n\n    var innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true); // The corner segment from point 6 to point 7\n\n    if (innerStart > 0) {\n      var _pCenter2 = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n\n      ctx.arc(_pCenter2.x, _pCenter2.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - _helpersDataset.H);\n    } // The line from point 7 to point 8\n\n\n    var p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y); // The corner segment from point 8 to point 1\n\n    if (outerStart > 0) {\n      var _pCenter3 = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n\n      ctx.arc(_pCenter3.x, _pCenter3.y, outerStart, startAngle - _helpersDataset.H, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n    var outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    var outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n    var outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    var outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(ctx, element, offset, spacing, circular) {\n  var fullCircles = element.fullCircles,\n      startAngle = element.startAngle,\n      circumference = element.circumference;\n  var endAngle = element.endAngle;\n\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n\n    for (var i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % _helpersDataset.T || _helpersDataset.T);\n    }\n  }\n\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n  var fullCircles = element.fullCircles,\n      startAngle = element.startAngle,\n      circumference = element.circumference,\n      options = element.options;\n  var borderWidth = options.borderWidth,\n      borderJoinStyle = options.borderJoinStyle,\n      borderDash = options.borderDash,\n      borderDashOffset = options.borderDashOffset;\n  var inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  var endAngle = element.endAngle;\n\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n\n    for (var i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % _helpersDataset.T || _helpersDataset.T);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nvar ArcElement =\n/*#__PURE__*/\nfunction (_Element2) {\n  (0, _inherits2.default)(ArcElement, _Element2);\n\n  function ArcElement(cfg) {\n    var _this23;\n\n    (0, _classCallCheck2.default)(this, ArcElement);\n    _this23 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ArcElement).call(this));\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this23), \"circumference\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this23), \"endAngle\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this23), \"fullCircles\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this23), \"innerRadius\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this23), \"outerRadius\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this23), \"pixelMargin\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this23), \"startAngle\", void 0);\n    _this23.options = undefined;\n    _this23.circumference = undefined;\n    _this23.startAngle = undefined;\n    _this23.endAngle = undefined;\n    _this23.innerRadius = undefined;\n    _this23.outerRadius = undefined;\n    _this23.pixelMargin = 0;\n    _this23.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign((0, _assertThisInitialized2.default)(_this23), cfg);\n    }\n\n    return _this23;\n  }\n\n  (0, _createClass2.default)(ArcElement, [{\n    key: \"inRange\",\n    value: function inRange(chartX, chartY, useFinalPosition) {\n      var point = this.getProps(['x', 'y'], useFinalPosition);\n\n      var _getAngleFromPoint2 = (0, _helpersDataset.D)(point, {\n        x: chartX,\n        y: chartY\n      }),\n          angle = _getAngleFromPoint2.angle,\n          distance = _getAngleFromPoint2.distance;\n\n      var _this$getProps2 = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition),\n          startAngle = _this$getProps2.startAngle,\n          endAngle = _this$getProps2.endAngle,\n          innerRadius = _this$getProps2.innerRadius,\n          outerRadius = _this$getProps2.outerRadius,\n          circumference = _this$getProps2.circumference;\n\n      var rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n\n      var _circumference = (0, _helpersDataset.v)(circumference, endAngle - startAngle);\n\n      var nonZeroBetween = (0, _helpersDataset.p)(angle, startAngle, endAngle) && startAngle !== endAngle;\n      var betweenAngles = _circumference >= _helpersDataset.T || nonZeroBetween;\n      var withinRadius = (0, _helpersDataset.ak)(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n      return betweenAngles && withinRadius;\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps3 = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius'], useFinalPosition),\n          x = _this$getProps3.x,\n          y = _this$getProps3.y,\n          startAngle = _this$getProps3.startAngle,\n          endAngle = _this$getProps3.endAngle,\n          innerRadius = _this$getProps3.innerRadius,\n          outerRadius = _this$getProps3.outerRadius;\n\n      var _this$options13 = this.options,\n          offset = _this$options13.offset,\n          spacing = _this$options13.spacing;\n      var halfAngle = (startAngle + endAngle) / 2;\n      var halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n      return {\n        x: x + Math.cos(halfAngle) * halfRadius,\n        y: y + Math.sin(halfAngle) * halfRadius\n      };\n    }\n  }, {\n    key: \"tooltipPosition\",\n    value: function tooltipPosition(useFinalPosition) {\n      return this.getCenterPoint(useFinalPosition);\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var options = this.options,\n          circumference = this.circumference;\n      var offset = (options.offset || 0) / 4;\n      var spacing = (options.spacing || 0) / 2;\n      var circular = options.circular;\n      this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n      this.fullCircles = circumference > _helpersDataset.T ? Math.floor(circumference / _helpersDataset.T) : 0;\n\n      if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n        return;\n      }\n\n      ctx.save();\n      var halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n      var fix = 1 - Math.sin(Math.min(_helpersDataset.P, circumference || 0));\n      var radiusOffset = offset * fix;\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      drawArc(ctx, this, radiusOffset, spacing, circular);\n      drawBorder(ctx, this, radiusOffset, spacing, circular);\n      ctx.restore();\n    }\n  }]);\n  return ArcElement;\n}(Element);\n\nexports.ArcElement = ArcElement;\n(0, _defineProperty2.default)(ArcElement, \"id\", 'arc');\n(0, _defineProperty2.default)(ArcElement, \"defaults\", {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n  circular: true\n});\n(0, _defineProperty2.default)(ArcElement, \"defaultRoutes\", {\n  backgroundColor: 'backgroundColor'\n});\n(0, _defineProperty2.default)(ArcElement, \"descriptors\", {\n  _scriptable: true,\n  _indexable: function _indexable(name) {\n    return name !== 'borderDash';\n  }\n});\n\nfunction setStyle(ctx, options) {\n  var style = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : options;\n  ctx.lineCap = (0, _helpersDataset.v)(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash((0, _helpersDataset.v)(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = (0, _helpersDataset.v)(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = (0, _helpersDataset.v)(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = (0, _helpersDataset.v)(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = (0, _helpersDataset.v)(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _helpersDataset.as;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _helpersDataset.at;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment) {\n  var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var count = points.length;\n  var _params$start = params.start,\n      paramsStart = _params$start === void 0 ? 0 : _params$start,\n      _params$end = params.end,\n      paramsEnd = _params$end === void 0 ? count - 1 : _params$end;\n  var segmentStart = segment.start,\n      segmentEnd = segment.end;\n  var start = Math.max(paramsStart, segmentStart);\n  var end = Math.min(paramsEnd, segmentEnd);\n  var outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count: count,\n    start: start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\nfunction pathSegment(ctx, line, segment, params) {\n  var points = line.points,\n      options = line.options;\n\n  var _pathVars = pathVars(points, segment, params),\n      count = _pathVars.count,\n      start = _pathVars.start,\n      loop = _pathVars.loop,\n      ilen = _pathVars.ilen;\n\n  var lineMethod = getLineMethod(options);\n\n  var _ref5 = params || {},\n      _ref5$move = _ref5.move,\n      move = _ref5$move === void 0 ? true : _ref5$move,\n      reverse = _ref5.reverse;\n\n  var i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\nfunction fastPathSegment(ctx, line, segment, params) {\n  var points = line.points;\n\n  var _pathVars2 = pathVars(points, segment, params),\n      count = _pathVars2.count,\n      start = _pathVars2.start,\n      ilen = _pathVars2.ilen;\n\n  var _ref6 = params || {},\n      _ref6$move = _ref6.move,\n      move = _ref6$move === void 0 ? true : _ref6$move,\n      reverse = _ref6.reverse;\n\n  var avgX = 0;\n  var countX = 0;\n  var i, point, prevX, minY, maxY, lastY;\n\n  var pointIndex = function pointIndex(index) {\n    return (start + (reverse ? ilen - index : index)) % count;\n  };\n\n  var drawX = function drawX() {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      continue;\n    }\n\n    var x = point.x;\n    var y = point.y;\n    var truncX = x | 0;\n\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n\n    lastY = y;\n  }\n\n  drawX();\n}\n\nfunction _getSegmentMethod(line) {\n  var opts = line.options;\n  var borderDash = opts.borderDash && opts.borderDash.length;\n  var useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _helpersDataset.ap;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _helpersDataset.aq;\n  }\n\n  return _helpersDataset.ar;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  var path = line._path;\n\n  if (!path) {\n    path = line._path = new Path2D();\n\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  var segments = line.segments,\n      options = line.options;\n\n  var segmentMethod = _getSegmentMethod(line);\n\n  var _iteratorNormalCompletion17 = true;\n  var _didIteratorError17 = false;\n  var _iteratorError17 = undefined;\n\n  try {\n    for (var _iterator17 = segments[Symbol.iterator](), _step17; !(_iteratorNormalCompletion17 = (_step17 = _iterator17.next()).done); _iteratorNormalCompletion17 = true) {\n      var segment = _step17.value;\n      setStyle(ctx, options, segment.style);\n      ctx.beginPath();\n\n      if (segmentMethod(ctx, line, segment, {\n        start: start,\n        end: start + count - 1\n      })) {\n        ctx.closePath();\n      }\n\n      ctx.stroke();\n    }\n  } catch (err) {\n    _didIteratorError17 = true;\n    _iteratorError17 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion17 && _iterator17.return != null) {\n        _iterator17.return();\n      }\n    } finally {\n      if (_didIteratorError17) {\n        throw _iteratorError17;\n      }\n    }\n  }\n}\n\nvar usePath2D = typeof Path2D === 'function';\n\nfunction _draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nvar LineElement =\n/*#__PURE__*/\nfunction (_Element3) {\n  (0, _inherits2.default)(LineElement, _Element3);\n\n  function LineElement(cfg) {\n    var _this24;\n\n    (0, _classCallCheck2.default)(this, LineElement);\n    _this24 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LineElement).call(this));\n    _this24.animated = true;\n    _this24.options = undefined;\n    _this24._chart = undefined;\n    _this24._loop = undefined;\n    _this24._fullLoop = undefined;\n    _this24._path = undefined;\n    _this24._points = undefined;\n    _this24._segments = undefined;\n    _this24._decimated = false;\n    _this24._pointsUpdated = false;\n    _this24._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign((0, _assertThisInitialized2.default)(_this24), cfg);\n    }\n\n    return _this24;\n  }\n\n  (0, _createClass2.default)(LineElement, [{\n    key: \"updateControlPoints\",\n    value: function updateControlPoints(chartArea, indexAxis) {\n      var options = this.options;\n\n      if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n        var loop = options.spanGaps ? this._loop : this._fullLoop;\n        (0, _helpersDataset.am)(this._points, options, chartArea, loop, indexAxis);\n        this._pointsUpdated = true;\n      }\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      var segments = this.segments;\n      var points = this.points;\n      return segments.length && points[segments[0].start];\n    }\n  }, {\n    key: \"last\",\n    value: function last() {\n      var segments = this.segments;\n      var points = this.points;\n      var count = segments.length;\n      return count && points[segments[count - 1].end];\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(point, property) {\n      var options = this.options;\n      var value = point[property];\n      var points = this.points;\n      var segments = (0, _helpersDataset.ao)(this, {\n        property: property,\n        start: value,\n        end: value\n      });\n\n      if (!segments.length) {\n        return;\n      }\n\n      var result = [];\n\n      var _interpolate = _getInterpolationMethod(options);\n\n      var i, ilen;\n\n      for (i = 0, ilen = segments.length; i < ilen; ++i) {\n        var _segments$i = segments[i],\n            start = _segments$i.start,\n            end = _segments$i.end;\n        var p1 = points[start];\n        var p2 = points[end];\n\n        if (p1 === p2) {\n          result.push(p1);\n          continue;\n        }\n\n        var t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n\n        var interpolated = _interpolate(p1, p2, t, options.stepped);\n\n        interpolated[property] = point[property];\n        result.push(interpolated);\n      }\n\n      return result.length === 1 ? result[0] : result;\n    }\n  }, {\n    key: \"pathSegment\",\n    value: function pathSegment(ctx, segment, params) {\n      var segmentMethod = _getSegmentMethod(this);\n\n      return segmentMethod(ctx, this, segment, params);\n    }\n  }, {\n    key: \"path\",\n    value: function path(ctx, start, count) {\n      var segments = this.segments;\n\n      var segmentMethod = _getSegmentMethod(this);\n\n      var loop = this._loop;\n      start = start || 0;\n      count = count || this.points.length - start;\n      var _iteratorNormalCompletion18 = true;\n      var _didIteratorError18 = false;\n      var _iteratorError18 = undefined;\n\n      try {\n        for (var _iterator18 = segments[Symbol.iterator](), _step18; !(_iteratorNormalCompletion18 = (_step18 = _iterator18.next()).done); _iteratorNormalCompletion18 = true) {\n          var segment = _step18.value;\n          loop &= segmentMethod(ctx, this, segment, {\n            start: start,\n            end: start + count - 1\n          });\n        }\n      } catch (err) {\n        _didIteratorError18 = true;\n        _iteratorError18 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion18 && _iterator18.return != null) {\n            _iterator18.return();\n          }\n        } finally {\n          if (_didIteratorError18) {\n            throw _iteratorError18;\n          }\n        }\n      }\n\n      return !!loop;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx, chartArea, start, count) {\n      var options = this.options || {};\n      var points = this.points || [];\n\n      if (points.length && options.borderWidth) {\n        ctx.save();\n\n        _draw(ctx, this, start, count);\n\n        ctx.restore();\n      }\n\n      if (this.animated) {\n        this._pointsUpdated = false;\n        this._path = undefined;\n      }\n    }\n  }, {\n    key: \"points\",\n    set: function set(points) {\n      this._points = points;\n      delete this._segments;\n      delete this._path;\n      this._pointsUpdated = false;\n    },\n    get: function get() {\n      return this._points;\n    }\n  }, {\n    key: \"segments\",\n    get: function get() {\n      return this._segments || (this._segments = (0, _helpersDataset.an)(this, this.options.segment));\n    }\n  }]);\n  return LineElement;\n}(Element);\n\nexports.LineElement = LineElement;\n(0, _defineProperty2.default)(LineElement, \"id\", 'line');\n(0, _defineProperty2.default)(LineElement, \"defaults\", {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0\n});\n(0, _defineProperty2.default)(LineElement, \"defaultRoutes\", {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n});\n(0, _defineProperty2.default)(LineElement, \"descriptors\", {\n  _scriptable: true,\n  _indexable: function _indexable(name) {\n    return name !== 'borderDash' && name !== 'fill';\n  }\n});\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  var options = el.options;\n\n  var _el$getProps = el.getProps([axis], useFinalPosition),\n      value = _el$getProps[axis];\n\n  return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\n\nvar PointElement =\n/*#__PURE__*/\nfunction (_Element4) {\n  (0, _inherits2.default)(PointElement, _Element4);\n\n  /**\n  * @type {any}\n  */\n\n  /**\n  * @type {any}\n  */\n  function PointElement(cfg) {\n    var _this25;\n\n    (0, _classCallCheck2.default)(this, PointElement);\n    _this25 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(PointElement).call(this));\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this25), \"parsed\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this25), \"skip\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this25), \"stop\", void 0);\n    _this25.options = undefined;\n    _this25.parsed = undefined;\n    _this25.skip = undefined;\n    _this25.stop = undefined;\n\n    if (cfg) {\n      Object.assign((0, _assertThisInitialized2.default)(_this25), cfg);\n    }\n\n    return _this25;\n  }\n\n  (0, _createClass2.default)(PointElement, [{\n    key: \"inRange\",\n    value: function inRange(mouseX, mouseY, useFinalPosition) {\n      var options = this.options;\n\n      var _this$getProps4 = this.getProps(['x', 'y'], useFinalPosition),\n          x = _this$getProps4.x,\n          y = _this$getProps4.y;\n\n      return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n  }, {\n    key: \"inXRange\",\n    value: function inXRange(mouseX, useFinalPosition) {\n      return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n  }, {\n    key: \"inYRange\",\n    value: function inYRange(mouseY, useFinalPosition) {\n      return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps5 = this.getProps(['x', 'y'], useFinalPosition),\n          x = _this$getProps5.x,\n          y = _this$getProps5.y;\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }, {\n    key: \"size\",\n    value: function size(options) {\n      options = options || this.options || {};\n      var radius = options.radius || 0;\n      radius = Math.max(radius, radius && options.hoverRadius || 0);\n      var borderWidth = radius && options.borderWidth || 0;\n      return (radius + borderWidth) * 2;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx, area) {\n      var options = this.options;\n\n      if (this.skip || options.radius < 0.1 || !(0, _helpersDataset.C)(this, area, this.size(options) / 2)) {\n        return;\n      }\n\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.fillStyle = options.backgroundColor;\n      (0, _helpersDataset.au)(ctx, options, this.x, this.y);\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange() {\n      var options = this.options || {}; // @ts-expect-error Fallbacks should never be hit in practice\n\n      return options.radius + options.hitRadius;\n    }\n  }]);\n  return PointElement;\n}(Element);\n\nexports.PointElement = PointElement;\n(0, _defineProperty2.default)(PointElement, \"id\", 'point');\n(0, _defineProperty2.default)(PointElement, \"defaults\", {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n});\n(0, _defineProperty2.default)(PointElement, \"defaultRoutes\", {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n});\n\nfunction getBarBounds(bar, useFinalPosition) {\n  var _bar$getProps = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition),\n      x = _bar$getProps.x,\n      y = _bar$getProps.y,\n      base = _bar$getProps.base,\n      width = _bar$getProps.width,\n      height = _bar$getProps.height;\n\n  var left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {\n    left: left,\n    top: top,\n    right: right,\n    bottom: bottom\n  };\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : (0, _helpersDataset.S)(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  var value = bar.options.borderWidth;\n  var skip = bar.borderSkipped;\n  var o = (0, _helpersDataset.aw)(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  var _bar$getProps2 = bar.getProps(['enableBorderRadius']),\n      enableBorderRadius = _bar$getProps2.enableBorderRadius;\n\n  var value = bar.options.borderRadius;\n  var o = (0, _helpersDataset.ax)(value);\n  var maxR = Math.min(maxW, maxH);\n  var skip = bar.borderSkipped;\n  var enableBorder = enableBorderRadius || (0, _helpersDataset.i)(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  var bounds = getBarBounds(bar);\n  var width = bounds.right - bounds.left;\n  var height = bounds.bottom - bounds.top;\n  var border = parseBorderWidth(bar, width / 2, height / 2);\n  var radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius: radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n      }\n    }\n  };\n}\n\nfunction _inRange(bar, x, y, useFinalPosition) {\n  var skipX = x === null;\n  var skipY = y === null;\n  var skipBoth = skipX && skipY;\n  var bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds && (skipX || (0, _helpersDataset.ak)(x, bounds.left, bounds.right)) && (skipY || (0, _helpersDataset.ak)(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount) {\n  var refRect = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var x = rect.x !== refRect.x ? -amount : 0;\n  var y = rect.y !== refRect.y ? -amount : 0;\n  var w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  var h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nvar BarElement =\n/*#__PURE__*/\nfunction (_Element5) {\n  (0, _inherits2.default)(BarElement, _Element5);\n\n  function BarElement(cfg) {\n    var _this26;\n\n    (0, _classCallCheck2.default)(this, BarElement);\n    _this26 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(BarElement).call(this));\n    _this26.options = undefined;\n    _this26.horizontal = undefined;\n    _this26.base = undefined;\n    _this26.width = undefined;\n    _this26.height = undefined;\n    _this26.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign((0, _assertThisInitialized2.default)(_this26), cfg);\n    }\n\n    return _this26;\n  }\n\n  (0, _createClass2.default)(BarElement, [{\n    key: \"draw\",\n    value: function draw(ctx) {\n      var inflateAmount = this.inflateAmount,\n          _this$options14 = this.options,\n          borderColor = _this$options14.borderColor,\n          backgroundColor = _this$options14.backgroundColor;\n\n      var _boundingRects = boundingRects(this),\n          inner = _boundingRects.inner,\n          outer = _boundingRects.outer;\n\n      var addRectPath = hasRadius(outer.radius) ? _helpersDataset.av : addNormalRectPath;\n      ctx.save();\n\n      if (outer.w !== inner.w || outer.h !== inner.h) {\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n        ctx.clip();\n        addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n        ctx.fillStyle = borderColor;\n        ctx.fill('evenodd');\n      }\n\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(inner, inflateAmount));\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }, {\n    key: \"inRange\",\n    value: function inRange(mouseX, mouseY, useFinalPosition) {\n      return _inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n  }, {\n    key: \"inXRange\",\n    value: function inXRange(mouseX, useFinalPosition) {\n      return _inRange(this, mouseX, null, useFinalPosition);\n    }\n  }, {\n    key: \"inYRange\",\n    value: function inYRange(mouseY, useFinalPosition) {\n      return _inRange(this, null, mouseY, useFinalPosition);\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps6 = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition),\n          x = _this$getProps6.x,\n          y = _this$getProps6.y,\n          base = _this$getProps6.base,\n          horizontal = _this$getProps6.horizontal;\n\n      return {\n        x: horizontal ? (x + base) / 2 : x,\n        y: horizontal ? y : (y + base) / 2\n      };\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange(axis) {\n      return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n  }]);\n  return BarElement;\n}(Element);\n\nexports.BarElement = BarElement;\n(0, _defineProperty2.default)(BarElement, \"id\", 'bar');\n(0, _defineProperty2.default)(BarElement, \"defaults\", {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n});\n(0, _defineProperty2.default)(BarElement, \"defaultRoutes\", {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n});\nvar elements =\n/*#__PURE__*/\nObject.freeze({\n  __proto__: null,\n  ArcElement: ArcElement,\n  BarElement: BarElement,\n  LineElement: LineElement,\n  PointElement: PointElement\n});\nexports.elements = elements;\nvar BORDER_COLORS = ['rgb(54, 162, 235)', 'rgb(255, 99, 132)', 'rgb(255, 159, 64)', 'rgb(255, 205, 86)', 'rgb(75, 192, 192)', 'rgb(153, 102, 255)', 'rgb(201, 203, 207)' // grey\n]; // Border colors with 50% transparency\n\nvar BACKGROUND_COLORS =\n/* #__PURE__ */\nBORDER_COLORS.map(function (color) {\n  return color.replace('rgb(', 'rgba(').replace(')', ', 0.5)');\n});\n\nfunction getBorderColor(i) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset, i) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset, i) {\n  dataset.backgroundColor = dataset.data.map(function () {\n    return getBorderColor(i++);\n  });\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset, i) {\n  dataset.backgroundColor = dataset.data.map(function () {\n    return getBackgroundColor(i++);\n  });\n  return i;\n}\n\nfunction getColorizer(chart) {\n  var i = 0;\n  return function (dataset, datasetIndex) {\n    var controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(descriptors) {\n  var k;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(descriptor) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nfunction containsDefaultColorsDefenitions() {\n  return _helpersDataset.d.borderColor !== 'rgba(0,0,0,0.1)' || _helpersDataset.d.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\n\nvar plugin_colors = {\n  id: 'colors',\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  },\n  beforeLayout: function beforeLayout(chart, _args, options) {\n    if (!options.enabled) {\n      return;\n    }\n\n    var _chart$config = chart.config,\n        datasets = _chart$config.data.datasets,\n        chartOptions = _chart$config.options;\n    var elements = chartOptions.elements;\n    var containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n\n    if (!options.forceOverride && containsColorDefenition) {\n      return;\n    }\n\n    var colorizer = getColorizer(chart);\n    datasets.forEach(colorizer);\n  }\n};\nexports.Colors = plugin_colors;\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  var samples = options.samples || availableWidth;\n\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  var decimated = [];\n  var bucketWidth = (count - 2) / (samples - 2);\n  var sampledIndex = 0;\n  var endIndex = start + count - 1;\n  var a = start;\n  var i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    var avgX = 0;\n    var avgY = 0;\n    var j = void 0;\n    var avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    var avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    var avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    var rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    var rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    var _data$a = data[a],\n        pointAx = _data$a.x,\n        pointAy = _data$a.y;\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  var avgX = 0;\n  var countX = 0;\n  var i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  var decimated = [];\n  var endIndex = start + count - 1;\n  var xMin = data[start].x;\n  var xMax = data[endIndex].x;\n  var dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    var truncX = x | 0;\n\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      var lastIndex = i - 1;\n\n      if (!(0, _helpersDataset.k)(minIndex) && !(0, _helpersDataset.k)(maxIndex)) {\n        var intermediateIndex1 = Math.min(minIndex, maxIndex);\n        var intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push(_objectSpread({}, data[intermediateIndex1], {\n            x: avgX\n          }));\n        }\n\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push(_objectSpread({}, data[intermediateIndex2], {\n            x: avgX\n          }));\n        }\n      }\n\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    var data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach(function (dataset) {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  var pointCount = points.length;\n  var start = 0;\n  var count;\n  var iScale = meta.iScale;\n\n  var _iScale$getUserBounds = iScale.getUserBounds(),\n      min = _iScale$getUserBounds.min,\n      max = _iScale$getUserBounds.max,\n      minDefined = _iScale$getUserBounds.minDefined,\n      maxDefined = _iScale$getUserBounds.maxDefined;\n\n  if (minDefined) {\n    start = (0, _helpersDataset.S)((0, _helpersDataset.B)(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n\n  if (maxDefined) {\n    count = (0, _helpersDataset.S)((0, _helpersDataset.B)(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {\n    start: start,\n    count: count\n  };\n}\n\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false\n  },\n  beforeElementsUpdate: function beforeElementsUpdate(chart, args, options) {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    var availableWidth = chart.width;\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      var _data = dataset._data,\n          indexAxis = dataset.indexAxis;\n      var meta = chart.getDatasetMeta(datasetIndex);\n      var data = _data || dataset.data;\n\n      if ((0, _helpersDataset.a)([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n\n      var xAxis = chart.scales[meta.xAxisID];\n\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n\n      if (chart.options.parsing) {\n        return;\n      }\n\n      var _getStartAndCountOfVi3 = getStartAndCountOfVisiblePointsSimplified(meta, data),\n          start = _getStartAndCountOfVi3.start,\n          count = _getStartAndCountOfVi3.count;\n\n      var threshold = options.threshold || 4 * availableWidth;\n\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if ((0, _helpersDataset.k)(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function get() {\n            return this._decimated;\n          },\n          set: function set(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      var decimated;\n\n      switch (options.algorithm) {\n        case 'lttb':\n          decimated = lttbDecimation(data, start, count, availableWidth, options);\n          break;\n\n        case 'min-max':\n          decimated = minMaxDecimation(data, start, count, availableWidth);\n          break;\n\n        default:\n          throw new Error(\"Unsupported decimation algorithm '\".concat(options.algorithm, \"'\"));\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n  destroy: function destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\nexports.Decimation = plugin_decimation;\n\nfunction _segments(line, target, property) {\n  var segments = line.segments;\n  var points = line.points;\n  var tpoints = target.points;\n  var parts = [];\n  var _iteratorNormalCompletion19 = true;\n  var _didIteratorError19 = false;\n  var _iteratorError19 = undefined;\n\n  try {\n    for (var _iterator19 = segments[Symbol.iterator](), _step19; !(_iteratorNormalCompletion19 = (_step19 = _iterator19.next()).done); _iteratorNormalCompletion19 = true) {\n      var segment = _step19.value;\n      var start = segment.start,\n          end = segment.end;\n      end = _findSegmentEnd(start, end, points);\n\n      var bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n      if (!target.segments) {\n        parts.push({\n          source: segment,\n          target: bounds,\n          start: points[start],\n          end: points[end]\n        });\n        continue;\n      }\n\n      var targetSegments = (0, _helpersDataset.ao)(target, bounds);\n      var _iteratorNormalCompletion20 = true;\n      var _didIteratorError20 = false;\n      var _iteratorError20 = undefined;\n\n      try {\n        for (var _iterator20 = targetSegments[Symbol.iterator](), _step20; !(_iteratorNormalCompletion20 = (_step20 = _iterator20.next()).done); _iteratorNormalCompletion20 = true) {\n          var tgt = _step20.value;\n\n          var subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n\n          var fillSources = (0, _helpersDataset.ay)(segment, points, subBounds);\n          var _iteratorNormalCompletion21 = true;\n          var _didIteratorError21 = false;\n          var _iteratorError21 = undefined;\n\n          try {\n            for (var _iterator21 = fillSources[Symbol.iterator](), _step21; !(_iteratorNormalCompletion21 = (_step21 = _iterator21.next()).done); _iteratorNormalCompletion21 = true) {\n              var fillSource = _step21.value;\n              parts.push({\n                source: fillSource,\n                target: tgt,\n                start: (0, _defineProperty2.default)({}, property, _getEdge(bounds, subBounds, 'start', Math.max)),\n                end: (0, _defineProperty2.default)({}, property, _getEdge(bounds, subBounds, 'end', Math.min))\n              });\n            }\n          } catch (err) {\n            _didIteratorError21 = true;\n            _iteratorError21 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion21 && _iterator21.return != null) {\n                _iterator21.return();\n              }\n            } finally {\n              if (_didIteratorError21) {\n                throw _iteratorError21;\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError20 = true;\n        _iteratorError20 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion20 && _iterator20.return != null) {\n            _iterator20.return();\n          }\n        } finally {\n          if (_didIteratorError20) {\n            throw _iteratorError20;\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError19 = true;\n    _iteratorError19 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion19 && _iterator19.return != null) {\n        _iterator19.return();\n      }\n    } finally {\n      if (_didIteratorError19) {\n        throw _iteratorError19;\n      }\n    }\n  }\n\n  return parts;\n}\n\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n\n  var start = first[property];\n  var end = last[property];\n\n  if (property === 'angle') {\n    start = (0, _helpersDataset.az)(start);\n    end = (0, _helpersDataset.az)(end);\n  }\n\n  return {\n    property: property,\n    start: start,\n    end: end\n  };\n}\n\nfunction _pointsFromSegments(boundary, line) {\n  var _ref7 = boundary || {},\n      _ref7$x = _ref7.x,\n      x = _ref7$x === void 0 ? null : _ref7$x,\n      _ref7$y = _ref7.y,\n      y = _ref7$y === void 0 ? null : _ref7$y;\n\n  var linePoints = line.points;\n  var points = [];\n  line.segments.forEach(function (_ref8) {\n    var start = _ref8.start,\n        end = _ref8.end;\n    end = _findSegmentEnd(start, end, linePoints);\n    var first = linePoints[start];\n    var last = linePoints[end];\n\n    if (y !== null) {\n      points.push({\n        x: first.x,\n        y: y\n      });\n      points.push({\n        x: last.x,\n        y: y\n      });\n    } else if (x !== null) {\n      points.push({\n        x: x,\n        y: first.y\n      });\n      points.push({\n        x: x,\n        y: last.y\n      });\n    }\n  });\n  return points;\n}\n\nfunction _findSegmentEnd(start, end, points) {\n  for (; end > start; end--) {\n    var point = points[end];\n\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n  var points = [];\n  var _loop = false;\n\n  if ((0, _helpersDataset.b)(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points: points,\n    options: {\n      tension: 0\n    },\n    _loop: _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nfunction _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n  var source = sources[index];\n  var fill = source.fill;\n  var visited = [index];\n  var target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!(0, _helpersDataset.g)(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\nfunction _decodeFill(line, index, count) {\n  var fill = parseFillOption(line);\n\n  if ((0, _helpersDataset.i)(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  var target = parseFloat(fill);\n\n  if ((0, _helpersDataset.g)(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\nfunction _getTargetPixel(fill, scale) {\n  var pixel = null;\n\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if ((0, _helpersDataset.i)(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n\n  return pixel;\n}\n\nfunction _getTargetValue(fill, scale, startValue) {\n  var value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if ((0, _helpersDataset.i)(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n\n  return value;\n}\n\nfunction parseFillOption(line) {\n  var options = line.options;\n  var fillOption = options.fill;\n  var fill = (0, _helpersDataset.v)(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n\n  return fill;\n}\n\nfunction _buildStackLine(source) {\n  var scale = source.scale,\n      index = source.index,\n      line = source.line;\n  var points = [];\n  var segments = line.segments;\n  var sourcePoints = line.points;\n  var linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({\n    x: null,\n    y: scale.bottom\n  }, line));\n\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n\n    for (var j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n\n  return new LineElement({\n    points: points,\n    options: {}\n  });\n}\n\nfunction getLinesBelow(scale, index) {\n  var below = [];\n  var metas = scale.getMatchingVisibleMetas('line');\n\n  for (var i = 0; i < metas.length; i++) {\n    var meta = metas[i];\n\n    if (meta.index === index) {\n      break;\n    }\n\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n\n  return below;\n}\n\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  var postponed = [];\n\n  for (var j = 0; j < linesBelow.length; j++) {\n    var line = linesBelow[j];\n\n    var _findPoint = findPoint(line, sourcePoint, 'x'),\n        first = _findPoint.first,\n        last = _findPoint.last,\n        point = _findPoint.point;\n\n    if (!point || first && last) {\n      continue;\n    }\n\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n\n      if (!last) {\n        break;\n      }\n    }\n  }\n\n  points.push.apply(points, postponed);\n}\n\nfunction findPoint(line, sourcePoint, property) {\n  var point = line.interpolate(sourcePoint, property);\n\n  if (!point) {\n    return {};\n  }\n\n  var pointValue = point[property];\n  var segments = line.segments;\n  var linePoints = line.points;\n  var first = false;\n  var last = false;\n\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    var firstValue = linePoints[segment.start][property];\n    var lastValue = linePoints[segment.end][property];\n\n    if ((0, _helpersDataset.ak)(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n\n  return {\n    first: first,\n    last: last,\n    point: point\n  };\n}\n\nvar simpleArc =\n/*#__PURE__*/\nfunction () {\n  function simpleArc(opts) {\n    (0, _classCallCheck2.default)(this, simpleArc);\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  (0, _createClass2.default)(simpleArc, [{\n    key: \"pathSegment\",\n    value: function pathSegment(ctx, bounds, opts) {\n      var x = this.x,\n          y = this.y,\n          radius = this.radius;\n      bounds = bounds || {\n        start: 0,\n        end: _helpersDataset.T\n      };\n      ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n      return !opts.bounds;\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(point) {\n      var x = this.x,\n          y = this.y,\n          radius = this.radius;\n      var angle = point.angle;\n      return {\n        x: x + Math.cos(angle) * radius,\n        y: y + Math.sin(angle) * radius,\n        angle: angle\n      };\n    }\n  }]);\n  return simpleArc;\n}();\n\nfunction _getTarget(source) {\n  var chart = source.chart,\n      fill = source.fill,\n      line = source.line;\n\n  if ((0, _helpersDataset.g)(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  var boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\nfunction getLineByIndex(chart, index) {\n  var meta = chart.getDatasetMeta(index);\n  var visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  var scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n\n  return computeLinearBoundary(source);\n}\n\nfunction computeLinearBoundary(source) {\n  var _source$scale = source.scale,\n      scale = _source$scale === void 0 ? {} : _source$scale,\n      fill = source.fill;\n\n  var pixel = _getTargetPixel(fill, scale);\n\n  if ((0, _helpersDataset.g)(pixel)) {\n    var horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  var scale = source.scale,\n      fill = source.fill;\n  var options = scale.options;\n  var length = scale.getLabels().length;\n  var start = options.reverse ? scale.max : scale.min;\n\n  var value = _getTargetValue(fill, scale, start);\n\n  var target = [];\n\n  if (options.grid.circular) {\n    var center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (var i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n\n  return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n  var target = _getTarget(source);\n\n  var chart = source.chart,\n      index = source.index,\n      line = source.line,\n      scale = source.scale,\n      axis = source.axis;\n  var lineOpts = line.options;\n  var fillOption = lineOpts.fill;\n  var color = lineOpts.backgroundColor;\n\n  var _ref9 = fillOption || {},\n      _ref9$above = _ref9.above,\n      above = _ref9$above === void 0 ? color : _ref9$above,\n      _ref9$below = _ref9.below,\n      below = _ref9$below === void 0 ? color : _ref9$below;\n\n  var meta = chart.getDatasetMeta(index);\n  var clip = (0, _helpersDataset.ah)(chart, meta);\n\n  if (target && line.points.length) {\n    (0, _helpersDataset.Y)(ctx, area);\n    doFill(ctx, {\n      line: line,\n      target: target,\n      above: above,\n      below: below,\n      area: area,\n      scale: scale,\n      axis: axis,\n      clip: clip\n    });\n    (0, _helpersDataset.$)(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  var line = cfg.line,\n      target = cfg.target,\n      above = cfg.above,\n      below = cfg.below,\n      area = cfg.area,\n      scale = cfg.scale,\n      clip = cfg.clip;\n  var property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {\n      line: line,\n      target: target,\n      color: above,\n      scale: scale,\n      property: property,\n      clip: clip\n    });\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n\n  fill(ctx, {\n    line: line,\n    target: target,\n    color: below,\n    scale: scale,\n    property: property,\n    clip: clip\n  });\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  var segments = target.segments,\n      points = target.points;\n  var first = true;\n  var lineLoop = false;\n  ctx.beginPath();\n  var _iteratorNormalCompletion22 = true;\n  var _didIteratorError22 = false;\n  var _iteratorError22 = undefined;\n\n  try {\n    for (var _iterator22 = segments[Symbol.iterator](), _step22; !(_iteratorNormalCompletion22 = (_step22 = _iterator22.next()).done); _iteratorNormalCompletion22 = true) {\n      var segment = _step22.value;\n      var start = segment.start,\n          end = segment.end;\n      var firstPoint = points[start];\n\n      var lastPoint = points[_findSegmentEnd(start, end, points)];\n\n      if (first) {\n        ctx.moveTo(firstPoint.x, firstPoint.y);\n        first = false;\n      } else {\n        ctx.lineTo(firstPoint.x, clipY);\n        ctx.lineTo(firstPoint.x, firstPoint.y);\n      }\n\n      lineLoop = !!target.pathSegment(ctx, segment, {\n        move: lineLoop\n      });\n\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        ctx.lineTo(lastPoint.x, clipY);\n      }\n    }\n  } catch (err) {\n    _didIteratorError22 = true;\n    _iteratorError22 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion22 && _iterator22.return != null) {\n        _iterator22.return();\n      }\n    } finally {\n      if (_didIteratorError22) {\n        throw _iteratorError22;\n      }\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  var line = cfg.line,\n      target = cfg.target,\n      property = cfg.property,\n      color = cfg.color,\n      scale = cfg.scale,\n      clip = cfg.clip;\n\n  var segments = _segments(line, target, property);\n\n  var _iteratorNormalCompletion23 = true;\n  var _didIteratorError23 = false;\n  var _iteratorError23 = undefined;\n\n  try {\n    for (var _iterator23 = segments[Symbol.iterator](), _step23; !(_iteratorNormalCompletion23 = (_step23 = _iterator23.next()).done); _iteratorNormalCompletion23 = true) {\n      var _step23$value = _step23.value,\n          src = _step23$value.source,\n          tgt = _step23$value.target,\n          start = _step23$value.start,\n          end = _step23$value.end;\n      var _src$style = src.style;\n      _src$style = _src$style === void 0 ? {} : _src$style;\n      var _src$style$background = _src$style.backgroundColor,\n          backgroundColor = _src$style$background === void 0 ? color : _src$style$background;\n      var notShape = target !== true;\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      clipBounds(ctx, scale, clip, notShape && _getBounds(property, start, end));\n      ctx.beginPath();\n      var lineLoop = !!line.pathSegment(ctx, src);\n      var loop = void 0;\n\n      if (notShape) {\n        if (lineLoop) {\n          ctx.closePath();\n        } else {\n          interpolatedLineTo(ctx, target, end, property);\n        }\n\n        var targetLoop = !!target.pathSegment(ctx, tgt, {\n          move: lineLoop,\n          reverse: true\n        });\n        loop = lineLoop && targetLoop;\n\n        if (!loop) {\n          interpolatedLineTo(ctx, target, start, property);\n        }\n      }\n\n      ctx.closePath();\n      ctx.fill(loop ? 'evenodd' : 'nonzero');\n      ctx.restore();\n    }\n  } catch (err) {\n    _didIteratorError23 = true;\n    _iteratorError23 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion23 && _iterator23.return != null) {\n        _iterator23.return();\n      }\n    } finally {\n      if (_didIteratorError23) {\n        throw _iteratorError23;\n      }\n    }\n  }\n}\n\nfunction clipBounds(ctx, scale, clip, bounds) {\n  var chartArea = scale.chart.chartArea;\n\n  var _ref10 = bounds || {},\n      property = _ref10.property,\n      start = _ref10.start,\n      end = _ref10.end;\n\n  if (property === 'x' || property === 'y') {\n    var left, top, right, bottom;\n\n    if (property === 'x') {\n      left = start;\n      top = chartArea.top;\n      right = end;\n      bottom = chartArea.bottom;\n    } else {\n      left = chartArea.left;\n      top = start;\n      right = chartArea.right;\n      bottom = end;\n    }\n\n    ctx.beginPath();\n\n    if (clip) {\n      left = Math.max(left, clip.left);\n      right = Math.min(right, clip.right);\n      top = Math.max(top, clip.top);\n      bottom = Math.min(bottom, clip.bottom);\n    }\n\n    ctx.rect(left, top, right - left, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  var interpolatedPoint = target.interpolate(point, property);\n\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nvar index = {\n  id: 'filler',\n  afterDatasetsUpdate: function afterDatasetsUpdate(chart, _args, options) {\n    var count = (chart.data.datasets || []).length;\n    var sources = [];\n    var meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart: chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line: line\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw: function beforeDraw(chart, _args, options) {\n    var draw = options.drawTime === 'beforeDraw';\n    var metasets = chart.getSortedVisibleDatasetMetas();\n    var area = chart.chartArea;\n\n    for (var i = metasets.length - 1; i >= 0; --i) {\n      var source = metasets[i].$filler;\n\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw: function beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    var metasets = chart.getSortedVisibleDatasetMetas();\n\n    for (var i = metasets.length - 1; i >= 0; --i) {\n      var source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw: function beforeDatasetDraw(chart, args, options) {\n    var source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\nexports.Filler = index;\n\nvar getBoxSize = function getBoxSize(labelOpts, fontSize) {\n  var _labelOpts$boxHeight = labelOpts.boxHeight,\n      boxHeight = _labelOpts$boxHeight === void 0 ? fontSize : _labelOpts$boxHeight,\n      _labelOpts$boxWidth = labelOpts.boxWidth,\n      boxWidth = _labelOpts$boxWidth === void 0 ? fontSize : _labelOpts$boxWidth;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth: boxWidth,\n    boxHeight: boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nvar itemsEqual = function itemsEqual(a, b) {\n  return a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n};\n\nvar Legend =\n/*#__PURE__*/\nfunction (_Element6) {\n  (0, _inherits2.default)(Legend, _Element6);\n\n  function Legend(config) {\n    var _this27;\n\n    (0, _classCallCheck2.default)(this, Legend);\n    _this27 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Legend).call(this));\n    _this27._added = false;\n    _this27.legendHitBoxes = [];\n    _this27._hoveredItem = null;\n    _this27.doughnutMode = false;\n    _this27.chart = config.chart;\n    _this27.options = config.options;\n    _this27.ctx = config.ctx;\n    _this27.legendItems = undefined;\n    _this27.columnSizes = undefined;\n    _this27.lineWidths = undefined;\n    _this27.maxHeight = undefined;\n    _this27.maxWidth = undefined;\n    _this27.top = undefined;\n    _this27.bottom = undefined;\n    _this27.left = undefined;\n    _this27.right = undefined;\n    _this27.height = undefined;\n    _this27.width = undefined;\n    _this27._margins = undefined;\n    _this27.position = undefined;\n    _this27.weight = undefined;\n    _this27.fullSize = undefined;\n    return _this27;\n  }\n\n  (0, _createClass2.default)(Legend, [{\n    key: \"update\",\n    value: function update(maxWidth, maxHeight, margins) {\n      this.maxWidth = maxWidth;\n      this.maxHeight = maxHeight;\n      this._margins = margins;\n      this.setDimensions();\n      this.buildLabels();\n      this.fit();\n    }\n  }, {\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      if (this.isHorizontal()) {\n        this.width = this.maxWidth;\n        this.left = this._margins.left;\n        this.right = this.width;\n      } else {\n        this.height = this.maxHeight;\n        this.top = this._margins.top;\n        this.bottom = this.height;\n      }\n    }\n  }, {\n    key: \"buildLabels\",\n    value: function buildLabels() {\n      var _this28 = this;\n\n      var labelOpts = this.options.labels || {};\n      var legendItems = (0, _helpersDataset.Q)(labelOpts.generateLabels, [this.chart], this) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, _this28.chart.data);\n        });\n      }\n\n      if (labelOpts.sort) {\n        legendItems = legendItems.sort(function (a, b) {\n          return labelOpts.sort(a, b, _this28.chart.data);\n        });\n      }\n\n      if (this.options.reverse) {\n        legendItems.reverse();\n      }\n\n      this.legendItems = legendItems;\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var options = this.options,\n          ctx = this.ctx;\n\n      if (!options.display) {\n        this.width = this.height = 0;\n        return;\n      }\n\n      var labelOpts = options.labels;\n      var labelFont = (0, _helpersDataset.a0)(labelOpts.font);\n      var fontSize = labelFont.size;\n\n      var titleHeight = this._computeTitleHeight();\n\n      var _getBoxSize = getBoxSize(labelOpts, fontSize),\n          boxWidth = _getBoxSize.boxWidth,\n          itemHeight = _getBoxSize.itemHeight;\n\n      var width, height;\n      ctx.font = labelFont.string;\n\n      if (this.isHorizontal()) {\n        width = this.maxWidth;\n        height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n      } else {\n        height = this.maxHeight;\n        width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n      }\n\n      this.width = Math.min(width, options.maxWidth || this.maxWidth);\n      this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n  }, {\n    key: \"_fitRows\",\n    value: function _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n      var ctx = this.ctx,\n          maxWidth = this.maxWidth,\n          padding = this.options.labels.padding;\n      var hitboxes = this.legendHitBoxes = [];\n      var lineWidths = this.lineWidths = [0];\n      var lineHeight = itemHeight + padding;\n      var totalHeight = titleHeight;\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n      var row = -1;\n      var top = -lineHeight;\n      this.legendItems.forEach(function (legendItem, i) {\n        var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n        if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n          totalHeight += lineHeight;\n          lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n          top += lineHeight;\n          row++;\n        }\n\n        hitboxes[i] = {\n          left: 0,\n          top: top,\n          row: row,\n          width: itemWidth,\n          height: itemHeight\n        };\n        lineWidths[lineWidths.length - 1] += itemWidth + padding;\n      });\n      return totalHeight;\n    }\n  }, {\n    key: \"_fitCols\",\n    value: function _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n      var ctx = this.ctx,\n          maxHeight = this.maxHeight,\n          padding = this.options.labels.padding;\n      var hitboxes = this.legendHitBoxes = [];\n      var columnSizes = this.columnSizes = [];\n      var heightLimit = maxHeight - titleHeight;\n      var totalWidth = padding;\n      var currentColWidth = 0;\n      var currentColHeight = 0;\n      var left = 0;\n      var col = 0;\n      this.legendItems.forEach(function (legendItem, i) {\n        var _calculateItemSize = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight),\n            itemWidth = _calculateItemSize.itemWidth,\n            itemHeight = _calculateItemSize.itemHeight;\n\n        if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n          totalWidth += currentColWidth + padding;\n          columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n          });\n          left += currentColWidth + padding;\n          col++;\n          currentColWidth = currentColHeight = 0;\n        }\n\n        hitboxes[i] = {\n          left: left,\n          top: currentColHeight,\n          col: col,\n          width: itemWidth,\n          height: itemHeight\n        };\n        currentColWidth = Math.max(currentColWidth, itemWidth);\n        currentColHeight += itemHeight + padding;\n      });\n      totalWidth += currentColWidth;\n      columnSizes.push({\n        width: currentColWidth,\n        height: currentColHeight\n      });\n      return totalWidth;\n    }\n  }, {\n    key: \"adjustHitBoxes\",\n    value: function adjustHitBoxes() {\n      if (!this.options.display) {\n        return;\n      }\n\n      var titleHeight = this._computeTitleHeight();\n\n      var hitboxes = this.legendHitBoxes,\n          _this$options15 = this.options,\n          align = _this$options15.align,\n          padding = _this$options15.labels.padding,\n          rtl = _this$options15.rtl;\n      var rtlHelper = (0, _helpersDataset.aA)(rtl, this.left, this.width);\n\n      if (this.isHorizontal()) {\n        var row = 0;\n        var left = (0, _helpersDataset.a2)(align, this.left + padding, this.right - this.lineWidths[row]);\n        var _iteratorNormalCompletion24 = true;\n        var _didIteratorError24 = false;\n        var _iteratorError24 = undefined;\n\n        try {\n          for (var _iterator24 = hitboxes[Symbol.iterator](), _step24; !(_iteratorNormalCompletion24 = (_step24 = _iterator24.next()).done); _iteratorNormalCompletion24 = true) {\n            var hitbox = _step24.value;\n\n            if (row !== hitbox.row) {\n              row = hitbox.row;\n              left = (0, _helpersDataset.a2)(align, this.left + padding, this.right - this.lineWidths[row]);\n            }\n\n            hitbox.top += this.top + titleHeight + padding;\n            hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n            left += hitbox.width + padding;\n          }\n        } catch (err) {\n          _didIteratorError24 = true;\n          _iteratorError24 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion24 && _iterator24.return != null) {\n              _iterator24.return();\n            }\n          } finally {\n            if (_didIteratorError24) {\n              throw _iteratorError24;\n            }\n          }\n        }\n      } else {\n        var col = 0;\n        var top = (0, _helpersDataset.a2)(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        var _iteratorNormalCompletion25 = true;\n        var _didIteratorError25 = false;\n        var _iteratorError25 = undefined;\n\n        try {\n          for (var _iterator25 = hitboxes[Symbol.iterator](), _step25; !(_iteratorNormalCompletion25 = (_step25 = _iterator25.next()).done); _iteratorNormalCompletion25 = true) {\n            var _hitbox = _step25.value;\n\n            if (_hitbox.col !== col) {\n              col = _hitbox.col;\n              top = (0, _helpersDataset.a2)(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            }\n\n            _hitbox.top = top;\n            _hitbox.left += this.left + padding;\n            _hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(_hitbox.left), _hitbox.width);\n            top += _hitbox.height + padding;\n          }\n        } catch (err) {\n          _didIteratorError25 = true;\n          _iteratorError25 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion25 && _iterator25.return != null) {\n              _iterator25.return();\n            }\n          } finally {\n            if (_didIteratorError25) {\n              throw _iteratorError25;\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      if (this.options.display) {\n        var ctx = this.ctx;\n        (0, _helpersDataset.Y)(ctx, this);\n\n        this._draw();\n\n        (0, _helpersDataset.$)(ctx);\n      }\n    }\n  }, {\n    key: \"_draw\",\n    value: function _draw() {\n      var _this29 = this;\n\n      var opts = this.options,\n          columnSizes = this.columnSizes,\n          lineWidths = this.lineWidths,\n          ctx = this.ctx;\n      var align = opts.align,\n          labelOpts = opts.labels;\n      var defaultColor = _helpersDataset.d.color;\n      var rtlHelper = (0, _helpersDataset.aA)(opts.rtl, this.left, this.width);\n      var labelFont = (0, _helpersDataset.a0)(labelOpts.font);\n      var padding = labelOpts.padding;\n      var fontSize = labelFont.size;\n      var halfFontSize = fontSize / 2;\n      var cursor;\n      this.drawTitle();\n      ctx.textAlign = rtlHelper.textAlign('left');\n      ctx.textBaseline = 'middle';\n      ctx.lineWidth = 0.5;\n      ctx.font = labelFont.string;\n\n      var _getBoxSize2 = getBoxSize(labelOpts, fontSize),\n          boxWidth = _getBoxSize2.boxWidth,\n          boxHeight = _getBoxSize2.boxHeight,\n          itemHeight = _getBoxSize2.itemHeight;\n\n      var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n        if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n          return;\n        }\n\n        ctx.save();\n        var lineWidth = (0, _helpersDataset.v)(legendItem.lineWidth, 1);\n        ctx.fillStyle = (0, _helpersDataset.v)(legendItem.fillStyle, defaultColor);\n        ctx.lineCap = (0, _helpersDataset.v)(legendItem.lineCap, 'butt');\n        ctx.lineDashOffset = (0, _helpersDataset.v)(legendItem.lineDashOffset, 0);\n        ctx.lineJoin = (0, _helpersDataset.v)(legendItem.lineJoin, 'miter');\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = (0, _helpersDataset.v)(legendItem.strokeStyle, defaultColor);\n        ctx.setLineDash((0, _helpersDataset.v)(legendItem.lineDash, []));\n\n        if (labelOpts.usePointStyle) {\n          var drawOptions = {\n            radius: boxHeight * Math.SQRT2 / 2,\n            pointStyle: legendItem.pointStyle,\n            rotation: legendItem.rotation,\n            borderWidth: lineWidth\n          };\n          var centerX = rtlHelper.xPlus(x, boxWidth / 2);\n          var centerY = y + halfFontSize;\n          (0, _helpersDataset.aE)(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n        } else {\n          var yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n          var xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n          var borderRadius = (0, _helpersDataset.ax)(legendItem.borderRadius);\n          ctx.beginPath();\n\n          if (Object.values(borderRadius).some(function (v) {\n            return v !== 0;\n          })) {\n            (0, _helpersDataset.av)(ctx, {\n              x: xBoxLeft,\n              y: yBoxTop,\n              w: boxWidth,\n              h: boxHeight,\n              radius: borderRadius\n            });\n          } else {\n            ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n          }\n\n          ctx.fill();\n\n          if (lineWidth !== 0) {\n            ctx.stroke();\n          }\n        }\n\n        ctx.restore();\n      };\n\n      var fillText = function fillText(x, y, legendItem) {\n        (0, _helpersDataset.Z)(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n          strikethrough: legendItem.hidden,\n          textAlign: rtlHelper.textAlign(legendItem.textAlign)\n        });\n      };\n\n      var isHorizontal = this.isHorizontal();\n\n      var titleHeight = this._computeTitleHeight();\n\n      if (isHorizontal) {\n        cursor = {\n          x: (0, _helpersDataset.a2)(align, this.left + padding, this.right - lineWidths[0]),\n          y: this.top + padding + titleHeight,\n          line: 0\n        };\n      } else {\n        cursor = {\n          x: this.left + padding,\n          y: (0, _helpersDataset.a2)(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n          line: 0\n        };\n      }\n\n      (0, _helpersDataset.aB)(this.ctx, opts.textDirection);\n      var lineHeight = itemHeight + padding;\n      this.legendItems.forEach(function (legendItem, i) {\n        ctx.strokeStyle = legendItem.fontColor;\n        ctx.fillStyle = legendItem.fontColor;\n        var textWidth = ctx.measureText(legendItem.text).width;\n        var textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n        var width = boxWidth + halfFontSize + textWidth;\n        var x = cursor.x;\n        var y = cursor.y;\n        rtlHelper.setWidth(_this29.width);\n\n        if (isHorizontal) {\n          if (i > 0 && x + width + padding > _this29.right) {\n            y = cursor.y += lineHeight;\n            cursor.line++;\n            x = cursor.x = (0, _helpersDataset.a2)(align, _this29.left + padding, _this29.right - lineWidths[cursor.line]);\n          }\n        } else if (i > 0 && y + lineHeight > _this29.bottom) {\n          x = cursor.x = x + columnSizes[cursor.line].width + padding;\n          cursor.line++;\n          y = cursor.y = (0, _helpersDataset.a2)(align, _this29.top + titleHeight + padding, _this29.bottom - columnSizes[cursor.line].height);\n        }\n\n        var realX = rtlHelper.x(x);\n        drawLegendBox(realX, y, legendItem);\n        x = (0, _helpersDataset.aC)(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : _this29.right, opts.rtl);\n        fillText(rtlHelper.x(x), y, legendItem);\n\n        if (isHorizontal) {\n          cursor.x += width + padding;\n        } else if (typeof legendItem.text !== 'string') {\n          var fontLineHeight = labelFont.lineHeight;\n          cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n        } else {\n          cursor.y += lineHeight;\n        }\n      });\n      (0, _helpersDataset.aD)(this.ctx, opts.textDirection);\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {\n      var opts = this.options;\n      var titleOpts = opts.title;\n      var titleFont = (0, _helpersDataset.a0)(titleOpts.font);\n      var titlePadding = (0, _helpersDataset.E)(titleOpts.padding);\n\n      if (!titleOpts.display) {\n        return;\n      }\n\n      var rtlHelper = (0, _helpersDataset.aA)(opts.rtl, this.left, this.width);\n      var ctx = this.ctx;\n      var position = titleOpts.position;\n      var halfFontSize = titleFont.size / 2;\n      var topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n      var y;\n      var left = this.left;\n      var maxWidth = this.width;\n\n      if (this.isHorizontal()) {\n        maxWidth = Math.max.apply(Math, (0, _toConsumableArray2.default)(this.lineWidths));\n        y = this.top + topPaddingPlusHalfFontSize;\n        left = (0, _helpersDataset.a2)(opts.align, left, this.right - maxWidth);\n      } else {\n        var maxHeight = this.columnSizes.reduce(function (acc, size) {\n          return Math.max(acc, size.height);\n        }, 0);\n        y = topPaddingPlusHalfFontSize + (0, _helpersDataset.a2)(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n      }\n\n      var x = (0, _helpersDataset.a2)(position, left, left + maxWidth);\n      ctx.textAlign = rtlHelper.textAlign((0, _helpersDataset.a1)(position));\n      ctx.textBaseline = 'middle';\n      ctx.strokeStyle = titleOpts.color;\n      ctx.fillStyle = titleOpts.color;\n      ctx.font = titleFont.string;\n      (0, _helpersDataset.Z)(ctx, titleOpts.text, x, y, titleFont);\n    }\n  }, {\n    key: \"_computeTitleHeight\",\n    value: function _computeTitleHeight() {\n      var titleOpts = this.options.title;\n      var titleFont = (0, _helpersDataset.a0)(titleOpts.font);\n      var titlePadding = (0, _helpersDataset.E)(titleOpts.padding);\n      return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n  }, {\n    key: \"_getLegendItemAt\",\n    value: function _getLegendItemAt(x, y) {\n      var i, hitBox, lh;\n\n      if ((0, _helpersDataset.ak)(x, this.left, this.right) && (0, _helpersDataset.ak)(y, this.top, this.bottom)) {\n        lh = this.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if ((0, _helpersDataset.ak)(x, hitBox.left, hitBox.left + hitBox.width) && (0, _helpersDataset.ak)(y, hitBox.top, hitBox.top + hitBox.height)) {\n            return this.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(e) {\n      var opts = this.options;\n\n      if (!isListened(e.type, opts)) {\n        return;\n      }\n\n      var hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n      if (e.type === 'mousemove' || e.type === 'mouseout') {\n        var previous = this._hoveredItem;\n        var sameItem = itemsEqual(previous, hoveredItem);\n\n        if (previous && !sameItem) {\n          (0, _helpersDataset.Q)(opts.onLeave, [e, previous, this], this);\n        }\n\n        this._hoveredItem = hoveredItem;\n\n        if (hoveredItem && !sameItem) {\n          (0, _helpersDataset.Q)(opts.onHover, [e, hoveredItem, this], this);\n        }\n      } else if (hoveredItem) {\n        (0, _helpersDataset.Q)(opts.onClick, [e, hoveredItem, this], this);\n      }\n    }\n  }]);\n  return Legend;\n}(Element);\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  var itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  var itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {\n    itemWidth: itemWidth,\n    itemHeight: itemHeight\n  };\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  var legendItemText = legendItem.text;\n\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce(function (a, b) {\n      return a.length > b.length ? a : b;\n    });\n  }\n\n  return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  var itemHeight = _itemHeight;\n\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  var labelHeight = legendItem.text ? legendItem.text.length : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n\n  return false;\n}\n\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start: function start(chart, _args, options) {\n    var legend = chart.legend = new Legend({\n      ctx: chart.ctx,\n      options: options,\n      chart: chart\n    });\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop: function stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate: function afterUpdate(chart) {\n    var legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent: function afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick: function onClick(e, legendItem, legend) {\n      var index = legendItem.datasetIndex;\n      var ci = legend.chart;\n\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: function color(ctx) {\n        return ctx.chart.options.color;\n      },\n      boxWidth: 40,\n      padding: 10,\n      generateLabels: function generateLabels(chart) {\n        var datasets = chart.data.datasets;\n        var _chart$legend$options = chart.legend.options.labels,\n            usePointStyle = _chart$legend$options.usePointStyle,\n            pointStyle = _chart$legend$options.pointStyle,\n            textAlign = _chart$legend$options.textAlign,\n            color = _chart$legend$options.color,\n            useBorderRadius = _chart$legend$options.useBorderRadius,\n            borderRadius = _chart$legend$options.borderRadius;\n        return chart._getSortedDatasetMetas().map(function (meta) {\n          var style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          var borderWidth = (0, _helpersDataset.E)(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: function color(ctx) {\n        return ctx.chart.options.color;\n      },\n      display: false,\n      position: 'center',\n      text: ''\n    }\n  },\n  descriptors: {\n    _scriptable: function _scriptable(name) {\n      return !name.startsWith('on');\n    },\n    labels: {\n      _scriptable: function _scriptable(name) {\n        return !['generateLabels', 'filter', 'sort'].includes(name);\n      }\n    }\n  }\n};\nexports.Legend = plugin_legend;\n\nvar Title =\n/*#__PURE__*/\nfunction (_Element7) {\n  (0, _inherits2.default)(Title, _Element7);\n\n  function Title(config) {\n    var _this30;\n\n    (0, _classCallCheck2.default)(this, Title);\n    _this30 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Title).call(this));\n    _this30.chart = config.chart;\n    _this30.options = config.options;\n    _this30.ctx = config.ctx;\n    _this30._padding = undefined;\n    _this30.top = undefined;\n    _this30.bottom = undefined;\n    _this30.left = undefined;\n    _this30.right = undefined;\n    _this30.width = undefined;\n    _this30.height = undefined;\n    _this30.position = undefined;\n    _this30.weight = undefined;\n    _this30.fullSize = undefined;\n    return _this30;\n  }\n\n  (0, _createClass2.default)(Title, [{\n    key: \"update\",\n    value: function update(maxWidth, maxHeight) {\n      var opts = this.options;\n      this.left = 0;\n      this.top = 0;\n\n      if (!opts.display) {\n        this.width = this.height = this.right = this.bottom = 0;\n        return;\n      }\n\n      this.width = this.right = maxWidth;\n      this.height = this.bottom = maxHeight;\n      var lineCount = (0, _helpersDataset.b)(opts.text) ? opts.text.length : 1;\n      this._padding = (0, _helpersDataset.E)(opts.padding);\n\n      var textSize = lineCount * (0, _helpersDataset.a0)(opts.font).lineHeight + this._padding.height;\n\n      if (this.isHorizontal()) {\n        this.height = textSize;\n      } else {\n        this.width = textSize;\n      }\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    }\n  }, {\n    key: \"_drawArgs\",\n    value: function _drawArgs(offset) {\n      var top = this.top,\n          left = this.left,\n          bottom = this.bottom,\n          right = this.right,\n          options = this.options;\n      var align = options.align;\n      var rotation = 0;\n      var maxWidth, titleX, titleY;\n\n      if (this.isHorizontal()) {\n        titleX = (0, _helpersDataset.a2)(align, left, right);\n        titleY = top + offset;\n        maxWidth = right - left;\n      } else {\n        if (options.position === 'left') {\n          titleX = left + offset;\n          titleY = (0, _helpersDataset.a2)(align, bottom, top);\n          rotation = _helpersDataset.P * -0.5;\n        } else {\n          titleX = right - offset;\n          titleY = (0, _helpersDataset.a2)(align, top, bottom);\n          rotation = _helpersDataset.P * 0.5;\n        }\n\n        maxWidth = bottom - top;\n      }\n\n      return {\n        titleX: titleX,\n        titleY: titleY,\n        maxWidth: maxWidth,\n        rotation: rotation\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var ctx = this.ctx;\n      var opts = this.options;\n\n      if (!opts.display) {\n        return;\n      }\n\n      var fontOpts = (0, _helpersDataset.a0)(opts.font);\n      var lineHeight = fontOpts.lineHeight;\n      var offset = lineHeight / 2 + this._padding.top;\n\n      var _this$_drawArgs = this._drawArgs(offset),\n          titleX = _this$_drawArgs.titleX,\n          titleY = _this$_drawArgs.titleY,\n          maxWidth = _this$_drawArgs.maxWidth,\n          rotation = _this$_drawArgs.rotation;\n\n      (0, _helpersDataset.Z)(ctx, opts.text, 0, 0, fontOpts, {\n        color: opts.color,\n        maxWidth: maxWidth,\n        rotation: rotation,\n        textAlign: (0, _helpersDataset.a1)(opts.align),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n  }]);\n  return Title;\n}(Element);\n\nfunction createTitle(chart, titleOpts) {\n  var title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart: chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start: function start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop: function stop(chart) {\n    var titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold'\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nexports.Title = plugin_title;\nvar map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start: function start(chart, _args, options) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: options,\n      chart: chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop: function stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal'\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nexports.SubTitle = plugin_subtitle;\nvar positioners = {\n  average: function average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    var i, len;\n    var xSet = new Set();\n    var y = 0;\n    var count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      var el = items[i].element;\n\n      if (el && el.hasValue()) {\n        var pos = el.tooltipPosition();\n        xSet.add(pos.x);\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    if (count === 0 || xSet.size === 0) {\n      return false;\n    }\n\n    var xAverage = (0, _toConsumableArray2.default)(xSet).reduce(function (a, b) {\n      return a + b;\n    }) / xSet.size;\n    return {\n      x: xAverage,\n      y: y / count\n    };\n  },\n  nearest: function nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    var x = eventPosition.x;\n    var y = eventPosition.y;\n    var minDistance = Number.POSITIVE_INFINITY;\n    var i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      var el = items[i].element;\n\n      if (el && el.hasValue()) {\n        var center = el.getCenterPoint();\n        var d = (0, _helpersDataset.aF)(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      var tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n};\n\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if ((0, _helpersDataset.b)(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n\n  return str;\n}\n\nfunction createTooltipItem(chart, item) {\n  var element = item.element,\n      datasetIndex = item.datasetIndex,\n      index = item.index;\n  var controller = chart.getDatasetMeta(datasetIndex).controller;\n\n  var _controller$getLabelA = controller.getLabelAndValue(index),\n      label = _controller$getLabelA.label,\n      value = _controller$getLabelA.value;\n\n  return {\n    chart: chart,\n    label: label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex: datasetIndex,\n    element: element\n  };\n}\n\nfunction getTooltipSize(tooltip, options) {\n  var ctx = tooltip.chart.ctx;\n  var body = tooltip.body,\n      footer = tooltip.footer,\n      title = tooltip.title;\n  var boxWidth = options.boxWidth,\n      boxHeight = options.boxHeight;\n  var bodyFont = (0, _helpersDataset.a0)(options.bodyFont);\n  var titleFont = (0, _helpersDataset.a0)(options.titleFont);\n  var footerFont = (0, _helpersDataset.a0)(options.footerFont);\n  var titleLineCount = title.length;\n  var footerLineCount = footer.length;\n  var bodyLineItemCount = body.length;\n  var padding = (0, _helpersDataset.E)(options.padding);\n  var height = padding.height;\n  var width = 0;\n  var combinedBodyLength = body.reduce(function (count, bodyItem) {\n    return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n  }, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n  }\n\n  if (combinedBodyLength) {\n    var bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n  }\n\n  if (footerLineCount) {\n    height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  var widthPadding = 0;\n\n  var maxLineWidth = function maxLineWidth(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n  ctx.font = titleFont.string;\n  (0, _helpersDataset.F)(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  (0, _helpersDataset.F)(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n  (0, _helpersDataset.F)(body, function (bodyItem) {\n    (0, _helpersDataset.F)(bodyItem.before, maxLineWidth);\n    (0, _helpersDataset.F)(bodyItem.lines, maxLineWidth);\n    (0, _helpersDataset.F)(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  (0, _helpersDataset.F)(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction determineYAlign(chart, size) {\n  var y = size.y,\n      height = size.height;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > chart.height - height / 2) {\n    return 'bottom';\n  }\n\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  var x = size.x,\n      width = size.width;\n  var caret = options.caretSize + options.caretPadding;\n\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  var x = size.x,\n      width = size.width;\n  var chartWidth = chart.width,\n      _chart$chartArea = chart.chartArea,\n      left = _chart$chartArea.left,\n      right = _chart$chartArea.right;\n  var xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\nfunction determineAlignment(chart, options, size) {\n  var yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign: yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  var x = size.x,\n      width = size.width;\n\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  var y = size.y,\n      height = size.height;\n\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= height / 2;\n  }\n\n  return y;\n}\n\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  var caretSize = options.caretSize,\n      caretPadding = options.caretPadding,\n      cornerRadius = options.cornerRadius;\n  var xAlign = alignment.xAlign,\n      yAlign = alignment.yAlign;\n  var paddingAndSize = caretSize + caretPadding;\n\n  var _toTRBLCorners = (0, _helpersDataset.ax)(cornerRadius),\n      topLeft = _toTRBLCorners.topLeft,\n      topRight = _toTRBLCorners.topRight,\n      bottomLeft = _toTRBLCorners.bottomLeft,\n      bottomRight = _toTRBLCorners.bottomRight;\n\n  var x = alignX(size, xAlign);\n  var y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: (0, _helpersDataset.S)(x, 0, chart.width - size.width),\n    y: (0, _helpersDataset.S)(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  var padding = (0, _helpersDataset.E)(options.padding);\n  return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return (0, _helpersDataset.j)(parent, {\n    tooltip: tooltip,\n    tooltipItems: tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  var override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nvar defaultCallbacks = {\n  beforeTitle: _helpersDataset.aG,\n  title: function title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      var item = tooltipItems[0];\n      var labels = item.chart.data.labels;\n      var labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: _helpersDataset.aG,\n  beforeBody: _helpersDataset.aG,\n  beforeLabel: _helpersDataset.aG,\n  label: function label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    var label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n\n    var value = tooltipItem.formattedValue;\n\n    if (!(0, _helpersDataset.k)(value)) {\n      label += value;\n    }\n\n    return label;\n  },\n  labelColor: function labelColor(tooltipItem) {\n    var meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    var options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0\n    };\n  },\n  labelTextColor: function labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle: function labelPointStyle(tooltipItem) {\n    var meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    var options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation\n    };\n  },\n  afterLabel: _helpersDataset.aG,\n  afterBody: _helpersDataset.aG,\n  beforeFooter: _helpersDataset.aG,\n  footer: _helpersDataset.aG,\n  afterFooter: _helpersDataset.aG\n};\n\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  var result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nvar Tooltip =\n/*#__PURE__*/\nfunction (_Element8) {\n  (0, _inherits2.default)(Tooltip, _Element8);\n\n  function Tooltip(config) {\n    var _this31;\n\n    (0, _classCallCheck2.default)(this, Tooltip);\n    _this31 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Tooltip).call(this));\n    _this31.opacity = 0;\n    _this31._active = [];\n    _this31._eventPosition = undefined;\n    _this31._size = undefined;\n    _this31._cachedAnimations = undefined;\n    _this31._tooltipItems = [];\n    _this31.$animations = undefined;\n    _this31.$context = undefined;\n    _this31.chart = config.chart;\n    _this31.options = config.options;\n    _this31.dataPoints = undefined;\n    _this31.title = undefined;\n    _this31.beforeBody = undefined;\n    _this31.body = undefined;\n    _this31.afterBody = undefined;\n    _this31.footer = undefined;\n    _this31.xAlign = undefined;\n    _this31.yAlign = undefined;\n    _this31.x = undefined;\n    _this31.y = undefined;\n    _this31.height = undefined;\n    _this31.width = undefined;\n    _this31.caretX = undefined;\n    _this31.caretY = undefined;\n    _this31.labelColors = undefined;\n    _this31.labelPointStyles = undefined;\n    _this31.labelTextColors = undefined;\n    return _this31;\n  }\n\n  (0, _createClass2.default)(Tooltip, [{\n    key: \"initialize\",\n    value: function initialize(options) {\n      this.options = options;\n      this._cachedAnimations = undefined;\n      this.$context = undefined;\n    }\n  }, {\n    key: \"_resolveAnimations\",\n    value: function _resolveAnimations() {\n      var cached = this._cachedAnimations;\n\n      if (cached) {\n        return cached;\n      }\n\n      var chart = this.chart;\n      var options = this.options.setContext(this.getContext());\n      var opts = options.enabled && chart.options.animation && options.animations;\n      var animations = new Animations(this.chart, opts);\n\n      if (opts._cacheable) {\n        this._cachedAnimations = Object.freeze(animations);\n      }\n\n      return animations;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext() {\n      return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n  }, {\n    key: \"getTitle\",\n    value: function getTitle(context, options) {\n      var callbacks = options.callbacks;\n      var beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n      var title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n      var afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    }\n  }, {\n    key: \"getBeforeBody\",\n    value: function getBeforeBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n  }, {\n    key: \"getBody\",\n    value: function getBody(tooltipItems, options) {\n      var _this32 = this;\n\n      var callbacks = options.callbacks;\n      var bodyItems = [];\n      (0, _helpersDataset.F)(tooltipItems, function (context) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        var scoped = overrideCallbacks(callbacks, context);\n        pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', _this32, context)));\n        pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', _this32, context));\n        pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', _this32, context)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    }\n  }, {\n    key: \"getAfterBody\",\n    value: function getAfterBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n  }, {\n    key: \"getFooter\",\n    value: function getFooter(tooltipItems, options) {\n      var callbacks = options.callbacks;\n      var beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n      var footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n      var afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    }\n  }, {\n    key: \"_createItems\",\n    value: function _createItems(options) {\n      var _this33 = this;\n\n      var active = this._active;\n      var data = this.chart.data;\n      var labelColors = [];\n      var labelPointStyles = [];\n      var labelTextColors = [];\n      var tooltipItems = [];\n      var i, len;\n\n      for (i = 0, len = active.length; i < len; ++i) {\n        tooltipItems.push(createTooltipItem(this.chart, active[i]));\n      }\n\n      if (options.filter) {\n        tooltipItems = tooltipItems.filter(function (element, index, array) {\n          return options.filter(element, index, array, data);\n        });\n      }\n\n      if (options.itemSort) {\n        tooltipItems = tooltipItems.sort(function (a, b) {\n          return options.itemSort(a, b, data);\n        });\n      }\n\n      (0, _helpersDataset.F)(tooltipItems, function (context) {\n        var scoped = overrideCallbacks(options.callbacks, context);\n        labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', _this33, context));\n        labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', _this33, context));\n        labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', _this33, context));\n      });\n      this.labelColors = labelColors;\n      this.labelPointStyles = labelPointStyles;\n      this.labelTextColors = labelTextColors;\n      this.dataPoints = tooltipItems;\n      return tooltipItems;\n    }\n  }, {\n    key: \"update\",\n    value: function update(changed, replay) {\n      var options = this.options.setContext(this.getContext());\n      var active = this._active;\n      var properties;\n      var tooltipItems = [];\n\n      if (!active.length) {\n        if (this.opacity !== 0) {\n          properties = {\n            opacity: 0\n          };\n        }\n      } else {\n        var position = positioners[options.position].call(this, active, this._eventPosition);\n        tooltipItems = this._createItems(options);\n        this.title = this.getTitle(tooltipItems, options);\n        this.beforeBody = this.getBeforeBody(tooltipItems, options);\n        this.body = this.getBody(tooltipItems, options);\n        this.afterBody = this.getAfterBody(tooltipItems, options);\n        this.footer = this.getFooter(tooltipItems, options);\n        var size = this._size = getTooltipSize(this, options);\n        var positionAndSize = Object.assign({}, position, size);\n        var alignment = determineAlignment(this.chart, options, positionAndSize);\n        var backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        properties = {\n          opacity: 1,\n          x: backgroundPoint.x,\n          y: backgroundPoint.y,\n          width: size.width,\n          height: size.height,\n          caretX: position.x,\n          caretY: position.y\n        };\n      }\n\n      this._tooltipItems = tooltipItems;\n      this.$context = undefined;\n\n      if (properties) {\n        this._resolveAnimations().update(this, properties);\n      }\n\n      if (changed && options.external) {\n        options.external.call(this, {\n          chart: this.chart,\n          tooltip: this,\n          replay: replay\n        });\n      }\n    }\n  }, {\n    key: \"drawCaret\",\n    value: function drawCaret(tooltipPoint, ctx, size, options) {\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n  }, {\n    key: \"getCaretPosition\",\n    value: function getCaretPosition(tooltipPoint, size, options) {\n      var xAlign = this.xAlign,\n          yAlign = this.yAlign;\n      var caretSize = options.caretSize,\n          cornerRadius = options.cornerRadius;\n\n      var _toTRBLCorners2 = (0, _helpersDataset.ax)(cornerRadius),\n          topLeft = _toTRBLCorners2.topLeft,\n          topRight = _toTRBLCorners2.topRight,\n          bottomLeft = _toTRBLCorners2.bottomLeft,\n          bottomRight = _toTRBLCorners2.bottomRight;\n\n      var ptX = tooltipPoint.x,\n          ptY = tooltipPoint.y;\n      var width = size.width,\n          height = size.height;\n      var x1, x2, x3, y1, y2, y3;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n\n        x3 = x1;\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n        } else {\n          x2 = this.caretX;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          x1 = x2 + caretSize;\n          x3 = x2 - caretSize;\n        }\n\n        y3 = y1;\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle(pt, ctx, options) {\n      var title = this.title;\n      var length = title.length;\n      var titleFont, titleSpacing, i;\n\n      if (length) {\n        var rtlHelper = (0, _helpersDataset.aA)(options.rtl, this.x, this.width);\n        pt.x = getAlignedX(this, options.titleAlign, options);\n        ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n        ctx.textBaseline = 'middle';\n        titleFont = (0, _helpersDataset.a0)(options.titleFont);\n        titleSpacing = options.titleSpacing;\n        ctx.fillStyle = options.titleColor;\n        ctx.font = titleFont.string;\n\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n          pt.y += titleFont.lineHeight + titleSpacing;\n\n          if (i + 1 === length) {\n            pt.y += options.titleMarginBottom - titleSpacing;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_drawColorBox\",\n    value: function _drawColorBox(ctx, pt, i, rtlHelper, options) {\n      var labelColor = this.labelColors[i];\n      var labelPointStyle = this.labelPointStyles[i];\n      var boxHeight = options.boxHeight,\n          boxWidth = options.boxWidth;\n      var bodyFont = (0, _helpersDataset.a0)(options.bodyFont);\n      var colorX = getAlignedX(this, 'left', options);\n      var rtlColorX = rtlHelper.x(colorX);\n      var yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n      var colorY = pt.y + yOffSet;\n\n      if (options.usePointStyle) {\n        var drawOptions = {\n          radius: Math.min(boxWidth, boxHeight) / 2,\n          pointStyle: labelPointStyle.pointStyle,\n          rotation: labelPointStyle.rotation,\n          borderWidth: 1\n        };\n        var centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n        var centerY = colorY + boxHeight / 2;\n        ctx.strokeStyle = options.multiKeyBackground;\n        ctx.fillStyle = options.multiKeyBackground;\n        (0, _helpersDataset.au)(ctx, drawOptions, centerX, centerY);\n        ctx.strokeStyle = labelColor.borderColor;\n        ctx.fillStyle = labelColor.backgroundColor;\n        (0, _helpersDataset.au)(ctx, drawOptions, centerX, centerY);\n      } else {\n        ctx.lineWidth = (0, _helpersDataset.i)(labelColor.borderWidth) ? Math.max.apply(Math, (0, _toConsumableArray2.default)(Object.values(labelColor.borderWidth))) : labelColor.borderWidth || 1;\n        ctx.strokeStyle = labelColor.borderColor;\n        ctx.setLineDash(labelColor.borderDash || []);\n        ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n        var outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n        var innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n        var borderRadius = (0, _helpersDataset.ax)(labelColor.borderRadius);\n\n        if (Object.values(borderRadius).some(function (v) {\n          return v !== 0;\n        })) {\n          ctx.beginPath();\n          ctx.fillStyle = options.multiKeyBackground;\n          (0, _helpersDataset.av)(ctx, {\n            x: outerX,\n            y: colorY,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius\n          });\n          ctx.fill();\n          ctx.stroke();\n          ctx.fillStyle = labelColor.backgroundColor;\n          ctx.beginPath();\n          (0, _helpersDataset.av)(ctx, {\n            x: innerX,\n            y: colorY + 1,\n            w: boxWidth - 2,\n            h: boxHeight - 2,\n            radius: borderRadius\n          });\n          ctx.fill();\n        } else {\n          ctx.fillStyle = options.multiKeyBackground;\n          ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.fillStyle = labelColor.backgroundColor;\n          ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n        }\n      }\n\n      ctx.fillStyle = this.labelTextColors[i];\n    }\n  }, {\n    key: \"drawBody\",\n    value: function drawBody(pt, ctx, options) {\n      var body = this.body;\n      var bodySpacing = options.bodySpacing,\n          bodyAlign = options.bodyAlign,\n          displayColors = options.displayColors,\n          boxHeight = options.boxHeight,\n          boxWidth = options.boxWidth,\n          boxPadding = options.boxPadding;\n      var bodyFont = (0, _helpersDataset.a0)(options.bodyFont);\n      var bodyLineHeight = bodyFont.lineHeight;\n      var xLinePadding = 0;\n      var rtlHelper = (0, _helpersDataset.aA)(options.rtl, this.x, this.width);\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n        pt.y += bodyLineHeight + bodySpacing;\n      };\n\n      var bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n      var bodyItem, textColor, lines, i, j, ilen, jlen;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'middle';\n      ctx.font = bodyFont.string;\n      pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n      ctx.fillStyle = options.bodyColor;\n      (0, _helpersDataset.F)(this.beforeBody, fillLineOfText);\n      xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n\n      for (i = 0, ilen = body.length; i < ilen; ++i) {\n        bodyItem = body[i];\n        textColor = this.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        (0, _helpersDataset.F)(bodyItem.before, fillLineOfText);\n        lines = bodyItem.lines;\n\n        if (displayColors && lines.length) {\n          this._drawColorBox(ctx, pt, i, rtlHelper, options);\n\n          bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n        }\n\n        for (j = 0, jlen = lines.length; j < jlen; ++j) {\n          fillLineOfText(lines[j]);\n          bodyLineHeight = bodyFont.lineHeight;\n        }\n\n        (0, _helpersDataset.F)(bodyItem.after, fillLineOfText);\n      }\n\n      xLinePadding = 0;\n      bodyLineHeight = bodyFont.lineHeight;\n      (0, _helpersDataset.F)(this.afterBody, fillLineOfText);\n      pt.y -= bodySpacing;\n    }\n  }, {\n    key: \"drawFooter\",\n    value: function drawFooter(pt, ctx, options) {\n      var footer = this.footer;\n      var length = footer.length;\n      var footerFont, i;\n\n      if (length) {\n        var rtlHelper = (0, _helpersDataset.aA)(options.rtl, this.x, this.width);\n        pt.x = getAlignedX(this, options.footerAlign, options);\n        pt.y += options.footerMarginTop;\n        ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n        ctx.textBaseline = 'middle';\n        footerFont = (0, _helpersDataset.a0)(options.footerFont);\n        ctx.fillStyle = options.footerColor;\n        ctx.font = footerFont.string;\n\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n          pt.y += footerFont.lineHeight + options.footerSpacing;\n        }\n      }\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground(pt, ctx, tooltipSize, options) {\n      var xAlign = this.xAlign,\n          yAlign = this.yAlign;\n      var x = pt.x,\n          y = pt.y;\n      var width = tooltipSize.width,\n          height = tooltipSize.height;\n\n      var _toTRBLCorners3 = (0, _helpersDataset.ax)(options.cornerRadius),\n          topLeft = _toTRBLCorners3.topLeft,\n          topRight = _toTRBLCorners3.topRight,\n          bottomLeft = _toTRBLCorners3.bottomLeft,\n          bottomRight = _toTRBLCorners3.bottomRight;\n\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.beginPath();\n      ctx.moveTo(x + topLeft, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n\n      ctx.lineTo(x + width - topRight, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n\n      ctx.lineTo(x + width, y + height - bottomRight);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n\n      ctx.lineTo(x + bottomLeft, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n\n      ctx.lineTo(x, y + topLeft);\n      ctx.quadraticCurveTo(x, y, x + topLeft, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (options.borderWidth > 0) {\n        ctx.stroke();\n      }\n    }\n  }, {\n    key: \"_updateAnimationTarget\",\n    value: function _updateAnimationTarget(options) {\n      var chart = this.chart;\n      var anims = this.$animations;\n      var animX = anims && anims.x;\n      var animY = anims && anims.y;\n\n      if (animX || animY) {\n        var position = positioners[options.position].call(this, this._active, this._eventPosition);\n\n        if (!position) {\n          return;\n        }\n\n        var size = this._size = getTooltipSize(this, options);\n        var positionAndSize = Object.assign({}, position, this._size);\n        var alignment = determineAlignment(chart, options, positionAndSize);\n        var point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n\n        if (animX._to !== point.x || animY._to !== point.y) {\n          this.xAlign = alignment.xAlign;\n          this.yAlign = alignment.yAlign;\n          this.width = size.width;\n          this.height = size.height;\n          this.caretX = position.x;\n          this.caretY = position.y;\n\n          this._resolveAnimations().update(this, point);\n        }\n      }\n    }\n  }, {\n    key: \"_willRender\",\n    value: function _willRender() {\n      return !!this.opacity;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var options = this.options.setContext(this.getContext());\n      var opacity = this.opacity;\n\n      if (!opacity) {\n        return;\n      }\n\n      this._updateAnimationTarget(options);\n\n      var tooltipSize = {\n        width: this.width,\n        height: this.height\n      };\n      var pt = {\n        x: this.x,\n        y: this.y\n      };\n      opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n      var padding = (0, _helpersDataset.E)(options.padding);\n      var hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n      if (options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity;\n        this.drawBackground(pt, ctx, tooltipSize, options);\n        (0, _helpersDataset.aB)(ctx, options.textDirection);\n        pt.y += padding.top;\n        this.drawTitle(pt, ctx, options);\n        this.drawBody(pt, ctx, options);\n        this.drawFooter(pt, ctx, options);\n        (0, _helpersDataset.aD)(ctx, options.textDirection);\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"getActiveElements\",\n    value: function getActiveElements() {\n      return this._active || [];\n    }\n  }, {\n    key: \"setActiveElements\",\n    value: function setActiveElements(activeElements, eventPosition) {\n      var _this34 = this;\n\n      var lastActive = this._active;\n      var active = activeElements.map(function (_ref11) {\n        var datasetIndex = _ref11.datasetIndex,\n            index = _ref11.index;\n\n        var meta = _this34.chart.getDatasetMeta(datasetIndex);\n\n        if (!meta) {\n          throw new Error('Cannot find a dataset at index ' + datasetIndex);\n        }\n\n        return {\n          datasetIndex: datasetIndex,\n          element: meta.data[index],\n          index: index\n        };\n      });\n      var changed = !(0, _helpersDataset.ai)(lastActive, active);\n\n      var positionChanged = this._positionChanged(active, eventPosition);\n\n      if (changed || positionChanged) {\n        this._active = active;\n        this._eventPosition = eventPosition;\n        this._ignoreReplayEvents = true;\n        this.update(true);\n      }\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(e, replay) {\n      var inChartArea = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n      if (replay && this._ignoreReplayEvents) {\n        return false;\n      }\n\n      this._ignoreReplayEvents = false;\n      var options = this.options;\n      var lastActive = this._active || [];\n\n      var active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n      var positionChanged = this._positionChanged(active, e);\n\n      var changed = replay || !(0, _helpersDataset.ai)(active, lastActive) || positionChanged;\n\n      if (changed) {\n        this._active = active;\n\n        if (options.enabled || options.external) {\n          this._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          this.update(true, replay);\n        }\n      }\n\n      return changed;\n    }\n  }, {\n    key: \"_getActiveElements\",\n    value: function _getActiveElements(e, lastActive, replay, inChartArea) {\n      var _this35 = this;\n\n      var options = this.options;\n\n      if (e.type === 'mouseout') {\n        return [];\n      }\n\n      if (!inChartArea) {\n        return lastActive.filter(function (i) {\n          return _this35.chart.data.datasets[i.datasetIndex] && _this35.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined;\n        });\n      }\n\n      var active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n      if (options.reverse) {\n        active.reverse();\n      }\n\n      return active;\n    }\n  }, {\n    key: \"_positionChanged\",\n    value: function _positionChanged(active, e) {\n      var caretX = this.caretX,\n          caretY = this.caretY,\n          options = this.options;\n      var position = positioners[options.position].call(this, active, e);\n      return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n  }]);\n  return Tooltip;\n}(Element);\n\n(0, _defineProperty2.default)(Tooltip, \"positioners\", positioners);\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners: positioners,\n  afterInit: function afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({\n        chart: chart,\n        options: options\n      });\n    }\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset: function reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw: function afterDraw(chart) {\n    var tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      var args = {\n        tooltip: tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', _objectSpread({}, args, {\n        cancelable: true\n      })) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent: function afterEvent(chart, args) {\n    if (chart.tooltip) {\n      var useFinalPosition = args.replay;\n\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold'\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {},\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold'\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: function boxHeight(ctx, opts) {\n      return opts.bodyFont.size;\n    },\n    boxWidth: function boxWidth(ctx, opts) {\n      return opts.bodyFont.size;\n    },\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart'\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: function _scriptable(name) {\n      return name !== 'filter' && name !== 'itemSort' && name !== 'external';\n    },\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\nexports.Tooltip = plugin_tooltip;\nvar plugins =\n/*#__PURE__*/\nObject.freeze({\n  __proto__: null,\n  Colors: plugin_colors,\n  Decimation: plugin_decimation,\n  Filler: index,\n  Legend: plugin_legend,\n  SubTitle: plugin_subtitle,\n  Title: plugin_title,\n  Tooltip: plugin_tooltip\n});\nexports.plugins = plugins;\n\nvar addIfString = function addIfString(labels, raw, index, addedLabels) {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({\n      index: index,\n      label: raw\n    });\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  var first = labels.indexOf(raw);\n\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n\n  var last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nvar validIndex = function validIndex(index, max) {\n  return index === null ? null : (0, _helpersDataset.S)(Math.round(index), 0, max);\n};\n\nfunction _getLabelForValue(value) {\n  var labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n\n  return value;\n}\n\nvar CategoryScale =\n/*#__PURE__*/\nfunction (_Scale) {\n  (0, _inherits2.default)(CategoryScale, _Scale);\n\n  function CategoryScale(cfg) {\n    var _this36;\n\n    (0, _classCallCheck2.default)(this, CategoryScale);\n    _this36 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(CategoryScale).call(this, cfg));\n    _this36._startValue = undefined;\n    _this36._valueRange = 0;\n    _this36._addedLabels = [];\n    return _this36;\n  }\n\n  (0, _createClass2.default)(CategoryScale, [{\n    key: \"init\",\n    value: function init(scaleOptions) {\n      var added = this._addedLabels;\n\n      if (added.length) {\n        var labels = this.getLabels();\n        var _iteratorNormalCompletion26 = true;\n        var _didIteratorError26 = false;\n        var _iteratorError26 = undefined;\n\n        try {\n          for (var _iterator26 = added[Symbol.iterator](), _step26; !(_iteratorNormalCompletion26 = (_step26 = _iterator26.next()).done); _iteratorNormalCompletion26 = true) {\n            var _step26$value = _step26.value,\n                _index3 = _step26$value.index,\n                label = _step26$value.label;\n\n            if (labels[_index3] === label) {\n              labels.splice(_index3, 1);\n            }\n          }\n        } catch (err) {\n          _didIteratorError26 = true;\n          _iteratorError26 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion26 && _iterator26.return != null) {\n              _iterator26.return();\n            }\n          } finally {\n            if (_didIteratorError26) {\n              throw _iteratorError26;\n            }\n          }\n        }\n\n        this._addedLabels = [];\n      }\n\n      (0, _get2.default)((0, _getPrototypeOf2.default)(CategoryScale.prototype), \"init\", this).call(this, scaleOptions);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if ((0, _helpersDataset.k)(raw)) {\n        return null;\n      }\n\n      var labels = this.getLabels();\n      index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, (0, _helpersDataset.v)(index, raw), this._addedLabels);\n      return validIndex(index, labels.length - 1);\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getUserBounds2 = this.getUserBounds(),\n          minDefined = _this$getUserBounds2.minDefined,\n          maxDefined = _this$getUserBounds2.maxDefined;\n\n      var _this$getMinMax = this.getMinMax(true),\n          min = _this$getMinMax.min,\n          max = _this$getMinMax.max;\n\n      if (this.options.bounds === 'ticks') {\n        if (!minDefined) {\n          min = 0;\n        }\n\n        if (!maxDefined) {\n          max = this.getLabels().length - 1;\n        }\n      }\n\n      this.min = min;\n      this.max = max;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var min = this.min;\n      var max = this.max;\n      var offset = this.options.offset;\n      var ticks = [];\n      var labels = this.getLabels();\n      labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n      this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n      this._startValue = this.min - (offset ? 0.5 : 0);\n\n      for (var value = min; value <= max; value++) {\n        ticks.push({\n          value: value\n        });\n      }\n\n      return ticks;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return _getLabelForValue.call(this, value);\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      (0, _get2.default)((0, _getPrototypeOf2.default)(CategoryScale.prototype), \"configure\", this).call(this);\n\n      if (!this.isHorizontal()) {\n        this._reversePixels = !this._reversePixels;\n      }\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      if (typeof value !== 'number') {\n        value = this.parse(value);\n      }\n\n      return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n  }, {\n    key: \"getPixelForTick\",\n    value: function getPixelForTick(index) {\n      var ticks = this.ticks;\n\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n\n      return this.getPixelForValue(ticks[index].value);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n  }, {\n    key: \"getBasePixel\",\n    value: function getBasePixel() {\n      return this.bottom;\n    }\n  }]);\n  return CategoryScale;\n}(Scale);\n\nexports.CategoryScale = CategoryScale;\n(0, _defineProperty2.default)(CategoryScale, \"id\", 'category');\n(0, _defineProperty2.default)(CategoryScale, \"defaults\", {\n  ticks: {\n    callback: _getLabelForValue\n  }\n});\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  var ticks = [];\n  var MIN_SPACING = 1e-14;\n  var bounds = generationOptions.bounds,\n      step = generationOptions.step,\n      min = generationOptions.min,\n      max = generationOptions.max,\n      precision = generationOptions.precision,\n      count = generationOptions.count,\n      maxTicks = generationOptions.maxTicks,\n      maxDigits = generationOptions.maxDigits,\n      includeBounds = generationOptions.includeBounds;\n  var unit = step || 1;\n  var maxSpaces = maxTicks - 1;\n  var rmin = dataRange.min,\n      rmax = dataRange.max;\n  var minDefined = !(0, _helpersDataset.k)(min);\n  var maxDefined = !(0, _helpersDataset.k)(max);\n  var countDefined = !(0, _helpersDataset.k)(count);\n  var minSpacing = (rmax - rmin) / (maxDigits + 1);\n  var spacing = (0, _helpersDataset.aI)((rmax - rmin) / maxSpaces / unit) * unit;\n  var factor, niceMin, niceMax, numSpaces;\n\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{\n      value: rmin\n    }, {\n      value: rmax\n    }];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n  if (numSpaces > maxSpaces) {\n    spacing = (0, _helpersDataset.aI)(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!(0, _helpersDataset.k)(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && (0, _helpersDataset.aJ)((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    if ((0, _helpersDataset.aK)(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  var decimalPlaces = Math.max((0, _helpersDataset.aL)(spacing), (0, _helpersDataset.aL)(niceMin));\n  factor = Math.pow(10, (0, _helpersDataset.k)(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  var j = 0;\n\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({\n        value: min\n      });\n\n      if (niceMin < min) {\n        j++;\n      }\n\n      if ((0, _helpersDataset.aK)(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    var tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n\n    ticks.push({\n      value: tickValue\n    });\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && (0, _helpersDataset.aK)(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({\n        value: max\n      });\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({\n      value: niceMax\n    });\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, _ref12) {\n  var horizontal = _ref12.horizontal,\n      minRotation = _ref12.minRotation;\n  var rad = (0, _helpersDataset.t)(minRotation);\n  var ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  var length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nvar LinearScaleBase =\n/*#__PURE__*/\nfunction (_Scale2) {\n  (0, _inherits2.default)(LinearScaleBase, _Scale2);\n\n  function LinearScaleBase(cfg) {\n    var _this37;\n\n    (0, _classCallCheck2.default)(this, LinearScaleBase);\n    _this37 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LinearScaleBase).call(this, cfg));\n    _this37.start = undefined;\n    _this37.end = undefined;\n    _this37._startValue = undefined;\n    _this37._endValue = undefined;\n    _this37._valueRange = 0;\n    return _this37;\n  }\n\n  (0, _createClass2.default)(LinearScaleBase, [{\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if ((0, _helpersDataset.k)(raw)) {\n        return null;\n      }\n\n      if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n        return null;\n      }\n\n      return +raw;\n    }\n  }, {\n    key: \"handleTickRangeOptions\",\n    value: function handleTickRangeOptions() {\n      var beginAtZero = this.options.beginAtZero;\n\n      var _this$getUserBounds3 = this.getUserBounds(),\n          minDefined = _this$getUserBounds3.minDefined,\n          maxDefined = _this$getUserBounds3.maxDefined;\n\n      var min = this.min,\n          max = this.max;\n\n      var setMin = function setMin(v) {\n        return min = minDefined ? min : v;\n      };\n\n      var setMax = function setMax(v) {\n        return max = maxDefined ? max : v;\n      };\n\n      if (beginAtZero) {\n        var minSign = (0, _helpersDataset.s)(min);\n        var maxSign = (0, _helpersDataset.s)(max);\n\n        if (minSign < 0 && maxSign < 0) {\n          setMax(0);\n        } else if (minSign > 0 && maxSign > 0) {\n          setMin(0);\n        }\n      }\n\n      if (min === max) {\n        var offset = max === 0 ? 1 : Math.abs(max * 0.05);\n        setMax(max + offset);\n\n        if (!beginAtZero) {\n          setMin(min - offset);\n        }\n      }\n\n      this.min = min;\n      this.max = max;\n    }\n  }, {\n    key: \"getTickLimit\",\n    value: function getTickLimit() {\n      var tickOpts = this.options.ticks;\n      var maxTicksLimit = tickOpts.maxTicksLimit,\n          stepSize = tickOpts.stepSize;\n      var maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n\n        if (maxTicks > 1000) {\n          console.warn(\"scales.\".concat(this.id, \".ticks.stepSize: \").concat(stepSize, \" would result generating up to \").concat(maxTicks, \" ticks. Limiting to 1000.\"));\n          maxTicks = 1000;\n        }\n      } else {\n        maxTicks = this.computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var opts = this.options;\n      var tickOpts = opts.ticks;\n      var maxTicks = this.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        bounds: opts.bounds,\n        min: opts.min,\n        max: opts.max,\n        precision: tickOpts.precision,\n        step: tickOpts.stepSize,\n        count: tickOpts.count,\n        maxDigits: this._maxDigits(),\n        horizontal: this.isHorizontal(),\n        minRotation: tickOpts.minRotation || 0,\n        includeBounds: tickOpts.includeBounds !== false\n      };\n      var dataRange = this._range || this;\n      var ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n\n      if (opts.bounds === 'ticks') {\n        (0, _helpersDataset.aH)(ticks, this, 'value');\n      }\n\n      if (opts.reverse) {\n        ticks.reverse();\n        this.start = this.max;\n        this.end = this.min;\n      } else {\n        this.start = this.min;\n        this.end = this.max;\n      }\n\n      return ticks;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var ticks = this.ticks;\n      var start = this.min;\n      var end = this.max;\n      (0, _get2.default)((0, _getPrototypeOf2.default)(LinearScaleBase.prototype), \"configure\", this).call(this);\n\n      if (this.options.offset && ticks.length) {\n        var offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n        start -= offset;\n        end += offset;\n      }\n\n      this._startValue = start;\n      this._endValue = end;\n      this._valueRange = end - start;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return (0, _helpersDataset.o)(value, this.chart.options.locale, this.options.ticks.format);\n    }\n  }]);\n  return LinearScaleBase;\n}(Scale);\n\nvar LinearScale =\n/*#__PURE__*/\nfunction (_LinearScaleBase) {\n  (0, _inherits2.default)(LinearScale, _LinearScaleBase);\n\n  function LinearScale() {\n    (0, _classCallCheck2.default)(this, LinearScale);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LinearScale).apply(this, arguments));\n  }\n\n  (0, _createClass2.default)(LinearScale, [{\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getMinMax2 = this.getMinMax(true),\n          min = _this$getMinMax2.min,\n          max = _this$getMinMax2.max;\n\n      this.min = (0, _helpersDataset.g)(min) ? min : 0;\n      this.max = (0, _helpersDataset.g)(max) ? max : 1;\n      this.handleTickRangeOptions();\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      var horizontal = this.isHorizontal();\n      var length = horizontal ? this.width : this.height;\n      var minRotation = (0, _helpersDataset.t)(this.options.ticks.minRotation);\n      var ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n\n      var tickFont = this._resolveTickFontOptions(0);\n\n      return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n  }]);\n  return LinearScale;\n}(LinearScaleBase);\n\nexports.LinearScale = LinearScale;\n(0, _defineProperty2.default)(LinearScale, \"id\", 'linear');\n(0, _defineProperty2.default)(LinearScale, \"defaults\", {\n  ticks: {\n    callback: _helpersDataset.aM.formatters.numeric\n  }\n});\n\nvar log10Floor = function log10Floor(v) {\n  return Math.floor((0, _helpersDataset.aN)(v));\n};\n\nvar changeExponent = function changeExponent(v, m) {\n  return Math.pow(10, log10Floor(v) + m);\n};\n\nfunction isMajor(tickVal) {\n  var remain = tickVal / Math.pow(10, log10Floor(tickVal));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  var rangeStep = Math.pow(10, rangeExp);\n  var start = Math.floor(min / rangeStep);\n  var end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  var range = max - min;\n  var rangeExp = log10Floor(range);\n\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n\n  return Math.min(rangeExp, log10Floor(min));\n}\n\nfunction generateTicks(generationOptions, _ref13) {\n  var min = _ref13.min,\n      max = _ref13.max;\n  min = (0, _helpersDataset.O)(generationOptions.min, min);\n  var ticks = [];\n  var minExp = log10Floor(min);\n  var exp = startExp(min, max);\n  var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  var stepSize = Math.pow(10, exp);\n  var base = minExp > exp ? Math.pow(10, minExp) : 0;\n  var start = Math.round((min - base) * precision) / precision;\n  var offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  var significand = Math.floor((start - offset) / Math.pow(10, exp));\n  var value = (0, _helpersDataset.O)(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n\n  while (value < max) {\n    ticks.push({\n      value: value,\n      major: isMajor(value),\n      significand: significand\n    });\n\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n\n  var lastTick = (0, _helpersDataset.O)(generationOptions.max, value);\n  ticks.push({\n    value: lastTick,\n    major: isMajor(lastTick),\n    significand: significand\n  });\n  return ticks;\n}\n\nvar LogarithmicScale =\n/*#__PURE__*/\nfunction (_Scale3) {\n  (0, _inherits2.default)(LogarithmicScale, _Scale3);\n\n  function LogarithmicScale(cfg) {\n    var _this38;\n\n    (0, _classCallCheck2.default)(this, LogarithmicScale);\n    _this38 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LogarithmicScale).call(this, cfg));\n    _this38.start = undefined;\n    _this38.end = undefined;\n    _this38._startValue = undefined;\n    _this38._valueRange = 0;\n    return _this38;\n  }\n\n  (0, _createClass2.default)(LogarithmicScale, [{\n    key: \"parse\",\n    value: function parse(raw, index) {\n      var value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n\n      if (value === 0) {\n        this._zero = true;\n        return undefined;\n      }\n\n      return (0, _helpersDataset.g)(value) && value > 0 ? value : null;\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getMinMax3 = this.getMinMax(true),\n          min = _this$getMinMax3.min,\n          max = _this$getMinMax3.max;\n\n      this.min = (0, _helpersDataset.g)(min) ? Math.max(0, min) : null;\n      this.max = (0, _helpersDataset.g)(max) ? Math.max(0, max) : null;\n\n      if (this.options.beginAtZero) {\n        this._zero = true;\n      }\n\n      if (this._zero && this.min !== this._suggestedMin && !(0, _helpersDataset.g)(this._userMin)) {\n        this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n      }\n\n      this.handleTickRangeOptions();\n    }\n  }, {\n    key: \"handleTickRangeOptions\",\n    value: function handleTickRangeOptions() {\n      var _this$getUserBounds4 = this.getUserBounds(),\n          minDefined = _this$getUserBounds4.minDefined,\n          maxDefined = _this$getUserBounds4.maxDefined;\n\n      var min = this.min;\n      var max = this.max;\n\n      var setMin = function setMin(v) {\n        return min = minDefined ? min : v;\n      };\n\n      var setMax = function setMax(v) {\n        return max = maxDefined ? max : v;\n      };\n\n      if (min === max) {\n        if (min <= 0) {\n          setMin(1);\n          setMax(10);\n        } else {\n          setMin(changeExponent(min, -1));\n          setMax(changeExponent(max, +1));\n        }\n      }\n\n      if (min <= 0) {\n        setMin(changeExponent(max, -1));\n      }\n\n      if (max <= 0) {\n        setMax(changeExponent(min, +1));\n      }\n\n      this.min = min;\n      this.max = max;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var opts = this.options;\n      var generationOptions = {\n        min: this._userMin,\n        max: this._userMax\n      };\n      var ticks = generateTicks(generationOptions, this);\n\n      if (opts.bounds === 'ticks') {\n        (0, _helpersDataset.aH)(ticks, this, 'value');\n      }\n\n      if (opts.reverse) {\n        ticks.reverse();\n        this.start = this.max;\n        this.end = this.min;\n      } else {\n        this.start = this.min;\n        this.end = this.max;\n      }\n\n      return ticks;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return value === undefined ? '0' : (0, _helpersDataset.o)(value, this.chart.options.locale, this.options.ticks.format);\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var start = this.min;\n      (0, _get2.default)((0, _getPrototypeOf2.default)(LogarithmicScale.prototype), \"configure\", this).call(this);\n      this._startValue = (0, _helpersDataset.aN)(start);\n      this._valueRange = (0, _helpersDataset.aN)(this.max) - (0, _helpersDataset.aN)(start);\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      if (value === undefined || value === 0) {\n        value = this.min;\n      }\n\n      if (value === null || isNaN(value)) {\n        return NaN;\n      }\n\n      return this.getPixelForDecimal(value === this.min ? 0 : ((0, _helpersDataset.aN)(value) - this._startValue) / this._valueRange);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var decimal = this.getDecimalForPixel(pixel);\n      return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n  }]);\n  return LogarithmicScale;\n}(Scale);\n\nexports.LogarithmicScale = LogarithmicScale;\n(0, _defineProperty2.default)(LogarithmicScale, \"id\", 'logarithmic');\n(0, _defineProperty2.default)(LogarithmicScale, \"defaults\", {\n  ticks: {\n    callback: _helpersDataset.aM.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n});\n\nfunction getTickBackdropHeight(opts) {\n  var tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    var padding = (0, _helpersDataset.E)(tickOpts.backdropPadding);\n    return (0, _helpersDataset.v)(tickOpts.font && tickOpts.font.size, _helpersDataset.d.font.size) + padding.height;\n  }\n\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = (0, _helpersDataset.b)(label) ? label : [label];\n  return {\n    w: (0, _helpersDataset.aO)(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - size / 2,\n      end: pos + size / 2\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\nfunction fitWithPointLabels(scale) {\n  var orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  var limits = Object.assign({}, orig);\n  var labelSizes = [];\n  var padding = [];\n  var valueCount = scale._pointLabels.length;\n  var pointLabelOpts = scale.options.pointLabels;\n  var additionalAngle = pointLabelOpts.centerPointLabels ? _helpersDataset.P / valueCount : 0;\n\n  for (var i = 0; i < valueCount; i++) {\n    var opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    var pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    var plFont = (0, _helpersDataset.a0)(opts.font);\n    var textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    var angleRadians = (0, _helpersDataset.az)(scale.getIndexAngle(i) + additionalAngle);\n    var angle = Math.round((0, _helpersDataset.U)(angleRadians));\n    var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  var sin = Math.abs(Math.sin(angle));\n  var cos = Math.abs(Math.cos(angle));\n  var x = 0;\n  var y = 0;\n\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  var outerDistance = scale.drawingArea;\n  var extra = itemOpts.extra,\n      additionalAngle = itemOpts.additionalAngle,\n      padding = itemOpts.padding,\n      size = itemOpts.size;\n  var pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  var angle = Math.round((0, _helpersDataset.U)((0, _helpersDataset.az)(pointLabelPosition.angle + _helpersDataset.H)));\n  var y = yForAngle(pointLabelPosition.y, size.h, angle);\n  var textAlign = getTextAlignForAngle(angle);\n  var left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    visible: true,\n    x: pointLabelPosition.x,\n    y: y,\n    textAlign: textAlign,\n    left: left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n\n  var left = item.left,\n      top = item.top,\n      right = item.right,\n      bottom = item.bottom;\n  var apexesInArea = (0, _helpersDataset.C)({\n    x: left,\n    y: top\n  }, area) || (0, _helpersDataset.C)({\n    x: left,\n    y: bottom\n  }, area) || (0, _helpersDataset.C)({\n    x: right,\n    y: top\n  }, area) || (0, _helpersDataset.C)({\n    x: right,\n    y: bottom\n  }, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  var items = [];\n  var valueCount = scale._pointLabels.length;\n  var opts = scale.options;\n  var _opts$pointLabels = opts.pointLabels,\n      centerPointLabels = _opts$pointLabels.centerPointLabels,\n      display = _opts$pointLabels.display;\n  var itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? _helpersDataset.P / valueCount : 0\n  };\n  var area;\n\n  for (var i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n    var item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= w / 2;\n  }\n\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= h / 2;\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  var left = item.left,\n      top = item.top,\n      right = item.right,\n      bottom = item.bottom;\n  var backdropColor = opts.backdropColor;\n\n  if (!(0, _helpersDataset.k)(backdropColor)) {\n    var borderRadius = (0, _helpersDataset.ax)(opts.borderRadius);\n    var padding = (0, _helpersDataset.E)(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n    var backdropLeft = left - padding.left;\n    var backdropTop = top - padding.top;\n    var backdropWidth = right - left + padding.width;\n    var backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(function (v) {\n      return v !== 0;\n    })) {\n      ctx.beginPath();\n      (0, _helpersDataset.av)(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  var ctx = scale.ctx,\n      pointLabels = scale.options.pointLabels;\n\n  for (var i = labelCount - 1; i >= 0; i--) {\n    var item = scale._pointLabelItems[i];\n\n    if (!item.visible) {\n      continue;\n    }\n\n    var optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    var plFont = (0, _helpersDataset.a0)(optsAtIndex.font);\n    var x = item.x,\n        y = item.y,\n        textAlign = item.textAlign;\n    (0, _helpersDataset.Z)(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n      color: optsAtIndex.color,\n      textAlign: textAlign,\n      textBaseline: 'middle'\n    });\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  var ctx = scale.ctx;\n\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, _helpersDataset.T);\n  } else {\n    var pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (var i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  var ctx = scale.ctx;\n  var circular = gridLineOpts.circular;\n  var color = gridLineOpts.color,\n      lineWidth = gridLineOpts.lineWidth;\n\n  if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash || []);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return (0, _helpersDataset.j)(parent, {\n    label: label,\n    index: index,\n    type: 'pointLabel'\n  });\n}\n\nvar RadialLinearScale =\n/*#__PURE__*/\nfunction (_LinearScaleBase2) {\n  (0, _inherits2.default)(RadialLinearScale, _LinearScaleBase2);\n\n  function RadialLinearScale(cfg) {\n    var _this39;\n\n    (0, _classCallCheck2.default)(this, RadialLinearScale);\n    _this39 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(RadialLinearScale).call(this, cfg));\n    _this39.xCenter = undefined;\n    _this39.yCenter = undefined;\n    _this39.drawingArea = undefined;\n    _this39._pointLabels = [];\n    _this39._pointLabelItems = [];\n    return _this39;\n  }\n\n  (0, _createClass2.default)(RadialLinearScale, [{\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      var padding = this._padding = (0, _helpersDataset.E)(getTickBackdropHeight(this.options) / 2);\n      var w = this.width = this.maxWidth - padding.width;\n      var h = this.height = this.maxHeight - padding.height;\n      this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n      this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n      this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getMinMax4 = this.getMinMax(false),\n          min = _this$getMinMax4.min,\n          max = _this$getMinMax4.max;\n\n      this.min = (0, _helpersDataset.g)(min) && !isNaN(min) ? min : 0;\n      this.max = (0, _helpersDataset.g)(max) && !isNaN(max) ? max : 0;\n      this.handleTickRangeOptions();\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var _this40 = this;\n\n      LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n      this._pointLabels = this.getLabels().map(function (value, index) {\n        var label = (0, _helpersDataset.Q)(_this40.options.pointLabels.callback, [value, index], _this40);\n        return label || label === 0 ? label : '';\n      }).filter(function (v, i) {\n        return _this40.chart.getDataVisibility(i);\n      });\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var opts = this.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(this);\n      } else {\n        this.setCenterPoint(0, 0, 0, 0);\n      }\n    }\n  }, {\n    key: \"setCenterPoint\",\n    value: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n      this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n      this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n  }, {\n    key: \"getIndexAngle\",\n    value: function getIndexAngle(index) {\n      var angleMultiplier = _helpersDataset.T / (this._pointLabels.length || 1);\n      var startAngle = this.options.startAngle || 0;\n      return (0, _helpersDataset.az)(index * angleMultiplier + (0, _helpersDataset.t)(startAngle));\n    }\n  }, {\n    key: \"getDistanceFromCenterForValue\",\n    value: function getDistanceFromCenterForValue(value) {\n      if ((0, _helpersDataset.k)(value)) {\n        return NaN;\n      }\n\n      var scalingFactor = this.drawingArea / (this.max - this.min);\n\n      if (this.options.reverse) {\n        return (this.max - value) * scalingFactor;\n      }\n\n      return (value - this.min) * scalingFactor;\n    }\n  }, {\n    key: \"getValueForDistanceFromCenter\",\n    value: function getValueForDistanceFromCenter(distance) {\n      if ((0, _helpersDataset.k)(distance)) {\n        return NaN;\n      }\n\n      var scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n      return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n  }, {\n    key: \"getPointLabelContext\",\n    value: function getPointLabelContext(index) {\n      var pointLabels = this._pointLabels || [];\n\n      if (index >= 0 && index < pointLabels.length) {\n        var pointLabel = pointLabels[index];\n        return createPointLabelContext(this.getContext(), index, pointLabel);\n      }\n    }\n  }, {\n    key: \"getPointPosition\",\n    value: function getPointPosition(index, distanceFromCenter) {\n      var additionalAngle = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var angle = this.getIndexAngle(index) - _helpersDataset.H + additionalAngle;\n      return {\n        x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n        y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n        angle: angle\n      };\n    }\n  }, {\n    key: \"getPointPositionForValue\",\n    value: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n  }, {\n    key: \"getBasePosition\",\n    value: function getBasePosition(index) {\n      return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n  }, {\n    key: \"getPointLabelPosition\",\n    value: function getPointLabelPosition(index) {\n      var _this$_pointLabelItem = this._pointLabelItems[index],\n          left = _this$_pointLabelItem.left,\n          top = _this$_pointLabelItem.top,\n          right = _this$_pointLabelItem.right,\n          bottom = _this$_pointLabelItem.bottom;\n      return {\n        left: left,\n        top: top,\n        right: right,\n        bottom: bottom\n      };\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground() {\n      var _this$options16 = this.options,\n          backgroundColor = _this$options16.backgroundColor,\n          circular = _this$options16.grid.circular;\n\n      if (backgroundColor) {\n        var ctx = this.ctx;\n        ctx.save();\n        ctx.beginPath();\n        pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n        ctx.closePath();\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"drawGrid\",\n    value: function drawGrid() {\n      var _this41 = this;\n\n      var ctx = this.ctx;\n      var opts = this.options;\n      var angleLines = opts.angleLines,\n          grid = opts.grid,\n          border = opts.border;\n      var labelCount = this._pointLabels.length;\n      var i, offset, position;\n\n      if (opts.pointLabels.display) {\n        drawPointLabels(this, labelCount);\n      }\n\n      if (grid.display) {\n        this.ticks.forEach(function (tick, index) {\n          if (index !== 0 || index === 0 && _this41.min < 0) {\n            offset = _this41.getDistanceFromCenterForValue(tick.value);\n\n            var context = _this41.getContext(index);\n\n            var optsAtIndex = grid.setContext(context);\n            var optsAtIndexBorder = border.setContext(context);\n            drawRadiusLine(_this41, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n          }\n        });\n      }\n\n      if (angleLines.display) {\n        ctx.save();\n\n        for (i = labelCount - 1; i >= 0; i--) {\n          var optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n          var color = optsAtIndex.color,\n              lineWidth = optsAtIndex.lineWidth;\n\n          if (!lineWidth || !color) {\n            continue;\n          }\n\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = color;\n          ctx.setLineDash(optsAtIndex.borderDash);\n          ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n          offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n          position = this.getPointPosition(i, offset);\n          ctx.beginPath();\n          ctx.moveTo(this.xCenter, this.yCenter);\n          ctx.lineTo(position.x, position.y);\n          ctx.stroke();\n        }\n\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"drawBorder\",\n    value: function drawBorder() {}\n  }, {\n    key: \"drawLabels\",\n    value: function drawLabels() {\n      var _this42 = this;\n\n      var ctx = this.ctx;\n      var opts = this.options;\n      var tickOpts = opts.ticks;\n\n      if (!tickOpts.display) {\n        return;\n      }\n\n      var startAngle = this.getIndexAngle(0);\n      var offset, width;\n      ctx.save();\n      ctx.translate(this.xCenter, this.yCenter);\n      ctx.rotate(startAngle);\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      this.ticks.forEach(function (tick, index) {\n        if (index === 0 && _this42.min >= 0 && !opts.reverse) {\n          return;\n        }\n\n        var optsAtIndex = tickOpts.setContext(_this42.getContext(index));\n        var tickFont = (0, _helpersDataset.a0)(optsAtIndex.font);\n        offset = _this42.getDistanceFromCenterForValue(_this42.ticks[index].value);\n\n        if (optsAtIndex.showLabelBackdrop) {\n          ctx.font = tickFont.string;\n          width = ctx.measureText(tick.label).width;\n          ctx.fillStyle = optsAtIndex.backdropColor;\n          var padding = (0, _helpersDataset.E)(optsAtIndex.backdropPadding);\n          ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n        }\n\n        (0, _helpersDataset.Z)(ctx, tick.label, 0, -offset, tickFont, {\n          color: optsAtIndex.color,\n          strokeColor: optsAtIndex.textStrokeColor,\n          strokeWidth: optsAtIndex.textStrokeWidth\n        });\n      });\n      ctx.restore();\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {}\n  }]);\n  return RadialLinearScale;\n}(LinearScaleBase);\n\nexports.RadialLinearScale = RadialLinearScale;\n(0, _defineProperty2.default)(RadialLinearScale, \"id\", 'radialLinear');\n(0, _defineProperty2.default)(RadialLinearScale, \"defaults\", {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: _helpersDataset.aM.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback: function callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n});\n(0, _defineProperty2.default)(RadialLinearScale, \"defaultRoutes\", {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n});\n(0, _defineProperty2.default)(RadialLinearScale, \"descriptors\", {\n  angleLines: {\n    _fallback: 'grid'\n  }\n});\nvar INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: 1000\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: 60\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: 60\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: 24\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: 30\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: 4\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: 12\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: 4\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nvar UNITS =\n/* #__PURE__ */\nObject.keys(INTERVALS);\n\nfunction sorter(a, b) {\n  return a - b;\n}\n\nfunction _parse(scale, input) {\n  if ((0, _helpersDataset.k)(input)) {\n    return null;\n  }\n\n  var adapter = scale._adapter;\n  var _scale$_parseOpts = scale._parseOpts,\n      parser = _scale$_parseOpts.parser,\n      round = _scale$_parseOpts.round,\n      isoWeekday = _scale$_parseOpts.isoWeekday;\n  var value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  if (!(0, _helpersDataset.g)(value)) {\n    value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && ((0, _helpersDataset.x)(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  var ilen = UNITS.length;\n\n  for (var i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    var interval = INTERVALS[UNITS[i]];\n    var factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (var i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    var unit = UNITS[i];\n\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n  for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    var _lookup2 = (0, _helpersDataset.aQ)(timestamps, time),\n        lo = _lookup2.lo,\n        hi = _lookup2.hi;\n\n    var timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  var adapter = scale._adapter;\n  var first = +adapter.startOf(ticks[0].value, majorUnit);\n  var last = ticks[ticks.length - 1].value;\n  var major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n\n  return ticks;\n}\n\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  var ticks = [];\n  var map = {};\n  var ilen = values.length;\n  var i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value: value,\n      major: false\n    });\n  }\n\n  return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nvar TimeScale =\n/*#__PURE__*/\nfunction (_Scale4) {\n  (0, _inherits2.default)(TimeScale, _Scale4);\n\n  function TimeScale(props) {\n    var _this43;\n\n    (0, _classCallCheck2.default)(this, TimeScale);\n    _this43 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TimeScale).call(this, props));\n    _this43._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    _this43._unit = 'day';\n    _this43._majorUnit = undefined;\n    _this43._offsets = {};\n    _this43._normalized = false;\n    _this43._parseOpts = undefined;\n    return _this43;\n  }\n\n  (0, _createClass2.default)(TimeScale, [{\n    key: \"init\",\n    value: function init(scaleOpts) {\n      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var time = scaleOpts.time || (scaleOpts.time = {});\n      var adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n      adapter.init(opts);\n      (0, _helpersDataset.ab)(time.displayFormats, adapter.formats());\n      this._parseOpts = {\n        parser: time.parser,\n        round: time.round,\n        isoWeekday: time.isoWeekday\n      };\n      (0, _get2.default)((0, _getPrototypeOf2.default)(TimeScale.prototype), \"init\", this).call(this, scaleOpts);\n      this._normalized = opts.normalized;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (raw === undefined) {\n        return null;\n      }\n\n      return _parse(this, raw);\n    }\n  }, {\n    key: \"beforeLayout\",\n    value: function beforeLayout() {\n      (0, _get2.default)((0, _getPrototypeOf2.default)(TimeScale.prototype), \"beforeLayout\", this).call(this);\n      this._cache = {\n        data: [],\n        labels: [],\n        all: []\n      };\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var options = this.options;\n      var adapter = this._adapter;\n      var unit = options.time.unit || 'day';\n\n      var _this$getUserBounds5 = this.getUserBounds(),\n          min = _this$getUserBounds5.min,\n          max = _this$getUserBounds5.max,\n          minDefined = _this$getUserBounds5.minDefined,\n          maxDefined = _this$getUserBounds5.maxDefined;\n\n      function _applyBounds(bounds) {\n        if (!minDefined && !isNaN(bounds.min)) {\n          min = Math.min(min, bounds.min);\n        }\n\n        if (!maxDefined && !isNaN(bounds.max)) {\n          max = Math.max(max, bounds.max);\n        }\n      }\n\n      if (!minDefined || !maxDefined) {\n        _applyBounds(this._getLabelBounds());\n\n        if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n          _applyBounds(this.getMinMax(false));\n        }\n      }\n\n      min = (0, _helpersDataset.g)(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n      max = (0, _helpersDataset.g)(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n      this.min = Math.min(min, max - 1);\n      this.max = Math.max(min + 1, max);\n    }\n  }, {\n    key: \"_getLabelBounds\",\n    value: function _getLabelBounds() {\n      var arr = this.getLabelTimestamps();\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n\n      if (arr.length) {\n        min = arr[0];\n        max = arr[arr.length - 1];\n      }\n\n      return {\n        min: min,\n        max: max\n      };\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var options = this.options;\n      var timeOpts = options.time;\n      var tickOpts = options.ticks;\n      var timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        this.min = this._userMin || timestamps[0];\n        this.max = this._userMax || timestamps[timestamps.length - 1];\n      }\n\n      var min = this.min;\n      var max = this.max;\n      var ticks = (0, _helpersDataset.aP)(timestamps, min, max);\n      this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n      this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n      this.initOffsets(timestamps);\n\n      if (options.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n  }, {\n    key: \"afterAutoSkip\",\n    value: function afterAutoSkip() {\n      if (this.options.offsetAfterAutoskip) {\n        this.initOffsets(this.ticks.map(function (tick) {\n          return +tick.value;\n        }));\n      }\n    }\n  }, {\n    key: \"initOffsets\",\n    value: function initOffsets() {\n      var timestamps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var start = 0;\n      var end = 0;\n      var first, last;\n\n      if (this.options.offset && timestamps.length) {\n        first = this.getDecimalForValue(timestamps[0]);\n\n        if (timestamps.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n        }\n\n        last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n\n        if (timestamps.length === 1) {\n          end = last;\n        } else {\n          end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n        }\n      }\n\n      var limit = timestamps.length < 3 ? 0.5 : 0.25;\n      start = (0, _helpersDataset.S)(start, 0, limit);\n      end = (0, _helpersDataset.S)(end, 0, limit);\n      this._offsets = {\n        start: start,\n        end: end,\n        factor: 1 / (start + 1 + end)\n      };\n    }\n  }, {\n    key: \"_generate\",\n    value: function _generate() {\n      var adapter = this._adapter;\n      var min = this.min;\n      var max = this.max;\n      var options = this.options;\n      var timeOpts = options.time;\n      var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n      var stepSize = (0, _helpersDataset.v)(options.ticks.stepSize, 1);\n      var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n      var hasWeekday = (0, _helpersDataset.x)(weekday) || weekday === true;\n      var ticks = {};\n      var first = min;\n      var time, count;\n\n      if (hasWeekday) {\n        first = +adapter.startOf(first, 'isoWeek', weekday);\n      }\n\n      first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n      if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n        throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n      }\n\n      var timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n\n      for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n        addTick(ticks, time, timestamps);\n      }\n\n      if (time === max || options.bounds === 'ticks' || count === 1) {\n        addTick(ticks, time, timestamps);\n      }\n\n      return Object.keys(ticks).sort(sorter).map(function (x) {\n        return +x;\n      });\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      var adapter = this._adapter;\n      var timeOpts = this.options.time;\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(value, timeOpts.tooltipFormat);\n      }\n\n      return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n  }, {\n    key: \"format\",\n    value: function format(value, _format) {\n      var options = this.options;\n      var formats = options.time.displayFormats;\n      var unit = this._unit;\n      var fmt = _format || formats[unit];\n      return this._adapter.format(value, fmt);\n    }\n  }, {\n    key: \"_tickFormatFunction\",\n    value: function _tickFormatFunction(time, index, ticks, format) {\n      var options = this.options;\n      var formatter = options.ticks.callback;\n\n      if (formatter) {\n        return (0, _helpersDataset.Q)(formatter, [time, index, ticks], this);\n      }\n\n      var formats = options.time.displayFormats;\n      var unit = this._unit;\n      var majorUnit = this._majorUnit;\n      var minorFormat = unit && formats[unit];\n      var majorFormat = majorUnit && formats[majorUnit];\n      var tick = ticks[index];\n      var major = majorUnit && majorFormat && tick && tick.major;\n      return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var i, ilen, tick;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        tick.label = this._tickFormatFunction(tick.value, i, ticks);\n      }\n    }\n  }, {\n    key: \"getDecimalForValue\",\n    value: function getDecimalForValue(value) {\n      return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      var offsets = this._offsets;\n      var pos = this.getDecimalForValue(value);\n      return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var offsets = this._offsets;\n      var pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return this.min + pos * (this.max - this.min);\n    }\n  }, {\n    key: \"_getLabelSize\",\n    value: function _getLabelSize(label) {\n      var ticksOpts = this.options.ticks;\n      var tickLabelWidth = this.ctx.measureText(label).width;\n      var angle = (0, _helpersDataset.t)(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n\n      var tickFontSize = this._resolveTickFontOptions(0).size;\n\n      return {\n        w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n        h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n      };\n    }\n  }, {\n    key: \"_getLabelCapacity\",\n    value: function _getLabelCapacity(exampleTime) {\n      var timeOpts = this.options.time;\n      var displayFormats = timeOpts.displayFormats;\n      var format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n\n      var exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n\n      var size = this._getLabelSize(exampleLabel);\n\n      var capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n      return capacity > 0 ? capacity : 1;\n    }\n  }, {\n    key: \"getDataTimestamps\",\n    value: function getDataTimestamps() {\n      var timestamps = this._cache.data || [];\n      var i, ilen;\n\n      if (timestamps.length) {\n        return timestamps;\n      }\n\n      var metas = this.getMatchingVisibleMetas();\n\n      if (this._normalized && metas.length) {\n        return this._cache.data = metas[0].controller.getAllParsedValues(this);\n      }\n\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n      }\n\n      return this._cache.data = this.normalize(timestamps);\n    }\n  }, {\n    key: \"getLabelTimestamps\",\n    value: function getLabelTimestamps() {\n      var timestamps = this._cache.labels || [];\n      var i, ilen;\n\n      if (timestamps.length) {\n        return timestamps;\n      }\n\n      var labels = this.getLabels();\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        timestamps.push(_parse(this, labels[i]));\n      }\n\n      return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize(values) {\n      return (0, _helpersDataset._)(values.sort(sorter));\n    }\n  }]);\n  return TimeScale;\n}(Scale);\n\nexports.TimeScale = TimeScale;\n(0, _defineProperty2.default)(TimeScale, \"id\", 'time');\n(0, _defineProperty2.default)(TimeScale, \"defaults\", {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    callback: false,\n    major: {\n      enabled: false\n    }\n  }\n});\n\nfunction interpolate(table, val, reverse) {\n  var lo = 0;\n  var hi = table.length - 1;\n  var prevSource, nextSource, prevTarget, nextTarget;\n\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      var _lookupByKey2 = (0, _helpersDataset.B)(table, 'pos', val);\n\n      lo = _lookupByKey2.lo;\n      hi = _lookupByKey2.hi;\n    }\n\n    var _table$lo = table[lo];\n    prevSource = _table$lo.pos;\n    prevTarget = _table$lo.time;\n    var _table$hi = table[hi];\n    nextSource = _table$hi.pos;\n    nextTarget = _table$hi.time;\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      var _lookupByKey3 = (0, _helpersDataset.B)(table, 'time', val);\n\n      lo = _lookupByKey3.lo;\n      hi = _lookupByKey3.hi;\n    }\n\n    var _table$lo2 = table[lo];\n    prevSource = _table$lo2.time;\n    prevTarget = _table$lo2.pos;\n    var _table$hi2 = table[hi];\n    nextSource = _table$hi2.time;\n    nextTarget = _table$hi2.pos;\n  }\n\n  var span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nvar TimeSeriesScale =\n/*#__PURE__*/\nfunction (_TimeScale) {\n  (0, _inherits2.default)(TimeSeriesScale, _TimeScale);\n\n  function TimeSeriesScale(props) {\n    var _this44;\n\n    (0, _classCallCheck2.default)(this, TimeSeriesScale);\n    _this44 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TimeSeriesScale).call(this, props));\n    _this44._table = [];\n    _this44._minPos = undefined;\n    _this44._tableRange = undefined;\n    return _this44;\n  }\n\n  (0, _createClass2.default)(TimeSeriesScale, [{\n    key: \"initOffsets\",\n    value: function initOffsets() {\n      var timestamps = this._getTimestampsForTable();\n\n      var table = this._table = this.buildLookupTable(timestamps);\n      this._minPos = interpolate(table, this.min);\n      this._tableRange = interpolate(table, this.max) - this._minPos;\n      (0, _get2.default)((0, _getPrototypeOf2.default)(TimeSeriesScale.prototype), \"initOffsets\", this).call(this, timestamps);\n    }\n  }, {\n    key: \"buildLookupTable\",\n    value: function buildLookupTable(timestamps) {\n      var min = this.min,\n          max = this.max;\n      var items = [];\n      var table = [];\n      var i, ilen, prev, curr, next;\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        curr = timestamps[i];\n\n        if (curr >= min && curr <= max) {\n          items.push(curr);\n        }\n      }\n\n      if (items.length < 2) {\n        return [{\n          time: min,\n          pos: 0\n        }, {\n          time: max,\n          pos: 1\n        }];\n      }\n\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        next = items[i + 1];\n        prev = items[i - 1];\n        curr = items[i];\n\n        if (Math.round((next + prev) / 2) !== curr) {\n          table.push({\n            time: curr,\n            pos: i / (ilen - 1)\n          });\n        }\n      }\n\n      return table;\n    }\n  }, {\n    key: \"_generate\",\n    value: function _generate() {\n      var min = this.min;\n      var max = this.max;\n      var timestamps = (0, _get2.default)((0, _getPrototypeOf2.default)(TimeSeriesScale.prototype), \"getDataTimestamps\", this).call(this);\n\n      if (!timestamps.includes(min) || !timestamps.length) {\n        timestamps.splice(0, 0, min);\n      }\n\n      if (!timestamps.includes(max) || timestamps.length === 1) {\n        timestamps.push(max);\n      }\n\n      return timestamps.sort(function (a, b) {\n        return a - b;\n      });\n    }\n  }, {\n    key: \"_getTimestampsForTable\",\n    value: function _getTimestampsForTable() {\n      var timestamps = this._cache.all || [];\n\n      if (timestamps.length) {\n        return timestamps;\n      }\n\n      var data = this.getDataTimestamps();\n      var label = this.getLabelTimestamps();\n\n      if (data.length && label.length) {\n        timestamps = this.normalize(data.concat(label));\n      } else {\n        timestamps = data.length ? data : label;\n      }\n\n      timestamps = this._cache.all = timestamps;\n      return timestamps;\n    }\n  }, {\n    key: \"getDecimalForValue\",\n    value: function getDecimalForValue(value) {\n      return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var offsets = this._offsets;\n      var decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n  }]);\n  return TimeSeriesScale;\n}(TimeScale);\n\nexports.TimeSeriesScale = TimeSeriesScale;\n(0, _defineProperty2.default)(TimeSeriesScale, \"id\", 'timeseries');\n(0, _defineProperty2.default)(TimeSeriesScale, \"defaults\", TimeScale.defaults);\nvar scales =\n/*#__PURE__*/\nObject.freeze({\n  __proto__: null,\n  CategoryScale: CategoryScale,\n  LinearScale: LinearScale,\n  LogarithmicScale: LogarithmicScale,\n  RadialLinearScale: RadialLinearScale,\n  TimeScale: TimeScale,\n  TimeSeriesScale: TimeSeriesScale\n});\nexports.scales = scales;\nvar registerables = [controllers, elements, plugins, scales];\nexports.registerables = registerables;",{"version":3,"sources":["../src/core/core.animator.js","../src/core/core.animation.js","../src/core/core.animations.js","../src/core/core.datasetController.js","../src/controllers/controller.bar.js","../src/controllers/controller.bubble.js","../src/controllers/controller.doughnut.js","../src/controllers/controller.line.js","../src/controllers/controller.polarArea.js","../src/controllers/controller.pie.js","../src/controllers/controller.radar.js","../src/controllers/controller.scatter.js","../src/core/core.adapters.ts","../src/core/core.interaction.js","../src/core/core.layouts.js","../src/platform/platform.base.js","../src/platform/platform.basic.js","../src/platform/platform.dom.js","../src/platform/index.js","../src/core/core.element.ts","../src/core/core.scale.autoskip.js","../src/core/core.scale.js","../src/core/core.typedRegistry.js","../src/core/core.registry.js","../src/core/core.plugins.js","../src/core/core.config.js","../src/core/core.controller.js","../src/elements/element.arc.ts","../src/elements/element.line.js","../src/elements/element.point.ts","../src/elements/element.bar.js","../src/plugins/plugin.colors.ts","../src/plugins/plugin.decimation.js","../src/plugins/plugin.filler/filler.segment.js","../src/plugins/plugin.filler/filler.helper.js","../src/plugins/plugin.filler/filler.options.js","../src/plugins/plugin.filler/filler.target.stack.js","../src/plugins/plugin.filler/simpleArc.js","../src/plugins/plugin.filler/filler.target.js","../src/plugins/plugin.filler/filler.drawing.js","../src/plugins/plugin.filler/index.js","../src/plugins/plugin.legend.js","../src/plugins/plugin.title.js","../src/plugins/plugin.subtitle.js","../src/plugins/plugin.tooltip.js","../src/scales/scale.category.js","../src/scales/scale.linearbase.js","../src/scales/scale.linear.js","../src/scales/scale.logarithmic.js","../src/scales/scale.radialLinear.js","../src/scales/scale.time.js","../src/scales/scale.timeseries.js","../src/index.ts"],"names":["Animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","requestAnimFrame","call","window","_update","_refresh","Date","now","remaining","running","items","length","i","draw","item","_active","_total","tick","pop","_notify","charts","get","complete","progress","set","event","cb","_getAnims","push","reduce","acc","cur","max","_duration","cancel","delete","transparent","interpolators","boolean","from","to","factor","color","c0","helpersColor","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","resolve","_fn","_easing","effects","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","elapsed","remain","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","isObject","animationOptions","Object","keys","defaults","animation","animatedProps","getOwnPropertyNames","key","option","isArray","properties","has","values","newOptions","options","resolveTargetOptions","animations","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","_animateOptions","value","active","update","size","assign","animator","add","anim","wait","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","x","y","top","right","bottom","left","toClip","t","r","b","l","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","found","isFinite","sign","convertObjectDataToArray","data","meta","iScale","vScale","iAxisKey","axis","vAxisKey","adata","Array","isStacked","stacked","getStackKey","indexScale","valueScale","id","getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iAxis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","createContext","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","addElements","fill","isPluginEnabled","console","warn","getDataset","chooseId","xid","xAxisID","valueOrDefault","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","unlistenArrayEvents","isExtensible","listenArrayEvents","_dataCheck","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","parse","xAxisKey","yAxisKey","resolveObjectKey","range","parsedValue","NaN","otherScale","_getOtherScale","otherMin","otherMax","_skip","updateRangeFromParsed","getParsed","label","getLabelForValue","_clip","clip","getMaxOverflow","elements","area","chartArea","drawActiveElementsOnTop","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","elementType","cache","cacheKey","sharing","defined","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","transition","datasetAnimationScopeKeys","_cacheable","sharedOptions","_animationsDisabled","firstOpts","previouslySharedOptions","getSharedOptions","includeOptions","updateSharedOptions","_resolveAnimations","getStyle","_setStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","args","_dataChanges","arguments","_sync","newCount","getAllScaleValues","_cache","$bar","visibleMetas","concat","getAllParsedValues","_arrayUnique","sort","a","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","isNullOrUndef","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","base","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v1","v2","v","setInflateAmount","inflateAmount","BarController","grouped","numbers","_index_","offset","grid","_value_","beginAtZero","obj","bars","reset","getBasePixel","_getRuler","_getSharedOptions","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","updateElement","last","currentParsed","iScaleValue","skipNull","find","val","isNaN","indexOf","_getStacks","name","_startPixel","_endPixel","_getStackCount","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","_getStackIndex","rects","BubbleController","radius","points","point","iPixel","vPixel","skip","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","TAU","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","_angleBetween","calcMin","maxX","maxY","HALF_PI","minX","PI","minY","DoughnutController","animateRotate","animateScale","spacing","_scriptable","_indexable","startsWith","aspectRatio","plugins","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","fontColor","lineWidth","borderWidth","onClick","e","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","toRadians","isDatasetVisible","_getRotation","_getCircumference","arcs","getMaxBorderWidth","getMaxOffset","maxSize","toPercentage","chartWeight","_getRingWeight","_getRotationExtents","maxWidth","maxHeight","maxRadius","toDimension","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","calculateCircumference","animationOpts","centerX","centerY","_circumference","arc","metaData","formatNumber","locale","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","LineController","showLine","spanGaps","line","_dataset","animationsDisabled","_getStartAndCountOfVisiblePoints","_scaleRangesChanged","_datasetIndex","_decimated","segment","animated","maxGapLength","isNumber","directUpdate","pointsCount","prevParsed","nullData","stop","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","angleLines","display","circular","pointLabels","_parseObjectDataRadialScale","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","interaction","registry","getElement","abstract","Error","DateAdapterBase","members","prototype","_date","binarySearch","metaset","intersect","lookupMethod","_reversePixels","_rlookupByKey","_lookupByKey","result","distanceToDefinedLo","slice","lo","findIndex","distanceToDefinedHi","hi","el","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","j","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getIntersectItems","useFinalPosition","includeInvisible","isPointInArea","evaluationFunc","_isPointInArea","inRange","getNearestRadialItems","getProps","getAngleFromPoint","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","modes","getRelativePosition","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","includes","_stack","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","w","heightChanged","h","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","padding","addBox","_layers","z","removeBox","layoutItem","minPadding","toPadding","verticalBoxes","horizontalBoxes","each","beforeLayout","visibleVerticalBoxCount","BasePlatform","canvas","listener","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","readUsedSize","displayHeight","eventListenerOptions","supportsEventListenerOptions","passive","addListener","node","addEventListener","removeListener","removeEventListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","resize","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","container","_getParentNode","throttled","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","getMaximumSize","isConnected","_detectPlatform","_isDomSupported","OffscreenCanvas","Element","final","ret","autoSkip","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","tickLength","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","_factorize","ceil","majorStart","majorEnd","len","diff","reverseAlign","align","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","drawTicks","getTitleHeight","fallback","font","toFont","lines","lineHeight","createScaleContext","createTickContext","titleAlign","_toLeftRightCenter","titleArgs","titleX","titleY","_alignStartEnd","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","finiteOrDefault","metas","getMinMax","xLabels","yLabels","_computeLabelItems","beforeUpdate","margins","grace","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","notifyPlugins","_callHooks","beforeTickToLabelConversion","callback","afterTickToLabelConversion","numTicks","minRotation","maxRotation","tickWidth","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","_limitValue","title","toDegrees","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","mirror","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","generateTickLabels","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","jlen","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","_measureText","valueAt","idx","pixel","decimal","_int16Range","_alignPixel","getBaseValue","optionTicks","rot","autoSkipPadding","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","dash","borderDashOffset","dashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","labelOffset","halfCount","strokeColor","textStrokeColor","strokeWidth","textStrokeWidth","tickTextAlign","showLabelBackdrop","backdrop","labelPadding","backdropPadding","backdropColor","translation","save","fillRect","restore","_computeGridLineItems","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","drawOnChartArea","lastLineWidth","_computeLabelArea","clipArea","getLabelItems","renderTextOptions","renderText","unclipArea","drawBackground","drawGrid","drawBorder","drawTitle","drawLabels","tz","gz","bz","axisID","fontSize","TypedRegistry","scope","override","create","isPrototypeOf","proto","getPrototypeOf","parentScope","isIChartComponent","register","registerDefaults","overrides","itemDefaults","merge","defaultRoutes","routeDefaults","descriptors","describe","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","route","Registry","controllers","_typedRegistries","_each","_get","typedRegistry","arg","reg","_getRegistryForType","isForType","_exec","itemReg","component","camelMethod","_capitalize","PluginService","_init","hook","_createDescriptors","_descriptors","descriptor","plugin","callCallback","cancelable","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","getPlugin","local","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","d","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","_proxy","defaultId","defaultScaleOptions","mergeIf","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","mainScope","resetCache","keyLists","_cachedScopes","resolver","subPrefixes","getResolver","needContext","isFunction","subResolver","_attachContext","descriptorDefaults","resolverCache","_createResolver","p","hasFunction","isScriptable","isIndexable","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","c","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","Chart","version","invalidatePlugins","remove","userConfig","initialCanvas","existingChart","chartOptionScopes","updateConfig","acquireContext","uid","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","debounce","resizeDelay","listen","_initialize","maintainAspectRatio","responsive","retinaScale","bindEvents","clearCanvas","_resize","_resizeBeforeDraw","newSize","newRatio","getDevicePixelRatio","onResize","render","scalesOptions","axisOptions","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","getScale","init","hasUpdated","_destroyDatasetMeta","newControllers","_removeUnreferencedMetasets","order","visible","updateIndex","ControllerClass","getController","_updateMetasets","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","invalidate","buildOrUpdateControllers","buildOrUpdateElements","_minPadding","autoPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","ensureScalesHaveIDs","buildOrUpdateScales","existingEvents","newEvents","events","setsEqual","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","getDatasetClipArea","Interaction","setDatasetVisibility","_updateVisibility","_destroy","_stop","releaseContext","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","isAttached","prefix","activeElements","lastActive","_elementsEqual","notify","pluginId","replay","hoverOptions","hover","deactivated","activated","updateHoverStyle","eventFilter","_handleEvent","_getActiveElements","_isClickEvent","onHover","getElementsAtEventForMode","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","_readValueToProps","parseBorderRadius","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","borderJoinStyle","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","_isBetween","halfAngle","halfRadius","translate","fix","radiusOffset","setStyle","lineCap","borderCapStyle","previous","getLineMethod","stepped","_steppedLineTo","tension","cubicInterpolationMode","_bezierCurveTo","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","_steppedInterpolation","_bezierInterpolation","_pointInLine","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","usePath2D","LineElement","capBezierPoints","_points","_segments","_pointsUpdated","_updateBezierControlPoints","_computeSegments","_boundSegments","_interpolate","interpolated","hitRadius","PointElement","hoverRadius","mouseX","mouseY","drawPoint","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","toTRBL","toTRBLCorners","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","bounds","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","inflateRect","amount","refRect","BarElement","addRectPath","addRoundedRectPath","BORDER_COLORS","BACKGROUND_COLORS","replace","getBorderColor","getBackgroundColor","colorizeDefaultDataset","colorizeDoughnutDataset","colorizePolarAreaDataset","getColorizer","containsColorsDefinitions","k","containsColorsDefinition","containsDefaultColorsDefenitions","forceOverride","_args","chartOptions","containsColorDefenition","colorizer","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","defineProperty","configurable","enumerable","writable","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","pointCount","algorithm","beforeElementsUpdate","xAxis","threshold","destroy","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","_boundSegment","fillSource","_getEdge","_normalizeAngle","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","parseFillOption","parseFloat","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","interpolate","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","clipVertical","clipY","lineLoop","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","rtl","rtlHelper","getRtlAdapter","hitbox","leftForLtr","_draw","defaultColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","drawPointLegend","yBoxTop","xBoxLeft","fillText","strikethrough","overrideTextDirection","textDirection","textWidth","setWidth","realX","_textX","fontLineHeight","calculateLegendItemHeight","restoreTextDirection","titleFont","titlePadding","topPaddingPlusHalfFontSize","hitBox","lh","isListened","hoveredItem","_getLegendItemAt","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","_element","adjustHitBoxes","afterEvent","handleEvent","ci","hide","show","useBorderRadius","Title","_padding","textSize","fontOpts","_drawArgs","createTitle","titleBlock","WeakMap","positioners","average","xSet","hasValue","tooltipPosition","xAverage","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","getLabelAndValue","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","noop","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","bodyItems","scoped","itemSort","_createItems","getTitle","getBeforeBody","getBody","getAfterBody","getFooter","positionAndSize","backgroundPoint","external","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","_drawColorBox","footerAlign","footerColor","tooltipSize","drawCaret","quadraticCurveTo","animX","animY","_updateAnimationTarget","hasTooltipContent","globalAlpha","drawBody","drawFooter","positionChanged","_positionChanged","_ignoreReplayEvents","afterInit","afterDraw","_willRender","_fallback","addIfString","addedLabels","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","getDecimalForPixel","generateTicks","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceNum","niceMin","niceMax","numSpaces","almostWhole","almostEquals","decimalPlaces","_decimalPlaces","relativeLabelSize","tickValue","rad","LinearScaleBase","_endValue","setMin","setMax","minSign","maxSign","stepSize","computeTickLimit","getTickLimit","numericGeneratorOptions","_maxDigits","_setMinAndMaxByKey","format","LinearScale","Ticks","formatters","numeric","handleTickRangeOptions","log10Floor","log10","changeExponent","m","isMajor","tickVal","steps","rangeExp","rangeStep","startExp","minExp","exp","significand","lastTick","LogarithmicScale","logarithmic","_zero","getTickBackdropHeight","measureLabelSize","_longestText","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","createPointLabelItem","itemOpts","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","isNotOverlapped","apexesInArea","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","scaledDistance","pointLabel","distanceFromCenter","rotate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","startOf","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","_lookup","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","adapters","displayFormats","_unit","_majorUnit","_offsets","_normalized","formats","normalized","_applyBounds","_getLabelBounds","endOf","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","minor","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","formatter","minorFormat","majorFormat","_tickFormatFunction","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","_getLabelSize","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables"],"mappings":"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","sourcesContent":["import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  let found = false;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      found = true;\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n\n  if (!found && !options.all) {\n    return 0;\n  }\n\n  return value;\n}\n\nfunction convertObjectDataToArray(data, meta) {\n  const {iScale, vScale} = meta;\n  const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n  const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      [iAxisKey]: key,\n      [vAxisKey]: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (and thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal metadata accordingly.\n\n    if (isObject(data)) {\n      const meta = this._cachedMeta;\n      this._data = convertObjectDataToArray(data, meta);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n      meta._stacked = isStacked(meta.vScale, meta);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n    const iScaleValue = currentParsed && currentParsed[iScale.axis];\n\n    const skipNull = (meta) => {\n      const parsed = meta._parsed.find(item => item[iScale.axis] === iScaleValue);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      // https://github.com/chartjs/Chart.js/issues/11333\n      if (!this.datasetElementType) {\n        this.addElements();\n      }\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    } else if (this.datasetElementType) {\n      // https://github.com/chartjs/Chart.js/issues/11333\n      delete meta.dataset;\n      this.datasetElementType = false;\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<TimeUnit | 'datetime', string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: string): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: string): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number | boolean): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options?: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<TimeUnit | 'datetime', string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase as {\n    new (options?: AnyObject): DateAdapter;\n    override<T extends AnyObject = AnyObject>(\n      members: Partial<Omit<DateAdapter<T>, 'options'>>\n    ): void;\n  }\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea, isNullOrUndef} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      const result = lookupMethod(data, axis, value);\n      if (spanGaps) {\n        const {vScale} = controller._cachedMeta;\n        const {_parsed} = metaset;\n\n        const distanceToDefinedLo = (_parsed\n          .slice(0, result.lo + 1)\n          .reverse()\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        result.lo -= Math.max(0, distanceToDefinedLo);\n\n        const distanceToDefinedHi = (_parsed\n          .slice(result.hi)\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        result.hi += Math.max(0, distanceToDefinedHi);\n      }\n      return result;\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  if (node) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction removeListener(chart, type, listener) {\n  if (chart && chart.canvas) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = canvas && _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        case 'inner':\n          if (i === ilen - 1) {\n            left -= width;\n          } else if (i > 0) {\n            left -= width / 2;\n          }\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).some((key) => isFunction(value[key]));\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea, _isDomSupported, retinaScale, getDatasetClipArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      // Unset pending resize request now to avoid possible recursion within _resize\n      this._resizeBeforeDraw = null;\n      this._resize(width, height);\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    // @ts-expect-error\n    const clip = getDatasetClipArea(this, meta);\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (clip) {\n      clipArea(ctx, clip);\n    }\n\n    meta.controller.draw();\n\n    if (clip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the event inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n    const betweenAngles = _circumference >= TAU || nonZeroBetween;\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @returns {any}\n */\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import {DoughnutController, PolarAreaController, defaults} from '../index.js';\nimport type {Chart, ChartDataset} from '../types.js';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n  forceOverride?: boolean;\n}\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n\n  return i;\n}\n\nfunction getColorizer(chart: Chart) {\n  let i = 0;\n\n  return (dataset: ChartDataset, datasetIndex: number) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(\n  descriptor: ColorsDescriptor\n) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nfunction containsDefaultColorsDefenitions() {\n  return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  } as ColorsPluginOptions,\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {datasets},\n      options: chartOptions\n    } = chart.config;\n    const {elements} = chartOptions;\n\n    const containsColorDefenition = (\n      containsColorsDefinitions(datasets) ||\n      containsColorsDefinition(chartOptions) ||\n      (elements && containsColorsDefinitions(elements)) ||\n      containsDefaultColorsDefenitions());\n\n    if (!options.forceOverride && containsColorDefenition) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n\n    datasets.forEach(colorizer);\n  }\n};\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data,\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea, getDatasetClipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {chart, index, line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  const meta = chart.getDatasetMeta(index);\n  const clip = getDatasetClipArea(chart, meta);\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis, clip});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale, clip} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property, clip});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property, clip});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale, clip} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, clip, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, clip, bounds) {\n  const chartArea = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n\n  if (property === 'x' || property === 'y') {\n    let left, top, right, bottom;\n\n    if (property === 'x') {\n      left = start;\n      top = chartArea.top;\n      right = end;\n      bottom = chartArea.bottom;\n    } else {\n      left = chartArea.left;\n      top = start;\n      right = chartArea.right;\n      bottom = end;\n    }\n\n    ctx.beginPath();\n\n    if (clip) {\n      left = Math.max(left, clip.left);\n      right = Math.min(right, clip.right);\n      top = Math.max(top, clip.top);\n      bottom = Math.min(bottom, clip.bottom);\n    }\n\n    ctx.rect(left, top, right - left, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let xSet = new Set();\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        xSet.add(pos.x);\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    // No visible items where found, return false so we don't have to divide by 0 which reduces in NaN\n    if (count === 0 || xSet.size === 0) {\n      return false;\n    }\n\n    const xAverage = [...xSet].reduce((a, b) => a + b) / xSet.size;\n\n    return {\n      x: xAverage,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      // But make sure that active elements are still valid.\n      return lastActive.filter(i =>\n        this.chart.data.datasets[i.datasetIndex] &&\n        this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined\n      );\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash || []);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0 || (index === 0 && this.min < 0)) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if ((index === 0 && this.min >= 0) && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n        strokeColor: optsAtIndex.textStrokeColor,\n        strokeWidth: optsAtIndex.textStrokeWidth,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if it's not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @protected\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort(sorter).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guesstimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n    * Generates all timestamps defined in the data.\n    * Important: this method can return ticks outside the min and max range, it's the\n    * responsibility of the calling code to clamp values if needed.\n    * @protected\n    */\n  _generate() {\n    const min = this.min;\n    const max = this.max;\n    let timestamps = super.getDataTimestamps();\n    if (!timestamps.includes(min) || !timestamps.length) {\n      timestamps.splice(0, 0, min);\n    }\n    if (!timestamps.includes(max) || timestamps.length === 1) {\n      timestamps.push(max);\n    }\n    return timestamps.sort((a, b) => a - b);\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","export * from './controllers/index.js';\nexport * from './core/index.js';\nexport * from './elements/index.js';\nexport * from './platform/index.js';\nexport * from './plugins/index.js';\nexport * from './scales/index.js';\n\nimport * as controllers from './controllers/index.js';\nimport * as elements from './elements/index.js';\nimport * as plugins from './plugins/index.js';\nimport * as scales from './scales/index.js';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n"]}]}