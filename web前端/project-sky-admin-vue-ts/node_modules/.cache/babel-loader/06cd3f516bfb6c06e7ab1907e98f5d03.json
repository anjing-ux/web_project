{"remainingRequest":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\chart.js\\dist\\chart.js","dependencies":[{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\chart.js\\dist\\chart.js","mtime":499162500000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\babel.config.js","mtime":1652756116000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\device-management\\project-sky-admin-vue-ts\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime/helpers/interopRequireDefault\");\nrequire(\"core-js/modules/es7.object.get-own-property-descriptors\");\nrequire(\"core-js/modules/es6.reflect.construct\");\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\nrequire(\"core-js/modules/es6.symbol\");\nrequire(\"core-js/modules/es6.regexp.to-string\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SubTitle = exports.ScatterController = exports.Scale = exports.RadialLinearScale = exports.RadarController = exports.PolarAreaController = exports.PointElement = exports.PieController = exports.LogarithmicScale = exports.LinearScale = exports.LineElement = exports.LineController = exports.Legend = exports.Interaction = exports.Filler = exports.Element = exports.DoughnutController = exports.DomPlatform = exports.Decimation = exports.DatasetController = exports.Colors = exports.Chart = exports.CategoryScale = exports.BubbleController = exports.BasicPlatform = exports.BasePlatform = exports.BarElement = exports.BarController = exports.ArcElement = exports.Animations = exports.Animation = void 0;\nObject.defineProperty(exports, \"Ticks\", {\n  enumerable: true,\n  get: function get() {\n    return _helpersDataset.aM;\n  }\n});\nexports._adapters = exports.Tooltip = exports.Title = exports.TimeSeriesScale = exports.TimeScale = void 0;\nexports._detectPlatform = _detectPlatform;\nexports.controllers = exports.animator = void 0;\nObject.defineProperty(exports, \"defaults\", {\n  enumerable: true,\n  get: function get() {\n    return _helpersDataset.d;\n  }\n});\nexports.scales = exports.registry = exports.registerables = exports.plugins = exports.layouts = exports.elements = void 0;\nrequire(\"core-js/modules/es6.number.max-safe-integer\");\nrequire(\"core-js/modules/es6.weak-map\");\nrequire(\"core-js/modules/es6.string.starts-with\");\nrequire(\"core-js/modules/es6.regexp.replace\");\nrequire(\"core-js/modules/es7.object.values\");\nrequire(\"core-js/modules/es6.array.from\");\nrequire(\"core-js/modules/es6.set\");\nrequire(\"core-js/modules/es6.regexp.split\");\nrequire(\"core-js/modules/es6.function.name\");\nrequire(\"core-js/modules/es7.array.includes\");\nrequire(\"core-js/modules/es6.string.includes\");\nrequire(\"core-js/modules/es6.array.find-index\");\nrequire(\"core-js/modules/es6.array.find\");\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/getPrototypeOf\"));\nvar _get2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/get\"));\nvar _inherits2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/inherits\"));\nrequire(\"core-js/modules/es6.array.sort\");\nvar _slicedToArray2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/slicedToArray\"));\nrequire(\"core-js/modules/es6.object.freeze\");\nrequire(\"core-js/modules/es6.object.is-extensible\");\nrequire(\"core-js/modules/es6.array.fill\");\nrequire(\"core-js/modules/es6.number.constructor\");\nvar _defineProperty2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/defineProperty\"));\nrequire(\"core-js/modules/es6.object.keys\");\nvar _typeof2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/typeof\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/toConsumableArray\"));\nrequire(\"core-js/modules/web.dom.iterable\");\nrequire(\"core-js/modules/es6.string.iterator\");\nrequire(\"core-js/modules/es6.map\");\nvar _classCallCheck2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"G:\\\\device-management\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/createClass\"));\nvar _helpersDataset = require(\"./chunks/helpers.dataset.js\");\nrequire(\"@kurkle/color\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _superPropGet(t, o, e, r) { var p = (0, _get2.default)((0, _getPrototypeOf2.default)(1 & r ? t.prototype : t), o, e); return 2 & r && \"function\" == typeof p ? function (t) { return p.apply(e, t); } : p; }\nfunction _createForOfIteratorHelper(r, e) { var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t.return || t.return(); } finally { if (u) throw o; } } }; }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; } /*!\n * Chart.js v4.4.9\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nvar Animator = /*#__PURE__*/function () {\n  function Animator() {\n    (0, _classCallCheck2.default)(this, Animator);\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  return (0, _createClass2.default)(Animator, [{\n    key: \"_notify\",\n    value: function _notify(chart, anims, date, type) {\n      var callbacks = anims.listeners[type];\n      var numSteps = anims.duration;\n      callbacks.forEach(function (fn) {\n        return fn({\n          chart: chart,\n          initial: anims.initial,\n          numSteps: numSteps,\n          currentStep: Math.min(date - anims.start, numSteps)\n        });\n      });\n    }\n  }, {\n    key: \"_refresh\",\n    value: function _refresh() {\n      var _this = this;\n      if (this._request) {\n        return;\n      }\n      this._running = true;\n      this._request = _helpersDataset.r.call(window, function () {\n        _this._update();\n        _this._request = null;\n        if (_this._running) {\n          _this._refresh();\n        }\n      });\n    }\n  }, {\n    key: \"_update\",\n    value: function _update() {\n      var _this2 = this;\n      var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Date.now();\n      var remaining = 0;\n      this._charts.forEach(function (anims, chart) {\n        if (!anims.running || !anims.items.length) {\n          return;\n        }\n        var items = anims.items;\n        var i = items.length - 1;\n        var draw = false;\n        var item;\n        for (; i >= 0; --i) {\n          item = items[i];\n          if (item._active) {\n            if (item._total > anims.duration) {\n              anims.duration = item._total;\n            }\n            item.tick(date);\n            draw = true;\n          } else {\n            items[i] = items[items.length - 1];\n            items.pop();\n          }\n        }\n        if (draw) {\n          chart.draw();\n          _this2._notify(chart, anims, date, 'progress');\n        }\n        if (!items.length) {\n          anims.running = false;\n          _this2._notify(chart, anims, date, 'complete');\n          anims.initial = false;\n        }\n        remaining += items.length;\n      });\n      this._lastDate = date;\n      if (remaining === 0) {\n        this._running = false;\n      }\n    }\n  }, {\n    key: \"_getAnims\",\n    value: function _getAnims(chart) {\n      var charts = this._charts;\n      var anims = charts.get(chart);\n      if (!anims) {\n        anims = {\n          running: false,\n          initial: true,\n          items: [],\n          listeners: {\n            complete: [],\n            progress: []\n          }\n        };\n        charts.set(chart, anims);\n      }\n      return anims;\n    }\n  }, {\n    key: \"listen\",\n    value: function listen(chart, event, cb) {\n      this._getAnims(chart).listeners[event].push(cb);\n    }\n  }, {\n    key: \"add\",\n    value: function add(chart, items) {\n      var _this$_getAnims$items;\n      if (!items || !items.length) {\n        return;\n      }\n      (_this$_getAnims$items = this._getAnims(chart).items).push.apply(_this$_getAnims$items, (0, _toConsumableArray2.default)(items));\n    }\n  }, {\n    key: \"has\",\n    value: function has(chart) {\n      return this._getAnims(chart).items.length > 0;\n    }\n  }, {\n    key: \"start\",\n    value: function start(chart) {\n      var anims = this._charts.get(chart);\n      if (!anims) {\n        return;\n      }\n      anims.running = true;\n      anims.start = Date.now();\n      anims.duration = anims.items.reduce(function (acc, cur) {\n        return Math.max(acc, cur._duration);\n      }, 0);\n      this._refresh();\n    }\n  }, {\n    key: \"running\",\n    value: function running(chart) {\n      if (!this._running) {\n        return false;\n      }\n      var anims = this._charts.get(chart);\n      if (!anims || !anims.running || !anims.items.length) {\n        return false;\n      }\n      return true;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop(chart) {\n      var anims = this._charts.get(chart);\n      if (!anims || !anims.items.length) {\n        return;\n      }\n      var items = anims.items;\n      var i = items.length - 1;\n      for (; i >= 0; --i) {\n        items[i].cancel();\n      }\n      anims.items = [];\n      this._notify(chart, anims, Date.now(), 'complete');\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(chart) {\n      return this._charts.delete(chart);\n    }\n  }]);\n}();\nvar animator = exports.animator = /* #__PURE__ */new Animator();\nvar transparent = 'transparent';\nvar interpolators = {\n  boolean: function boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color: function color(from, to, factor) {\n    var c0 = (0, _helpersDataset.c)(from || transparent);\n    var c1 = c0.valid && (0, _helpersDataset.c)(to || transparent);\n    return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n  },\n  number: function number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nvar Animation = exports.Animation = /*#__PURE__*/function () {\n  function Animation(cfg, target, prop, to) {\n    (0, _classCallCheck2.default)(this, Animation);\n    var currentValue = target[prop];\n    to = (0, _helpersDataset.a)([cfg.to, to, currentValue, cfg.from]);\n    var from = (0, _helpersDataset.a)([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || (0, _typeof2.default)(from)];\n    this._easing = _helpersDataset.e[cfg.easing] || _helpersDataset.e.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  return (0, _createClass2.default)(Animation, [{\n    key: \"active\",\n    value: function active() {\n      return this._active;\n    }\n  }, {\n    key: \"update\",\n    value: function update(cfg, to, date) {\n      if (this._active) {\n        this._notify(false);\n        var currentValue = this._target[this._prop];\n        var elapsed = date - this._start;\n        var remain = this._duration - elapsed;\n        this._start = date;\n        this._duration = Math.floor(Math.max(remain, cfg.duration));\n        this._total += elapsed;\n        this._loop = !!cfg.loop;\n        this._to = (0, _helpersDataset.a)([cfg.to, to, currentValue, cfg.from]);\n        this._from = (0, _helpersDataset.a)([cfg.from, currentValue, to]);\n      }\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      if (this._active) {\n        this.tick(Date.now());\n        this._active = false;\n        this._notify(false);\n      }\n    }\n  }, {\n    key: \"tick\",\n    value: function tick(date) {\n      var elapsed = date - this._start;\n      var duration = this._duration;\n      var prop = this._prop;\n      var from = this._from;\n      var loop = this._loop;\n      var to = this._to;\n      var factor;\n      this._active = from !== to && (loop || elapsed < duration);\n      if (!this._active) {\n        this._target[prop] = to;\n        this._notify(true);\n        return;\n      }\n      if (elapsed < 0) {\n        this._target[prop] = from;\n        return;\n      }\n      factor = elapsed / duration % 2;\n      factor = loop && factor > 1 ? 2 - factor : factor;\n      factor = this._easing(Math.min(1, Math.max(0, factor)));\n      this._target[prop] = this._fn(from, to, factor);\n    }\n  }, {\n    key: \"wait\",\n    value: function wait() {\n      var promises = this._promises || (this._promises = []);\n      return new Promise(function (res, rej) {\n        promises.push({\n          res: res,\n          rej: rej\n        });\n      });\n    }\n  }, {\n    key: \"_notify\",\n    value: function _notify(resolved) {\n      var method = resolved ? 'res' : 'rej';\n      var promises = this._promises || [];\n      for (var i = 0; i < promises.length; i++) {\n        promises[i][method]();\n      }\n    }\n  }]);\n}();\nvar Animations = exports.Animations = /*#__PURE__*/function () {\n  function Animations(chart, config) {\n    (0, _classCallCheck2.default)(this, Animations);\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  return (0, _createClass2.default)(Animations, [{\n    key: \"configure\",\n    value: function configure(config) {\n      if (!(0, _helpersDataset.i)(config)) {\n        return;\n      }\n      var animationOptions = Object.keys(_helpersDataset.d.animation);\n      var animatedProps = this._properties;\n      Object.getOwnPropertyNames(config).forEach(function (key) {\n        var cfg = config[key];\n        if (!(0, _helpersDataset.i)(cfg)) {\n          return;\n        }\n        var resolved = {};\n        for (var _i = 0, _animationOptions = animationOptions; _i < _animationOptions.length; _i++) {\n          var option = _animationOptions[_i];\n          resolved[option] = cfg[option];\n        }\n        ((0, _helpersDataset.b)(cfg.properties) && cfg.properties || [key]).forEach(function (prop) {\n          if (prop === key || !animatedProps.has(prop)) {\n            animatedProps.set(prop, resolved);\n          }\n        });\n      });\n    }\n  }, {\n    key: \"_animateOptions\",\n    value: function _animateOptions(target, values) {\n      var newOptions = values.options;\n      var options = resolveTargetOptions(target, newOptions);\n      if (!options) {\n        return [];\n      }\n      var animations = this._createAnimations(options, newOptions);\n      if (newOptions.$shared) {\n        awaitAll(target.options.$animations, newOptions).then(function () {\n          target.options = newOptions;\n        }, function () {});\n      }\n      return animations;\n    }\n  }, {\n    key: \"_createAnimations\",\n    value: function _createAnimations(target, values) {\n      var animatedProps = this._properties;\n      var animations = [];\n      var running = target.$animations || (target.$animations = {});\n      var props = Object.keys(values);\n      var date = Date.now();\n      var i;\n      for (i = props.length - 1; i >= 0; --i) {\n        var prop = props[i];\n        if (prop.charAt(0) === '$') {\n          continue;\n        }\n        if (prop === 'options') {\n          animations.push.apply(animations, (0, _toConsumableArray2.default)(this._animateOptions(target, values)));\n          continue;\n        }\n        var value = values[prop];\n        var animation = running[prop];\n        var cfg = animatedProps.get(prop);\n        if (animation) {\n          if (cfg && animation.active()) {\n            animation.update(cfg, value, date);\n            continue;\n          } else {\n            animation.cancel();\n          }\n        }\n        if (!cfg || !cfg.duration) {\n          target[prop] = value;\n          continue;\n        }\n        running[prop] = animation = new Animation(cfg, target, prop, value);\n        animations.push(animation);\n      }\n      return animations;\n    }\n  }, {\n    key: \"update\",\n    value: function update(target, values) {\n      if (this._properties.size === 0) {\n        Object.assign(target, values);\n        return;\n      }\n      var animations = this._createAnimations(target, values);\n      if (animations.length) {\n        animator.add(this._chart, animations);\n        return true;\n      }\n    }\n  }]);\n}();\nfunction awaitAll(animations, properties) {\n  var running = [];\n  var keys = Object.keys(properties);\n  for (var i = 0; i < keys.length; i++) {\n    var anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  var options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {\n      $shared: false,\n      $animations: {}\n    });\n  }\n  return options;\n}\nfunction scaleClip(scale, allowedOverflow) {\n  var opts = scale && scale.options || {};\n  var reverse = opts.reverse;\n  var min = opts.min === undefined ? allowedOverflow : 0;\n  var max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  var x = scaleClip(xScale, allowedOverflow);\n  var y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  var t, r, b, l;\n  if ((0, _helpersDataset.i)(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  var keys = [];\n  var metasets = chart._getSortedDatasetMetas(filterVisible);\n  var i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction _applyStack(stack, value, dsIndex) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var keys = stack.keys;\n  var singleMode = options.mode === 'single';\n  var i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  var found = false;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      found = true;\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if ((0, _helpersDataset.g)(otherValue) && (singleMode || value === 0 || (0, _helpersDataset.s)(value) === (0, _helpersDataset.s)(otherValue))) {\n      value += otherValue;\n    }\n  }\n  if (!found && !options.all) {\n    return 0;\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n  var iScale = meta.iScale,\n    vScale = meta.vScale;\n  var iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n  var vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n  var keys = Object.keys(data);\n  var adata = new Array(keys.length);\n  var i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = (0, _defineProperty2.default)((0, _defineProperty2.default)({}, iAxisKey, key), vAxisKey, data[key]);\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  var stacked = scale && scale.options.stacked;\n  return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return \"\".concat(indexScale.id, \".\").concat(valueScale.id, \".\").concat(meta.stack || meta.type);\n}\nfunction getUserBounds(scale) {\n  var _scale$getUserBounds = scale.getUserBounds(),\n    min = _scale$getUserBounds.min,\n    max = _scale$getUserBounds.max,\n    minDefined = _scale$getUserBounds.minDefined,\n    maxDefined = _scale$getUserBounds.maxDefined;\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  var subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  var _iterator = _createForOfIteratorHelper(vScale.getMatchingVisibleMetas(type).reverse()),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var meta = _step.value;\n      var value = stack[meta.index];\n      if (positive && value > 0 || !positive && value < 0) {\n        return meta.index;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  var chart = controller.chart,\n    meta = controller._cachedMeta;\n  var stacks = chart._stacks || (chart._stacks = {});\n  var iScale = meta.iScale,\n    vScale = meta.vScale,\n    datasetIndex = meta.index;\n  var iAxis = iScale.axis;\n  var vAxis = vScale.axis;\n  var key = getStackKey(iScale, vScale, meta);\n  var ilen = parsed.length;\n  var stack;\n  for (var i = 0; i < ilen; ++i) {\n    var item = parsed[i];\n    var _index = item[iAxis],\n      value = item[vAxis];\n    var itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, _index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n    var visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  var scales = chart.scales;\n  return Object.keys(scales).filter(function (key) {\n    return scales[key].axis === axis;\n  }).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return (0, _helpersDataset.j)(parent, {\n    active: false,\n    dataset: undefined,\n    datasetIndex: index,\n    index: index,\n    mode: 'default',\n    type: 'dataset'\n  });\n}\nfunction createDataContext(parent, index, element) {\n  return (0, _helpersDataset.j)(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element: element,\n    index: index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  var datasetIndex = meta.controller.index;\n  var axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  var _iterator2 = _createForOfIteratorHelper(items),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var parsed = _step2.value;\n      var stacks = parsed._stacks;\n      if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n        return;\n      }\n      delete stacks[axis][datasetIndex];\n      if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n        delete stacks[axis]._visualValues[datasetIndex];\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n}\nvar isDirectUpdateMode = function isDirectUpdateMode(mode) {\n  return mode === 'reset' || mode === 'none';\n};\nvar cloneIfNotShared = function cloneIfNotShared(cached, shared) {\n  return shared ? cached : Object.assign({}, cached);\n};\nvar createStack = function createStack(canStack, meta, chart) {\n  return canStack && !meta.hidden && meta._stacked && {\n    keys: getSortedDatasetIndices(chart, true),\n    values: null\n  };\n};\nvar DatasetController = exports.DatasetController = /*#__PURE__*/function () {\n  function DatasetController(chart, datasetIndex) {\n    (0, _classCallCheck2.default)(this, DatasetController);\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = (this instanceof DatasetController ? this.constructor : void 0).datasetElementType;\n    this.dataElementType = (this instanceof DatasetController ? this.constructor : void 0).dataElementType;\n    this.initialize();\n  }\n  return (0, _createClass2.default)(DatasetController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      var meta = this._cachedMeta;\n      this.configure();\n      this.linkScales();\n      meta._stacked = isStacked(meta.vScale, meta);\n      this.addElements();\n      if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n        console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n      }\n    }\n  }, {\n    key: \"updateIndex\",\n    value: function updateIndex(datasetIndex) {\n      if (this.index !== datasetIndex) {\n        clearStacks(this._cachedMeta);\n      }\n      this.index = datasetIndex;\n    }\n  }, {\n    key: \"linkScales\",\n    value: function linkScales() {\n      var chart = this.chart;\n      var meta = this._cachedMeta;\n      var dataset = this.getDataset();\n      var chooseId = function chooseId(axis, x, y, r) {\n        return axis === 'x' ? x : axis === 'r' ? r : y;\n      };\n      var xid = meta.xAxisID = (0, _helpersDataset.v)(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n      var yid = meta.yAxisID = (0, _helpersDataset.v)(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n      var rid = meta.rAxisID = (0, _helpersDataset.v)(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n      var indexAxis = meta.indexAxis;\n      var iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n      var vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n      meta.xScale = this.getScaleForId(xid);\n      meta.yScale = this.getScaleForId(yid);\n      meta.rScale = this.getScaleForId(rid);\n      meta.iScale = this.getScaleForId(iid);\n      meta.vScale = this.getScaleForId(vid);\n    }\n  }, {\n    key: \"getDataset\",\n    value: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    }\n  }, {\n    key: \"getMeta\",\n    value: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    }\n  }, {\n    key: \"getScaleForId\",\n    value: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    }\n  }, {\n    key: \"_getOtherScale\",\n    value: function _getOtherScale(scale) {\n      var meta = this._cachedMeta;\n      return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._update('reset');\n    }\n  }, {\n    key: \"_destroy\",\n    value: function _destroy() {\n      var meta = this._cachedMeta;\n      if (this._data) {\n        (0, _helpersDataset.u)(this._data, this);\n      }\n      if (meta._stacked) {\n        clearStacks(meta);\n      }\n    }\n  }, {\n    key: \"_dataCheck\",\n    value: function _dataCheck() {\n      var dataset = this.getDataset();\n      var data = dataset.data || (dataset.data = []);\n      var _data = this._data;\n      if ((0, _helpersDataset.i)(data)) {\n        var meta = this._cachedMeta;\n        this._data = convertObjectDataToArray(data, meta);\n      } else if (_data !== data) {\n        if (_data) {\n          (0, _helpersDataset.u)(_data, this);\n          var _meta = this._cachedMeta;\n          clearStacks(_meta);\n          _meta._parsed = [];\n        }\n        if (data && Object.isExtensible(data)) {\n          (0, _helpersDataset.l)(data, this);\n        }\n        this._syncList = [];\n        this._data = data;\n      }\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      var meta = this._cachedMeta;\n      this._dataCheck();\n      if (this.datasetElementType) {\n        meta.dataset = new this.datasetElementType();\n      }\n    }\n  }, {\n    key: \"buildOrUpdateElements\",\n    value: function buildOrUpdateElements(resetNewElements) {\n      var meta = this._cachedMeta;\n      var dataset = this.getDataset();\n      var stackChanged = false;\n      this._dataCheck();\n      var oldStacked = meta._stacked;\n      meta._stacked = isStacked(meta.vScale, meta);\n      if (meta.stack !== dataset.stack) {\n        stackChanged = true;\n        clearStacks(meta);\n        meta.stack = dataset.stack;\n      }\n      this._resyncElements(resetNewElements);\n      if (stackChanged || oldStacked !== meta._stacked) {\n        updateStacks(this, meta._parsed);\n        meta._stacked = isStacked(meta.vScale, meta);\n      }\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var config = this.chart.config;\n      var scopeKeys = config.datasetScopeKeys(this._type);\n      var scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n      this.options = config.createResolver(scopes, this.getContext());\n      this._parsing = this.options.parsing;\n      this._cachedDataOpts = {};\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(start, count) {\n      var meta = this._cachedMeta,\n        data = this._data;\n      var iScale = meta.iScale,\n        _stacked = meta._stacked;\n      var iAxis = iScale.axis;\n      var sorted = start === 0 && count === data.length ? true : meta._sorted;\n      var prev = start > 0 && meta._parsed[start - 1];\n      var i, cur, parsed;\n      if (this._parsing === false) {\n        meta._parsed = data;\n        meta._sorted = true;\n        parsed = data;\n      } else {\n        if ((0, _helpersDataset.b)(data[start])) {\n          parsed = this.parseArrayData(meta, data, start, count);\n        } else if ((0, _helpersDataset.i)(data[start])) {\n          parsed = this.parseObjectData(meta, data, start, count);\n        } else {\n          parsed = this.parsePrimitiveData(meta, data, start, count);\n        }\n        var isNotInOrderComparedToPrev = function isNotInOrderComparedToPrev() {\n          return cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n        };\n        for (i = 0; i < count; ++i) {\n          meta._parsed[i + start] = cur = parsed[i];\n          if (sorted) {\n            if (isNotInOrderComparedToPrev()) {\n              sorted = false;\n            }\n            prev = cur;\n          }\n        }\n        meta._sorted = sorted;\n      }\n      if (_stacked) {\n        updateStacks(this, parsed);\n      }\n    }\n  }, {\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      var iScale = meta.iScale,\n        vScale = meta.vScale;\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      var labels = iScale.getLabels();\n      var singleScale = iScale === vScale;\n      var parsed = new Array(count);\n      var i, ilen, index;\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        parsed[i] = (0, _defineProperty2.default)((0, _defineProperty2.default)({}, iAxis, singleScale || iScale.parse(labels[index], index)), vAxis, vScale.parse(data[index], index));\n      }\n      return parsed;\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      var xScale = meta.xScale,\n        yScale = meta.yScale;\n      var parsed = new Array(count);\n      var i, ilen, index, item;\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(item[0], index),\n          y: yScale.parse(item[1], index)\n        };\n      }\n      return parsed;\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var xScale = meta.xScale,\n        yScale = meta.yScale;\n      var _this$_parsing = this._parsing,\n        _this$_parsing$xAxisK = _this$_parsing.xAxisKey,\n        xAxisKey = _this$_parsing$xAxisK === void 0 ? 'x' : _this$_parsing$xAxisK,\n        _this$_parsing$yAxisK = _this$_parsing.yAxisKey,\n        yAxisKey = _this$_parsing$yAxisK === void 0 ? 'y' : _this$_parsing$yAxisK;\n      var parsed = new Array(count);\n      var i, ilen, index, item;\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse((0, _helpersDataset.f)(item, xAxisKey), index),\n          y: yScale.parse((0, _helpersDataset.f)(item, yAxisKey), index)\n        };\n      }\n      return parsed;\n    }\n  }, {\n    key: \"getParsed\",\n    value: function getParsed(index) {\n      return this._cachedMeta._parsed[index];\n    }\n  }, {\n    key: \"getDataElement\",\n    value: function getDataElement(index) {\n      return this._cachedMeta.data[index];\n    }\n  }, {\n    key: \"applyStack\",\n    value: function applyStack(scale, parsed, mode) {\n      var chart = this.chart;\n      var meta = this._cachedMeta;\n      var value = parsed[scale.axis];\n      var stack = {\n        keys: getSortedDatasetIndices(chart, true),\n        values: parsed._stacks[scale.axis]._visualValues\n      };\n      return _applyStack(stack, value, meta.index, {\n        mode: mode\n      });\n    }\n  }, {\n    key: \"updateRangeFromParsed\",\n    value: function updateRangeFromParsed(range, scale, parsed, stack) {\n      var parsedValue = parsed[scale.axis];\n      var value = parsedValue === null ? NaN : parsedValue;\n      var values = stack && parsed._stacks[scale.axis];\n      if (stack && values) {\n        stack.values = values;\n        value = _applyStack(stack, parsedValue, this._cachedMeta.index);\n      }\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax(scale, canStack) {\n      var meta = this._cachedMeta;\n      var _parsed = meta._parsed;\n      var sorted = meta._sorted && scale === meta.iScale;\n      var ilen = _parsed.length;\n      var otherScale = this._getOtherScale(scale);\n      var stack = createStack(canStack, meta, this.chart);\n      var range = {\n        min: Number.POSITIVE_INFINITY,\n        max: Number.NEGATIVE_INFINITY\n      };\n      var _getUserBounds = getUserBounds(otherScale),\n        otherMin = _getUserBounds.min,\n        otherMax = _getUserBounds.max;\n      var i, parsed;\n      function _skip() {\n        parsed = _parsed[i];\n        var otherValue = parsed[otherScale.axis];\n        return !(0, _helpersDataset.g)(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n      }\n      for (i = 0; i < ilen; ++i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        if (sorted) {\n          break;\n        }\n      }\n      if (sorted) {\n        for (i = ilen - 1; i >= 0; --i) {\n          if (_skip()) {\n            continue;\n          }\n          this.updateRangeFromParsed(range, scale, parsed, stack);\n          break;\n        }\n      }\n      return range;\n    }\n  }, {\n    key: \"getAllParsedValues\",\n    value: function getAllParsedValues(scale) {\n      var parsed = this._cachedMeta._parsed;\n      var values = [];\n      var i, ilen, value;\n      for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n        value = parsed[i][scale.axis];\n        if ((0, _helpersDataset.g)(value)) {\n          values.push(value);\n        }\n      }\n      return values;\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      return false;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var iScale = meta.iScale;\n      var vScale = meta.vScale;\n      var parsed = this.getParsed(index);\n      return {\n        label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n        value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n      };\n    }\n  }, {\n    key: \"_update\",\n    value: function _update(mode) {\n      var meta = this._cachedMeta;\n      this.update(mode || 'default');\n      meta._clip = toClip((0, _helpersDataset.v)(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {}\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var ctx = this._ctx;\n      var chart = this.chart;\n      var meta = this._cachedMeta;\n      var elements = meta.data || [];\n      var area = chart.chartArea;\n      var active = [];\n      var start = this._drawStart || 0;\n      var count = this._drawCount || elements.length - start;\n      var drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n      var i;\n      if (meta.dataset) {\n        meta.dataset.draw(ctx, area, start, count);\n      }\n      for (i = start; i < start + count; ++i) {\n        var element = elements[i];\n        if (element.hidden) {\n          continue;\n        }\n        if (element.active && drawActiveElementsOnTop) {\n          active.push(element);\n        } else {\n          element.draw(ctx, area);\n        }\n      }\n      for (i = 0; i < active.length; ++i) {\n        active[i].draw(ctx, area);\n      }\n    }\n  }, {\n    key: \"getStyle\",\n    value: function getStyle(index, active) {\n      var mode = active ? 'active' : 'default';\n      return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext(index, active, mode) {\n      var dataset = this.getDataset();\n      var context;\n      if (index >= 0 && index < this._cachedMeta.data.length) {\n        var element = this._cachedMeta.data[index];\n        context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n        context.parsed = this.getParsed(index);\n        context.raw = dataset.data[index];\n        context.index = context.dataIndex = index;\n      } else {\n        context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n        context.dataset = dataset;\n        context.index = context.datasetIndex = this.index;\n      }\n      context.active = !!active;\n      context.mode = mode;\n      return context;\n    }\n  }, {\n    key: \"resolveDatasetElementOptions\",\n    value: function resolveDatasetElementOptions(mode) {\n      return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n  }, {\n    key: \"resolveDataElementOptions\",\n    value: function resolveDataElementOptions(index, mode) {\n      return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n  }, {\n    key: \"_resolveElementOptions\",\n    value: function _resolveElementOptions(elementType) {\n      var _this3 = this;\n      var mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n      var index = arguments.length > 2 ? arguments[2] : undefined;\n      var active = mode === 'active';\n      var cache = this._cachedDataOpts;\n      var cacheKey = elementType + '-' + mode;\n      var cached = cache[cacheKey];\n      var sharing = this.enableOptionSharing && (0, _helpersDataset.h)(index);\n      if (cached) {\n        return cloneIfNotShared(cached, sharing);\n      }\n      var config = this.chart.config;\n      var scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n      var prefixes = active ? [\"\".concat(elementType, \"Hover\"), 'hover', elementType, ''] : [elementType, ''];\n      var scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      var names = Object.keys(_helpersDataset.d.elements[elementType]);\n      var context = function context() {\n        return _this3.getContext(index, active, mode);\n      };\n      var values = config.resolveNamedOptions(scopes, names, context, prefixes);\n      if (values.$shared) {\n        values.$shared = sharing;\n        cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n      }\n      return values;\n    }\n  }, {\n    key: \"_resolveAnimations\",\n    value: function _resolveAnimations(index, transition, active) {\n      var chart = this.chart;\n      var cache = this._cachedDataOpts;\n      var cacheKey = \"animation-\".concat(transition);\n      var cached = cache[cacheKey];\n      if (cached) {\n        return cached;\n      }\n      var options;\n      if (chart.options.animation !== false) {\n        var config = this.chart.config;\n        var scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n        var scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        options = config.createResolver(scopes, this.getContext(index, active, transition));\n      }\n      var animations = new Animations(chart, options && options.animations);\n      if (options && options._cacheable) {\n        cache[cacheKey] = Object.freeze(animations);\n      }\n      return animations;\n    }\n  }, {\n    key: \"getSharedOptions\",\n    value: function getSharedOptions(options) {\n      if (!options.$shared) {\n        return;\n      }\n      return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n  }, {\n    key: \"includeOptions\",\n    value: function includeOptions(mode, sharedOptions) {\n      return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n  }, {\n    key: \"_getSharedOptions\",\n    value: function _getSharedOptions(start, mode) {\n      var firstOpts = this.resolveDataElementOptions(start, mode);\n      var previouslySharedOptions = this._sharedOptions;\n      var sharedOptions = this.getSharedOptions(firstOpts);\n      var includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n      this.updateSharedOptions(sharedOptions, mode, firstOpts);\n      return {\n        sharedOptions: sharedOptions,\n        includeOptions: includeOptions\n      };\n    }\n  }, {\n    key: \"updateElement\",\n    value: function updateElement(element, index, properties, mode) {\n      if (isDirectUpdateMode(mode)) {\n        Object.assign(element, properties);\n      } else {\n        this._resolveAnimations(index, mode).update(element, properties);\n      }\n    }\n  }, {\n    key: \"updateSharedOptions\",\n    value: function updateSharedOptions(sharedOptions, mode, newOptions) {\n      if (sharedOptions && !isDirectUpdateMode(mode)) {\n        this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n      }\n    }\n  }, {\n    key: \"_setStyle\",\n    value: function _setStyle(element, index, mode, active) {\n      element.active = active;\n      var options = this.getStyle(index, active);\n      this._resolveAnimations(index, mode, active).update(element, {\n        options: !active && this.getSharedOptions(options) || options\n      });\n    }\n  }, {\n    key: \"removeHoverStyle\",\n    value: function removeHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', false);\n    }\n  }, {\n    key: \"setHoverStyle\",\n    value: function setHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', true);\n    }\n  }, {\n    key: \"_removeDatasetHoverStyle\",\n    value: function _removeDatasetHoverStyle() {\n      var element = this._cachedMeta.dataset;\n      if (element) {\n        this._setStyle(element, undefined, 'active', false);\n      }\n    }\n  }, {\n    key: \"_setDatasetHoverStyle\",\n    value: function _setDatasetHoverStyle() {\n      var element = this._cachedMeta.dataset;\n      if (element) {\n        this._setStyle(element, undefined, 'active', true);\n      }\n    }\n  }, {\n    key: \"_resyncElements\",\n    value: function _resyncElements(resetNewElements) {\n      var data = this._data;\n      var elements = this._cachedMeta.data;\n      var _iterator3 = _createForOfIteratorHelper(this._syncList),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var _step3$value = (0, _slicedToArray2.default)(_step3.value, 3),\n            method = _step3$value[0],\n            arg1 = _step3$value[1],\n            arg2 = _step3$value[2];\n          this[method](arg1, arg2);\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      this._syncList = [];\n      var numMeta = elements.length;\n      var numData = data.length;\n      var count = Math.min(numData, numMeta);\n      if (count) {\n        this.parse(0, count);\n      }\n      if (numData > numMeta) {\n        this._insertElements(numMeta, numData - numMeta, resetNewElements);\n      } else if (numData < numMeta) {\n        this._removeElements(numData, numMeta - numData);\n      }\n    }\n  }, {\n    key: \"_insertElements\",\n    value: function _insertElements(start, count) {\n      var resetNewElements = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var meta = this._cachedMeta;\n      var data = meta.data;\n      var end = start + count;\n      var i;\n      var move = function move(arr) {\n        arr.length += count;\n        for (i = arr.length - 1; i >= end; i--) {\n          arr[i] = arr[i - count];\n        }\n      };\n      move(data);\n      for (i = start; i < end; ++i) {\n        data[i] = new this.dataElementType();\n      }\n      if (this._parsing) {\n        move(meta._parsed);\n      }\n      this.parse(start, count);\n      if (resetNewElements) {\n        this.updateElements(data, start, count, 'reset');\n      }\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(element, start, count, mode) {}\n  }, {\n    key: \"_removeElements\",\n    value: function _removeElements(start, count) {\n      var meta = this._cachedMeta;\n      if (this._parsing) {\n        var removed = meta._parsed.splice(start, count);\n        if (meta._stacked) {\n          clearStacks(meta, removed);\n        }\n      }\n      meta.data.splice(start, count);\n    }\n  }, {\n    key: \"_sync\",\n    value: function _sync(args) {\n      if (this._parsing) {\n        this._syncList.push(args);\n      } else {\n        var _args2 = (0, _slicedToArray2.default)(args, 3),\n          method = _args2[0],\n          arg1 = _args2[1],\n          arg2 = _args2[2];\n        this[method](arg1, arg2);\n      }\n      this.chart._dataChanges.push([this.index].concat((0, _toConsumableArray2.default)(args)));\n    }\n  }, {\n    key: \"_onDataPush\",\n    value: function _onDataPush() {\n      var count = arguments.length;\n      this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n    }\n  }, {\n    key: \"_onDataPop\",\n    value: function _onDataPop() {\n      this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n    }\n  }, {\n    key: \"_onDataShift\",\n    value: function _onDataShift() {\n      this._sync(['_removeElements', 0, 1]);\n    }\n  }, {\n    key: \"_onDataSplice\",\n    value: function _onDataSplice(start, count) {\n      if (count) {\n        this._sync(['_removeElements', start, count]);\n      }\n      var newCount = arguments.length - 2;\n      if (newCount) {\n        this._sync(['_insertElements', start, newCount]);\n      }\n    }\n  }, {\n    key: \"_onDataUnshift\",\n    value: function _onDataUnshift() {\n      this._sync(['_insertElements', 0, arguments.length]);\n    }\n  }]);\n}();\n(0, _defineProperty2.default)(DatasetController, \"defaults\", {});\n(0, _defineProperty2.default)(DatasetController, \"datasetElementType\", null);\n(0, _defineProperty2.default)(DatasetController, \"dataElementType\", null);\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    var visibleMetas = scale.getMatchingVisibleMetas(type);\n    var values = [];\n    for (var i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = (0, _helpersDataset._)(values.sort(function (a, b) {\n      return a - b;\n    }));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  var scale = meta.iScale;\n  var values = getAllScaleValues(scale, meta.type);\n  var min = scale._length;\n  var i, ilen, curr, prev;\n  var updateMinAndPrev = function updateMinAndPrev() {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if ((0, _helpersDataset.h)(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  var thickness = options.barThickness;\n  var size, ratio;\n  if ((0, _helpersDataset.k)(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio: ratio,\n    start: ruler.pixels[index] - size / 2\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  var pixels = ruler.pixels;\n  var curr = pixels[index];\n  var prev = index > 0 ? pixels[index - 1] : null;\n  var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  var percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  var start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  var size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start: start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  var startValue = vScale.parse(entry[0], i);\n  var endValue = vScale.parse(entry[1], i);\n  var min = Math.min(startValue, endValue);\n  var max = Math.max(startValue, endValue);\n  var barStart = min;\n  var barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart: barStart,\n    barEnd: barEnd,\n    start: startValue,\n    end: endValue,\n    min: min,\n    max: max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if ((0, _helpersDataset.b)(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  var iScale = meta.iScale;\n  var vScale = meta.vScale;\n  var labels = iScale.getLabels();\n  var singleScale = iScale === vScale;\n  var parsed = [];\n  var i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return (0, _helpersDataset.s)(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  var reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {\n    start: start,\n    end: end,\n    reverse: reverse,\n    top: top,\n    bottom: bottom\n  };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  var edge = options.borderSkipped;\n  var res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  if (edge === true) {\n    properties.borderSkipped = {\n      top: true,\n      right: true,\n      bottom: true,\n      left: true\n    };\n    return;\n  }\n  var _borderProps = borderProps(properties),\n    start = _borderProps.start,\n    end = _borderProps.end,\n    reverse = _borderProps.reverse,\n    top = _borderProps.top,\n    bottom = _borderProps.bottom;\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, _ref, ratio) {\n  var inflateAmount = _ref.inflateAmount;\n  properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nvar BarController = exports.BarController = /*#__PURE__*/function (_DatasetController) {\n  function BarController() {\n    (0, _classCallCheck2.default)(this, BarController);\n    return _callSuper(this, BarController, arguments);\n  }\n  (0, _inherits2.default)(BarController, _DatasetController);\n  return (0, _createClass2.default)(BarController, [{\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var iScale = meta.iScale,\n        vScale = meta.vScale;\n      var _this$_parsing2 = this._parsing,\n        _this$_parsing2$xAxis = _this$_parsing2.xAxisKey,\n        xAxisKey = _this$_parsing2$xAxis === void 0 ? 'x' : _this$_parsing2$xAxis,\n        _this$_parsing2$yAxis = _this$_parsing2.yAxisKey,\n        yAxisKey = _this$_parsing2$yAxis === void 0 ? 'y' : _this$_parsing2$yAxis;\n      var iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n      var vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n      var parsed = [];\n      var i, ilen, item, obj;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        obj = data[i];\n        item = {};\n        item[iScale.axis] = iScale.parse((0, _helpersDataset.f)(obj, iAxisKey), i);\n        parsed.push(parseValue((0, _helpersDataset.f)(obj, vAxisKey), item, vScale, i));\n      }\n      return parsed;\n    }\n  }, {\n    key: \"updateRangeFromParsed\",\n    value: function updateRangeFromParsed(range, scale, parsed, stack) {\n      _superPropGet(BarController, \"updateRangeFromParsed\", this, 3)([range, scale, parsed, stack]);\n      var custom = parsed._custom;\n      if (custom && scale === this._cachedMeta.vScale) {\n        range.min = Math.min(range.min, custom.min);\n        range.max = Math.max(range.max, custom.max);\n      }\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      return 0;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var iScale = meta.iScale,\n        vScale = meta.vScale;\n      var parsed = this.getParsed(index);\n      var custom = parsed._custom;\n      var value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n      return {\n        label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n        value: value\n      };\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n      _superPropGet(BarController, \"initialize\", this, 3)([]);\n      var meta = this._cachedMeta;\n      meta.stack = this.getDataset().stack;\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(bars, start, count, mode) {\n      var reset = mode === 'reset';\n      var index = this.index,\n        vScale = this._cachedMeta.vScale;\n      var base = vScale.getBasePixel();\n      var horizontal = vScale.isHorizontal();\n      var ruler = this._getRuler();\n      var _this$_getSharedOptio = this._getSharedOptions(start, mode),\n        sharedOptions = _this$_getSharedOptio.sharedOptions,\n        includeOptions = _this$_getSharedOptio.includeOptions;\n      for (var i = start; i < start + count; i++) {\n        var parsed = this.getParsed(i);\n        var vpixels = reset || (0, _helpersDataset.k)(parsed[vScale.axis]) ? {\n          base: base,\n          head: base\n        } : this._calculateBarValuePixels(i);\n        var ipixels = this._calculateBarIndexPixels(i, ruler);\n        var stack = (parsed._stacks || {})[vScale.axis];\n        var properties = {\n          horizontal: horizontal,\n          base: vpixels.base,\n          enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n          x: horizontal ? vpixels.head : ipixels.center,\n          y: horizontal ? ipixels.center : vpixels.head,\n          height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n          width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n        };\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n        }\n        var options = properties.options || bars[i].options;\n        setBorderSkipped(properties, options, stack, index);\n        setInflateAmount(properties, options, ruler.ratio);\n        this.updateElement(bars[i], i, properties, mode);\n      }\n    }\n  }, {\n    key: \"_getStacks\",\n    value: function _getStacks(last, dataIndex) {\n      var iScale = this._cachedMeta.iScale;\n      var metasets = iScale.getMatchingVisibleMetas(this._type).filter(function (meta) {\n        return meta.controller.options.grouped;\n      });\n      var stacked = iScale.options.stacked;\n      var stacks = [];\n      var currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n      var iScaleValue = currentParsed && currentParsed[iScale.axis];\n      var skipNull = function skipNull(meta) {\n        var parsed = meta._parsed.find(function (item) {\n          return item[iScale.axis] === iScaleValue;\n        });\n        var val = parsed && parsed[meta.vScale.axis];\n        if ((0, _helpersDataset.k)(val) || isNaN(val)) {\n          return true;\n        }\n      };\n      var _iterator4 = _createForOfIteratorHelper(metasets),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var meta = _step4.value;\n          if (dataIndex !== undefined && skipNull(meta)) {\n            continue;\n          }\n          if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n            stacks.push(meta.stack);\n          }\n          if (meta.index === last) {\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n      if (!stacks.length) {\n        stacks.push(undefined);\n      }\n      return stacks;\n    }\n  }, {\n    key: \"_getStackCount\",\n    value: function _getStackCount(index) {\n      return this._getStacks(undefined, index).length;\n    }\n  }, {\n    key: \"_getStackIndex\",\n    value: function _getStackIndex(datasetIndex, name, dataIndex) {\n      var stacks = this._getStacks(datasetIndex, dataIndex);\n      var index = name !== undefined ? stacks.indexOf(name) : -1;\n      return index === -1 ? stacks.length - 1 : index;\n    }\n  }, {\n    key: \"_getRuler\",\n    value: function _getRuler() {\n      var opts = this.options;\n      var meta = this._cachedMeta;\n      var iScale = meta.iScale;\n      var pixels = [];\n      var i, ilen;\n      for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n        pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n      }\n      var barThickness = opts.barThickness;\n      var min = barThickness || computeMinSampleSize(meta);\n      return {\n        min: min,\n        pixels: pixels,\n        start: iScale._startPixel,\n        end: iScale._endPixel,\n        stackCount: this._getStackCount(),\n        scale: iScale,\n        grouped: opts.grouped,\n        ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n      };\n    }\n  }, {\n    key: \"_calculateBarValuePixels\",\n    value: function _calculateBarValuePixels(index) {\n      var _this$_cachedMeta = this._cachedMeta,\n        vScale = _this$_cachedMeta.vScale,\n        _stacked = _this$_cachedMeta._stacked,\n        datasetIndex = _this$_cachedMeta.index,\n        _this$options = this.options,\n        baseValue = _this$options.base,\n        minBarLength = _this$options.minBarLength;\n      var actualBase = baseValue || 0;\n      var parsed = this.getParsed(index);\n      var custom = parsed._custom;\n      var floating = isFloatBar(custom);\n      var value = parsed[vScale.axis];\n      var start = 0;\n      var length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n      var head, size;\n      if (length !== value) {\n        start = length - value;\n        length = value;\n      }\n      if (floating) {\n        value = custom.barStart;\n        length = custom.barEnd - custom.barStart;\n        if (value !== 0 && (0, _helpersDataset.s)(value) !== (0, _helpersDataset.s)(custom.barEnd)) {\n          start = 0;\n        }\n        start += value;\n      }\n      var startValue = !(0, _helpersDataset.k)(baseValue) && !floating ? baseValue : start;\n      var base = vScale.getPixelForValue(startValue);\n      if (this.chart.getDataVisibility(index)) {\n        head = vScale.getPixelForValue(start + length);\n      } else {\n        head = base;\n      }\n      size = head - base;\n      if (Math.abs(size) < minBarLength) {\n        size = barSign(size, vScale, actualBase) * minBarLength;\n        if (value === actualBase) {\n          base -= size / 2;\n        }\n        var startPixel = vScale.getPixelForDecimal(0);\n        var endPixel = vScale.getPixelForDecimal(1);\n        var min = Math.min(startPixel, endPixel);\n        var max = Math.max(startPixel, endPixel);\n        base = Math.max(Math.min(base, max), min);\n        head = base + size;\n        if (_stacked && !floating) {\n          parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n        }\n      }\n      if (base === vScale.getPixelForValue(actualBase)) {\n        var halfGrid = (0, _helpersDataset.s)(size) * vScale.getLineWidthForValue(actualBase) / 2;\n        base += halfGrid;\n        size -= halfGrid;\n      }\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    }\n  }, {\n    key: \"_calculateBarIndexPixels\",\n    value: function _calculateBarIndexPixels(index, ruler) {\n      var scale = ruler.scale;\n      var options = this.options;\n      var skipNull = options.skipNull;\n      var maxBarThickness = (0, _helpersDataset.v)(options.maxBarThickness, Infinity);\n      var center, size;\n      if (ruler.grouped) {\n        var stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n        var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n        var stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n        center = range.start + range.chunk * stackIndex + range.chunk / 2;\n        size = Math.min(maxBarThickness, range.chunk * range.ratio);\n      } else {\n        center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n        size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n      }\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var meta = this._cachedMeta;\n      var vScale = meta.vScale;\n      var rects = meta.data;\n      var ilen = rects.length;\n      var i = 0;\n      for (; i < ilen; ++i) {\n        if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n          rects[i].draw(this._ctx);\n        }\n      }\n    }\n  }]);\n}(DatasetController);\n(0, _defineProperty2.default)(BarController, \"id\", 'bar');\n(0, _defineProperty2.default)(BarController, \"defaults\", {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n});\n(0, _defineProperty2.default)(BarController, \"overrides\", {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true\n    }\n  }\n});\nvar BubbleController = exports.BubbleController = /*#__PURE__*/function (_DatasetController2) {\n  function BubbleController() {\n    (0, _classCallCheck2.default)(this, BubbleController);\n    return _callSuper(this, BubbleController, arguments);\n  }\n  (0, _inherits2.default)(BubbleController, _DatasetController2);\n  return (0, _createClass2.default)(BubbleController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n      _superPropGet(BubbleController, \"initialize\", this, 3)([]);\n    }\n  }, {\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      var parsed = _superPropGet(BubbleController, \"parsePrimitiveData\", this, 3)([meta, data, start, count]);\n      for (var i = 0; i < parsed.length; i++) {\n        parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n      }\n      return parsed;\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      var parsed = _superPropGet(BubbleController, \"parseArrayData\", this, 3)([meta, data, start, count]);\n      for (var i = 0; i < parsed.length; i++) {\n        var item = data[start + i];\n        parsed[i]._custom = (0, _helpersDataset.v)(item[2], this.resolveDataElementOptions(i + start).radius);\n      }\n      return parsed;\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var parsed = _superPropGet(BubbleController, \"parseObjectData\", this, 3)([meta, data, start, count]);\n      for (var i = 0; i < parsed.length; i++) {\n        var item = data[start + i];\n        parsed[i]._custom = (0, _helpersDataset.v)(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n      }\n      return parsed;\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var data = this._cachedMeta.data;\n      var max = 0;\n      for (var i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var labels = this.chart.data.labels || [];\n      var xScale = meta.xScale,\n        yScale = meta.yScale;\n      var parsed = this.getParsed(index);\n      var x = xScale.getLabelForValue(parsed.x);\n      var y = yScale.getLabelForValue(parsed.y);\n      var r = parsed._custom;\n      return {\n        label: labels[index] || '',\n        value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var points = this._cachedMeta.data;\n      this.updateElements(points, 0, points.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var reset = mode === 'reset';\n      var _this$_cachedMeta2 = this._cachedMeta,\n        iScale = _this$_cachedMeta2.iScale,\n        vScale = _this$_cachedMeta2.vScale;\n      var _this$_getSharedOptio2 = this._getSharedOptions(start, mode),\n        sharedOptions = _this$_getSharedOptio2.sharedOptions,\n        includeOptions = _this$_getSharedOptio2.includeOptions;\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      for (var i = start; i < start + count; i++) {\n        var point = points[i];\n        var parsed = !reset && this.getParsed(i);\n        var properties = {};\n        var iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n        var vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel);\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n          if (reset) {\n            properties.options.radius = 0;\n          }\n        }\n        this.updateElement(point, i, properties, mode);\n      }\n    }\n  }, {\n    key: \"resolveDataElementOptions\",\n    value: function resolveDataElementOptions(index, mode) {\n      var parsed = this.getParsed(index);\n      var values = _superPropGet(BubbleController, \"resolveDataElementOptions\", this, 3)([index, mode]);\n      if (values.$shared) {\n        values = Object.assign({}, values, {\n          $shared: false\n        });\n      }\n      var radius = values.radius;\n      if (mode !== 'active') {\n        values.radius = 0;\n      }\n      values.radius += (0, _helpersDataset.v)(parsed && parsed._custom, radius);\n      return values;\n    }\n  }]);\n}(DatasetController);\n(0, _defineProperty2.default)(BubbleController, \"id\", 'bubble');\n(0, _defineProperty2.default)(BubbleController, \"defaults\", {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n});\n(0, _defineProperty2.default)(BubbleController, \"overrides\", {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n});\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  var ratioX = 1;\n  var ratioY = 1;\n  var offsetX = 0;\n  var offsetY = 0;\n  if (circumference < _helpersDataset.T) {\n    var startAngle = rotation;\n    var endAngle = startAngle + circumference;\n    var startX = Math.cos(startAngle);\n    var startY = Math.sin(startAngle);\n    var endX = Math.cos(endAngle);\n    var endY = Math.sin(endAngle);\n    var calcMax = function calcMax(angle, a, b) {\n      return (0, _helpersDataset.p)(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    };\n    var calcMin = function calcMin(angle, a, b) {\n      return (0, _helpersDataset.p)(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    };\n    var maxX = calcMax(0, startX, endX);\n    var maxY = calcMax(_helpersDataset.H, startY, endY);\n    var minX = calcMin(_helpersDataset.P, startX, endX);\n    var minY = calcMin(_helpersDataset.P + _helpersDataset.H, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {\n    ratioX: ratioX,\n    ratioY: ratioY,\n    offsetX: offsetX,\n    offsetY: offsetY\n  };\n}\nvar DoughnutController = exports.DoughnutController = /*#__PURE__*/function (_DatasetController3) {\n  function DoughnutController(chart, datasetIndex) {\n    var _this4;\n    (0, _classCallCheck2.default)(this, DoughnutController);\n    _this4 = _callSuper(this, DoughnutController, [chart, datasetIndex]);\n    _this4.enableOptionSharing = true;\n    _this4.innerRadius = undefined;\n    _this4.outerRadius = undefined;\n    _this4.offsetX = undefined;\n    _this4.offsetY = undefined;\n    return _this4;\n  }\n  (0, _inherits2.default)(DoughnutController, _DatasetController3);\n  return (0, _createClass2.default)(DoughnutController, [{\n    key: \"linkScales\",\n    value: function linkScales() {}\n  }, {\n    key: \"parse\",\n    value: function parse(start, count) {\n      var data = this.getDataset().data;\n      var meta = this._cachedMeta;\n      if (this._parsing === false) {\n        meta._parsed = data;\n      } else {\n        var getter = function getter(i) {\n          return +data[i];\n        };\n        if ((0, _helpersDataset.i)(data[start])) {\n          var _this$_parsing$key = this._parsing.key,\n            key = _this$_parsing$key === void 0 ? 'value' : _this$_parsing$key;\n          getter = function getter(i) {\n            return +(0, _helpersDataset.f)(data[i], key);\n          };\n        }\n        var i, ilen;\n        for (i = start, ilen = start + count; i < ilen; ++i) {\n          meta._parsed[i] = getter(i);\n        }\n      }\n    }\n  }, {\n    key: \"_getRotation\",\n    value: function _getRotation() {\n      return (0, _helpersDataset.t)(this.options.rotation - 90);\n    }\n  }, {\n    key: \"_getCircumference\",\n    value: function _getCircumference() {\n      return (0, _helpersDataset.t)(this.options.circumference);\n    }\n  }, {\n    key: \"_getRotationExtents\",\n    value: function _getRotationExtents() {\n      var min = _helpersDataset.T;\n      var max = -_helpersDataset.T;\n      for (var i = 0; i < this.chart.data.datasets.length; ++i) {\n        if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n          var controller = this.chart.getDatasetMeta(i).controller;\n          var rotation = controller._getRotation();\n          var circumference = controller._getCircumference();\n          min = Math.min(min, rotation);\n          max = Math.max(max, rotation + circumference);\n        }\n      }\n      return {\n        rotation: min,\n        circumference: max - min\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var chart = this.chart;\n      var chartArea = chart.chartArea;\n      var meta = this._cachedMeta;\n      var arcs = meta.data;\n      var spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n      var maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n      var cutout = Math.min((0, _helpersDataset.m)(this.options.cutout, maxSize), 1);\n      var chartWeight = this._getRingWeight(this.index);\n      var _this$_getRotationExt = this._getRotationExtents(),\n        circumference = _this$_getRotationExt.circumference,\n        rotation = _this$_getRotationExt.rotation;\n      var _getRatioAndOffset = getRatioAndOffset(rotation, circumference, cutout),\n        ratioX = _getRatioAndOffset.ratioX,\n        ratioY = _getRatioAndOffset.ratioY,\n        offsetX = _getRatioAndOffset.offsetX,\n        offsetY = _getRatioAndOffset.offsetY;\n      var maxWidth = (chartArea.width - spacing) / ratioX;\n      var maxHeight = (chartArea.height - spacing) / ratioY;\n      var maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n      var outerRadius = (0, _helpersDataset.n)(this.options.radius, maxRadius);\n      var innerRadius = Math.max(outerRadius * cutout, 0);\n      var radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n      this.offsetX = offsetX * outerRadius;\n      this.offsetY = offsetY * outerRadius;\n      meta.total = this.calculateTotal();\n      this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n      this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n      this.updateElements(arcs, 0, arcs.length, mode);\n    }\n  }, {\n    key: \"_circumference\",\n    value: function _circumference(i, reset) {\n      var opts = this.options;\n      var meta = this._cachedMeta;\n      var circumference = this._getCircumference();\n      if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n        return 0;\n      }\n      return this.calculateCircumference(meta._parsed[i] * circumference / _helpersDataset.T);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(arcs, start, count, mode) {\n      var reset = mode === 'reset';\n      var chart = this.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var animateScale = reset && animationOpts.animateScale;\n      var innerRadius = animateScale ? 0 : this.innerRadius;\n      var outerRadius = animateScale ? 0 : this.outerRadius;\n      var _this$_getSharedOptio3 = this._getSharedOptions(start, mode),\n        sharedOptions = _this$_getSharedOptio3.sharedOptions,\n        includeOptions = _this$_getSharedOptio3.includeOptions;\n      var startAngle = this._getRotation();\n      var i;\n      for (i = 0; i < start; ++i) {\n        startAngle += this._circumference(i, reset);\n      }\n      for (i = start; i < start + count; ++i) {\n        var circumference = this._circumference(i, reset);\n        var arc = arcs[i];\n        var properties = {\n          x: centerX + this.offsetX,\n          y: centerY + this.offsetY,\n          startAngle: startAngle,\n          endAngle: startAngle + circumference,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius\n        };\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n        }\n        startAngle += circumference;\n        this.updateElement(arc, i, properties, mode);\n      }\n    }\n  }, {\n    key: \"calculateTotal\",\n    value: function calculateTotal() {\n      var meta = this._cachedMeta;\n      var metaData = meta.data;\n      var total = 0;\n      var i;\n      for (i = 0; i < metaData.length; i++) {\n        var value = meta._parsed[i];\n        if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n          total += Math.abs(value);\n        }\n      }\n      return total;\n    }\n  }, {\n    key: \"calculateCircumference\",\n    value: function calculateCircumference(value) {\n      var total = this._cachedMeta.total;\n      if (total > 0 && !isNaN(value)) {\n        return _helpersDataset.T * (Math.abs(value) / total);\n      }\n      return 0;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var chart = this.chart;\n      var labels = chart.data.labels || [];\n      var value = (0, _helpersDataset.o)(meta._parsed[index], chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value: value\n      };\n    }\n  }, {\n    key: \"getMaxBorderWidth\",\n    value: function getMaxBorderWidth(arcs) {\n      var max = 0;\n      var chart = this.chart;\n      var i, ilen, meta, controller, options;\n      if (!arcs) {\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n            controller = meta.controller;\n            break;\n          }\n        }\n      }\n      if (!arcs) {\n        return 0;\n      }\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        options = controller.resolveDataElementOptions(i);\n        if (options.borderAlign !== 'inner') {\n          max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n        }\n      }\n      return max;\n    }\n  }, {\n    key: \"getMaxOffset\",\n    value: function getMaxOffset(arcs) {\n      var max = 0;\n      for (var i = 0, ilen = arcs.length; i < ilen; ++i) {\n        var options = this.resolveDataElementOptions(i);\n        max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n      }\n      return max;\n    }\n  }, {\n    key: \"_getRingWeightOffset\",\n    value: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n      return ringWeightOffset;\n    }\n  }, {\n    key: \"_getRingWeight\",\n    value: function _getRingWeight(datasetIndex) {\n      return Math.max((0, _helpersDataset.v)(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n  }, {\n    key: \"_getVisibleDatasetWeightTotal\",\n    value: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n  }]);\n}(DatasetController);\n(0, _defineProperty2.default)(DoughnutController, \"id\", 'doughnut');\n(0, _defineProperty2.default)(DoughnutController, \"defaults\", {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    }\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r'\n});\n(0, _defineProperty2.default)(DoughnutController, \"descriptors\", {\n  _scriptable: function _scriptable(name) {\n    return name !== 'spacing';\n  },\n  _indexable: function _indexable(name) {\n    return name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash');\n  }\n});\n(0, _defineProperty2.default)(DoughnutController, \"overrides\", {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            var _chart$legend$options2 = chart.legend.options.labels,\n              pointStyle = _chart$legend$options2.pointStyle,\n              color = _chart$legend$options2.color;\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                fontColor: color,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    }\n  }\n});\nvar LineController = exports.LineController = /*#__PURE__*/function (_DatasetController4) {\n  function LineController() {\n    (0, _classCallCheck2.default)(this, LineController);\n    return _callSuper(this, LineController, arguments);\n  }\n  (0, _inherits2.default)(LineController, _DatasetController4);\n  return (0, _createClass2.default)(LineController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n      this.supportsDecimation = true;\n      _superPropGet(LineController, \"initialize\", this, 3)([]);\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      var line = meta.dataset,\n        _meta$data = meta.data,\n        points = _meta$data === void 0 ? [] : _meta$data,\n        _dataset = meta._dataset;\n      var animationsDisabled = this.chart._animationsDisabled;\n      var _getStartAndCountOfVi = (0, _helpersDataset.q)(meta, points, animationsDisabled),\n        start = _getStartAndCountOfVi.start,\n        count = _getStartAndCountOfVi.count;\n      this._drawStart = start;\n      this._drawCount = count;\n      if ((0, _helpersDataset.w)(meta)) {\n        start = 0;\n        count = points.length;\n      }\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      var options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options: options\n      }, mode);\n      this.updateElements(points, start, count, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var reset = mode === 'reset';\n      var _this$_cachedMeta3 = this._cachedMeta,\n        iScale = _this$_cachedMeta3.iScale,\n        vScale = _this$_cachedMeta3.vScale,\n        _stacked = _this$_cachedMeta3._stacked,\n        _dataset = _this$_cachedMeta3._dataset;\n      var _this$_getSharedOptio4 = this._getSharedOptions(start, mode),\n        sharedOptions = _this$_getSharedOptio4.sharedOptions,\n        includeOptions = _this$_getSharedOptio4.includeOptions;\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      var _this$options2 = this.options,\n        spanGaps = _this$options2.spanGaps,\n        segment = _this$options2.segment;\n      var maxGapLength = (0, _helpersDataset.x)(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n      var directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n      var end = start + count;\n      var pointsCount = points.length;\n      var prevParsed = start > 0 && this.getParsed(start - 1);\n      for (var i = 0; i < pointsCount; ++i) {\n        var point = points[i];\n        var properties = directUpdate ? point : {};\n        if (i < start || i >= end) {\n          properties.skip = true;\n          continue;\n        }\n        var parsed = this.getParsed(i);\n        var nullData = (0, _helpersDataset.k)(parsed[vAxis]);\n        var iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n        var vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n        properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n        if (segment) {\n          properties.parsed = parsed;\n          properties.raw = _dataset.data[i];\n        }\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        }\n        if (!directUpdate) {\n          this.updateElement(point, i, properties, mode);\n        }\n        prevParsed = parsed;\n      }\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var meta = this._cachedMeta;\n      var dataset = meta.dataset;\n      var border = dataset.options && dataset.options.borderWidth || 0;\n      var data = meta.data || [];\n      if (!data.length) {\n        return border;\n      }\n      var firstPoint = data[0].size(this.resolveDataElementOptions(0));\n      var lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n      return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var meta = this._cachedMeta;\n      meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n      _superPropGet(LineController, \"draw\", this, 3)([]);\n    }\n  }]);\n}(DatasetController);\n(0, _defineProperty2.default)(LineController, \"id\", 'line');\n(0, _defineProperty2.default)(LineController, \"defaults\", {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false\n});\n(0, _defineProperty2.default)(LineController, \"overrides\", {\n  scales: {\n    _index_: {\n      type: 'category'\n    },\n    _value_: {\n      type: 'linear'\n    }\n  }\n});\nvar PolarAreaController = exports.PolarAreaController = /*#__PURE__*/function (_DatasetController5) {\n  function PolarAreaController(chart, datasetIndex) {\n    var _this5;\n    (0, _classCallCheck2.default)(this, PolarAreaController);\n    _this5 = _callSuper(this, PolarAreaController, [chart, datasetIndex]);\n    _this5.innerRadius = undefined;\n    _this5.outerRadius = undefined;\n    return _this5;\n  }\n  (0, _inherits2.default)(PolarAreaController, _DatasetController5);\n  return (0, _createClass2.default)(PolarAreaController, [{\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var chart = this.chart;\n      var labels = chart.data.labels || [];\n      var value = (0, _helpersDataset.o)(meta._parsed[index].r, chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value: value\n      };\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      return _helpersDataset.y.bind(this)(meta, data, start, count);\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var arcs = this._cachedMeta.data;\n      this._updateRadius();\n      this.updateElements(arcs, 0, arcs.length, mode);\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax() {\n      var _this6 = this;\n      var meta = this._cachedMeta;\n      var range = {\n        min: Number.POSITIVE_INFINITY,\n        max: Number.NEGATIVE_INFINITY\n      };\n      meta.data.forEach(function (element, index) {\n        var parsed = _this6.getParsed(index).r;\n        if (!isNaN(parsed) && _this6.chart.getDataVisibility(index)) {\n          if (parsed < range.min) {\n            range.min = parsed;\n          }\n          if (parsed > range.max) {\n            range.max = parsed;\n          }\n        }\n      });\n      return range;\n    }\n  }, {\n    key: \"_updateRadius\",\n    value: function _updateRadius() {\n      var chart = this.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      var outerRadius = Math.max(minSize / 2, 0);\n      var innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      var radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n      this.outerRadius = outerRadius - radiusLength * this.index;\n      this.innerRadius = this.outerRadius - radiusLength;\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(arcs, start, count, mode) {\n      var reset = mode === 'reset';\n      var chart = this.chart;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = this._cachedMeta.rScale;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter;\n      var datasetStartAngle = scale.getIndexAngle(0) - 0.5 * _helpersDataset.P;\n      var angle = datasetStartAngle;\n      var i;\n      var defaultAngle = 360 / this.countVisibleElements();\n      for (i = 0; i < start; ++i) {\n        angle += this._computeAngle(i, mode, defaultAngle);\n      }\n      for (i = start; i < start + count; i++) {\n        var arc = arcs[i];\n        var startAngle = angle;\n        var endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n        var outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n        angle = endAngle;\n        if (reset) {\n          if (animationOpts.animateScale) {\n            outerRadius = 0;\n          }\n          if (animationOpts.animateRotate) {\n            startAngle = endAngle = datasetStartAngle;\n          }\n        }\n        var properties = {\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: outerRadius,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n        };\n        this.updateElement(arc, i, properties, mode);\n      }\n    }\n  }, {\n    key: \"countVisibleElements\",\n    value: function countVisibleElements() {\n      var _this7 = this;\n      var meta = this._cachedMeta;\n      var count = 0;\n      meta.data.forEach(function (element, index) {\n        if (!isNaN(_this7.getParsed(index).r) && _this7.chart.getDataVisibility(index)) {\n          count++;\n        }\n      });\n      return count;\n    }\n  }, {\n    key: \"_computeAngle\",\n    value: function _computeAngle(index, mode, defaultAngle) {\n      return this.chart.getDataVisibility(index) ? (0, _helpersDataset.t)(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n  }]);\n}(DatasetController);\n(0, _defineProperty2.default)(PolarAreaController, \"id\", 'polarArea');\n(0, _defineProperty2.default)(PolarAreaController, \"defaults\", {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    }\n  },\n  indexAxis: 'r',\n  startAngle: 0\n});\n(0, _defineProperty2.default)(PolarAreaController, \"overrides\", {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            var _chart$legend$options3 = chart.legend.options.labels,\n              pointStyle = _chart$legend$options3.pointStyle,\n              color = _chart$legend$options3.color;\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                fontColor: color,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n});\nvar PieController = exports.PieController = /*#__PURE__*/function (_DoughnutController) {\n  function PieController() {\n    (0, _classCallCheck2.default)(this, PieController);\n    return _callSuper(this, PieController, arguments);\n  }\n  (0, _inherits2.default)(PieController, _DoughnutController);\n  return (0, _createClass2.default)(PieController);\n}(DoughnutController);\n(0, _defineProperty2.default)(PieController, \"id\", 'pie');\n(0, _defineProperty2.default)(PieController, \"defaults\", {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n});\nvar RadarController = exports.RadarController = /*#__PURE__*/function (_DatasetController6) {\n  function RadarController() {\n    (0, _classCallCheck2.default)(this, RadarController);\n    return _callSuper(this, RadarController, arguments);\n  }\n  (0, _inherits2.default)(RadarController, _DatasetController6);\n  return (0, _createClass2.default)(RadarController, [{\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var vScale = this._cachedMeta.vScale;\n      var parsed = this.getParsed(index);\n      return {\n        label: vScale.getLabels()[index],\n        value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n      };\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      return _helpersDataset.y.bind(this)(meta, data, start, count);\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var labels = meta.iScale.getLabels();\n      line.points = points;\n      if (mode !== 'resize') {\n        var options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n          options.borderWidth = 0;\n        }\n        var properties = {\n          _loop: true,\n          _fullLoop: labels.length === points.length,\n          options: options\n        };\n        this.updateElement(line, undefined, properties, mode);\n      }\n      this.updateElements(points, 0, points.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var scale = this._cachedMeta.rScale;\n      var reset = mode === 'reset';\n      for (var i = start; i < start + count; i++) {\n        var point = points[i];\n        var options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        var pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n        var x = reset ? scale.xCenter : pointPosition.x;\n        var y = reset ? scale.yCenter : pointPosition.y;\n        var properties = {\n          x: x,\n          y: y,\n          angle: pointPosition.angle,\n          skip: isNaN(x) || isNaN(y),\n          options: options\n        };\n        this.updateElement(point, i, properties, mode);\n      }\n    }\n  }]);\n}(DatasetController);\n(0, _defineProperty2.default)(RadarController, \"id\", 'radar');\n(0, _defineProperty2.default)(RadarController, \"defaults\", {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  }\n});\n(0, _defineProperty2.default)(RadarController, \"overrides\", {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear'\n    }\n  }\n});\nvar ScatterController = exports.ScatterController = /*#__PURE__*/function (_DatasetController7) {\n  function ScatterController() {\n    (0, _classCallCheck2.default)(this, ScatterController);\n    return _callSuper(this, ScatterController, arguments);\n  }\n  (0, _inherits2.default)(ScatterController, _DatasetController7);\n  return (0, _createClass2.default)(ScatterController, [{\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var labels = this.chart.data.labels || [];\n      var xScale = meta.xScale,\n        yScale = meta.yScale;\n      var parsed = this.getParsed(index);\n      var x = xScale.getLabelForValue(parsed.x);\n      var y = yScale.getLabelForValue(parsed.y);\n      return {\n        label: labels[index] || '',\n        value: '(' + x + ', ' + y + ')'\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      var _meta$data2 = meta.data,\n        points = _meta$data2 === void 0 ? [] : _meta$data2;\n      var animationsDisabled = this.chart._animationsDisabled;\n      var _getStartAndCountOfVi2 = (0, _helpersDataset.q)(meta, points, animationsDisabled),\n        start = _getStartAndCountOfVi2.start,\n        count = _getStartAndCountOfVi2.count;\n      this._drawStart = start;\n      this._drawCount = count;\n      if ((0, _helpersDataset.w)(meta)) {\n        start = 0;\n        count = points.length;\n      }\n      if (this.options.showLine) {\n        if (!this.datasetElementType) {\n          this.addElements();\n        }\n        var line = meta.dataset,\n          _dataset = meta._dataset;\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        var options = this.resolveDatasetElementOptions(mode);\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n          animated: !animationsDisabled,\n          options: options\n        }, mode);\n      } else if (this.datasetElementType) {\n        delete meta.dataset;\n        this.datasetElementType = false;\n      }\n      this.updateElements(points, start, count, mode);\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      var showLine = this.options.showLine;\n      if (!this.datasetElementType && showLine) {\n        this.datasetElementType = this.chart.registry.getElement('line');\n      }\n      _superPropGet(ScatterController, \"addElements\", this, 3)([]);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var reset = mode === 'reset';\n      var _this$_cachedMeta4 = this._cachedMeta,\n        iScale = _this$_cachedMeta4.iScale,\n        vScale = _this$_cachedMeta4.vScale,\n        _stacked = _this$_cachedMeta4._stacked,\n        _dataset = _this$_cachedMeta4._dataset;\n      var firstOpts = this.resolveDataElementOptions(start, mode);\n      var sharedOptions = this.getSharedOptions(firstOpts);\n      var includeOptions = this.includeOptions(mode, sharedOptions);\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      var _this$options3 = this.options,\n        spanGaps = _this$options3.spanGaps,\n        segment = _this$options3.segment;\n      var maxGapLength = (0, _helpersDataset.x)(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n      var directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n      var prevParsed = start > 0 && this.getParsed(start - 1);\n      for (var i = start; i < start + count; ++i) {\n        var point = points[i];\n        var parsed = this.getParsed(i);\n        var properties = directUpdate ? point : {};\n        var nullData = (0, _helpersDataset.k)(parsed[vAxis]);\n        var iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n        var vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n        properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n        if (segment) {\n          properties.parsed = parsed;\n          properties.raw = _dataset.data[i];\n        }\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        }\n        if (!directUpdate) {\n          this.updateElement(point, i, properties, mode);\n        }\n        prevParsed = parsed;\n      }\n      this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var meta = this._cachedMeta;\n      var data = meta.data || [];\n      if (!this.options.showLine) {\n        var max = 0;\n        for (var i = data.length - 1; i >= 0; --i) {\n          max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n      }\n      var dataset = meta.dataset;\n      var border = dataset.options && dataset.options.borderWidth || 0;\n      if (!data.length) {\n        return border;\n      }\n      var firstPoint = data[0].size(this.resolveDataElementOptions(0));\n      var lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n      return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n  }]);\n}(DatasetController);\n(0, _defineProperty2.default)(ScatterController, \"id\", 'scatter');\n(0, _defineProperty2.default)(ScatterController, \"defaults\", {\n  datasetElementType: false,\n  dataElementType: 'point',\n  showLine: false,\n  fill: false\n});\n(0, _defineProperty2.default)(ScatterController, \"overrides\", {\n  interaction: {\n    mode: 'point'\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n});\nvar controllers = exports.controllers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  BarController: BarController,\n  BubbleController: BubbleController,\n  DoughnutController: DoughnutController,\n  LineController: LineController,\n  PieController: PieController,\n  PolarAreaController: PolarAreaController,\n  RadarController: RadarController,\n  ScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nvar DateAdapterBase = /*#__PURE__*/function () {\n  function DateAdapterBase(options) {\n    (0, _classCallCheck2.default)(this, DateAdapterBase);\n    (0, _defineProperty2.default)(this, \"options\", void 0);\n    this.options = options || {};\n  }\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  return (0, _createClass2.default)(DateAdapterBase, [{\n    key: \"init\",\n    value: function init() {}\n  }, {\n    key: \"formats\",\n    value: function formats() {\n      return abstract();\n    }\n  }, {\n    key: \"parse\",\n    value: function parse() {\n      return abstract();\n    }\n  }, {\n    key: \"format\",\n    value: function format() {\n      return abstract();\n    }\n  }, {\n    key: \"add\",\n    value: function add() {\n      return abstract();\n    }\n  }, {\n    key: \"diff\",\n    value: function diff() {\n      return abstract();\n    }\n  }, {\n    key: \"startOf\",\n    value: function startOf() {\n      return abstract();\n    }\n  }, {\n    key: \"endOf\",\n    value: function endOf() {\n      return abstract();\n    }\n  }], [{\n    key: \"override\",\n    value:\n    /**\n    * Override default date adapter methods.\n    * Accepts type parameter to define options type.\n    * @example\n    * Chart._adapters._date.override<{myAdapterOption: string}>({\n    *   init() {\n    *     console.log(this.options.myAdapterOption);\n    *   }\n    * })\n    */\n    function override(members) {\n      Object.assign(DateAdapterBase.prototype, members);\n    }\n  }]);\n}();\nvar adapters = exports._adapters = {\n  _date: DateAdapterBase\n};\nfunction binarySearch(metaset, axis, value, intersect) {\n  var controller = metaset.controller,\n    data = metaset.data,\n    _sorted = metaset._sorted;\n  var iScale = controller._cachedMeta.iScale;\n  var spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    var lookupMethod = iScale._reversePixels ? _helpersDataset.A : _helpersDataset.B;\n    if (!intersect) {\n      var result = lookupMethod(data, axis, value);\n      if (spanGaps) {\n        var vScale = controller._cachedMeta.vScale;\n        var _parsed = metaset._parsed;\n        var distanceToDefinedLo = _parsed.slice(0, result.lo + 1).reverse().findIndex(function (point) {\n          return !(0, _helpersDataset.k)(point[vScale.axis]);\n        });\n        result.lo -= Math.max(0, distanceToDefinedLo);\n        var distanceToDefinedHi = _parsed.slice(result.hi).findIndex(function (point) {\n          return !(0, _helpersDataset.k)(point[vScale.axis]);\n        });\n        result.hi += Math.max(0, distanceToDefinedHi);\n      }\n      return result;\n    } else if (controller._sharedOptions) {\n      var el = data[0];\n      var range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        var start = lookupMethod(data, axis, value - range);\n        var end = lookupMethod(data, axis, value + range);\n        return {\n          lo: start.lo,\n          hi: end.hi\n        };\n      }\n    }\n  }\n  return {\n    lo: 0,\n    hi: data.length - 1\n  };\n}\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  var metasets = chart.getSortedVisibleDatasetMetas();\n  var value = position[axis];\n  for (var i = 0, ilen = metasets.length; i < ilen; ++i) {\n    var _metasets$i = metasets[i],\n      _index2 = _metasets$i.index,\n      data = _metasets$i.data;\n    var _binarySearch = binarySearch(metasets[i], axis, value, intersect),\n      lo = _binarySearch.lo,\n      hi = _binarySearch.hi;\n    for (var j = lo; j <= hi; ++j) {\n      var element = data[j];\n      if (!element.skip) {\n        handler(element, _index2, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  var useX = axis.indexOf('x') !== -1;\n  var useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  var items = [];\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n  var evaluationFunc = function evaluationFunc(element, datasetIndex, index) {\n    if (!includeInvisible && !(0, _helpersDataset.C)(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  };\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  var items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    var _element$getProps = element.getProps(['startAngle', 'endAngle'], useFinalPosition),\n      startAngle = _element$getProps.startAngle,\n      endAngle = _element$getProps.endAngle;\n    var _getAngleFromPoint = (0, _helpersDataset.D)(element, {\n        x: position.x,\n        y: position.y\n      }),\n      angle = _getAngleFromPoint.angle;\n    if ((0, _helpersDataset.p)(angle, startAngle, endAngle)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  var items = [];\n  var distanceMetric = getDistanceMetricForAxis(axis);\n  var minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    var inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    var center = element.getCenterPoint(useFinalPosition);\n    var pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    var distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      }];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n  return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  var items = [];\n  var rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  var intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, function (element, datasetIndex, index) {\n    if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = exports.Interaction = {\n  evaluateInteractionItems: evaluateInteractionItems,\n  modes: {\n    index: function index(chart, e, options, useFinalPosition) {\n      var position = (0, _helpersDataset.z)(e, chart);\n      var axis = options.axis || 'x';\n      var includeInvisible = options.includeInvisible || false;\n      var items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      var elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach(function (meta) {\n        var index = items[0].index;\n        var element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({\n            element: element,\n            datasetIndex: meta.index,\n            index: index\n          });\n        }\n      });\n      return elements;\n    },\n    dataset: function dataset(chart, e, options, useFinalPosition) {\n      var position = (0, _helpersDataset.z)(e, chart);\n      var axis = options.axis || 'xy';\n      var includeInvisible = options.includeInvisible || false;\n      var items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      if (items.length > 0) {\n        var datasetIndex = items[0].datasetIndex;\n        var data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (var i = 0; i < data.length; ++i) {\n          items.push({\n            element: data[i],\n            datasetIndex: datasetIndex,\n            index: i\n          });\n        }\n      }\n      return items;\n    },\n    point: function point(chart, e, options, useFinalPosition) {\n      var position = (0, _helpersDataset.z)(e, chart);\n      var axis = options.axis || 'xy';\n      var includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest: function nearest(chart, e, options, useFinalPosition) {\n      var position = (0, _helpersDataset.z)(e, chart);\n      var axis = options.axis || 'xy';\n      var includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x: function x(chart, e, options, useFinalPosition) {\n      var position = (0, _helpersDataset.z)(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y: function y(chart, e, options, useFinalPosition) {\n      var position = (0, _helpersDataset.z)(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\nvar STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(function (v) {\n    return v.pos === position;\n  });\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(function (v) {\n    return STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis;\n  });\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort(function (a, b) {\n    var v0 = reverse ? b : a;\n    var v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  var layoutBoxes = [];\n  var i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    var _box = box;\n    pos = _box.position;\n    var _box$options = _box.options;\n    stack = _box$options.stack;\n    var _box$options$stackWei = _box$options.stackWeight;\n    stackWeight = _box$options$stackWei === void 0 ? 1 : _box$options$stackWei;\n    layoutBoxes.push({\n      index: i,\n      box: box,\n      pos: pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && pos + stack,\n      stackWeight: stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  var stacks = {};\n  var _iterator5 = _createForOfIteratorHelper(layouts),\n    _step5;\n  try {\n    for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n      var wrap = _step5.value;\n      var stack = wrap.stack,\n        pos = wrap.pos,\n        stackWeight = wrap.stackWeight;\n      if (!stack || !STATIC_POSITIONS.includes(pos)) {\n        continue;\n      }\n      var _stack = stacks[stack] || (stacks[stack] = {\n        count: 0,\n        placed: 0,\n        weight: 0,\n        size: 0\n      });\n      _stack.count++;\n      _stack.weight += stackWeight;\n    }\n  } catch (err) {\n    _iterator5.e(err);\n  } finally {\n    _iterator5.f();\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  var stacks = buildStacks(layouts);\n  var vBoxMaxWidth = params.vBoxMaxWidth,\n    hBoxMaxHeight = params.hBoxMaxHeight;\n  var i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    var fullSize = layout.box.fullSize;\n    var stack = stacks[layout.stack];\n    var factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  var layoutBoxes = wrapBoxes(boxes);\n  var fullSize = sortByWeight(layoutBoxes.filter(function (wrap) {\n    return wrap.box.fullSize;\n  }), true);\n  var left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  var right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  var top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  var bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  var centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  var centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize: fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  var pos = layout.pos,\n    box = layout.box;\n  var maxPadding = chartArea.maxPadding;\n  if (!(0, _helpersDataset.i)(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    var stack = stacks[layout.stack] || {\n      size: 0,\n      count: 1\n    };\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  var newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  var newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  var widthChanged = newWidth !== chartArea.w;\n  var heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal ? {\n    same: widthChanged,\n    other: heightChanged\n  } : {\n    same: heightChanged,\n    other: widthChanged\n  };\n}\nfunction handleMaxPadding(chartArea) {\n  var maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    var change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  var maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    var margin = {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n    positions.forEach(function (pos) {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  var refitBoxes = [];\n  var i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n    var _updateDims = updateDims(chartArea, params, layout, stacks),\n      same = _updateDims.same,\n      other = _updateDims.other;\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  var userPadding = params.padding;\n  var x = chartArea.x,\n    y = chartArea.y;\n  var _iterator6 = _createForOfIteratorHelper(boxes),\n    _step6;\n  try {\n    for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n      var layout = _step6.value;\n      var box = layout.box;\n      var stack = stacks[layout.stack] || {\n        count: 1,\n        placed: 0,\n        weight: 1\n      };\n      var weight = layout.stackWeight / stack.weight || 1;\n      if (layout.horizontal) {\n        var width = chartArea.w * weight;\n        var height = stack.size || box.height;\n        if ((0, _helpersDataset.h)(stack.start)) {\n          y = stack.start;\n        }\n        if (box.fullSize) {\n          setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n        } else {\n          setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n        }\n        stack.start = y;\n        stack.placed += width;\n        y = box.bottom;\n      } else {\n        var _height = chartArea.h * weight;\n        var _width = stack.size || box.width;\n        if ((0, _helpersDataset.h)(stack.start)) {\n          x = stack.start;\n        }\n        if (box.fullSize) {\n          setBoxDims(box, x, userPadding.top, _width, params.outerHeight - userPadding.bottom - userPadding.top);\n        } else {\n          setBoxDims(box, x, chartArea.top + stack.placed, _width, _height);\n        }\n        stack.start = x;\n        stack.placed += _height;\n        x = box.right;\n      }\n    }\n  } catch (err) {\n    _iterator6.e(err);\n  } finally {\n    _iterator6.f();\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\nvar layouts = exports.layouts = {\n  addBox: function addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function () {\n      return [{\n        z: 0,\n        draw: function draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox: function removeBox(chart, layoutItem) {\n    var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure: function configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update: function update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    var padding = (0, _helpersDataset.E)(chart.options.layout.padding);\n    var availableWidth = Math.max(width - padding.width, 0);\n    var availableHeight = Math.max(height - padding.height, 0);\n    var boxes = buildLayoutBoxes(chart.boxes);\n    var verticalBoxes = boxes.vertical;\n    var horizontalBoxes = boxes.horizontal;\n    (0, _helpersDataset.F)(chart.boxes, function (box) {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    var visibleVerticalBoxCount = verticalBoxes.reduce(function (total, wrap) {\n      return wrap.box.options && wrap.box.options.display === false ? total : total + 1;\n    }, 0) || 1;\n    var params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding: padding,\n      availableWidth: availableWidth,\n      availableHeight: availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    var maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, (0, _helpersDataset.E)(minPadding));\n    var chartArea = Object.assign({\n      maxPadding: maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    var stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w\n    };\n    (0, _helpersDataset.F)(boxes.chartArea, function (layout) {\n      var box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0\n      });\n    });\n  }\n};\nvar BasePlatform = exports.BasePlatform = /*#__PURE__*/function () {\n  function BasePlatform() {\n    (0, _classCallCheck2.default)(this, BasePlatform);\n  }\n  return (0, _createClass2.default)(BasePlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(canvas, aspectRatio) {}\n  }, {\n    key: \"releaseContext\",\n    value: function releaseContext(context) {\n      return false;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(chart, type, listener) {}\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(chart, type, listener) {}\n  }, {\n    key: \"getDevicePixelRatio\",\n    value: function getDevicePixelRatio() {\n      return 1;\n    }\n  }, {\n    key: \"getMaximumSize\",\n    value: function getMaximumSize(element, width, height, aspectRatio) {\n      width = Math.max(0, width || element.width);\n      height = height || element.height;\n      return {\n        width: width,\n        height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n      };\n    }\n  }, {\n    key: \"isAttached\",\n    value: function isAttached(canvas) {\n      return true;\n    }\n  }, {\n    key: \"updateConfig\",\n    value: function updateConfig(config) {}\n  }]);\n}();\nvar BasicPlatform = exports.BasicPlatform = /*#__PURE__*/function (_BasePlatform) {\n  function BasicPlatform() {\n    (0, _classCallCheck2.default)(this, BasicPlatform);\n    return _callSuper(this, BasicPlatform, arguments);\n  }\n  (0, _inherits2.default)(BasicPlatform, _BasePlatform);\n  return (0, _createClass2.default)(BasicPlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(item) {\n      return item && item.getContext && item.getContext('2d') || null;\n    }\n  }, {\n    key: \"updateConfig\",\n    value: function updateConfig(config) {\n      config.options.animation = false;\n    }\n  }]);\n}(BasePlatform);\nvar EXPANDO_KEY = '$chartjs';\nvar EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nvar isNullOrEmpty = function isNullOrEmpty(value) {\n  return value === null || value === '';\n};\nfunction initCanvas(canvas, aspectRatio) {\n  var style = canvas.style;\n  var renderHeight = canvas.getAttribute('height');\n  var renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    var displayWidth = (0, _helpersDataset.J)(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      var displayHeight = (0, _helpersDataset.J)(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nvar eventListenerOptions = _helpersDataset.K ? {\n  passive: true\n} : false;\nfunction addListener(node, type, listener) {\n  if (node) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n}\nfunction removeListener(chart, type, listener) {\n  if (chart && chart.canvas) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n}\nfunction fromNativeEvent(event, chart) {\n  var type = EVENT_TYPES[event.type] || event.type;\n  var _getRelativePosition = (0, _helpersDataset.z)(event, chart),\n    x = _getRelativePosition.x,\n    y = _getRelativePosition.y;\n  return {\n    type: type,\n    chart: chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  var _iterator7 = _createForOfIteratorHelper(nodeList),\n    _step7;\n  try {\n    for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n      var node = _step7.value;\n      if (node === canvas || node.contains(canvas)) {\n        return true;\n      }\n    }\n  } catch (err) {\n    _iterator7.e(err);\n  } finally {\n    _iterator7.f();\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n  var observer = new MutationObserver(function (entries) {\n    var trigger = false;\n    var _iterator8 = _createForOfIteratorHelper(entries),\n      _step8;\n    try {\n      for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n        var entry = _step8.value;\n        trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n        trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n      }\n    } catch (err) {\n      _iterator8.e(err);\n    } finally {\n      _iterator8.f();\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n  var observer = new MutationObserver(function (entries) {\n    var trigger = false;\n    var _iterator9 = _createForOfIteratorHelper(entries),\n      _step9;\n    try {\n      for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n        var entry = _step9.value;\n        trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n        trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n      }\n    } catch (err) {\n      _iterator9.e(err);\n    } finally {\n      _iterator9.f();\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\nvar drpListeningCharts = new Map();\nvar oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  var dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach(function (resize, chart) {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n  var container = canvas && (0, _helpersDataset.I)(canvas);\n  if (!container) {\n    return;\n  }\n  var resize = (0, _helpersDataset.L)(function (width, height) {\n    var w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  var observer = new ResizeObserver(function (entries) {\n    var entry = entries[0];\n    var width = entry.contentRect.width;\n    var height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  var canvas = chart.canvas;\n  var proxy = (0, _helpersDataset.L)(function (event) {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nvar DomPlatform = exports.DomPlatform = /*#__PURE__*/function (_BasePlatform2) {\n  function DomPlatform() {\n    (0, _classCallCheck2.default)(this, DomPlatform);\n    return _callSuper(this, DomPlatform, arguments);\n  }\n  (0, _inherits2.default)(DomPlatform, _BasePlatform2);\n  return (0, _createClass2.default)(DomPlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(canvas, aspectRatio) {\n      var context = canvas && canvas.getContext && canvas.getContext('2d');\n      if (context && context.canvas === canvas) {\n        initCanvas(canvas, aspectRatio);\n        return context;\n      }\n      return null;\n    }\n  }, {\n    key: \"releaseContext\",\n    value: function releaseContext(context) {\n      var canvas = context.canvas;\n      if (!canvas[EXPANDO_KEY]) {\n        return false;\n      }\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n        if ((0, _helpersDataset.k)(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      var style = initial.style || {};\n      Object.keys(style).forEach(function (key) {\n        canvas.style[key] = style[key];\n      });\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n      return true;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(chart, type, listener) {\n      this.removeEventListener(chart, type);\n      var proxies = chart.$proxies || (chart.$proxies = {});\n      var handlers = {\n        attach: createAttachObserver,\n        detach: createDetachObserver,\n        resize: createResizeObserver\n      };\n      var handler = handlers[type] || createProxyAndListen;\n      proxies[type] = handler(chart, type, listener);\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(chart, type) {\n      var proxies = chart.$proxies || (chart.$proxies = {});\n      var proxy = proxies[type];\n      if (!proxy) {\n        return;\n      }\n      var handlers = {\n        attach: releaseObserver,\n        detach: releaseObserver,\n        resize: releaseObserver\n      };\n      var handler = handlers[type] || removeListener;\n      handler(chart, type, proxy);\n      proxies[type] = undefined;\n    }\n  }, {\n    key: \"getDevicePixelRatio\",\n    value: function getDevicePixelRatio() {\n      return window.devicePixelRatio;\n    }\n  }, {\n    key: \"getMaximumSize\",\n    value: function getMaximumSize(canvas, width, height, aspectRatio) {\n      return (0, _helpersDataset.G)(canvas, width, height, aspectRatio);\n    }\n  }, {\n    key: \"isAttached\",\n    value: function isAttached(canvas) {\n      var container = canvas && (0, _helpersDataset.I)(canvas);\n      return !!(container && container.isConnected);\n    }\n  }]);\n}(BasePlatform);\nfunction _detectPlatform(canvas) {\n  if (!(0, _helpersDataset.M)() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\nvar Element = exports.Element = /*#__PURE__*/function () {\n  function Element() {\n    (0, _classCallCheck2.default)(this, Element);\n    (0, _defineProperty2.default)(this, \"x\", void 0);\n    (0, _defineProperty2.default)(this, \"y\", void 0);\n    (0, _defineProperty2.default)(this, \"active\", false);\n    (0, _defineProperty2.default)(this, \"options\", void 0);\n    (0, _defineProperty2.default)(this, \"$animations\", void 0);\n  }\n  return (0, _createClass2.default)(Element, [{\n    key: \"tooltipPosition\",\n    value: function tooltipPosition(useFinalPosition) {\n      var _this$getProps = this.getProps(['x', 'y'], useFinalPosition),\n        x = _this$getProps.x,\n        y = _this$getProps.y;\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }, {\n    key: \"hasValue\",\n    value: function hasValue() {\n      return (0, _helpersDataset.x)(this.x) && (0, _helpersDataset.x)(this.y);\n    }\n  }, {\n    key: \"getProps\",\n    value: function getProps(props, final) {\n      var _this8 = this;\n      var anims = this.$animations;\n      if (!final || !anims) {\n        // let's not create an object, if not needed\n        return this;\n      }\n      var ret = {};\n      props.forEach(function (prop) {\n        ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : _this8[prop];\n      });\n      return ret;\n    }\n  }]);\n}();\n(0, _defineProperty2.default)(Element, \"defaults\", {});\n(0, _defineProperty2.default)(Element, \"defaultRoutes\", undefined);\nfunction autoSkip(scale, ticks) {\n  var tickOpts = scale.options.ticks;\n  var determinedMaxTicks = determineMaxTicks(scale);\n  var ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  var majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  var numMajorIndices = majorIndices.length;\n  var first = majorIndices[0];\n  var last = majorIndices[numMajorIndices - 1];\n  var newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  var spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    var i, ilen;\n    var avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, (0, _helpersDataset.k)(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, (0, _helpersDataset.k)(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  var offset = scale.options.offset;\n  var tickLength = scale._tickSize();\n  var maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  var maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  var evenMajorSpacing = getEvenSpacing(majorIndices);\n  var spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  var factors = (0, _helpersDataset.N)(evenMajorSpacing);\n  for (var i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    var factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  var result = [];\n  var i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  var count = 0;\n  var next = majorIndices[0];\n  var i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  var start = (0, _helpersDataset.v)(majorStart, 0);\n  var end = Math.min((0, _helpersDataset.v)(majorEnd, ticks.length), ticks.length);\n  var count = 0;\n  var length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  var len = arr.length;\n  var i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\nvar reverseAlign = function reverseAlign(align) {\n  return align === 'left' ? 'right' : align === 'right' ? 'left' : align;\n};\nvar offsetFromEdge = function offsetFromEdge(scale, edge, offset) {\n  return edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n};\nvar getTicksLimit = function getTicksLimit(ticksLength, maxTicksLimit) {\n  return Math.min(maxTicksLimit || ticksLength, ticksLength);\n};\nfunction sample(arr, numItems) {\n  var result = [];\n  var increment = arr.length / numItems;\n  var len = arr.length;\n  var i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  var length = scale.ticks.length;\n  var validIndex = Math.min(index, length - 1);\n  var start = scale._startPixel;\n  var end = scale._endPixel;\n  var epsilon = 1e-6;\n  var lineValue = scale.getPixelForTick(validIndex);\n  var offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  (0, _helpersDataset.F)(caches, function (cache) {\n    var gc = cache.gc;\n    var gcLen = gc.length / 2;\n    var i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  var font = (0, _helpersDataset.a0)(options.font, fallback);\n  var padding = (0, _helpersDataset.E)(options.padding);\n  var lines = (0, _helpersDataset.b)(options.text) ? options.text.length : 1;\n  return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return (0, _helpersDataset.j)(parent, {\n    scale: scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return (0, _helpersDataset.j)(parent, {\n    tick: tick,\n    index: index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  var ret = (0, _helpersDataset.a1)(align);\n  if (reverse && position !== 'right' || !reverse && position === 'right') {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  var top = scale.top,\n    left = scale.left,\n    bottom = scale.bottom,\n    right = scale.right,\n    chart = scale.chart;\n  var chartArea = chart.chartArea,\n    scales = chart.scales;\n  var rotation = 0;\n  var maxWidth, titleX, titleY;\n  var height = bottom - top;\n  var width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = (0, _helpersDataset.a2)(align, left, right);\n    if ((0, _helpersDataset.i)(position)) {\n      var positionAxisID = Object.keys(position)[0];\n      var value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if ((0, _helpersDataset.i)(position)) {\n      var _positionAxisID = Object.keys(position)[0];\n      var _value = position[_positionAxisID];\n      titleX = scales[_positionAxisID].getPixelForValue(_value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = (0, _helpersDataset.a2)(align, bottom, top);\n    rotation = position === 'left' ? -_helpersDataset.H : _helpersDataset.H;\n  }\n  return {\n    titleX: titleX,\n    titleY: titleY,\n    maxWidth: maxWidth,\n    rotation: rotation\n  };\n}\nvar Scale = exports.Scale = /*#__PURE__*/function (_Element) {\n  function Scale(cfg) {\n    var _this9;\n    (0, _classCallCheck2.default)(this, Scale);\n    _this9 = _callSuper(this, Scale);\n    _this9.id = cfg.id;\n    _this9.type = cfg.type;\n    _this9.options = undefined;\n    _this9.ctx = cfg.ctx;\n    _this9.chart = cfg.chart;\n    _this9.top = undefined;\n    _this9.bottom = undefined;\n    _this9.left = undefined;\n    _this9.right = undefined;\n    _this9.width = undefined;\n    _this9.height = undefined;\n    _this9._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    _this9.maxWidth = undefined;\n    _this9.maxHeight = undefined;\n    _this9.paddingTop = undefined;\n    _this9.paddingBottom = undefined;\n    _this9.paddingLeft = undefined;\n    _this9.paddingRight = undefined;\n    _this9.axis = undefined;\n    _this9.labelRotation = undefined;\n    _this9.min = undefined;\n    _this9.max = undefined;\n    _this9._range = undefined;\n    _this9.ticks = [];\n    _this9._gridLineItems = null;\n    _this9._labelItems = null;\n    _this9._labelSizes = null;\n    _this9._length = 0;\n    _this9._maxLength = 0;\n    _this9._longestTextCache = {};\n    _this9._startPixel = undefined;\n    _this9._endPixel = undefined;\n    _this9._reversePixels = false;\n    _this9._userMax = undefined;\n    _this9._userMin = undefined;\n    _this9._suggestedMax = undefined;\n    _this9._suggestedMin = undefined;\n    _this9._ticksLength = 0;\n    _this9._borderValue = 0;\n    _this9._cache = {};\n    _this9._dataLimitsCached = false;\n    _this9.$context = undefined;\n    return _this9;\n  }\n  (0, _inherits2.default)(Scale, _Element);\n  return (0, _createClass2.default)(Scale, [{\n    key: \"init\",\n    value: function init(options) {\n      this.options = options.setContext(this.getContext());\n      this.axis = options.axis;\n      this._userMin = this.parse(options.min);\n      this._userMax = this.parse(options.max);\n      this._suggestedMin = this.parse(options.suggestedMin);\n      this._suggestedMax = this.parse(options.suggestedMax);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      return raw;\n    }\n  }, {\n    key: \"getUserBounds\",\n    value: function getUserBounds() {\n      var _userMin = this._userMin,\n        _userMax = this._userMax,\n        _suggestedMin = this._suggestedMin,\n        _suggestedMax = this._suggestedMax;\n      _userMin = (0, _helpersDataset.O)(_userMin, Number.POSITIVE_INFINITY);\n      _userMax = (0, _helpersDataset.O)(_userMax, Number.NEGATIVE_INFINITY);\n      _suggestedMin = (0, _helpersDataset.O)(_suggestedMin, Number.POSITIVE_INFINITY);\n      _suggestedMax = (0, _helpersDataset.O)(_suggestedMax, Number.NEGATIVE_INFINITY);\n      return {\n        min: (0, _helpersDataset.O)(_userMin, _suggestedMin),\n        max: (0, _helpersDataset.O)(_userMax, _suggestedMax),\n        minDefined: (0, _helpersDataset.g)(_userMin),\n        maxDefined: (0, _helpersDataset.g)(_userMax)\n      };\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax(canStack) {\n      var _this$getUserBounds = this.getUserBounds(),\n        min = _this$getUserBounds.min,\n        max = _this$getUserBounds.max,\n        minDefined = _this$getUserBounds.minDefined,\n        maxDefined = _this$getUserBounds.maxDefined;\n      var range;\n      if (minDefined && maxDefined) {\n        return {\n          min: min,\n          max: max\n        };\n      }\n      var metas = this.getMatchingVisibleMetas();\n      for (var i = 0, ilen = metas.length; i < ilen; ++i) {\n        range = metas[i].controller.getMinMax(this, canStack);\n        if (!minDefined) {\n          min = Math.min(min, range.min);\n        }\n        if (!maxDefined) {\n          max = Math.max(max, range.max);\n        }\n      }\n      min = maxDefined && min > max ? max : min;\n      max = minDefined && min > max ? min : max;\n      return {\n        min: (0, _helpersDataset.O)(min, (0, _helpersDataset.O)(max, min)),\n        max: (0, _helpersDataset.O)(max, (0, _helpersDataset.O)(min, max))\n      };\n    }\n  }, {\n    key: \"getPadding\",\n    value: function getPadding() {\n      return {\n        left: this.paddingLeft || 0,\n        top: this.paddingTop || 0,\n        right: this.paddingRight || 0,\n        bottom: this.paddingBottom || 0\n      };\n    }\n  }, {\n    key: \"getTicks\",\n    value: function getTicks() {\n      return this.ticks;\n    }\n  }, {\n    key: \"getLabels\",\n    value: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n  }, {\n    key: \"getLabelItems\",\n    value: function getLabelItems() {\n      var chartArea = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.chart.chartArea;\n      var items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n      return items;\n    }\n  }, {\n    key: \"beforeLayout\",\n    value: function beforeLayout() {\n      this._cache = {};\n      this._dataLimitsCached = false;\n    }\n  }, {\n    key: \"beforeUpdate\",\n    value: function beforeUpdate() {\n      (0, _helpersDataset.Q)(this.options.beforeUpdate, [this]);\n    }\n  }, {\n    key: \"update\",\n    value: function update(maxWidth, maxHeight, margins) {\n      var _this$options4 = this.options,\n        beginAtZero = _this$options4.beginAtZero,\n        grace = _this$options4.grace,\n        tickOpts = _this$options4.ticks;\n      var sampleSize = tickOpts.sampleSize;\n      this.beforeUpdate();\n      this.maxWidth = maxWidth;\n      this.maxHeight = maxHeight;\n      this._margins = margins = Object.assign({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      this.ticks = null;\n      this._labelSizes = null;\n      this._gridLineItems = null;\n      this._labelItems = null;\n      this.beforeSetDimensions();\n      this.setDimensions();\n      this.afterSetDimensions();\n      this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n      if (!this._dataLimitsCached) {\n        this.beforeDataLimits();\n        this.determineDataLimits();\n        this.afterDataLimits();\n        this._range = (0, _helpersDataset.R)(this, grace, beginAtZero);\n        this._dataLimitsCached = true;\n      }\n      this.beforeBuildTicks();\n      this.ticks = this.buildTicks() || [];\n      this.afterBuildTicks();\n      var samplingEnabled = sampleSize < this.ticks.length;\n      this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n      this.configure();\n      this.beforeCalculateLabelRotation();\n      this.calculateLabelRotation();\n      this.afterCalculateLabelRotation();\n      if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n        this.ticks = autoSkip(this, this.ticks);\n        this._labelSizes = null;\n        this.afterAutoSkip();\n      }\n      if (samplingEnabled) {\n        this._convertTicksToLabels(this.ticks);\n      }\n      this.beforeFit();\n      this.fit();\n      this.afterFit();\n      this.afterUpdate();\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var reversePixels = this.options.reverse;\n      var startPixel, endPixel;\n      if (this.isHorizontal()) {\n        startPixel = this.left;\n        endPixel = this.right;\n      } else {\n        startPixel = this.top;\n        endPixel = this.bottom;\n        reversePixels = !reversePixels;\n      }\n      this._startPixel = startPixel;\n      this._endPixel = endPixel;\n      this._reversePixels = reversePixels;\n      this._length = endPixel - startPixel;\n      this._alignToPixels = this.options.alignToPixels;\n    }\n  }, {\n    key: \"afterUpdate\",\n    value: function afterUpdate() {\n      (0, _helpersDataset.Q)(this.options.afterUpdate, [this]);\n    }\n  }, {\n    key: \"beforeSetDimensions\",\n    value: function beforeSetDimensions() {\n      (0, _helpersDataset.Q)(this.options.beforeSetDimensions, [this]);\n    }\n  }, {\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      if (this.isHorizontal()) {\n        this.width = this.maxWidth;\n        this.left = 0;\n        this.right = this.width;\n      } else {\n        this.height = this.maxHeight;\n        this.top = 0;\n        this.bottom = this.height;\n      }\n      this.paddingLeft = 0;\n      this.paddingTop = 0;\n      this.paddingRight = 0;\n      this.paddingBottom = 0;\n    }\n  }, {\n    key: \"afterSetDimensions\",\n    value: function afterSetDimensions() {\n      (0, _helpersDataset.Q)(this.options.afterSetDimensions, [this]);\n    }\n  }, {\n    key: \"_callHooks\",\n    value: function _callHooks(name) {\n      this.chart.notifyPlugins(name, this.getContext());\n      (0, _helpersDataset.Q)(this.options[name], [this]);\n    }\n  }, {\n    key: \"beforeDataLimits\",\n    value: function beforeDataLimits() {\n      this._callHooks('beforeDataLimits');\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {}\n  }, {\n    key: \"afterDataLimits\",\n    value: function afterDataLimits() {\n      this._callHooks('afterDataLimits');\n    }\n  }, {\n    key: \"beforeBuildTicks\",\n    value: function beforeBuildTicks() {\n      this._callHooks('beforeBuildTicks');\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      return [];\n    }\n  }, {\n    key: \"afterBuildTicks\",\n    value: function afterBuildTicks() {\n      this._callHooks('afterBuildTicks');\n    }\n  }, {\n    key: \"beforeTickToLabelConversion\",\n    value: function beforeTickToLabelConversion() {\n      (0, _helpersDataset.Q)(this.options.beforeTickToLabelConversion, [this]);\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var tickOpts = this.options.ticks;\n      var i, ilen, tick;\n      for (i = 0, ilen = ticks.length; i < ilen; i++) {\n        tick = ticks[i];\n        tick.label = (0, _helpersDataset.Q)(tickOpts.callback, [tick.value, i, ticks], this);\n      }\n    }\n  }, {\n    key: \"afterTickToLabelConversion\",\n    value: function afterTickToLabelConversion() {\n      (0, _helpersDataset.Q)(this.options.afterTickToLabelConversion, [this]);\n    }\n  }, {\n    key: \"beforeCalculateLabelRotation\",\n    value: function beforeCalculateLabelRotation() {\n      (0, _helpersDataset.Q)(this.options.beforeCalculateLabelRotation, [this]);\n    }\n  }, {\n    key: \"calculateLabelRotation\",\n    value: function calculateLabelRotation() {\n      var options = this.options;\n      var tickOpts = options.ticks;\n      var numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n      var minRotation = tickOpts.minRotation || 0;\n      var maxRotation = tickOpts.maxRotation;\n      var labelRotation = minRotation;\n      var tickWidth, maxHeight, maxLabelDiagonal;\n      if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n        this.labelRotation = minRotation;\n        return;\n      }\n      var labelSizes = this._getLabelSizes();\n      var maxLabelWidth = labelSizes.widest.width;\n      var maxLabelHeight = labelSizes.highest.height;\n      var maxWidth = (0, _helpersDataset.S)(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n      tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n      if (maxLabelWidth + 6 > tickWidth) {\n        tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n        maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n        maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n        labelRotation = (0, _helpersDataset.U)(Math.min(Math.asin((0, _helpersDataset.S)((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin((0, _helpersDataset.S)(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin((0, _helpersDataset.S)(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n        labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n      }\n      this.labelRotation = labelRotation;\n    }\n  }, {\n    key: \"afterCalculateLabelRotation\",\n    value: function afterCalculateLabelRotation() {\n      (0, _helpersDataset.Q)(this.options.afterCalculateLabelRotation, [this]);\n    }\n  }, {\n    key: \"afterAutoSkip\",\n    value: function afterAutoSkip() {}\n  }, {\n    key: \"beforeFit\",\n    value: function beforeFit() {\n      (0, _helpersDataset.Q)(this.options.beforeFit, [this]);\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var minSize = {\n        width: 0,\n        height: 0\n      };\n      var chart = this.chart,\n        _this$options5 = this.options,\n        tickOpts = _this$options5.ticks,\n        titleOpts = _this$options5.title,\n        gridOpts = _this$options5.grid;\n      var display = this._isVisible();\n      var isHorizontal = this.isHorizontal();\n      if (display) {\n        var titleHeight = getTitleHeight(titleOpts, chart.options.font);\n        if (isHorizontal) {\n          minSize.width = this.maxWidth;\n          minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n        } else {\n          minSize.height = this.maxHeight;\n          minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n        }\n        if (tickOpts.display && this.ticks.length) {\n          var _this$_getLabelSizes = this._getLabelSizes(),\n            first = _this$_getLabelSizes.first,\n            last = _this$_getLabelSizes.last,\n            widest = _this$_getLabelSizes.widest,\n            highest = _this$_getLabelSizes.highest;\n          var tickPadding = tickOpts.padding * 2;\n          var angleRadians = (0, _helpersDataset.t)(this.labelRotation);\n          var cos = Math.cos(angleRadians);\n          var sin = Math.sin(angleRadians);\n          if (isHorizontal) {\n            var labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n            minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n          } else {\n            var labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n            minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n          }\n          this._calculatePadding(first, last, sin, cos);\n        }\n      }\n      this._handleMargins();\n      if (isHorizontal) {\n        this.width = this._length = chart.width - this._margins.left - this._margins.right;\n        this.height = minSize.height;\n      } else {\n        this.width = minSize.width;\n        this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n      }\n    }\n  }, {\n    key: \"_calculatePadding\",\n    value: function _calculatePadding(first, last, sin, cos) {\n      var _this$options6 = this.options,\n        _this$options6$ticks = _this$options6.ticks,\n        align = _this$options6$ticks.align,\n        padding = _this$options6$ticks.padding,\n        position = _this$options6.position;\n      var isRotated = this.labelRotation !== 0;\n      var labelsBelowTicks = position !== 'top' && this.axis === 'x';\n      if (this.isHorizontal()) {\n        var offsetLeft = this.getPixelForTick(0) - this.left;\n        var offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n        var paddingLeft = 0;\n        var paddingRight = 0;\n        if (isRotated) {\n          if (labelsBelowTicks) {\n            paddingLeft = cos * first.width;\n            paddingRight = sin * last.height;\n          } else {\n            paddingLeft = sin * first.height;\n            paddingRight = cos * last.width;\n          }\n        } else if (align === 'start') {\n          paddingRight = last.width;\n        } else if (align === 'end') {\n          paddingLeft = first.width;\n        } else if (align !== 'inner') {\n          paddingLeft = first.width / 2;\n          paddingRight = last.width / 2;\n        }\n        this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n        this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n      } else {\n        var paddingTop = last.height / 2;\n        var paddingBottom = first.height / 2;\n        if (align === 'start') {\n          paddingTop = 0;\n          paddingBottom = first.height;\n        } else if (align === 'end') {\n          paddingTop = last.height;\n          paddingBottom = 0;\n        }\n        this.paddingTop = paddingTop + padding;\n        this.paddingBottom = paddingBottom + padding;\n      }\n    }\n  }, {\n    key: \"_handleMargins\",\n    value: function _handleMargins() {\n      if (this._margins) {\n        this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n        this._margins.top = Math.max(this.paddingTop, this._margins.top);\n        this._margins.right = Math.max(this.paddingRight, this._margins.right);\n        this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n      }\n    }\n  }, {\n    key: \"afterFit\",\n    value: function afterFit() {\n      (0, _helpersDataset.Q)(this.options.afterFit, [this]);\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      var _this$options7 = this.options,\n        axis = _this$options7.axis,\n        position = _this$options7.position;\n      return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n  }, {\n    key: \"isFullSize\",\n    value: function isFullSize() {\n      return this.options.fullSize;\n    }\n  }, {\n    key: \"_convertTicksToLabels\",\n    value: function _convertTicksToLabels(ticks) {\n      this.beforeTickToLabelConversion();\n      this.generateTickLabels(ticks);\n      var i, ilen;\n      for (i = 0, ilen = ticks.length; i < ilen; i++) {\n        if ((0, _helpersDataset.k)(ticks[i].label)) {\n          ticks.splice(i, 1);\n          ilen--;\n          i--;\n        }\n      }\n      this.afterTickToLabelConversion();\n    }\n  }, {\n    key: \"_getLabelSizes\",\n    value: function _getLabelSizes() {\n      var labelSizes = this._labelSizes;\n      if (!labelSizes) {\n        var sampleSize = this.options.ticks.sampleSize;\n        var ticks = this.ticks;\n        if (sampleSize < ticks.length) {\n          ticks = sample(ticks, sampleSize);\n        }\n        this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n      }\n      return labelSizes;\n    }\n  }, {\n    key: \"_computeLabelSizes\",\n    value: function _computeLabelSizes(ticks, length, maxTicksLimit) {\n      var ctx = this.ctx,\n        caches = this._longestTextCache;\n      var widths = [];\n      var heights = [];\n      var increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n      var widestLabelSize = 0;\n      var highestLabelSize = 0;\n      var i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n      for (i = 0; i < length; i += increment) {\n        label = ticks[i].label;\n        tickFont = this._resolveTickFontOptions(i);\n        ctx.font = fontString = tickFont.string;\n        cache = caches[fontString] = caches[fontString] || {\n          data: {},\n          gc: []\n        };\n        lineHeight = tickFont.lineHeight;\n        width = height = 0;\n        if (!(0, _helpersDataset.k)(label) && !(0, _helpersDataset.b)(label)) {\n          width = (0, _helpersDataset.V)(ctx, cache.data, cache.gc, width, label);\n          height = lineHeight;\n        } else if ((0, _helpersDataset.b)(label)) {\n          for (j = 0, jlen = label.length; j < jlen; ++j) {\n            nestedLabel = label[j];\n            if (!(0, _helpersDataset.k)(nestedLabel) && !(0, _helpersDataset.b)(nestedLabel)) {\n              width = (0, _helpersDataset.V)(ctx, cache.data, cache.gc, width, nestedLabel);\n              height += lineHeight;\n            }\n          }\n        }\n        widths.push(width);\n        heights.push(height);\n        widestLabelSize = Math.max(width, widestLabelSize);\n        highestLabelSize = Math.max(height, highestLabelSize);\n      }\n      garbageCollect(caches, length);\n      var widest = widths.indexOf(widestLabelSize);\n      var highest = heights.indexOf(highestLabelSize);\n      var valueAt = function valueAt(idx) {\n        return {\n          width: widths[idx] || 0,\n          height: heights[idx] || 0\n        };\n      };\n      return {\n        first: valueAt(0),\n        last: valueAt(length - 1),\n        widest: valueAt(widest),\n        highest: valueAt(highest),\n        widths: widths,\n        heights: heights\n      };\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return value;\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value, index) {\n      return NaN;\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {}\n  }, {\n    key: \"getPixelForTick\",\n    value: function getPixelForTick(index) {\n      var ticks = this.ticks;\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n      return this.getPixelForValue(ticks[index].value);\n    }\n  }, {\n    key: \"getPixelForDecimal\",\n    value: function getPixelForDecimal(decimal) {\n      if (this._reversePixels) {\n        decimal = 1 - decimal;\n      }\n      var pixel = this._startPixel + decimal * this._length;\n      return (0, _helpersDataset.W)(this._alignToPixels ? (0, _helpersDataset.X)(this.chart, pixel, 0) : pixel);\n    }\n  }, {\n    key: \"getDecimalForPixel\",\n    value: function getDecimalForPixel(pixel) {\n      var decimal = (pixel - this._startPixel) / this._length;\n      return this._reversePixels ? 1 - decimal : decimal;\n    }\n  }, {\n    key: \"getBasePixel\",\n    value: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    }\n  }, {\n    key: \"getBaseValue\",\n    value: function getBaseValue() {\n      var min = this.min,\n        max = this.max;\n      return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext(index) {\n      var ticks = this.ticks || [];\n      if (index >= 0 && index < ticks.length) {\n        var tick = ticks[index];\n        return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n      }\n      return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n  }, {\n    key: \"_tickSize\",\n    value: function _tickSize() {\n      var optionTicks = this.options.ticks;\n      var rot = (0, _helpersDataset.t)(this.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var labelSizes = this._getLabelSizes();\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = labelSizes ? labelSizes.widest.width + padding : 0;\n      var h = labelSizes ? labelSizes.highest.height + padding : 0;\n      return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n  }, {\n    key: \"_isVisible\",\n    value: function _isVisible() {\n      var display = this.options.display;\n      if (display !== 'auto') {\n        return !!display;\n      }\n      return this.getMatchingVisibleMetas().length > 0;\n    }\n  }, {\n    key: \"_computeGridLineItems\",\n    value: function _computeGridLineItems(chartArea) {\n      var axis = this.axis;\n      var chart = this.chart;\n      var options = this.options;\n      var grid = options.grid,\n        position = options.position,\n        border = options.border;\n      var offset = grid.offset;\n      var isHorizontal = this.isHorizontal();\n      var ticks = this.ticks;\n      var ticksLength = ticks.length + (offset ? 1 : 0);\n      var tl = getTickMarkLength(grid);\n      var items = [];\n      var borderOpts = border.setContext(this.getContext());\n      var axisWidth = borderOpts.display ? borderOpts.width : 0;\n      var axisHalfWidth = axisWidth / 2;\n      var alignBorderValue = function alignBorderValue(pixel) {\n        return (0, _helpersDataset.X)(chart, pixel, axisWidth);\n      };\n      var borderValue, i, lineValue, alignedLineValue;\n      var tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n      if (position === 'top') {\n        borderValue = alignBorderValue(this.bottom);\n        ty1 = this.bottom - tl;\n        ty2 = borderValue - axisHalfWidth;\n        y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n        y2 = chartArea.bottom;\n      } else if (position === 'bottom') {\n        borderValue = alignBorderValue(this.top);\n        y1 = chartArea.top;\n        y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = this.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignBorderValue(this.right);\n        tx1 = this.right - tl;\n        tx2 = borderValue - axisHalfWidth;\n        x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n        x2 = chartArea.right;\n      } else if (position === 'right') {\n        borderValue = alignBorderValue(this.left);\n        x1 = chartArea.left;\n        x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n        tx1 = borderValue + axisHalfWidth;\n        tx2 = this.left + tl;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n        } else if ((0, _helpersDataset.i)(position)) {\n          var positionAxisID = Object.keys(position)[0];\n          var value = position[positionAxisID];\n          borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n        }\n        y1 = chartArea.top;\n        y2 = chartArea.bottom;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = ty1 + tl;\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n        } else if ((0, _helpersDataset.i)(position)) {\n          var _positionAxisID2 = Object.keys(position)[0];\n          var _value2 = position[_positionAxisID2];\n          borderValue = alignBorderValue(this.chart.scales[_positionAxisID2].getPixelForValue(_value2));\n        }\n        tx1 = borderValue - axisHalfWidth;\n        tx2 = tx1 - tl;\n        x1 = chartArea.left;\n        x2 = chartArea.right;\n      }\n      var limit = (0, _helpersDataset.v)(options.ticks.maxTicksLimit, ticksLength);\n      var step = Math.max(1, Math.ceil(ticksLength / limit));\n      for (i = 0; i < ticksLength; i += step) {\n        var context = this.getContext(i);\n        var optsAtIndex = grid.setContext(context);\n        var optsAtIndexBorder = border.setContext(context);\n        var lineWidth = optsAtIndex.lineWidth;\n        var lineColor = optsAtIndex.color;\n        var borderDash = optsAtIndexBorder.dash || [];\n        var borderDashOffset = optsAtIndexBorder.dashOffset;\n        var tickWidth = optsAtIndex.tickWidth;\n        var tickColor = optsAtIndex.tickColor;\n        var tickBorderDash = optsAtIndex.tickBorderDash || [];\n        var tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n        lineValue = getPixelForGridLine(this, i, offset);\n        if (lineValue === undefined) {\n          continue;\n        }\n        alignedLineValue = (0, _helpersDataset.X)(chart, lineValue, lineWidth);\n        if (isHorizontal) {\n          tx1 = tx2 = x1 = x2 = alignedLineValue;\n        } else {\n          ty1 = ty2 = y1 = y2 = alignedLineValue;\n        }\n        items.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          width: lineWidth,\n          color: lineColor,\n          borderDash: borderDash,\n          borderDashOffset: borderDashOffset,\n          tickWidth: tickWidth,\n          tickColor: tickColor,\n          tickBorderDash: tickBorderDash,\n          tickBorderDashOffset: tickBorderDashOffset\n        });\n      }\n      this._ticksLength = ticksLength;\n      this._borderValue = borderValue;\n      return items;\n    }\n  }, {\n    key: \"_computeLabelItems\",\n    value: function _computeLabelItems(chartArea) {\n      var axis = this.axis;\n      var options = this.options;\n      var position = options.position,\n        optionTicks = options.ticks;\n      var isHorizontal = this.isHorizontal();\n      var ticks = this.ticks;\n      var align = optionTicks.align,\n        crossAlign = optionTicks.crossAlign,\n        padding = optionTicks.padding,\n        mirror = optionTicks.mirror;\n      var tl = getTickMarkLength(options.grid);\n      var tickAndPadding = tl + padding;\n      var hTickAndPadding = mirror ? -padding : tickAndPadding;\n      var rotation = -(0, _helpersDataset.t)(this.labelRotation);\n      var items = [];\n      var i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n      var textBaseline = 'middle';\n      if (position === 'top') {\n        y = this.bottom - hTickAndPadding;\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (position === 'bottom') {\n        y = this.top + hTickAndPadding;\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (position === 'left') {\n        var ret = this._getYAxisLabelAlignment(tl);\n        textAlign = ret.textAlign;\n        x = ret.x;\n      } else if (position === 'right') {\n        var _ret = this._getYAxisLabelAlignment(tl);\n        textAlign = _ret.textAlign;\n        x = _ret.x;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n        } else if ((0, _helpersDataset.i)(position)) {\n          var positionAxisID = Object.keys(position)[0];\n          var value = position[positionAxisID];\n          y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n        }\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n        } else if ((0, _helpersDataset.i)(position)) {\n          var _positionAxisID3 = Object.keys(position)[0];\n          var _value3 = position[_positionAxisID3];\n          x = this.chart.scales[_positionAxisID3].getPixelForValue(_value3);\n        }\n        textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n      }\n      if (axis === 'y') {\n        if (align === 'start') {\n          textBaseline = 'top';\n        } else if (align === 'end') {\n          textBaseline = 'bottom';\n        }\n      }\n      var labelSizes = this._getLabelSizes();\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        label = tick.label;\n        var optsAtIndex = optionTicks.setContext(this.getContext(i));\n        pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n        font = this._resolveTickFontOptions(i);\n        lineHeight = font.lineHeight;\n        lineCount = (0, _helpersDataset.b)(label) ? label.length : 1;\n        var halfCount = lineCount / 2;\n        var color = optsAtIndex.color;\n        var strokeColor = optsAtIndex.textStrokeColor;\n        var strokeWidth = optsAtIndex.textStrokeWidth;\n        var tickTextAlign = textAlign;\n        if (isHorizontal) {\n          x = pixel;\n          if (textAlign === 'inner') {\n            if (i === ilen - 1) {\n              tickTextAlign = !this.options.reverse ? 'right' : 'left';\n            } else if (i === 0) {\n              tickTextAlign = !this.options.reverse ? 'left' : 'right';\n            } else {\n              tickTextAlign = 'center';\n            }\n          }\n          if (position === 'top') {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = -lineCount * lineHeight + lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n            } else {\n              textOffset = -labelSizes.highest.height + lineHeight / 2;\n            }\n          } else {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n            } else {\n              textOffset = labelSizes.highest.height - lineCount * lineHeight;\n            }\n          }\n          if (mirror) {\n            textOffset *= -1;\n          }\n          if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n            x += lineHeight / 2 * Math.sin(rotation);\n          }\n        } else {\n          y = pixel;\n          textOffset = (1 - lineCount) * lineHeight / 2;\n        }\n        var backdrop = void 0;\n        if (optsAtIndex.showLabelBackdrop) {\n          var labelPadding = (0, _helpersDataset.E)(optsAtIndex.backdropPadding);\n          var height = labelSizes.heights[i];\n          var width = labelSizes.widths[i];\n          var top = textOffset - labelPadding.top;\n          var left = 0 - labelPadding.left;\n          switch (textBaseline) {\n            case 'middle':\n              top -= height / 2;\n              break;\n            case 'bottom':\n              top -= height;\n              break;\n          }\n          switch (textAlign) {\n            case 'center':\n              left -= width / 2;\n              break;\n            case 'right':\n              left -= width;\n              break;\n            case 'inner':\n              if (i === ilen - 1) {\n                left -= width;\n              } else if (i > 0) {\n                left -= width / 2;\n              }\n              break;\n          }\n          backdrop = {\n            left: left,\n            top: top,\n            width: width + labelPadding.width,\n            height: height + labelPadding.height,\n            color: optsAtIndex.backdropColor\n          };\n        }\n        items.push({\n          label: label,\n          font: font,\n          textOffset: textOffset,\n          options: {\n            rotation: rotation,\n            color: color,\n            strokeColor: strokeColor,\n            strokeWidth: strokeWidth,\n            textAlign: tickTextAlign,\n            textBaseline: textBaseline,\n            translation: [x, y],\n            backdrop: backdrop\n          }\n        });\n      }\n      return items;\n    }\n  }, {\n    key: \"_getXAxisLabelAlignment\",\n    value: function _getXAxisLabelAlignment() {\n      var _this$options8 = this.options,\n        position = _this$options8.position,\n        ticks = _this$options8.ticks;\n      var rotation = -(0, _helpersDataset.t)(this.labelRotation);\n      if (rotation) {\n        return position === 'top' ? 'left' : 'right';\n      }\n      var align = 'center';\n      if (ticks.align === 'start') {\n        align = 'left';\n      } else if (ticks.align === 'end') {\n        align = 'right';\n      } else if (ticks.align === 'inner') {\n        align = 'inner';\n      }\n      return align;\n    }\n  }, {\n    key: \"_getYAxisLabelAlignment\",\n    value: function _getYAxisLabelAlignment(tl) {\n      var _this$options9 = this.options,\n        position = _this$options9.position,\n        _this$options9$ticks = _this$options9.ticks,\n        crossAlign = _this$options9$ticks.crossAlign,\n        mirror = _this$options9$ticks.mirror,\n        padding = _this$options9$ticks.padding;\n      var labelSizes = this._getLabelSizes();\n      var tickAndPadding = tl + padding;\n      var widest = labelSizes.widest.width;\n      var textAlign;\n      var x;\n      if (position === 'left') {\n        if (mirror) {\n          x = this.right + padding;\n          if (crossAlign === 'near') {\n            textAlign = 'left';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x += widest / 2;\n          } else {\n            textAlign = 'right';\n            x += widest;\n          }\n        } else {\n          x = this.right - tickAndPadding;\n          if (crossAlign === 'near') {\n            textAlign = 'right';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x -= widest / 2;\n          } else {\n            textAlign = 'left';\n            x = this.left;\n          }\n        }\n      } else if (position === 'right') {\n        if (mirror) {\n          x = this.left + padding;\n          if (crossAlign === 'near') {\n            textAlign = 'right';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x -= widest / 2;\n          } else {\n            textAlign = 'left';\n            x -= widest;\n          }\n        } else {\n          x = this.left + tickAndPadding;\n          if (crossAlign === 'near') {\n            textAlign = 'left';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x += widest / 2;\n          } else {\n            textAlign = 'right';\n            x = this.right;\n          }\n        }\n      } else {\n        textAlign = 'right';\n      }\n      return {\n        textAlign: textAlign,\n        x: x\n      };\n    }\n  }, {\n    key: \"_computeLabelArea\",\n    value: function _computeLabelArea() {\n      if (this.options.ticks.mirror) {\n        return;\n      }\n      var chart = this.chart;\n      var position = this.options.position;\n      if (position === 'left' || position === 'right') {\n        return {\n          top: 0,\n          left: this.left,\n          bottom: chart.height,\n          right: this.right\n        };\n      }\n      if (position === 'top' || position === 'bottom') {\n        return {\n          top: this.top,\n          left: 0,\n          bottom: this.bottom,\n          right: chart.width\n        };\n      }\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground() {\n      var ctx = this.ctx,\n        backgroundColor = this.options.backgroundColor,\n        left = this.left,\n        top = this.top,\n        width = this.width,\n        height = this.height;\n      if (backgroundColor) {\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        ctx.fillRect(left, top, width, height);\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"getLineWidthForValue\",\n    value: function getLineWidthForValue(value) {\n      var grid = this.options.grid;\n      if (!this._isVisible() || !grid.display) {\n        return 0;\n      }\n      var ticks = this.ticks;\n      var index = ticks.findIndex(function (t) {\n        return t.value === value;\n      });\n      if (index >= 0) {\n        var opts = grid.setContext(this.getContext(index));\n        return opts.lineWidth;\n      }\n      return 0;\n    }\n  }, {\n    key: \"drawGrid\",\n    value: function drawGrid(chartArea) {\n      var grid = this.options.grid;\n      var ctx = this.ctx;\n      var items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n      var i, ilen;\n      var drawLine = function drawLine(p1, p2, style) {\n        if (!style.width || !style.color) {\n          return;\n        }\n        ctx.save();\n        ctx.lineWidth = style.width;\n        ctx.strokeStyle = style.color;\n        ctx.setLineDash(style.borderDash || []);\n        ctx.lineDashOffset = style.borderDashOffset;\n        ctx.beginPath();\n        ctx.moveTo(p1.x, p1.y);\n        ctx.lineTo(p2.x, p2.y);\n        ctx.stroke();\n        ctx.restore();\n      };\n      if (grid.display) {\n        for (i = 0, ilen = items.length; i < ilen; ++i) {\n          var item = items[i];\n          if (grid.drawOnChartArea) {\n            drawLine({\n              x: item.x1,\n              y: item.y1\n            }, {\n              x: item.x2,\n              y: item.y2\n            }, item);\n          }\n          if (grid.drawTicks) {\n            drawLine({\n              x: item.tx1,\n              y: item.ty1\n            }, {\n              x: item.tx2,\n              y: item.ty2\n            }, {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            });\n          }\n        }\n      }\n    }\n  }, {\n    key: \"drawBorder\",\n    value: function drawBorder() {\n      var chart = this.chart,\n        ctx = this.ctx,\n        _this$options0 = this.options,\n        border = _this$options0.border,\n        grid = _this$options0.grid;\n      var borderOpts = border.setContext(this.getContext());\n      var axisWidth = border.display ? borderOpts.width : 0;\n      if (!axisWidth) {\n        return;\n      }\n      var lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n      var borderValue = this._borderValue;\n      var x1, x2, y1, y2;\n      if (this.isHorizontal()) {\n        x1 = (0, _helpersDataset.X)(chart, this.left, axisWidth) - axisWidth / 2;\n        x2 = (0, _helpersDataset.X)(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n        y1 = y2 = borderValue;\n      } else {\n        y1 = (0, _helpersDataset.X)(chart, this.top, axisWidth) - axisWidth / 2;\n        y2 = (0, _helpersDataset.X)(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n        x1 = x2 = borderValue;\n      }\n      ctx.save();\n      ctx.lineWidth = borderOpts.width;\n      ctx.strokeStyle = borderOpts.color;\n      ctx.beginPath();\n      ctx.moveTo(x1, y1);\n      ctx.lineTo(x2, y2);\n      ctx.stroke();\n      ctx.restore();\n    }\n  }, {\n    key: \"drawLabels\",\n    value: function drawLabels(chartArea) {\n      var optionTicks = this.options.ticks;\n      if (!optionTicks.display) {\n        return;\n      }\n      var ctx = this.ctx;\n      var area = this._computeLabelArea();\n      if (area) {\n        (0, _helpersDataset.Y)(ctx, area);\n      }\n      var items = this.getLabelItems(chartArea);\n      var _iterator0 = _createForOfIteratorHelper(items),\n        _step0;\n      try {\n        for (_iterator0.s(); !(_step0 = _iterator0.n()).done;) {\n          var item = _step0.value;\n          var renderTextOptions = item.options;\n          var tickFont = item.font;\n          var label = item.label;\n          var y = item.textOffset;\n          (0, _helpersDataset.Z)(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n      } catch (err) {\n        _iterator0.e(err);\n      } finally {\n        _iterator0.f();\n      }\n      if (area) {\n        (0, _helpersDataset.$)(ctx);\n      }\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {\n      var ctx = this.ctx,\n        _this$options1 = this.options,\n        position = _this$options1.position,\n        title = _this$options1.title,\n        reverse = _this$options1.reverse;\n      if (!title.display) {\n        return;\n      }\n      var font = (0, _helpersDataset.a0)(title.font);\n      var padding = (0, _helpersDataset.E)(title.padding);\n      var align = title.align;\n      var offset = font.lineHeight / 2;\n      if (position === 'bottom' || position === 'center' || (0, _helpersDataset.i)(position)) {\n        offset += padding.bottom;\n        if ((0, _helpersDataset.b)(title.text)) {\n          offset += font.lineHeight * (title.text.length - 1);\n        }\n      } else {\n        offset += padding.top;\n      }\n      var _titleArgs = titleArgs(this, offset, position, align),\n        titleX = _titleArgs.titleX,\n        titleY = _titleArgs.titleY,\n        maxWidth = _titleArgs.maxWidth,\n        rotation = _titleArgs.rotation;\n      (0, _helpersDataset.Z)(ctx, title.text, 0, 0, font, {\n        color: title.color,\n        maxWidth: maxWidth,\n        rotation: rotation,\n        textAlign: titleAlign(align, position, reverse),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(chartArea) {\n      if (!this._isVisible()) {\n        return;\n      }\n      this.drawBackground();\n      this.drawGrid(chartArea);\n      this.drawBorder();\n      this.drawTitle();\n      this.drawLabels(chartArea);\n    }\n  }, {\n    key: \"_layers\",\n    value: function _layers() {\n      var _this0 = this;\n      var opts = this.options;\n      var tz = opts.ticks && opts.ticks.z || 0;\n      var gz = (0, _helpersDataset.v)(opts.grid && opts.grid.z, -1);\n      var bz = (0, _helpersDataset.v)(opts.border && opts.border.z, 0);\n      if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n        return [{\n          z: tz,\n          draw: function draw(chartArea) {\n            _this0.draw(chartArea);\n          }\n        }];\n      }\n      return [{\n        z: gz,\n        draw: function draw(chartArea) {\n          _this0.drawBackground();\n          _this0.drawGrid(chartArea);\n          _this0.drawTitle();\n        }\n      }, {\n        z: bz,\n        draw: function draw() {\n          _this0.drawBorder();\n        }\n      }, {\n        z: tz,\n        draw: function draw(chartArea) {\n          _this0.drawLabels(chartArea);\n        }\n      }];\n    }\n  }, {\n    key: \"getMatchingVisibleMetas\",\n    value: function getMatchingVisibleMetas(type) {\n      var metas = this.chart.getSortedVisibleDatasetMetas();\n      var axisID = this.axis + 'AxisID';\n      var result = [];\n      var i, ilen;\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        var meta = metas[i];\n        if (meta[axisID] === this.id && (!type || meta.type === type)) {\n          result.push(meta);\n        }\n      }\n      return result;\n    }\n  }, {\n    key: \"_resolveTickFontOptions\",\n    value: function _resolveTickFontOptions(index) {\n      var opts = this.options.ticks.setContext(this.getContext(index));\n      return (0, _helpersDataset.a0)(opts.font);\n    }\n  }, {\n    key: \"_maxDigits\",\n    value: function _maxDigits() {\n      var fontSize = this._resolveTickFontOptions(0).lineHeight;\n      return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n  }]);\n}(Element);\nvar TypedRegistry = /*#__PURE__*/function () {\n  function TypedRegistry(type, scope, override) {\n    (0, _classCallCheck2.default)(this, TypedRegistry);\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  return (0, _createClass2.default)(TypedRegistry, [{\n    key: \"isForType\",\n    value: function isForType(type) {\n      return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n  }, {\n    key: \"register\",\n    value: function register(item) {\n      var proto = Object.getPrototypeOf(item);\n      var parentScope;\n      if (isIChartComponent(proto)) {\n        parentScope = this.register(proto);\n      }\n      var items = this.items;\n      var id = item.id;\n      var scope = this.scope + '.' + id;\n      if (!id) {\n        throw new Error('class does not have id: ' + item);\n      }\n      if (id in items) {\n        return scope;\n      }\n      items[id] = item;\n      registerDefaults(item, scope, parentScope);\n      if (this.override) {\n        _helpersDataset.d.override(item.id, item.overrides);\n      }\n      return scope;\n    }\n  }, {\n    key: \"get\",\n    value: function get(id) {\n      return this.items[id];\n    }\n  }, {\n    key: \"unregister\",\n    value: function unregister(item) {\n      var items = this.items;\n      var id = item.id;\n      var scope = this.scope;\n      if (id in items) {\n        delete items[id];\n      }\n      if (scope && id in _helpersDataset.d[scope]) {\n        delete _helpersDataset.d[scope][id];\n        if (this.override) {\n          delete _helpersDataset.a3[id];\n        }\n      }\n    }\n  }]);\n}();\nfunction registerDefaults(item, scope, parentScope) {\n  var itemDefaults = (0, _helpersDataset.a4)(Object.create(null), [parentScope ? _helpersDataset.d.get(parentScope) : {}, _helpersDataset.d.get(scope), item.defaults]);\n  _helpersDataset.d.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    _helpersDataset.d.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(function (property) {\n    var propertyParts = property.split('.');\n    var sourceName = propertyParts.pop();\n    var sourceScope = [scope].concat(propertyParts).join('.');\n    var parts = routes[property].split('.');\n    var targetName = parts.pop();\n    var targetScope = parts.join('.');\n    _helpersDataset.d.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\nvar Registry = /*#__PURE__*/function () {\n  function Registry() {\n    (0, _classCallCheck2.default)(this, Registry);\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  return (0, _createClass2.default)(Registry, [{\n    key: \"add\",\n    value: function add() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      this._each('register', args);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      this._each('unregister', args);\n    }\n  }, {\n    key: \"addControllers\",\n    value: function addControllers() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n      this._each('register', args, this.controllers);\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n      this._each('register', args, this.elements);\n    }\n  }, {\n    key: \"addPlugins\",\n    value: function addPlugins() {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n      this._each('register', args, this.plugins);\n    }\n  }, {\n    key: \"addScales\",\n    value: function addScales() {\n      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n      this._each('register', args, this.scales);\n    }\n  }, {\n    key: \"getController\",\n    value: function getController(id) {\n      return this._get(id, this.controllers, 'controller');\n    }\n  }, {\n    key: \"getElement\",\n    value: function getElement(id) {\n      return this._get(id, this.elements, 'element');\n    }\n  }, {\n    key: \"getPlugin\",\n    value: function getPlugin(id) {\n      return this._get(id, this.plugins, 'plugin');\n    }\n  }, {\n    key: \"getScale\",\n    value: function getScale(id) {\n      return this._get(id, this.scales, 'scale');\n    }\n  }, {\n    key: \"removeControllers\",\n    value: function removeControllers() {\n      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n      this._each('unregister', args, this.controllers);\n    }\n  }, {\n    key: \"removeElements\",\n    value: function removeElements() {\n      for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n        args[_key8] = arguments[_key8];\n      }\n      this._each('unregister', args, this.elements);\n    }\n  }, {\n    key: \"removePlugins\",\n    value: function removePlugins() {\n      for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n        args[_key9] = arguments[_key9];\n      }\n      this._each('unregister', args, this.plugins);\n    }\n  }, {\n    key: \"removeScales\",\n    value: function removeScales() {\n      for (var _len0 = arguments.length, args = new Array(_len0), _key0 = 0; _key0 < _len0; _key0++) {\n        args[_key0] = arguments[_key0];\n      }\n      this._each('unregister', args, this.scales);\n    }\n  }, {\n    key: \"_each\",\n    value: function _each(method, args, typedRegistry) {\n      var _this1 = this;\n      (0, _toConsumableArray2.default)(args).forEach(function (arg) {\n        var reg = typedRegistry || _this1._getRegistryForType(arg);\n        if (typedRegistry || reg.isForType(arg) || reg === _this1.plugins && arg.id) {\n          _this1._exec(method, reg, arg);\n        } else {\n          (0, _helpersDataset.F)(arg, function (item) {\n            var itemReg = typedRegistry || _this1._getRegistryForType(item);\n            _this1._exec(method, itemReg, item);\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_exec\",\n    value: function _exec(method, registry, component) {\n      var camelMethod = (0, _helpersDataset.a5)(method);\n      (0, _helpersDataset.Q)(component['before' + camelMethod], [], component);\n      registry[method](component);\n      (0, _helpersDataset.Q)(component['after' + camelMethod], [], component);\n    }\n  }, {\n    key: \"_getRegistryForType\",\n    value: function _getRegistryForType(type) {\n      for (var i = 0; i < this._typedRegistries.length; i++) {\n        var reg = this._typedRegistries[i];\n        if (reg.isForType(type)) {\n          return reg;\n        }\n      }\n      return this.plugins;\n    }\n  }, {\n    key: \"_get\",\n    value: function _get(id, typedRegistry, type) {\n      var item = typedRegistry.get(id);\n      if (item === undefined) {\n        throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n      }\n      return item;\n    }\n  }]);\n}();\nvar registry = exports.registry = /* #__PURE__ */new Registry();\nvar PluginService = /*#__PURE__*/function () {\n  function PluginService() {\n    (0, _classCallCheck2.default)(this, PluginService);\n    this._init = [];\n  }\n  return (0, _createClass2.default)(PluginService, [{\n    key: \"notify\",\n    value: function notify(chart, hook, args, filter) {\n      if (hook === 'beforeInit') {\n        this._init = this._createDescriptors(chart, true);\n        this._notify(this._init, chart, 'install');\n      }\n      var descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n      var result = this._notify(descriptors, chart, hook, args);\n      if (hook === 'afterDestroy') {\n        this._notify(descriptors, chart, 'stop');\n        this._notify(this._init, chart, 'uninstall');\n      }\n      return result;\n    }\n  }, {\n    key: \"_notify\",\n    value: function _notify(descriptors, chart, hook, args) {\n      args = args || {};\n      var _iterator1 = _createForOfIteratorHelper(descriptors),\n        _step1;\n      try {\n        for (_iterator1.s(); !(_step1 = _iterator1.n()).done;) {\n          var descriptor = _step1.value;\n          var plugin = descriptor.plugin;\n          var method = plugin[hook];\n          var params = [chart, args, descriptor.options];\n          if ((0, _helpersDataset.Q)(method, params, plugin) === false && args.cancelable) {\n            return false;\n          }\n        }\n      } catch (err) {\n        _iterator1.e(err);\n      } finally {\n        _iterator1.f();\n      }\n      return true;\n    }\n  }, {\n    key: \"invalidate\",\n    value: function invalidate() {\n      if (!(0, _helpersDataset.k)(this._cache)) {\n        this._oldCache = this._cache;\n        this._cache = undefined;\n      }\n    }\n  }, {\n    key: \"_descriptors\",\n    value: function _descriptors(chart) {\n      if (this._cache) {\n        return this._cache;\n      }\n      var descriptors = this._cache = this._createDescriptors(chart);\n      this._notifyStateChanges(chart);\n      return descriptors;\n    }\n  }, {\n    key: \"_createDescriptors\",\n    value: function _createDescriptors(chart, all) {\n      var config = chart && chart.config;\n      var options = (0, _helpersDataset.v)(config.options && config.options.plugins, {});\n      var plugins = allPlugins(config);\n      return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n  }, {\n    key: \"_notifyStateChanges\",\n    value: function _notifyStateChanges(chart) {\n      var previousDescriptors = this._oldCache || [];\n      var descriptors = this._cache;\n      var diff = function diff(a, b) {\n        return a.filter(function (x) {\n          return !b.some(function (y) {\n            return x.plugin.id === y.plugin.id;\n          });\n        });\n      };\n      this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n      this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n  }]);\n}();\nfunction allPlugins(config) {\n  var localIds = {};\n  var plugins = [];\n  var keys = Object.keys(registry.plugins.items);\n  for (var i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  var local = config.plugins || [];\n  for (var _i2 = 0; _i2 < local.length; _i2++) {\n    var plugin = local[_i2];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n  return {\n    plugins: plugins,\n    localIds: localIds\n  };\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, _ref2, options, all) {\n  var plugins = _ref2.plugins,\n    localIds = _ref2.localIds;\n  var result = [];\n  var context = chart.getContext();\n  var _iterator10 = _createForOfIteratorHelper(plugins),\n    _step10;\n  try {\n    for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n      var plugin = _step10.value;\n      var id = plugin.id;\n      var opts = getOpts(options[id], all);\n      if (opts === null) {\n        continue;\n      }\n      result.push({\n        plugin: plugin,\n        options: pluginOpts(chart.config, {\n          plugin: plugin,\n          local: localIds[id]\n        }, opts, context)\n      });\n    }\n  } catch (err) {\n    _iterator10.e(err);\n  } finally {\n    _iterator10.f();\n  }\n  return result;\n}\nfunction pluginOpts(config, _ref3, opts, context) {\n  var plugin = _ref3.plugin,\n    local = _ref3.local;\n  var keys = config.pluginScopeKeys(plugin);\n  var scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\nfunction getIndexAxis(type, options) {\n  var datasetDefaults = _helpersDataset.d.datasets[type] || {};\n  var datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  var axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (var _len1 = arguments.length, scaleOptions = new Array(_len1 > 1 ? _len1 - 1 : 0), _key1 = 1; _key1 < _len1; _key1++) {\n    scaleOptions[_key1 - 1] = arguments[_key1];\n  }\n  for (var _i3 = 0, _scaleOptions = scaleOptions; _i3 < _scaleOptions.length; _i3++) {\n    var opts = _scaleOptions[_i3];\n    var axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(\"Cannot determine type of '\".concat(id, \"' axis. Please provide 'axis' or 'position' option.\"));\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {\n      axis: axis\n    };\n  }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    var boundDs = config.data.datasets.filter(function (d) {\n      return d.xAxisID === id || d.yAxisID === id;\n    });\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\nfunction mergeScaleConfig(config, options) {\n  var chartDefaults = _helpersDataset.a3[config.type] || {\n    scales: {}\n  };\n  var configScales = options.scales || {};\n  var chartIndexAxis = getIndexAxis(config.type, options);\n  var scales = Object.create(null);\n  Object.keys(configScales).forEach(function (id) {\n    var scaleConf = configScales[id];\n    if (!(0, _helpersDataset.i)(scaleConf)) {\n      return console.error(\"Invalid scale configuration for scale: \".concat(id));\n    }\n    if (scaleConf._proxy) {\n      return console.warn(\"Ignoring resolver passed as options for scale: \".concat(id));\n    }\n    var axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), _helpersDataset.d.scales[scaleConf.type]);\n    var defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    var defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = (0, _helpersDataset.ab)(Object.create(null), [{\n      axis: axis\n    }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(function (dataset) {\n    var type = dataset.type || config.type;\n    var indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    var datasetDefaults = _helpersDataset.a3[type] || {};\n    var defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(function (defaultID) {\n      var axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      var id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      (0, _helpersDataset.ab)(scales[id], [{\n        axis: axis\n      }, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(function (key) {\n    var scale = scales[key];\n    (0, _helpersDataset.ab)(scale, [_helpersDataset.d.scales[scale.type], _helpersDataset.d.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  var options = config.options || (config.options = {});\n  options.plugins = (0, _helpersDataset.v)(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nvar keyCache = new Map();\nvar keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  var keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nvar addIfFound = function addIfFound(set, obj, key) {\n  var opts = (0, _helpersDataset.f)(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nvar Config = /*#__PURE__*/function () {\n  function Config(config) {\n    (0, _classCallCheck2.default)(this, Config);\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  return (0, _createClass2.default)(Config, [{\n    key: \"platform\",\n    get: function get() {\n      return this._config.platform;\n    }\n  }, {\n    key: \"type\",\n    get: function get() {\n      return this._config.type;\n    },\n    set: function set(type) {\n      this._config.type = type;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this._config.data;\n    },\n    set: function set(data) {\n      this._config.data = initData(data);\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this._config.options;\n    },\n    set: function set(options) {\n      this._config.options = options;\n    }\n  }, {\n    key: \"plugins\",\n    get: function get() {\n      return this._config.plugins;\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var config = this._config;\n      this.clearCache();\n      initOptions(config);\n    }\n  }, {\n    key: \"clearCache\",\n    value: function clearCache() {\n      this._scopeCache.clear();\n      this._resolverCache.clear();\n    }\n  }, {\n    key: \"datasetScopeKeys\",\n    value: function datasetScopeKeys(datasetType) {\n      return cachedKeys(datasetType, function () {\n        return [[\"datasets.\".concat(datasetType), '']];\n      });\n    }\n  }, {\n    key: \"datasetAnimationScopeKeys\",\n    value: function datasetAnimationScopeKeys(datasetType, transition) {\n      return cachedKeys(\"\".concat(datasetType, \".transition.\").concat(transition), function () {\n        return [[\"datasets.\".concat(datasetType, \".transitions.\").concat(transition), \"transitions.\".concat(transition)], [\"datasets.\".concat(datasetType), '']];\n      });\n    }\n  }, {\n    key: \"datasetElementScopeKeys\",\n    value: function datasetElementScopeKeys(datasetType, elementType) {\n      return cachedKeys(\"\".concat(datasetType, \"-\").concat(elementType), function () {\n        return [[\"datasets.\".concat(datasetType, \".elements.\").concat(elementType), \"datasets.\".concat(datasetType), \"elements.\".concat(elementType), '']];\n      });\n    }\n  }, {\n    key: \"pluginScopeKeys\",\n    value: function pluginScopeKeys(plugin) {\n      var id = plugin.id;\n      var type = this.type;\n      return cachedKeys(\"\".concat(type, \"-plugin-\").concat(id), function () {\n        return [[\"plugins.\".concat(id)].concat((0, _toConsumableArray2.default)(plugin.additionalOptionScopes || []))];\n      });\n    }\n  }, {\n    key: \"_cachedScopes\",\n    value: function _cachedScopes(mainScope, resetCache) {\n      var _scopeCache = this._scopeCache;\n      var cache = _scopeCache.get(mainScope);\n      if (!cache || resetCache) {\n        cache = new Map();\n        _scopeCache.set(mainScope, cache);\n      }\n      return cache;\n    }\n  }, {\n    key: \"getOptionScopes\",\n    value: function getOptionScopes(mainScope, keyLists, resetCache) {\n      var options = this.options,\n        type = this.type;\n      var cache = this._cachedScopes(mainScope, resetCache);\n      var cached = cache.get(keyLists);\n      if (cached) {\n        return cached;\n      }\n      var scopes = new Set();\n      keyLists.forEach(function (keys) {\n        if (mainScope) {\n          scopes.add(mainScope);\n          keys.forEach(function (key) {\n            return addIfFound(scopes, mainScope, key);\n          });\n        }\n        keys.forEach(function (key) {\n          return addIfFound(scopes, options, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, _helpersDataset.a3[type] || {}, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, _helpersDataset.d, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, _helpersDataset.a6, key);\n        });\n      });\n      var array = Array.from(scopes);\n      if (array.length === 0) {\n        array.push(Object.create(null));\n      }\n      if (keysCached.has(keyLists)) {\n        cache.set(keyLists, array);\n      }\n      return array;\n    }\n  }, {\n    key: \"chartOptionScopes\",\n    value: function chartOptionScopes() {\n      var options = this.options,\n        type = this.type;\n      return [options, _helpersDataset.a3[type] || {}, _helpersDataset.d.datasets[type] || {}, {\n        type: type\n      }, _helpersDataset.d, _helpersDataset.a6];\n    }\n  }, {\n    key: \"resolveNamedOptions\",\n    value: function resolveNamedOptions(scopes, names, context) {\n      var prefixes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [''];\n      var result = {\n        $shared: true\n      };\n      var _getResolver = getResolver(this._resolverCache, scopes, prefixes),\n        resolver = _getResolver.resolver,\n        subPrefixes = _getResolver.subPrefixes;\n      var options = resolver;\n      if (needContext(resolver, names)) {\n        result.$shared = false;\n        context = (0, _helpersDataset.a7)(context) ? context() : context;\n        var subResolver = this.createResolver(scopes, context, subPrefixes);\n        options = (0, _helpersDataset.a8)(resolver, context, subResolver);\n      }\n      var _iterator11 = _createForOfIteratorHelper(names),\n        _step11;\n      try {\n        for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n          var prop = _step11.value;\n          result[prop] = options[prop];\n        }\n      } catch (err) {\n        _iterator11.e(err);\n      } finally {\n        _iterator11.f();\n      }\n      return result;\n    }\n  }, {\n    key: \"createResolver\",\n    value: function createResolver(scopes, context) {\n      var prefixes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [''];\n      var descriptorDefaults = arguments.length > 3 ? arguments[3] : undefined;\n      var _getResolver2 = getResolver(this._resolverCache, scopes, prefixes),\n        resolver = _getResolver2.resolver;\n      return (0, _helpersDataset.i)(context) ? (0, _helpersDataset.a8)(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n  }]);\n}();\nfunction getResolver(resolverCache, scopes, prefixes) {\n  var cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  var cacheKey = prefixes.join();\n  var cached = cache.get(cacheKey);\n  if (!cached) {\n    var resolver = (0, _helpersDataset.a9)(scopes, prefixes);\n    cached = {\n      resolver: resolver,\n      subPrefixes: prefixes.filter(function (p) {\n        return !p.toLowerCase().includes('hover');\n      })\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nvar hasFunction = function hasFunction(value) {\n  return (0, _helpersDataset.i)(value) && Object.getOwnPropertyNames(value).some(function (key) {\n    return (0, _helpersDataset.a7)(value[key]);\n  });\n};\nfunction needContext(proxy, names) {\n  var _descriptors2 = (0, _helpersDataset.aa)(proxy),\n    isScriptable = _descriptors2.isScriptable,\n    isIndexable = _descriptors2.isIndexable;\n  var _iterator12 = _createForOfIteratorHelper(names),\n    _step12;\n  try {\n    for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n      var prop = _step12.value;\n      var scriptable = isScriptable(prop);\n      var indexable = isIndexable(prop);\n      var value = (indexable || scriptable) && proxy[prop];\n      if (scriptable && ((0, _helpersDataset.a7)(value) || hasFunction(value)) || indexable && (0, _helpersDataset.b)(value)) {\n        return true;\n      }\n    }\n  } catch (err) {\n    _iterator12.e(err);\n  } finally {\n    _iterator12.f();\n  }\n  return false;\n}\nvar version = \"4.4.9\";\nvar KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n  return function (a, b) {\n    return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  var chart = context.chart;\n  var animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  (0, _helpersDataset.Q)(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  var chart = context.chart;\n  var animationOptions = chart.options.animation;\n  (0, _helpersDataset.Q)(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if ((0, _helpersDataset.M)() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nvar instances = {};\nvar getChart = function getChart(key) {\n  var canvas = getCanvas(key);\n  return Object.values(instances).filter(function (c) {\n    return c.canvas === canvas;\n  }).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  var keys = Object.keys(obj);\n  for (var _i4 = 0, _keys = keys; _i4 < _keys.length; _i4++) {\n    var key = _keys[_i4];\n    var intKey = +key;\n    if (intKey >= start) {\n      var value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nvar Chart = exports.Chart = /*#__PURE__*/function () {\n  function Chart(item, userConfig) {\n    var _this10 = this;\n    (0, _classCallCheck2.default)(this, Chart);\n    var config = this.config = new Config(userConfig);\n    var initialCanvas = getCanvas(item);\n    var existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n    }\n    var options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    var context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    var canvas = context && context.canvas;\n    var height = canvas && canvas.height;\n    var width = canvas && canvas.width;\n    this.id = (0, _helpersDataset.ac)();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = (0, _helpersDataset.ad)(function (mode) {\n      return _this10.update(mode);\n    }, options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  return (0, _createClass2.default)(Chart, [{\n    key: \"aspectRatio\",\n    get: function get() {\n      var _this$options10 = this.options,\n        aspectRatio = _this$options10.aspectRatio,\n        maintainAspectRatio = _this$options10.maintainAspectRatio,\n        width = this.width,\n        height = this.height,\n        _aspectRatio = this._aspectRatio;\n      if (!(0, _helpersDataset.k)(aspectRatio)) {\n        return aspectRatio;\n      }\n      if (maintainAspectRatio && _aspectRatio) {\n        return _aspectRatio;\n      }\n      return height ? width / height : null;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this.config.data;\n    },\n    set: function set(data) {\n      this.config.data = data;\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this._options;\n    },\n    set: function set(options) {\n      this.config.options = options;\n    }\n  }, {\n    key: \"registry\",\n    get: function get() {\n      return registry;\n    }\n  }, {\n    key: \"_initialize\",\n    value: function _initialize() {\n      this.notifyPlugins('beforeInit');\n      if (this.options.responsive) {\n        this.resize();\n      } else {\n        (0, _helpersDataset.ae)(this, this.options.devicePixelRatio);\n      }\n      this.bindEvents();\n      this.notifyPlugins('afterInit');\n      return this;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      (0, _helpersDataset.af)(this.canvas, this.ctx);\n      return this;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      animator.stop(this);\n      return this;\n    }\n  }, {\n    key: \"resize\",\n    value: function resize(width, height) {\n      if (!animator.running(this)) {\n        this._resize(width, height);\n      } else {\n        this._resizeBeforeDraw = {\n          width: width,\n          height: height\n        };\n      }\n    }\n  }, {\n    key: \"_resize\",\n    value: function _resize(width, height) {\n      var options = this.options;\n      var canvas = this.canvas;\n      var aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n      var newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n      var newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n      var mode = this.width ? 'resize' : 'attach';\n      this.width = newSize.width;\n      this.height = newSize.height;\n      this._aspectRatio = this.aspectRatio;\n      if (!(0, _helpersDataset.ae)(this, newRatio, true)) {\n        return;\n      }\n      this.notifyPlugins('resize', {\n        size: newSize\n      });\n      (0, _helpersDataset.Q)(options.onResize, [this, newSize], this);\n      if (this.attached) {\n        if (this._doResize(mode)) {\n          this.render();\n        }\n      }\n    }\n  }, {\n    key: \"ensureScalesHaveIDs\",\n    value: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      (0, _helpersDataset.F)(scalesOptions, function (axisOptions, axisID) {\n        axisOptions.id = axisID;\n      });\n    }\n  }, {\n    key: \"buildOrUpdateScales\",\n    value: function buildOrUpdateScales() {\n      var _this11 = this;\n      var options = this.options;\n      var scaleOpts = options.scales;\n      var scales = this.scales;\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n      var items = [];\n      if (scaleOpts) {\n        items = items.concat(Object.keys(scaleOpts).map(function (id) {\n          var scaleOptions = scaleOpts[id];\n          var axis = determineAxis(id, scaleOptions);\n          var isRadial = axis === 'r';\n          var isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        }));\n      }\n      (0, _helpersDataset.F)(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var axis = determineAxis(id, scaleOptions);\n        var scaleType = (0, _helpersDataset.v)(scaleOptions.type, item.dtype);\n        if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n        updated[id] = true;\n        var scale = null;\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n        } else {\n          var scaleClass = registry.getScale(scaleType);\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            ctx: _this11.ctx,\n            chart: _this11\n          });\n          scales[scale.id] = scale;\n        }\n        scale.init(scaleOptions, options);\n      });\n      (0, _helpersDataset.F)(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      (0, _helpersDataset.F)(scales, function (scale) {\n        layouts.configure(_this11, scale, scale.options);\n        layouts.addBox(_this11, scale);\n      });\n    }\n  }, {\n    key: \"_updateMetasets\",\n    value: function _updateMetasets() {\n      var metasets = this._metasets;\n      var numData = this.data.datasets.length;\n      var numMeta = metasets.length;\n      metasets.sort(function (a, b) {\n        return a.index - b.index;\n      });\n      if (numMeta > numData) {\n        for (var i = numData; i < numMeta; ++i) {\n          this._destroyDatasetMeta(i);\n        }\n        metasets.splice(numData, numMeta - numData);\n      }\n      this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n  }, {\n    key: \"_removeUnreferencedMetasets\",\n    value: function _removeUnreferencedMetasets() {\n      var _this12 = this;\n      var metasets = this._metasets,\n        datasets = this.data.datasets;\n      if (metasets.length > datasets.length) {\n        delete this._stacks;\n      }\n      metasets.forEach(function (meta, index) {\n        if (datasets.filter(function (x) {\n          return x === meta._dataset;\n        }).length === 0) {\n          _this12._destroyDatasetMeta(index);\n        }\n      });\n    }\n  }, {\n    key: \"buildOrUpdateControllers\",\n    value: function buildOrUpdateControllers() {\n      var newControllers = [];\n      var datasets = this.data.datasets;\n      var i, ilen;\n      this._removeUnreferencedMetasets();\n      for (i = 0, ilen = datasets.length; i < ilen; i++) {\n        var dataset = datasets[i];\n        var meta = this.getDatasetMeta(i);\n        var type = dataset.type || this.config.type;\n        if (meta.type && meta.type !== type) {\n          this._destroyDatasetMeta(i);\n          meta = this.getDatasetMeta(i);\n        }\n        meta.type = type;\n        meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n        meta.order = dataset.order || 0;\n        meta.index = i;\n        meta.label = '' + dataset.label;\n        meta.visible = this.isDatasetVisible(i);\n        if (meta.controller) {\n          meta.controller.updateIndex(i);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = registry.getController(type);\n          var _defaults$datasets$ty = _helpersDataset.d.datasets[type],\n            datasetElementType = _defaults$datasets$ty.datasetElementType,\n            dataElementType = _defaults$datasets$ty.dataElementType;\n          Object.assign(ControllerClass, {\n            dataElementType: registry.getElement(dataElementType),\n            datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n          });\n          meta.controller = new ControllerClass(this, i);\n          newControllers.push(meta.controller);\n        }\n      }\n      this._updateMetasets();\n      return newControllers;\n    }\n  }, {\n    key: \"_resetElements\",\n    value: function _resetElements() {\n      var _this13 = this;\n      (0, _helpersDataset.F)(this.data.datasets, function (dataset, datasetIndex) {\n        _this13.getDatasetMeta(datasetIndex).controller.reset();\n      }, this);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._resetElements();\n      this.notifyPlugins('reset');\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var config = this.config;\n      config.update();\n      var options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n      var animsDisabled = this._animationsDisabled = !options.animation;\n      this._updateScales();\n      this._checkEventBindings();\n      this._updateHiddenIndices();\n      this._plugins.invalidate();\n      if (this.notifyPlugins('beforeUpdate', {\n        mode: mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      var newControllers = this.buildOrUpdateControllers();\n      this.notifyPlugins('beforeElementsUpdate');\n      var minPadding = 0;\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n        var _this$getDatasetMeta = this.getDatasetMeta(i),\n          controller = _this$getDatasetMeta.controller;\n        var reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n        controller.buildOrUpdateElements(reset);\n        minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n      }\n      minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n      this._updateLayout(minPadding);\n      if (!animsDisabled) {\n        (0, _helpersDataset.F)(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n      this._updateDatasets(mode);\n      this.notifyPlugins('afterUpdate', {\n        mode: mode\n      });\n      this._layers.sort(compare2Level('z', '_idx'));\n      var _active = this._active,\n        _lastEvent = this._lastEvent;\n      if (_lastEvent) {\n        this._eventHandler(_lastEvent, true);\n      } else if (_active.length) {\n        this._updateHoverStyles(_active, _active, true);\n      }\n      this.render();\n    }\n  }, {\n    key: \"_updateScales\",\n    value: function _updateScales() {\n      var _this14 = this;\n      (0, _helpersDataset.F)(this.scales, function (scale) {\n        layouts.removeBox(_this14, scale);\n      });\n      this.ensureScalesHaveIDs();\n      this.buildOrUpdateScales();\n    }\n  }, {\n    key: \"_checkEventBindings\",\n    value: function _checkEventBindings() {\n      var options = this.options;\n      var existingEvents = new Set(Object.keys(this._listeners));\n      var newEvents = new Set(options.events);\n      if (!(0, _helpersDataset.ag)(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n        this.unbindEvents();\n        this.bindEvents();\n      }\n    }\n  }, {\n    key: \"_updateHiddenIndices\",\n    value: function _updateHiddenIndices() {\n      var _hiddenIndices = this._hiddenIndices;\n      var changes = this._getUniformDataChanges() || [];\n      var _iterator13 = _createForOfIteratorHelper(changes),\n        _step13;\n      try {\n        for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n          var _step13$value = _step13.value,\n            method = _step13$value.method,\n            start = _step13$value.start,\n            count = _step13$value.count;\n          var move = method === '_removeElements' ? -count : count;\n          moveNumericKeys(_hiddenIndices, start, move);\n        }\n      } catch (err) {\n        _iterator13.e(err);\n      } finally {\n        _iterator13.f();\n      }\n    }\n  }, {\n    key: \"_getUniformDataChanges\",\n    value: function _getUniformDataChanges() {\n      var _dataChanges = this._dataChanges;\n      if (!_dataChanges || !_dataChanges.length) {\n        return;\n      }\n      this._dataChanges = [];\n      var datasetCount = this.data.datasets.length;\n      var makeSet = function makeSet(idx) {\n        return new Set(_dataChanges.filter(function (c) {\n          return c[0] === idx;\n        }).map(function (c, i) {\n          return i + ',' + c.splice(1).join(',');\n        }));\n      };\n      var changeSet = makeSet(0);\n      for (var i = 1; i < datasetCount; i++) {\n        if (!(0, _helpersDataset.ag)(changeSet, makeSet(i))) {\n          return;\n        }\n      }\n      return Array.from(changeSet).map(function (c) {\n        return c.split(',');\n      }).map(function (a) {\n        return {\n          method: a[1],\n          start: +a[2],\n          count: +a[3]\n        };\n      });\n    }\n  }, {\n    key: \"_updateLayout\",\n    value: function _updateLayout(minPadding) {\n      var _this15 = this;\n      if (this.notifyPlugins('beforeLayout', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      layouts.update(this, this.width, this.height, minPadding);\n      var area = this.chartArea;\n      var noArea = area.width <= 0 || area.height <= 0;\n      this._layers = [];\n      (0, _helpersDataset.F)(this.boxes, function (box) {\n        var _this15$_layers;\n        if (noArea && box.position === 'chartArea') {\n          return;\n        }\n        if (box.configure) {\n          box.configure();\n        }\n        (_this15$_layers = _this15._layers).push.apply(_this15$_layers, (0, _toConsumableArray2.default)(box._layers()));\n      }, this);\n      this._layers.forEach(function (item, index) {\n        item._idx = index;\n      });\n      this.notifyPlugins('afterLayout');\n    }\n  }, {\n    key: \"_updateDatasets\",\n    value: function _updateDatasets(mode) {\n      if (this.notifyPlugins('beforeDatasetsUpdate', {\n        mode: mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        this.getDatasetMeta(i).controller.configure();\n      }\n      for (var _i5 = 0, _ilen = this.data.datasets.length; _i5 < _ilen; ++_i5) {\n        this._updateDataset(_i5, (0, _helpersDataset.a7)(mode) ? mode({\n          datasetIndex: _i5\n        }) : mode);\n      }\n      this.notifyPlugins('afterDatasetsUpdate', {\n        mode: mode\n      });\n    }\n  }, {\n    key: \"_updateDataset\",\n    value: function _updateDataset(index, mode) {\n      var meta = this.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        mode: mode,\n        cancelable: true\n      };\n      if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n        return;\n      }\n      meta.controller._update(mode);\n      args.cancelable = false;\n      this.notifyPlugins('afterDatasetUpdate', args);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.notifyPlugins('beforeRender', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      if (animator.has(this)) {\n        if (this.attached && !animator.running(this)) {\n          animator.start(this);\n        }\n      } else {\n        this.draw();\n        onAnimationsComplete({\n          chart: this\n        });\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var i;\n      if (this._resizeBeforeDraw) {\n        var _this$_resizeBeforeDr = this._resizeBeforeDraw,\n          width = _this$_resizeBeforeDr.width,\n          height = _this$_resizeBeforeDr.height;\n        this._resizeBeforeDraw = null;\n        this._resize(width, height);\n      }\n      this.clear();\n      if (this.width <= 0 || this.height <= 0) {\n        return;\n      }\n      if (this.notifyPlugins('beforeDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      var layers = this._layers;\n      for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n        layers[i].draw(this.chartArea);\n      }\n      this._drawDatasets();\n      for (; i < layers.length; ++i) {\n        layers[i].draw(this.chartArea);\n      }\n      this.notifyPlugins('afterDraw');\n    }\n  }, {\n    key: \"_getSortedDatasetMetas\",\n    value: function _getSortedDatasetMetas(filterVisible) {\n      var metasets = this._sortedMetasets;\n      var result = [];\n      var i, ilen;\n      for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n        var meta = metasets[i];\n        if (!filterVisible || meta.visible) {\n          result.push(meta);\n        }\n      }\n      return result;\n    }\n  }, {\n    key: \"getSortedVisibleDatasetMetas\",\n    value: function getSortedVisibleDatasetMetas() {\n      return this._getSortedDatasetMetas(true);\n    }\n  }, {\n    key: \"_drawDatasets\",\n    value: function _drawDatasets() {\n      if (this.notifyPlugins('beforeDatasetsDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      var metasets = this.getSortedVisibleDatasetMetas();\n      for (var i = metasets.length - 1; i >= 0; --i) {\n        this._drawDataset(metasets[i]);\n      }\n      this.notifyPlugins('afterDatasetsDraw');\n    }\n  }, {\n    key: \"_drawDataset\",\n    value: function _drawDataset(meta) {\n      var ctx = this.ctx;\n      var args = {\n        meta: meta,\n        index: meta.index,\n        cancelable: true\n      };\n      var clip = (0, _helpersDataset.ah)(this, meta);\n      if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n        return;\n      }\n      if (clip) {\n        (0, _helpersDataset.Y)(ctx, clip);\n      }\n      meta.controller.draw();\n      if (clip) {\n        (0, _helpersDataset.$)(ctx);\n      }\n      args.cancelable = false;\n      this.notifyPlugins('afterDatasetDraw', args);\n    }\n  }, {\n    key: \"isPointInArea\",\n    value: function isPointInArea(point) {\n      return (0, _helpersDataset.C)(point, this.chartArea, this._minPadding);\n    }\n  }, {\n    key: \"getElementsAtEventForMode\",\n    value: function getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n      var method = Interaction.modes[mode];\n      if (typeof method === 'function') {\n        return method(this, e, options, useFinalPosition);\n      }\n      return [];\n    }\n  }, {\n    key: \"getDatasetMeta\",\n    value: function getDatasetMeta(datasetIndex) {\n      var dataset = this.data.datasets[datasetIndex];\n      var metasets = this._metasets;\n      var meta = metasets.filter(function (x) {\n        return x && x._dataset === dataset;\n      }).pop();\n      if (!meta) {\n        meta = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          xAxisID: null,\n          yAxisID: null,\n          order: dataset && dataset.order || 0,\n          index: datasetIndex,\n          _dataset: dataset,\n          _parsed: [],\n          _sorted: false\n        };\n        metasets.push(meta);\n      }\n      return meta;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext() {\n      return this.$context || (this.$context = (0, _helpersDataset.j)(null, {\n        chart: this,\n        type: 'chart'\n      }));\n    }\n  }, {\n    key: \"getVisibleDatasetCount\",\n    value: function getVisibleDatasetCount() {\n      return this.getSortedVisibleDatasetMetas().length;\n    }\n  }, {\n    key: \"isDatasetVisible\",\n    value: function isDatasetVisible(datasetIndex) {\n      var dataset = this.data.datasets[datasetIndex];\n      if (!dataset) {\n        return false;\n      }\n      var meta = this.getDatasetMeta(datasetIndex);\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n  }, {\n    key: \"setDatasetVisibility\",\n    value: function setDatasetVisibility(datasetIndex, visible) {\n      var meta = this.getDatasetMeta(datasetIndex);\n      meta.hidden = !visible;\n    }\n  }, {\n    key: \"toggleDataVisibility\",\n    value: function toggleDataVisibility(index) {\n      this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n  }, {\n    key: \"getDataVisibility\",\n    value: function getDataVisibility(index) {\n      return !this._hiddenIndices[index];\n    }\n  }, {\n    key: \"_updateVisibility\",\n    value: function _updateVisibility(datasetIndex, dataIndex, visible) {\n      var mode = visible ? 'show' : 'hide';\n      var meta = this.getDatasetMeta(datasetIndex);\n      var anims = meta.controller._resolveAnimations(undefined, mode);\n      if ((0, _helpersDataset.h)(dataIndex)) {\n        meta.data[dataIndex].hidden = !visible;\n        this.update();\n      } else {\n        this.setDatasetVisibility(datasetIndex, visible);\n        anims.update(meta, {\n          visible: visible\n        });\n        this.update(function (ctx) {\n          return ctx.datasetIndex === datasetIndex ? mode : undefined;\n        });\n      }\n    }\n  }, {\n    key: \"hide\",\n    value: function hide(datasetIndex, dataIndex) {\n      this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n  }, {\n    key: \"show\",\n    value: function show(datasetIndex, dataIndex) {\n      this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n  }, {\n    key: \"_destroyDatasetMeta\",\n    value: function _destroyDatasetMeta(datasetIndex) {\n      var meta = this._metasets[datasetIndex];\n      if (meta && meta.controller) {\n        meta.controller._destroy();\n      }\n      delete this._metasets[datasetIndex];\n    }\n  }, {\n    key: \"_stop\",\n    value: function _stop() {\n      var i, ilen;\n      this.stop();\n      animator.remove(this);\n      for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.notifyPlugins('beforeDestroy');\n      var canvas = this.canvas,\n        ctx = this.ctx;\n      this._stop();\n      this.config.clearCache();\n      if (canvas) {\n        this.unbindEvents();\n        (0, _helpersDataset.af)(canvas, ctx);\n        this.platform.releaseContext(ctx);\n        this.canvas = null;\n        this.ctx = null;\n      }\n      delete instances[this.id];\n      this.notifyPlugins('afterDestroy');\n    }\n  }, {\n    key: \"toBase64Image\",\n    value: function toBase64Image() {\n      var _this$canvas;\n      return (_this$canvas = this.canvas).toDataURL.apply(_this$canvas, arguments);\n    }\n  }, {\n    key: \"bindEvents\",\n    value: function bindEvents() {\n      this.bindUserEvents();\n      if (this.options.responsive) {\n        this.bindResponsiveEvents();\n      } else {\n        this.attached = true;\n      }\n    }\n  }, {\n    key: \"bindUserEvents\",\n    value: function bindUserEvents() {\n      var _this16 = this;\n      var listeners = this._listeners;\n      var platform = this.platform;\n      var _add = function _add(type, listener) {\n        platform.addEventListener(_this16, type, listener);\n        listeners[type] = listener;\n      };\n      var listener = function listener(e, x, y) {\n        e.offsetX = x;\n        e.offsetY = y;\n        _this16._eventHandler(e);\n      };\n      (0, _helpersDataset.F)(this.options.events, function (type) {\n        return _add(type, listener);\n      });\n    }\n  }, {\n    key: \"bindResponsiveEvents\",\n    value: function bindResponsiveEvents() {\n      var _this17 = this;\n      if (!this._responsiveListeners) {\n        this._responsiveListeners = {};\n      }\n      var listeners = this._responsiveListeners;\n      var platform = this.platform;\n      var _add = function _add(type, listener) {\n        platform.addEventListener(_this17, type, listener);\n        listeners[type] = listener;\n      };\n      var _remove = function _remove(type, listener) {\n        if (listeners[type]) {\n          platform.removeEventListener(_this17, type, listener);\n          delete listeners[type];\n        }\n      };\n      var listener = function listener(width, height) {\n        if (_this17.canvas) {\n          _this17.resize(width, height);\n        }\n      };\n      var detached;\n      var _attached = function attached() {\n        _remove('attach', _attached);\n        _this17.attached = true;\n        _this17.resize();\n        _add('resize', listener);\n        _add('detach', detached);\n      };\n      detached = function detached() {\n        _this17.attached = false;\n        _remove('resize', listener);\n        _this17._stop();\n        _this17._resize(0, 0);\n        _add('attach', _attached);\n      };\n      if (platform.isAttached(this.canvas)) {\n        _attached();\n      } else {\n        detached();\n      }\n    }\n  }, {\n    key: \"unbindEvents\",\n    value: function unbindEvents() {\n      var _this18 = this;\n      (0, _helpersDataset.F)(this._listeners, function (listener, type) {\n        _this18.platform.removeEventListener(_this18, type, listener);\n      });\n      this._listeners = {};\n      (0, _helpersDataset.F)(this._responsiveListeners, function (listener, type) {\n        _this18.platform.removeEventListener(_this18, type, listener);\n      });\n      this._responsiveListeners = undefined;\n    }\n  }, {\n    key: \"updateHoverStyle\",\n    value: function updateHoverStyle(items, mode, enabled) {\n      var prefix = enabled ? 'set' : 'remove';\n      var meta, item, i, ilen;\n      if (mode === 'dataset') {\n        meta = this.getDatasetMeta(items[0].datasetIndex);\n        meta.controller['_' + prefix + 'DatasetHoverStyle']();\n      }\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        item = items[i];\n        var controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n        if (controller) {\n          controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n        }\n      }\n    }\n  }, {\n    key: \"getActiveElements\",\n    value: function getActiveElements() {\n      return this._active || [];\n    }\n  }, {\n    key: \"setActiveElements\",\n    value: function setActiveElements(activeElements) {\n      var _this19 = this;\n      var lastActive = this._active || [];\n      var active = activeElements.map(function (_ref4) {\n        var datasetIndex = _ref4.datasetIndex,\n          index = _ref4.index;\n        var meta = _this19.getDatasetMeta(datasetIndex);\n        if (!meta) {\n          throw new Error('No dataset found at index ' + datasetIndex);\n        }\n        return {\n          datasetIndex: datasetIndex,\n          element: meta.data[index],\n          index: index\n        };\n      });\n      var changed = !(0, _helpersDataset.ai)(active, lastActive);\n      if (changed) {\n        this._active = active;\n        this._lastEvent = null;\n        this._updateHoverStyles(active, lastActive);\n      }\n    }\n  }, {\n    key: \"notifyPlugins\",\n    value: function notifyPlugins(hook, args, filter) {\n      return this._plugins.notify(this, hook, args, filter);\n    }\n  }, {\n    key: \"isPluginEnabled\",\n    value: function isPluginEnabled(pluginId) {\n      return this._plugins._cache.filter(function (p) {\n        return p.plugin.id === pluginId;\n      }).length === 1;\n    }\n  }, {\n    key: \"_updateHoverStyles\",\n    value: function _updateHoverStyles(active, lastActive, replay) {\n      var hoverOptions = this.options.hover;\n      var diff = function diff(a, b) {\n        return a.filter(function (x) {\n          return !b.some(function (y) {\n            return x.datasetIndex === y.datasetIndex && x.index === y.index;\n          });\n        });\n      };\n      var deactivated = diff(lastActive, active);\n      var activated = replay ? active : diff(active, lastActive);\n      if (deactivated.length) {\n        this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n      }\n      if (activated.length && hoverOptions.mode) {\n        this.updateHoverStyle(activated, hoverOptions.mode, true);\n      }\n    }\n  }, {\n    key: \"_eventHandler\",\n    value: function _eventHandler(e, replay) {\n      var _this20 = this;\n      var args = {\n        event: e,\n        replay: replay,\n        cancelable: true,\n        inChartArea: this.isPointInArea(e)\n      };\n      var eventFilter = function eventFilter(plugin) {\n        return (plugin.options.events || _this20.options.events).includes(e.native.type);\n      };\n      if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n        return;\n      }\n      var changed = this._handleEvent(e, replay, args.inChartArea);\n      args.cancelable = false;\n      this.notifyPlugins('afterEvent', args, eventFilter);\n      if (changed || args.changed) {\n        this.render();\n      }\n      return this;\n    }\n  }, {\n    key: \"_handleEvent\",\n    value: function _handleEvent(e, replay, inChartArea) {\n      var _this$_active = this._active,\n        lastActive = _this$_active === void 0 ? [] : _this$_active,\n        options = this.options;\n      var useFinalPosition = replay;\n      var active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n      var isClick = (0, _helpersDataset.aj)(e);\n      var lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n      if (inChartArea) {\n        this._lastEvent = null;\n        (0, _helpersDataset.Q)(options.onHover, [e, active, this], this);\n        if (isClick) {\n          (0, _helpersDataset.Q)(options.onClick, [e, active, this], this);\n        }\n      }\n      var changed = !(0, _helpersDataset.ai)(active, lastActive);\n      if (changed || replay) {\n        this._active = active;\n        this._updateHoverStyles(active, lastActive, replay);\n      }\n      this._lastEvent = lastEvent;\n      return changed;\n    }\n  }, {\n    key: \"_getActiveElements\",\n    value: function _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n      if (e.type === 'mouseout') {\n        return [];\n      }\n      if (!inChartArea) {\n        return lastActive;\n      }\n      var hoverOptions = this.options.hover;\n      return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n  }], [{\n    key: \"register\",\n    value: function register() {\n      registry.add.apply(registry, arguments);\n      invalidatePlugins();\n    }\n  }, {\n    key: \"unregister\",\n    value: function unregister() {\n      registry.remove.apply(registry, arguments);\n      invalidatePlugins();\n    }\n  }]);\n}();\n(0, _defineProperty2.default)(Chart, \"defaults\", _helpersDataset.d);\n(0, _defineProperty2.default)(Chart, \"instances\", instances);\n(0, _defineProperty2.default)(Chart, \"overrides\", _helpersDataset.a3);\n(0, _defineProperty2.default)(Chart, \"registry\", registry);\n(0, _defineProperty2.default)(Chart, \"version\", version);\n(0, _defineProperty2.default)(Chart, \"getChart\", getChart);\nfunction invalidatePlugins() {\n  return (0, _helpersDataset.F)(Chart.instances, function (chart) {\n    return chart._plugins.invalidate();\n  });\n}\nfunction clipArc(ctx, element, endAngle) {\n  var startAngle = element.startAngle,\n    pixelMargin = element.pixelMargin,\n    x = element.x,\n    y = element.y,\n    outerRadius = element.outerRadius,\n    innerRadius = element.innerRadius;\n  var angleMargin = pixelMargin / outerRadius;\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + _helpersDataset.H, startAngle - _helpersDataset.H);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return (0, _helpersDataset.al)(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  var o = toRadiusCorners(arc.options.borderRadius);\n  var halfThickness = (outerRadius - innerRadius) / 2;\n  var innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  var computeOuterLimit = function computeOuterLimit(val) {\n    var outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return (0, _helpersDataset.S)(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: (0, _helpersDataset.S)(o.innerStart, 0, innerLimit),\n    innerEnd: (0, _helpersDataset.S)(o.innerEnd, 0, innerLimit)\n  };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta)\n  };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(ctx, element, offset, spacing, end, circular) {\n  var x = element.x,\n    y = element.y,\n    start = element.startAngle,\n    pixelMargin = element.pixelMargin,\n    innerR = element.innerRadius;\n  var outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  var innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  var spacingOffset = 0;\n  var alpha = end - start;\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    var noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    var noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    var avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    var adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  var beta = Math.max(0.001, alpha * outerRadius - offset / _helpersDataset.P) / outerRadius;\n  var angleOffset = (alpha - beta) / 2;\n  var startAngle = start + angleOffset + spacingOffset;\n  var endAngle = end - angleOffset - spacingOffset;\n  var _parseBorderRadius$ = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle),\n    outerStart = _parseBorderRadius$.outerStart,\n    outerEnd = _parseBorderRadius$.outerEnd,\n    innerStart = _parseBorderRadius$.innerStart,\n    innerEnd = _parseBorderRadius$.innerEnd;\n  var outerStartAdjustedRadius = outerRadius - outerStart;\n  var outerEndAdjustedRadius = outerRadius - outerEnd;\n  var outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  var outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  var innerStartAdjustedRadius = innerRadius + innerStart;\n  var innerEndAdjustedRadius = innerRadius + innerEnd;\n  var innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  var innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    var outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      var pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + _helpersDataset.H);\n    }\n    // The line from point 3 to point 4\n    var p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      var _pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(_pCenter.x, _pCenter.y, innerEnd, endAngle + _helpersDataset.H, innerEndAdjustedAngle + Math.PI);\n    }\n    // The inner arc from point 5 to point b to point 6\n    var innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      var _pCenter2 = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(_pCenter2.x, _pCenter2.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - _helpersDataset.H);\n    }\n    // The line from point 7 to point 8\n    var p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      var _pCenter3 = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(_pCenter3.x, _pCenter3.y, outerStart, startAngle - _helpersDataset.H, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n    var outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    var outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n    var outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    var outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n  var fullCircles = element.fullCircles,\n    startAngle = element.startAngle,\n    circumference = element.circumference;\n  var endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (var i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % _helpersDataset.T || _helpersDataset.T);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n  var fullCircles = element.fullCircles,\n    startAngle = element.startAngle,\n    circumference = element.circumference,\n    options = element.options;\n  var borderWidth = options.borderWidth,\n    borderJoinStyle = options.borderJoinStyle,\n    borderDash = options.borderDash,\n    borderDashOffset = options.borderDashOffset;\n  var inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  var endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (var i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % _helpersDataset.T || _helpersDataset.T);\n    }\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\nvar ArcElement = exports.ArcElement = /*#__PURE__*/function (_Element2) {\n  function ArcElement(cfg) {\n    var _this21;\n    (0, _classCallCheck2.default)(this, ArcElement);\n    _this21 = _callSuper(this, ArcElement);\n    (0, _defineProperty2.default)(_this21, \"circumference\", void 0);\n    (0, _defineProperty2.default)(_this21, \"endAngle\", void 0);\n    (0, _defineProperty2.default)(_this21, \"fullCircles\", void 0);\n    (0, _defineProperty2.default)(_this21, \"innerRadius\", void 0);\n    (0, _defineProperty2.default)(_this21, \"outerRadius\", void 0);\n    (0, _defineProperty2.default)(_this21, \"pixelMargin\", void 0);\n    (0, _defineProperty2.default)(_this21, \"startAngle\", void 0);\n    _this21.options = undefined;\n    _this21.circumference = undefined;\n    _this21.startAngle = undefined;\n    _this21.endAngle = undefined;\n    _this21.innerRadius = undefined;\n    _this21.outerRadius = undefined;\n    _this21.pixelMargin = 0;\n    _this21.fullCircles = 0;\n    if (cfg) {\n      Object.assign(_this21, cfg);\n    }\n    return _this21;\n  }\n  (0, _inherits2.default)(ArcElement, _Element2);\n  return (0, _createClass2.default)(ArcElement, [{\n    key: \"inRange\",\n    value: function inRange(chartX, chartY, useFinalPosition) {\n      var point = this.getProps(['x', 'y'], useFinalPosition);\n      var _getAngleFromPoint2 = (0, _helpersDataset.D)(point, {\n          x: chartX,\n          y: chartY\n        }),\n        angle = _getAngleFromPoint2.angle,\n        distance = _getAngleFromPoint2.distance;\n      var _this$getProps2 = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition),\n        startAngle = _this$getProps2.startAngle,\n        endAngle = _this$getProps2.endAngle,\n        innerRadius = _this$getProps2.innerRadius,\n        outerRadius = _this$getProps2.outerRadius,\n        circumference = _this$getProps2.circumference;\n      var rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n      var _circumference = (0, _helpersDataset.v)(circumference, endAngle - startAngle);\n      var nonZeroBetween = (0, _helpersDataset.p)(angle, startAngle, endAngle) && startAngle !== endAngle;\n      var betweenAngles = _circumference >= _helpersDataset.T || nonZeroBetween;\n      var withinRadius = (0, _helpersDataset.ak)(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n      return betweenAngles && withinRadius;\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps3 = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius'], useFinalPosition),\n        x = _this$getProps3.x,\n        y = _this$getProps3.y,\n        startAngle = _this$getProps3.startAngle,\n        endAngle = _this$getProps3.endAngle,\n        innerRadius = _this$getProps3.innerRadius,\n        outerRadius = _this$getProps3.outerRadius;\n      var _this$options11 = this.options,\n        offset = _this$options11.offset,\n        spacing = _this$options11.spacing;\n      var halfAngle = (startAngle + endAngle) / 2;\n      var halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n      return {\n        x: x + Math.cos(halfAngle) * halfRadius,\n        y: y + Math.sin(halfAngle) * halfRadius\n      };\n    }\n  }, {\n    key: \"tooltipPosition\",\n    value: function tooltipPosition(useFinalPosition) {\n      return this.getCenterPoint(useFinalPosition);\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var options = this.options,\n        circumference = this.circumference;\n      var offset = (options.offset || 0) / 4;\n      var spacing = (options.spacing || 0) / 2;\n      var circular = options.circular;\n      this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n      this.fullCircles = circumference > _helpersDataset.T ? Math.floor(circumference / _helpersDataset.T) : 0;\n      if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n        return;\n      }\n      ctx.save();\n      var halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n      var fix = 1 - Math.sin(Math.min(_helpersDataset.P, circumference || 0));\n      var radiusOffset = offset * fix;\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      drawArc(ctx, this, radiusOffset, spacing, circular);\n      drawBorder(ctx, this, radiusOffset, spacing, circular);\n      ctx.restore();\n    }\n  }]);\n}(Element);\n(0, _defineProperty2.default)(ArcElement, \"id\", 'arc');\n(0, _defineProperty2.default)(ArcElement, \"defaults\", {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n  circular: true\n});\n(0, _defineProperty2.default)(ArcElement, \"defaultRoutes\", {\n  backgroundColor: 'backgroundColor'\n});\n(0, _defineProperty2.default)(ArcElement, \"descriptors\", {\n  _scriptable: true,\n  _indexable: function _indexable(name) {\n    return name !== 'borderDash';\n  }\n});\nfunction setStyle(ctx, options) {\n  var style = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : options;\n  ctx.lineCap = (0, _helpersDataset.v)(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash((0, _helpersDataset.v)(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = (0, _helpersDataset.v)(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = (0, _helpersDataset.v)(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = (0, _helpersDataset.v)(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = (0, _helpersDataset.v)(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _helpersDataset.as;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _helpersDataset.at;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment) {\n  var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var count = points.length;\n  var _params$start = params.start,\n    paramsStart = _params$start === void 0 ? 0 : _params$start,\n    _params$end = params.end,\n    paramsEnd = _params$end === void 0 ? count - 1 : _params$end;\n  var segmentStart = segment.start,\n    segmentEnd = segment.end;\n  var start = Math.max(paramsStart, segmentStart);\n  var end = Math.min(paramsEnd, segmentEnd);\n  var outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count: count,\n    start: start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  var points = line.points,\n    options = line.options;\n  var _pathVars = pathVars(points, segment, params),\n    count = _pathVars.count,\n    start = _pathVars.start,\n    loop = _pathVars.loop,\n    ilen = _pathVars.ilen;\n  var lineMethod = getLineMethod(options);\n  var _ref5 = params || {},\n    _ref5$move = _ref5.move,\n    move = _ref5$move === void 0 ? true : _ref5$move,\n    reverse = _ref5.reverse;\n  var i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  var points = line.points;\n  var _pathVars2 = pathVars(points, segment, params),\n    count = _pathVars2.count,\n    start = _pathVars2.start,\n    ilen = _pathVars2.ilen;\n  var _ref6 = params || {},\n    _ref6$move = _ref6.move,\n    move = _ref6$move === void 0 ? true : _ref6$move,\n    reverse = _ref6.reverse;\n  var avgX = 0;\n  var countX = 0;\n  var i, point, prevX, minY, maxY, lastY;\n  var pointIndex = function pointIndex(index) {\n    return (start + (reverse ? ilen - index : index)) % count;\n  };\n  var drawX = function drawX() {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    var x = point.x;\n    var y = point.y;\n    var truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  var opts = line.options;\n  var borderDash = opts.borderDash && opts.borderDash.length;\n  var useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _helpersDataset.ap;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _helpersDataset.aq;\n  }\n  return _helpersDataset.ar;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  var path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  var segments = line.segments,\n    options = line.options;\n  var segmentMethod = _getSegmentMethod(line);\n  var _iterator14 = _createForOfIteratorHelper(segments),\n    _step14;\n  try {\n    for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n      var segment = _step14.value;\n      setStyle(ctx, options, segment.style);\n      ctx.beginPath();\n      if (segmentMethod(ctx, line, segment, {\n        start: start,\n        end: start + count - 1\n      })) {\n        ctx.closePath();\n      }\n      ctx.stroke();\n    }\n  } catch (err) {\n    _iterator14.e(err);\n  } finally {\n    _iterator14.f();\n  }\n}\nvar usePath2D = typeof Path2D === 'function';\nfunction _draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nvar LineElement = exports.LineElement = /*#__PURE__*/function (_Element3) {\n  function LineElement(cfg) {\n    var _this22;\n    (0, _classCallCheck2.default)(this, LineElement);\n    _this22 = _callSuper(this, LineElement);\n    _this22.animated = true;\n    _this22.options = undefined;\n    _this22._chart = undefined;\n    _this22._loop = undefined;\n    _this22._fullLoop = undefined;\n    _this22._path = undefined;\n    _this22._points = undefined;\n    _this22._segments = undefined;\n    _this22._decimated = false;\n    _this22._pointsUpdated = false;\n    _this22._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(_this22, cfg);\n    }\n    return _this22;\n  }\n  (0, _inherits2.default)(LineElement, _Element3);\n  return (0, _createClass2.default)(LineElement, [{\n    key: \"updateControlPoints\",\n    value: function updateControlPoints(chartArea, indexAxis) {\n      var options = this.options;\n      if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n        var loop = options.spanGaps ? this._loop : this._fullLoop;\n        (0, _helpersDataset.am)(this._points, options, chartArea, loop, indexAxis);\n        this._pointsUpdated = true;\n      }\n    }\n  }, {\n    key: \"points\",\n    get: function get() {\n      return this._points;\n    },\n    set: function set(points) {\n      this._points = points;\n      delete this._segments;\n      delete this._path;\n      this._pointsUpdated = false;\n    }\n  }, {\n    key: \"segments\",\n    get: function get() {\n      return this._segments || (this._segments = (0, _helpersDataset.an)(this, this.options.segment));\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      var segments = this.segments;\n      var points = this.points;\n      return segments.length && points[segments[0].start];\n    }\n  }, {\n    key: \"last\",\n    value: function last() {\n      var segments = this.segments;\n      var points = this.points;\n      var count = segments.length;\n      return count && points[segments[count - 1].end];\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(point, property) {\n      var options = this.options;\n      var value = point[property];\n      var points = this.points;\n      var segments = (0, _helpersDataset.ao)(this, {\n        property: property,\n        start: value,\n        end: value\n      });\n      if (!segments.length) {\n        return;\n      }\n      var result = [];\n      var _interpolate = _getInterpolationMethod(options);\n      var i, ilen;\n      for (i = 0, ilen = segments.length; i < ilen; ++i) {\n        var _segments$i = segments[i],\n          start = _segments$i.start,\n          end = _segments$i.end;\n        var p1 = points[start];\n        var p2 = points[end];\n        if (p1 === p2) {\n          result.push(p1);\n          continue;\n        }\n        var t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n        var interpolated = _interpolate(p1, p2, t, options.stepped);\n        interpolated[property] = point[property];\n        result.push(interpolated);\n      }\n      return result.length === 1 ? result[0] : result;\n    }\n  }, {\n    key: \"pathSegment\",\n    value: function pathSegment(ctx, segment, params) {\n      var segmentMethod = _getSegmentMethod(this);\n      return segmentMethod(ctx, this, segment, params);\n    }\n  }, {\n    key: \"path\",\n    value: function path(ctx, start, count) {\n      var segments = this.segments;\n      var segmentMethod = _getSegmentMethod(this);\n      var loop = this._loop;\n      start = start || 0;\n      count = count || this.points.length - start;\n      var _iterator15 = _createForOfIteratorHelper(segments),\n        _step15;\n      try {\n        for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n          var segment = _step15.value;\n          loop &= segmentMethod(ctx, this, segment, {\n            start: start,\n            end: start + count - 1\n          });\n        }\n      } catch (err) {\n        _iterator15.e(err);\n      } finally {\n        _iterator15.f();\n      }\n      return !!loop;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx, chartArea, start, count) {\n      var options = this.options || {};\n      var points = this.points || [];\n      if (points.length && options.borderWidth) {\n        ctx.save();\n        _draw(ctx, this, start, count);\n        ctx.restore();\n      }\n      if (this.animated) {\n        this._pointsUpdated = false;\n        this._path = undefined;\n      }\n    }\n  }]);\n}(Element);\n(0, _defineProperty2.default)(LineElement, \"id\", 'line');\n(0, _defineProperty2.default)(LineElement, \"defaults\", {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0\n});\n(0, _defineProperty2.default)(LineElement, \"defaultRoutes\", {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n});\n(0, _defineProperty2.default)(LineElement, \"descriptors\", {\n  _scriptable: true,\n  _indexable: function _indexable(name) {\n    return name !== 'borderDash' && name !== 'fill';\n  }\n});\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  var options = el.options;\n  var _el$getProps = el.getProps([axis], useFinalPosition),\n    value = _el$getProps[axis];\n  return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nvar PointElement = exports.PointElement = /*#__PURE__*/function (_Element4) {\n  /**\n  * @type {any}\n  */\n\n  /**\n  * @type {any}\n  */\n\n  function PointElement(cfg) {\n    var _this23;\n    (0, _classCallCheck2.default)(this, PointElement);\n    _this23 = _callSuper(this, PointElement);\n    (0, _defineProperty2.default)(_this23, \"parsed\", void 0);\n    (0, _defineProperty2.default)(_this23, \"skip\", void 0);\n    (0, _defineProperty2.default)(_this23, \"stop\", void 0);\n    _this23.options = undefined;\n    _this23.parsed = undefined;\n    _this23.skip = undefined;\n    _this23.stop = undefined;\n    if (cfg) {\n      Object.assign(_this23, cfg);\n    }\n    return _this23;\n  }\n  (0, _inherits2.default)(PointElement, _Element4);\n  return (0, _createClass2.default)(PointElement, [{\n    key: \"inRange\",\n    value: function inRange(mouseX, mouseY, useFinalPosition) {\n      var options = this.options;\n      var _this$getProps4 = this.getProps(['x', 'y'], useFinalPosition),\n        x = _this$getProps4.x,\n        y = _this$getProps4.y;\n      return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n  }, {\n    key: \"inXRange\",\n    value: function inXRange(mouseX, useFinalPosition) {\n      return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n  }, {\n    key: \"inYRange\",\n    value: function inYRange(mouseY, useFinalPosition) {\n      return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps5 = this.getProps(['x', 'y'], useFinalPosition),\n        x = _this$getProps5.x,\n        y = _this$getProps5.y;\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }, {\n    key: \"size\",\n    value: function size(options) {\n      options = options || this.options || {};\n      var radius = options.radius || 0;\n      radius = Math.max(radius, radius && options.hoverRadius || 0);\n      var borderWidth = radius && options.borderWidth || 0;\n      return (radius + borderWidth) * 2;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx, area) {\n      var options = this.options;\n      if (this.skip || options.radius < 0.1 || !(0, _helpersDataset.C)(this, area, this.size(options) / 2)) {\n        return;\n      }\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.fillStyle = options.backgroundColor;\n      (0, _helpersDataset.au)(ctx, options, this.x, this.y);\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange() {\n      var options = this.options || {};\n      // @ts-expect-error Fallbacks should never be hit in practice\n      return options.radius + options.hitRadius;\n    }\n  }]);\n}(Element);\n(0, _defineProperty2.default)(PointElement, \"id\", 'point');\n(0, _defineProperty2.default)(PointElement, \"defaults\", {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n});\n(0, _defineProperty2.default)(PointElement, \"defaultRoutes\", {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n});\nfunction getBarBounds(bar, useFinalPosition) {\n  var _bar$getProps = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition),\n    x = _bar$getProps.x,\n    y = _bar$getProps.y,\n    base = _bar$getProps.base,\n    width = _bar$getProps.width,\n    height = _bar$getProps.height;\n  var left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {\n    left: left,\n    top: top,\n    right: right,\n    bottom: bottom\n  };\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : (0, _helpersDataset.S)(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  var value = bar.options.borderWidth;\n  var skip = bar.borderSkipped;\n  var o = (0, _helpersDataset.aw)(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  var _bar$getProps2 = bar.getProps(['enableBorderRadius']),\n    enableBorderRadius = _bar$getProps2.enableBorderRadius;\n  var value = bar.options.borderRadius;\n  var o = (0, _helpersDataset.ax)(value);\n  var maxR = Math.min(maxW, maxH);\n  var skip = bar.borderSkipped;\n  var enableBorder = enableBorderRadius || (0, _helpersDataset.i)(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  var bounds = getBarBounds(bar);\n  var width = bounds.right - bounds.left;\n  var height = bounds.bottom - bounds.top;\n  var border = parseBorderWidth(bar, width / 2, height / 2);\n  var radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius: radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n      }\n    }\n  };\n}\nfunction _inRange(bar, x, y, useFinalPosition) {\n  var skipX = x === null;\n  var skipY = y === null;\n  var skipBoth = skipX && skipY;\n  var bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds && (skipX || (0, _helpersDataset.ak)(x, bounds.left, bounds.right)) && (skipY || (0, _helpersDataset.ak)(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount) {\n  var refRect = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var x = rect.x !== refRect.x ? -amount : 0;\n  var y = rect.y !== refRect.y ? -amount : 0;\n  var w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  var h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nvar BarElement = exports.BarElement = /*#__PURE__*/function (_Element5) {\n  function BarElement(cfg) {\n    var _this24;\n    (0, _classCallCheck2.default)(this, BarElement);\n    _this24 = _callSuper(this, BarElement);\n    _this24.options = undefined;\n    _this24.horizontal = undefined;\n    _this24.base = undefined;\n    _this24.width = undefined;\n    _this24.height = undefined;\n    _this24.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(_this24, cfg);\n    }\n    return _this24;\n  }\n  (0, _inherits2.default)(BarElement, _Element5);\n  return (0, _createClass2.default)(BarElement, [{\n    key: \"draw\",\n    value: function draw(ctx) {\n      var inflateAmount = this.inflateAmount,\n        _this$options12 = this.options,\n        borderColor = _this$options12.borderColor,\n        backgroundColor = _this$options12.backgroundColor;\n      var _boundingRects = boundingRects(this),\n        inner = _boundingRects.inner,\n        outer = _boundingRects.outer;\n      var addRectPath = hasRadius(outer.radius) ? _helpersDataset.av : addNormalRectPath;\n      ctx.save();\n      if (outer.w !== inner.w || outer.h !== inner.h) {\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n        ctx.clip();\n        addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n        ctx.fillStyle = borderColor;\n        ctx.fill('evenodd');\n      }\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(inner, inflateAmount));\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }, {\n    key: \"inRange\",\n    value: function inRange(mouseX, mouseY, useFinalPosition) {\n      return _inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n  }, {\n    key: \"inXRange\",\n    value: function inXRange(mouseX, useFinalPosition) {\n      return _inRange(this, mouseX, null, useFinalPosition);\n    }\n  }, {\n    key: \"inYRange\",\n    value: function inYRange(mouseY, useFinalPosition) {\n      return _inRange(this, null, mouseY, useFinalPosition);\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps6 = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition),\n        x = _this$getProps6.x,\n        y = _this$getProps6.y,\n        base = _this$getProps6.base,\n        horizontal = _this$getProps6.horizontal;\n      return {\n        x: horizontal ? (x + base) / 2 : x,\n        y: horizontal ? y : (y + base) / 2\n      };\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange(axis) {\n      return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n  }]);\n}(Element);\n(0, _defineProperty2.default)(BarElement, \"id\", 'bar');\n(0, _defineProperty2.default)(BarElement, \"defaults\", {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n});\n(0, _defineProperty2.default)(BarElement, \"defaultRoutes\", {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n});\nvar elements = exports.elements = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ArcElement: ArcElement,\n  BarElement: BarElement,\n  LineElement: LineElement,\n  PointElement: PointElement\n});\nvar BORDER_COLORS = ['rgb(54, 162, 235)', 'rgb(255, 99, 132)', 'rgb(255, 159, 64)', 'rgb(255, 205, 86)', 'rgb(75, 192, 192)', 'rgb(153, 102, 255)', 'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nvar BACKGROUND_COLORS = /* #__PURE__ */BORDER_COLORS.map(function (color) {\n  return color.replace('rgb(', 'rgba(').replace(')', ', 0.5)');\n});\nfunction getBorderColor(i) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n  return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n  dataset.backgroundColor = dataset.data.map(function () {\n    return getBorderColor(i++);\n  });\n  return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n  dataset.backgroundColor = dataset.data.map(function () {\n    return getBackgroundColor(i++);\n  });\n  return i;\n}\nfunction getColorizer(chart) {\n  var i = 0;\n  return function (dataset, datasetIndex) {\n    var controller = chart.getDatasetMeta(datasetIndex).controller;\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\nfunction containsColorsDefinitions(descriptors) {\n  var k;\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction containsColorsDefinition(descriptor) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nfunction containsDefaultColorsDefenitions() {\n  return _helpersDataset.d.borderColor !== 'rgba(0,0,0,0.1)' || _helpersDataset.d.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\nvar plugin_colors = exports.Colors = {\n  id: 'colors',\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  },\n  beforeLayout: function beforeLayout(chart, _args, options) {\n    if (!options.enabled) {\n      return;\n    }\n    var _chart$config = chart.config,\n      datasets = _chart$config.data.datasets,\n      chartOptions = _chart$config.options;\n    var elements = chartOptions.elements;\n    var containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n    if (!options.forceOverride && containsColorDefenition) {\n      return;\n    }\n    var colorizer = getColorizer(chart);\n    datasets.forEach(colorizer);\n  }\n};\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  var samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  var decimated = [];\n  var bucketWidth = (count - 2) / (samples - 2);\n  var sampledIndex = 0;\n  var endIndex = start + count - 1;\n  var a = start;\n  var i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    var avgX = 0;\n    var avgY = 0;\n    var j = void 0;\n    var avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    var avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    var avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    var rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    var rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    var _data$a = data[a],\n      pointAx = _data$a.x,\n      pointAy = _data$a.y;\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  var avgX = 0;\n  var countX = 0;\n  var i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  var decimated = [];\n  var endIndex = start + count - 1;\n  var xMin = data[start].x;\n  var xMax = data[endIndex].x;\n  var dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    var truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      var lastIndex = i - 1;\n      if (!(0, _helpersDataset.k)(minIndex) && !(0, _helpersDataset.k)(maxIndex)) {\n        var intermediateIndex1 = Math.min(minIndex, maxIndex);\n        var intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push(_objectSpread(_objectSpread({}, data[intermediateIndex1]), {}, {\n            x: avgX\n          }));\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push(_objectSpread(_objectSpread({}, data[intermediateIndex2]), {}, {\n            x: avgX\n          }));\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    var data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data\n    });\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach(function (dataset) {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  var pointCount = points.length;\n  var start = 0;\n  var count;\n  var iScale = meta.iScale;\n  var _iScale$getUserBounds = iScale.getUserBounds(),\n    min = _iScale$getUserBounds.min,\n    max = _iScale$getUserBounds.max,\n    minDefined = _iScale$getUserBounds.minDefined,\n    maxDefined = _iScale$getUserBounds.maxDefined;\n  if (minDefined) {\n    start = (0, _helpersDataset.S)((0, _helpersDataset.B)(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = (0, _helpersDataset.S)((0, _helpersDataset.B)(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {\n    start: start,\n    count: count\n  };\n}\nvar plugin_decimation = exports.Decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false\n  },\n  beforeElementsUpdate: function beforeElementsUpdate(chart, args, options) {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    var availableWidth = chart.width;\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      var _data = dataset._data,\n        indexAxis = dataset.indexAxis;\n      var meta = chart.getDatasetMeta(datasetIndex);\n      var data = _data || dataset.data;\n      if ((0, _helpersDataset.a)([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n      var xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      var _getStartAndCountOfVi3 = getStartAndCountOfVisiblePointsSimplified(meta, data),\n        start = _getStartAndCountOfVi3.start,\n        count = _getStartAndCountOfVi3.count;\n      var threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if ((0, _helpersDataset.k)(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function get() {\n            return this._decimated;\n          },\n          set: function set(d) {\n            this._data = d;\n          }\n        });\n      }\n      var decimated;\n      switch (options.algorithm) {\n        case 'lttb':\n          decimated = lttbDecimation(data, start, count, availableWidth, options);\n          break;\n        case 'min-max':\n          decimated = minMaxDecimation(data, start, count, availableWidth);\n          break;\n        default:\n          throw new Error(\"Unsupported decimation algorithm '\".concat(options.algorithm, \"'\"));\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy: function destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\nfunction _segments(line, target, property) {\n  var segments = line.segments;\n  var points = line.points;\n  var tpoints = target.points;\n  var parts = [];\n  var _iterator16 = _createForOfIteratorHelper(segments),\n    _step16;\n  try {\n    for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n      var segment = _step16.value;\n      var start = segment.start,\n        end = segment.end;\n      end = _findSegmentEnd(start, end, points);\n      var bounds = _getBounds(property, points[start], points[end], segment.loop);\n      if (!target.segments) {\n        parts.push({\n          source: segment,\n          target: bounds,\n          start: points[start],\n          end: points[end]\n        });\n        continue;\n      }\n      var targetSegments = (0, _helpersDataset.ao)(target, bounds);\n      var _iterator17 = _createForOfIteratorHelper(targetSegments),\n        _step17;\n      try {\n        for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {\n          var tgt = _step17.value;\n          var subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n          var fillSources = (0, _helpersDataset.ay)(segment, points, subBounds);\n          var _iterator18 = _createForOfIteratorHelper(fillSources),\n            _step18;\n          try {\n            for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {\n              var fillSource = _step18.value;\n              parts.push({\n                source: fillSource,\n                target: tgt,\n                start: (0, _defineProperty2.default)({}, property, _getEdge(bounds, subBounds, 'start', Math.max)),\n                end: (0, _defineProperty2.default)({}, property, _getEdge(bounds, subBounds, 'end', Math.min))\n              });\n            }\n          } catch (err) {\n            _iterator18.e(err);\n          } finally {\n            _iterator18.f();\n          }\n        }\n      } catch (err) {\n        _iterator17.e(err);\n      } finally {\n        _iterator17.f();\n      }\n    }\n  } catch (err) {\n    _iterator16.e(err);\n  } finally {\n    _iterator16.f();\n  }\n  return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  var start = first[property];\n  var end = last[property];\n  if (property === 'angle') {\n    start = (0, _helpersDataset.az)(start);\n    end = (0, _helpersDataset.az)(end);\n  }\n  return {\n    property: property,\n    start: start,\n    end: end\n  };\n}\nfunction _pointsFromSegments(boundary, line) {\n  var _ref7 = boundary || {},\n    _ref7$x = _ref7.x,\n    x = _ref7$x === void 0 ? null : _ref7$x,\n    _ref7$y = _ref7.y,\n    y = _ref7$y === void 0 ? null : _ref7$y;\n  var linePoints = line.points;\n  var points = [];\n  line.segments.forEach(function (_ref8) {\n    var start = _ref8.start,\n      end = _ref8.end;\n    end = _findSegmentEnd(start, end, linePoints);\n    var first = linePoints[start];\n    var last = linePoints[end];\n    if (y !== null) {\n      points.push({\n        x: first.x,\n        y: y\n      });\n      points.push({\n        x: last.x,\n        y: y\n      });\n    } else if (x !== null) {\n      points.push({\n        x: x,\n        y: first.y\n      });\n      points.push({\n        x: x,\n        y: last.y\n      });\n    }\n  });\n  return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n  for (; end > start; end--) {\n    var point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _createBoundaryLine(boundary, line) {\n  var points = [];\n  var _loop = false;\n  if ((0, _helpersDataset.b)(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points: points,\n    options: {\n      tension: 0\n    },\n    _loop: _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\nfunction _resolveTarget(sources, index, propagate) {\n  var source = sources[index];\n  var fill = source.fill;\n  var visited = [index];\n  var target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!(0, _helpersDataset.g)(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _decodeFill(line, index, count) {\n  var fill = parseFillOption(line);\n  if ((0, _helpersDataset.i)(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  var target = parseFloat(fill);\n  if ((0, _helpersDataset.g)(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n  return target;\n}\nfunction _getTargetPixel(fill, scale) {\n  var pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if ((0, _helpersDataset.i)(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\nfunction _getTargetValue(fill, scale, startValue) {\n  var value;\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if ((0, _helpersDataset.i)(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\nfunction parseFillOption(line) {\n  var options = line.options;\n  var fillOption = options.fill;\n  var fill = (0, _helpersDataset.v)(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction _buildStackLine(source) {\n  var scale = source.scale,\n    index = source.index,\n    line = source.line;\n  var points = [];\n  var segments = line.segments;\n  var sourcePoints = line.points;\n  var linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({\n    x: null,\n    y: scale.bottom\n  }, line));\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    for (var j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({\n    points: points,\n    options: {}\n  });\n}\nfunction getLinesBelow(scale, index) {\n  var below = [];\n  var metas = scale.getMatchingVisibleMetas('line');\n  for (var i = 0; i < metas.length; i++) {\n    var meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  var postponed = [];\n  for (var j = 0; j < linesBelow.length; j++) {\n    var line = linesBelow[j];\n    var _findPoint = findPoint(line, sourcePoint, 'x'),\n      first = _findPoint.first,\n      last = _findPoint.last,\n      point = _findPoint.point;\n    if (!point || first && last) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push.apply(points, postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  var point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  var pointValue = point[property];\n  var segments = line.segments;\n  var linePoints = line.points;\n  var first = false;\n  var last = false;\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    var firstValue = linePoints[segment.start][property];\n    var lastValue = linePoints[segment.end][property];\n    if ((0, _helpersDataset.ak)(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {\n    first: first,\n    last: last,\n    point: point\n  };\n}\nvar simpleArc = /*#__PURE__*/function () {\n  function simpleArc(opts) {\n    (0, _classCallCheck2.default)(this, simpleArc);\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  return (0, _createClass2.default)(simpleArc, [{\n    key: \"pathSegment\",\n    value: function pathSegment(ctx, bounds, opts) {\n      var x = this.x,\n        y = this.y,\n        radius = this.radius;\n      bounds = bounds || {\n        start: 0,\n        end: _helpersDataset.T\n      };\n      ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n      return !opts.bounds;\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(point) {\n      var x = this.x,\n        y = this.y,\n        radius = this.radius;\n      var angle = point.angle;\n      return {\n        x: x + Math.cos(angle) * radius,\n        y: y + Math.sin(angle) * radius,\n        angle: angle\n      };\n    }\n  }]);\n}();\nfunction _getTarget(source) {\n  var chart = source.chart,\n    fill = source.fill,\n    line = source.line;\n  if ((0, _helpersDataset.g)(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  var boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return _createBoundaryLine(boundary, line);\n}\nfunction getLineByIndex(chart, index) {\n  var meta = chart.getDatasetMeta(index);\n  var visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n  var scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n  var _source$scale = source.scale,\n    scale = _source$scale === void 0 ? {} : _source$scale,\n    fill = source.fill;\n  var pixel = _getTargetPixel(fill, scale);\n  if ((0, _helpersDataset.g)(pixel)) {\n    var horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n  return null;\n}\nfunction computeCircularBoundary(source) {\n  var scale = source.scale,\n    fill = source.fill;\n  var options = scale.options;\n  var length = scale.getLabels().length;\n  var start = options.reverse ? scale.max : scale.min;\n  var value = _getTargetValue(fill, scale, start);\n  var target = [];\n  if (options.grid.circular) {\n    var center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (var i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction _drawfill(ctx, source, area) {\n  var target = _getTarget(source);\n  var chart = source.chart,\n    index = source.index,\n    line = source.line,\n    scale = source.scale,\n    axis = source.axis;\n  var lineOpts = line.options;\n  var fillOption = lineOpts.fill;\n  var color = lineOpts.backgroundColor;\n  var _ref9 = fillOption || {},\n    _ref9$above = _ref9.above,\n    above = _ref9$above === void 0 ? color : _ref9$above,\n    _ref9$below = _ref9.below,\n    below = _ref9$below === void 0 ? color : _ref9$below;\n  var meta = chart.getDatasetMeta(index);\n  var clip = (0, _helpersDataset.ah)(chart, meta);\n  if (target && line.points.length) {\n    (0, _helpersDataset.Y)(ctx, area);\n    doFill(ctx, {\n      line: line,\n      target: target,\n      above: above,\n      below: below,\n      area: area,\n      scale: scale,\n      axis: axis,\n      clip: clip\n    });\n    (0, _helpersDataset.$)(ctx);\n  }\n}\nfunction doFill(ctx, cfg) {\n  var line = cfg.line,\n    target = cfg.target,\n    above = cfg.above,\n    below = cfg.below,\n    area = cfg.area,\n    scale = cfg.scale,\n    clip = cfg.clip;\n  var property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {\n      line: line,\n      target: target,\n      color: above,\n      scale: scale,\n      property: property,\n      clip: clip\n    });\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {\n    line: line,\n    target: target,\n    color: below,\n    scale: scale,\n    property: property,\n    clip: clip\n  });\n  ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n  var segments = target.segments,\n    points = target.points;\n  var first = true;\n  var lineLoop = false;\n  ctx.beginPath();\n  var _iterator19 = _createForOfIteratorHelper(segments),\n    _step19;\n  try {\n    for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {\n      var segment = _step19.value;\n      var start = segment.start,\n        end = segment.end;\n      var firstPoint = points[start];\n      var lastPoint = points[_findSegmentEnd(start, end, points)];\n      if (first) {\n        ctx.moveTo(firstPoint.x, firstPoint.y);\n        first = false;\n      } else {\n        ctx.lineTo(firstPoint.x, clipY);\n        ctx.lineTo(firstPoint.x, firstPoint.y);\n      }\n      lineLoop = !!target.pathSegment(ctx, segment, {\n        move: lineLoop\n      });\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        ctx.lineTo(lastPoint.x, clipY);\n      }\n    }\n  } catch (err) {\n    _iterator19.e(err);\n  } finally {\n    _iterator19.f();\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction fill(ctx, cfg) {\n  var line = cfg.line,\n    target = cfg.target,\n    property = cfg.property,\n    color = cfg.color,\n    scale = cfg.scale,\n    clip = cfg.clip;\n  var segments = _segments(line, target, property);\n  var _iterator20 = _createForOfIteratorHelper(segments),\n    _step20;\n  try {\n    for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {\n      var _step20$value = _step20.value,\n        src = _step20$value.source,\n        tgt = _step20$value.target,\n        start = _step20$value.start,\n        end = _step20$value.end;\n      var _src$style = src.style,\n        _src$style2 = _src$style === void 0 ? {} : _src$style,\n        _src$style2$backgroun = _src$style2.backgroundColor,\n        backgroundColor = _src$style2$backgroun === void 0 ? color : _src$style2$backgroun;\n      var notShape = target !== true;\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      clipBounds(ctx, scale, clip, notShape && _getBounds(property, start, end));\n      ctx.beginPath();\n      var lineLoop = !!line.pathSegment(ctx, src);\n      var loop = void 0;\n      if (notShape) {\n        if (lineLoop) {\n          ctx.closePath();\n        } else {\n          interpolatedLineTo(ctx, target, end, property);\n        }\n        var targetLoop = !!target.pathSegment(ctx, tgt, {\n          move: lineLoop,\n          reverse: true\n        });\n        loop = lineLoop && targetLoop;\n        if (!loop) {\n          interpolatedLineTo(ctx, target, start, property);\n        }\n      }\n      ctx.closePath();\n      ctx.fill(loop ? 'evenodd' : 'nonzero');\n      ctx.restore();\n    }\n  } catch (err) {\n    _iterator20.e(err);\n  } finally {\n    _iterator20.f();\n  }\n}\nfunction clipBounds(ctx, scale, clip, bounds) {\n  var chartArea = scale.chart.chartArea;\n  var _ref0 = bounds || {},\n    property = _ref0.property,\n    start = _ref0.start,\n    end = _ref0.end;\n  if (property === 'x' || property === 'y') {\n    var left, top, right, bottom;\n    if (property === 'x') {\n      left = start;\n      top = chartArea.top;\n      right = end;\n      bottom = chartArea.bottom;\n    } else {\n      left = chartArea.left;\n      top = start;\n      right = chartArea.right;\n      bottom = end;\n    }\n    ctx.beginPath();\n    if (clip) {\n      left = Math.max(left, clip.left);\n      right = Math.min(right, clip.right);\n      top = Math.max(top, clip.top);\n      bottom = Math.min(bottom, clip.bottom);\n    }\n    ctx.rect(left, top, right - left, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  var interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nvar index = exports.Filler = {\n  id: 'filler',\n  afterDatasetsUpdate: function afterDatasetsUpdate(chart, _args, options) {\n    var count = (chart.data.datasets || []).length;\n    var sources = [];\n    var meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart: chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line: line\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw: function beforeDraw(chart, _args, options) {\n    var draw = options.drawTime === 'beforeDraw';\n    var metasets = chart.getSortedVisibleDatasetMetas();\n    var area = chart.chartArea;\n    for (var i = metasets.length - 1; i >= 0; --i) {\n      var source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw: function beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    var metasets = chart.getSortedVisibleDatasetMetas();\n    for (var i = metasets.length - 1; i >= 0; --i) {\n      var source = metasets[i].$filler;\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw: function beforeDatasetDraw(chart, args, options) {\n    var source = args.meta.$filler;\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\nvar getBoxSize = function getBoxSize(labelOpts, fontSize) {\n  var _labelOpts$boxHeight = labelOpts.boxHeight,\n    boxHeight = _labelOpts$boxHeight === void 0 ? fontSize : _labelOpts$boxHeight,\n    _labelOpts$boxWidth = labelOpts.boxWidth,\n    boxWidth = _labelOpts$boxWidth === void 0 ? fontSize : _labelOpts$boxWidth;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth: boxWidth,\n    boxHeight: boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nvar itemsEqual = function itemsEqual(a, b) {\n  return a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n};\nvar Legend = /*#__PURE__*/function (_Element6) {\n  function Legend(config) {\n    var _this25;\n    (0, _classCallCheck2.default)(this, Legend);\n    _this25 = _callSuper(this, Legend);\n    _this25._added = false;\n    _this25.legendHitBoxes = [];\n    _this25._hoveredItem = null;\n    _this25.doughnutMode = false;\n    _this25.chart = config.chart;\n    _this25.options = config.options;\n    _this25.ctx = config.ctx;\n    _this25.legendItems = undefined;\n    _this25.columnSizes = undefined;\n    _this25.lineWidths = undefined;\n    _this25.maxHeight = undefined;\n    _this25.maxWidth = undefined;\n    _this25.top = undefined;\n    _this25.bottom = undefined;\n    _this25.left = undefined;\n    _this25.right = undefined;\n    _this25.height = undefined;\n    _this25.width = undefined;\n    _this25._margins = undefined;\n    _this25.position = undefined;\n    _this25.weight = undefined;\n    _this25.fullSize = undefined;\n    return _this25;\n  }\n  (0, _inherits2.default)(Legend, _Element6);\n  return (0, _createClass2.default)(Legend, [{\n    key: \"update\",\n    value: function update(maxWidth, maxHeight, margins) {\n      this.maxWidth = maxWidth;\n      this.maxHeight = maxHeight;\n      this._margins = margins;\n      this.setDimensions();\n      this.buildLabels();\n      this.fit();\n    }\n  }, {\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      if (this.isHorizontal()) {\n        this.width = this.maxWidth;\n        this.left = this._margins.left;\n        this.right = this.width;\n      } else {\n        this.height = this.maxHeight;\n        this.top = this._margins.top;\n        this.bottom = this.height;\n      }\n    }\n  }, {\n    key: \"buildLabels\",\n    value: function buildLabels() {\n      var _this26 = this;\n      var labelOpts = this.options.labels || {};\n      var legendItems = (0, _helpersDataset.Q)(labelOpts.generateLabels, [this.chart], this) || [];\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, _this26.chart.data);\n        });\n      }\n      if (labelOpts.sort) {\n        legendItems = legendItems.sort(function (a, b) {\n          return labelOpts.sort(a, b, _this26.chart.data);\n        });\n      }\n      if (this.options.reverse) {\n        legendItems.reverse();\n      }\n      this.legendItems = legendItems;\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var options = this.options,\n        ctx = this.ctx;\n      if (!options.display) {\n        this.width = this.height = 0;\n        return;\n      }\n      var labelOpts = options.labels;\n      var labelFont = (0, _helpersDataset.a0)(labelOpts.font);\n      var fontSize = labelFont.size;\n      var titleHeight = this._computeTitleHeight();\n      var _getBoxSize = getBoxSize(labelOpts, fontSize),\n        boxWidth = _getBoxSize.boxWidth,\n        itemHeight = _getBoxSize.itemHeight;\n      var width, height;\n      ctx.font = labelFont.string;\n      if (this.isHorizontal()) {\n        width = this.maxWidth;\n        height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n      } else {\n        height = this.maxHeight;\n        width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n      }\n      this.width = Math.min(width, options.maxWidth || this.maxWidth);\n      this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n  }, {\n    key: \"_fitRows\",\n    value: function _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n      var ctx = this.ctx,\n        maxWidth = this.maxWidth,\n        padding = this.options.labels.padding;\n      var hitboxes = this.legendHitBoxes = [];\n      var lineWidths = this.lineWidths = [0];\n      var lineHeight = itemHeight + padding;\n      var totalHeight = titleHeight;\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n      var row = -1;\n      var top = -lineHeight;\n      this.legendItems.forEach(function (legendItem, i) {\n        var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n        if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n          totalHeight += lineHeight;\n          lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n          top += lineHeight;\n          row++;\n        }\n        hitboxes[i] = {\n          left: 0,\n          top: top,\n          row: row,\n          width: itemWidth,\n          height: itemHeight\n        };\n        lineWidths[lineWidths.length - 1] += itemWidth + padding;\n      });\n      return totalHeight;\n    }\n  }, {\n    key: \"_fitCols\",\n    value: function _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n      var ctx = this.ctx,\n        maxHeight = this.maxHeight,\n        padding = this.options.labels.padding;\n      var hitboxes = this.legendHitBoxes = [];\n      var columnSizes = this.columnSizes = [];\n      var heightLimit = maxHeight - titleHeight;\n      var totalWidth = padding;\n      var currentColWidth = 0;\n      var currentColHeight = 0;\n      var left = 0;\n      var col = 0;\n      this.legendItems.forEach(function (legendItem, i) {\n        var _calculateItemSize = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight),\n          itemWidth = _calculateItemSize.itemWidth,\n          itemHeight = _calculateItemSize.itemHeight;\n        if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n          totalWidth += currentColWidth + padding;\n          columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n          });\n          left += currentColWidth + padding;\n          col++;\n          currentColWidth = currentColHeight = 0;\n        }\n        hitboxes[i] = {\n          left: left,\n          top: currentColHeight,\n          col: col,\n          width: itemWidth,\n          height: itemHeight\n        };\n        currentColWidth = Math.max(currentColWidth, itemWidth);\n        currentColHeight += itemHeight + padding;\n      });\n      totalWidth += currentColWidth;\n      columnSizes.push({\n        width: currentColWidth,\n        height: currentColHeight\n      });\n      return totalWidth;\n    }\n  }, {\n    key: \"adjustHitBoxes\",\n    value: function adjustHitBoxes() {\n      if (!this.options.display) {\n        return;\n      }\n      var titleHeight = this._computeTitleHeight();\n      var hitboxes = this.legendHitBoxes,\n        _this$options13 = this.options,\n        align = _this$options13.align,\n        padding = _this$options13.labels.padding,\n        rtl = _this$options13.rtl;\n      var rtlHelper = (0, _helpersDataset.aA)(rtl, this.left, this.width);\n      if (this.isHorizontal()) {\n        var row = 0;\n        var left = (0, _helpersDataset.a2)(align, this.left + padding, this.right - this.lineWidths[row]);\n        var _iterator21 = _createForOfIteratorHelper(hitboxes),\n          _step21;\n        try {\n          for (_iterator21.s(); !(_step21 = _iterator21.n()).done;) {\n            var hitbox = _step21.value;\n            if (row !== hitbox.row) {\n              row = hitbox.row;\n              left = (0, _helpersDataset.a2)(align, this.left + padding, this.right - this.lineWidths[row]);\n            }\n            hitbox.top += this.top + titleHeight + padding;\n            hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n            left += hitbox.width + padding;\n          }\n        } catch (err) {\n          _iterator21.e(err);\n        } finally {\n          _iterator21.f();\n        }\n      } else {\n        var col = 0;\n        var top = (0, _helpersDataset.a2)(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        var _iterator22 = _createForOfIteratorHelper(hitboxes),\n          _step22;\n        try {\n          for (_iterator22.s(); !(_step22 = _iterator22.n()).done;) {\n            var _hitbox = _step22.value;\n            if (_hitbox.col !== col) {\n              col = _hitbox.col;\n              top = (0, _helpersDataset.a2)(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            }\n            _hitbox.top = top;\n            _hitbox.left += this.left + padding;\n            _hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(_hitbox.left), _hitbox.width);\n            top += _hitbox.height + padding;\n          }\n        } catch (err) {\n          _iterator22.e(err);\n        } finally {\n          _iterator22.f();\n        }\n      }\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      if (this.options.display) {\n        var ctx = this.ctx;\n        (0, _helpersDataset.Y)(ctx, this);\n        this._draw();\n        (0, _helpersDataset.$)(ctx);\n      }\n    }\n  }, {\n    key: \"_draw\",\n    value: function _draw() {\n      var _this27 = this;\n      var opts = this.options,\n        columnSizes = this.columnSizes,\n        lineWidths = this.lineWidths,\n        ctx = this.ctx;\n      var align = opts.align,\n        labelOpts = opts.labels;\n      var defaultColor = _helpersDataset.d.color;\n      var rtlHelper = (0, _helpersDataset.aA)(opts.rtl, this.left, this.width);\n      var labelFont = (0, _helpersDataset.a0)(labelOpts.font);\n      var padding = labelOpts.padding;\n      var fontSize = labelFont.size;\n      var halfFontSize = fontSize / 2;\n      var cursor;\n      this.drawTitle();\n      ctx.textAlign = rtlHelper.textAlign('left');\n      ctx.textBaseline = 'middle';\n      ctx.lineWidth = 0.5;\n      ctx.font = labelFont.string;\n      var _getBoxSize2 = getBoxSize(labelOpts, fontSize),\n        boxWidth = _getBoxSize2.boxWidth,\n        boxHeight = _getBoxSize2.boxHeight,\n        itemHeight = _getBoxSize2.itemHeight;\n      var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n        if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n          return;\n        }\n        ctx.save();\n        var lineWidth = (0, _helpersDataset.v)(legendItem.lineWidth, 1);\n        ctx.fillStyle = (0, _helpersDataset.v)(legendItem.fillStyle, defaultColor);\n        ctx.lineCap = (0, _helpersDataset.v)(legendItem.lineCap, 'butt');\n        ctx.lineDashOffset = (0, _helpersDataset.v)(legendItem.lineDashOffset, 0);\n        ctx.lineJoin = (0, _helpersDataset.v)(legendItem.lineJoin, 'miter');\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = (0, _helpersDataset.v)(legendItem.strokeStyle, defaultColor);\n        ctx.setLineDash((0, _helpersDataset.v)(legendItem.lineDash, []));\n        if (labelOpts.usePointStyle) {\n          var drawOptions = {\n            radius: boxHeight * Math.SQRT2 / 2,\n            pointStyle: legendItem.pointStyle,\n            rotation: legendItem.rotation,\n            borderWidth: lineWidth\n          };\n          var centerX = rtlHelper.xPlus(x, boxWidth / 2);\n          var centerY = y + halfFontSize;\n          (0, _helpersDataset.aE)(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n        } else {\n          var yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n          var xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n          var borderRadius = (0, _helpersDataset.ax)(legendItem.borderRadius);\n          ctx.beginPath();\n          if (Object.values(borderRadius).some(function (v) {\n            return v !== 0;\n          })) {\n            (0, _helpersDataset.av)(ctx, {\n              x: xBoxLeft,\n              y: yBoxTop,\n              w: boxWidth,\n              h: boxHeight,\n              radius: borderRadius\n            });\n          } else {\n            ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n          }\n          ctx.fill();\n          if (lineWidth !== 0) {\n            ctx.stroke();\n          }\n        }\n        ctx.restore();\n      };\n      var fillText = function fillText(x, y, legendItem) {\n        (0, _helpersDataset.Z)(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n          strikethrough: legendItem.hidden,\n          textAlign: rtlHelper.textAlign(legendItem.textAlign)\n        });\n      };\n      var isHorizontal = this.isHorizontal();\n      var titleHeight = this._computeTitleHeight();\n      if (isHorizontal) {\n        cursor = {\n          x: (0, _helpersDataset.a2)(align, this.left + padding, this.right - lineWidths[0]),\n          y: this.top + padding + titleHeight,\n          line: 0\n        };\n      } else {\n        cursor = {\n          x: this.left + padding,\n          y: (0, _helpersDataset.a2)(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n          line: 0\n        };\n      }\n      (0, _helpersDataset.aB)(this.ctx, opts.textDirection);\n      var lineHeight = itemHeight + padding;\n      this.legendItems.forEach(function (legendItem, i) {\n        ctx.strokeStyle = legendItem.fontColor;\n        ctx.fillStyle = legendItem.fontColor;\n        var textWidth = ctx.measureText(legendItem.text).width;\n        var textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n        var width = boxWidth + halfFontSize + textWidth;\n        var x = cursor.x;\n        var y = cursor.y;\n        rtlHelper.setWidth(_this27.width);\n        if (isHorizontal) {\n          if (i > 0 && x + width + padding > _this27.right) {\n            y = cursor.y += lineHeight;\n            cursor.line++;\n            x = cursor.x = (0, _helpersDataset.a2)(align, _this27.left + padding, _this27.right - lineWidths[cursor.line]);\n          }\n        } else if (i > 0 && y + lineHeight > _this27.bottom) {\n          x = cursor.x = x + columnSizes[cursor.line].width + padding;\n          cursor.line++;\n          y = cursor.y = (0, _helpersDataset.a2)(align, _this27.top + titleHeight + padding, _this27.bottom - columnSizes[cursor.line].height);\n        }\n        var realX = rtlHelper.x(x);\n        drawLegendBox(realX, y, legendItem);\n        x = (0, _helpersDataset.aC)(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : _this27.right, opts.rtl);\n        fillText(rtlHelper.x(x), y, legendItem);\n        if (isHorizontal) {\n          cursor.x += width + padding;\n        } else if (typeof legendItem.text !== 'string') {\n          var fontLineHeight = labelFont.lineHeight;\n          cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n        } else {\n          cursor.y += lineHeight;\n        }\n      });\n      (0, _helpersDataset.aD)(this.ctx, opts.textDirection);\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {\n      var opts = this.options;\n      var titleOpts = opts.title;\n      var titleFont = (0, _helpersDataset.a0)(titleOpts.font);\n      var titlePadding = (0, _helpersDataset.E)(titleOpts.padding);\n      if (!titleOpts.display) {\n        return;\n      }\n      var rtlHelper = (0, _helpersDataset.aA)(opts.rtl, this.left, this.width);\n      var ctx = this.ctx;\n      var position = titleOpts.position;\n      var halfFontSize = titleFont.size / 2;\n      var topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n      var y;\n      var left = this.left;\n      var maxWidth = this.width;\n      if (this.isHorizontal()) {\n        maxWidth = Math.max.apply(Math, (0, _toConsumableArray2.default)(this.lineWidths));\n        y = this.top + topPaddingPlusHalfFontSize;\n        left = (0, _helpersDataset.a2)(opts.align, left, this.right - maxWidth);\n      } else {\n        var maxHeight = this.columnSizes.reduce(function (acc, size) {\n          return Math.max(acc, size.height);\n        }, 0);\n        y = topPaddingPlusHalfFontSize + (0, _helpersDataset.a2)(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n      }\n      var x = (0, _helpersDataset.a2)(position, left, left + maxWidth);\n      ctx.textAlign = rtlHelper.textAlign((0, _helpersDataset.a1)(position));\n      ctx.textBaseline = 'middle';\n      ctx.strokeStyle = titleOpts.color;\n      ctx.fillStyle = titleOpts.color;\n      ctx.font = titleFont.string;\n      (0, _helpersDataset.Z)(ctx, titleOpts.text, x, y, titleFont);\n    }\n  }, {\n    key: \"_computeTitleHeight\",\n    value: function _computeTitleHeight() {\n      var titleOpts = this.options.title;\n      var titleFont = (0, _helpersDataset.a0)(titleOpts.font);\n      var titlePadding = (0, _helpersDataset.E)(titleOpts.padding);\n      return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n  }, {\n    key: \"_getLegendItemAt\",\n    value: function _getLegendItemAt(x, y) {\n      var i, hitBox, lh;\n      if ((0, _helpersDataset.ak)(x, this.left, this.right) && (0, _helpersDataset.ak)(y, this.top, this.bottom)) {\n        lh = this.legendHitBoxes;\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n          if ((0, _helpersDataset.ak)(x, hitBox.left, hitBox.left + hitBox.width) && (0, _helpersDataset.ak)(y, hitBox.top, hitBox.top + hitBox.height)) {\n            return this.legendItems[i];\n          }\n        }\n      }\n      return null;\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(e) {\n      var opts = this.options;\n      if (!isListened(e.type, opts)) {\n        return;\n      }\n      var hoveredItem = this._getLegendItemAt(e.x, e.y);\n      if (e.type === 'mousemove' || e.type === 'mouseout') {\n        var previous = this._hoveredItem;\n        var sameItem = itemsEqual(previous, hoveredItem);\n        if (previous && !sameItem) {\n          (0, _helpersDataset.Q)(opts.onLeave, [e, previous, this], this);\n        }\n        this._hoveredItem = hoveredItem;\n        if (hoveredItem && !sameItem) {\n          (0, _helpersDataset.Q)(opts.onHover, [e, hoveredItem, this], this);\n        }\n      } else if (hoveredItem) {\n        (0, _helpersDataset.Q)(opts.onClick, [e, hoveredItem, this], this);\n      }\n    }\n  }]);\n}(Element);\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  var itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  var itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {\n    itemWidth: itemWidth,\n    itemHeight: itemHeight\n  };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  var legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce(function (a, b) {\n      return a.length > b.length ? a : b;\n    });\n  }\n  return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  var itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  var labelHeight = legendItem.text ? legendItem.text.length : 0;\n  return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = exports.Legend = {\n  id: 'legend',\n  _element: Legend,\n  start: function start(chart, _args, options) {\n    var legend = chart.legend = new Legend({\n      ctx: chart.ctx,\n      options: options,\n      chart: chart\n    });\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop: function stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate: function afterUpdate(chart) {\n    var legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent: function afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick: function onClick(e, legendItem, legend) {\n      var index = legendItem.datasetIndex;\n      var ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: function color(ctx) {\n        return ctx.chart.options.color;\n      },\n      boxWidth: 40,\n      padding: 10,\n      generateLabels: function generateLabels(chart) {\n        var datasets = chart.data.datasets;\n        var _chart$legend$options = chart.legend.options.labels,\n          usePointStyle = _chart$legend$options.usePointStyle,\n          pointStyle = _chart$legend$options.pointStyle,\n          textAlign = _chart$legend$options.textAlign,\n          color = _chart$legend$options.color,\n          useBorderRadius = _chart$legend$options.useBorderRadius,\n          borderRadius = _chart$legend$options.borderRadius;\n        return chart._getSortedDatasetMetas().map(function (meta) {\n          var style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          var borderWidth = (0, _helpersDataset.E)(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: function color(ctx) {\n        return ctx.chart.options.color;\n      },\n      display: false,\n      position: 'center',\n      text: ''\n    }\n  },\n  descriptors: {\n    _scriptable: function _scriptable(name) {\n      return !name.startsWith('on');\n    },\n    labels: {\n      _scriptable: function _scriptable(name) {\n        return !['generateLabels', 'filter', 'sort'].includes(name);\n      }\n    }\n  }\n};\nvar Title = /*#__PURE__*/function (_Element7) {\n  function Title(config) {\n    var _this28;\n    (0, _classCallCheck2.default)(this, Title);\n    _this28 = _callSuper(this, Title);\n    _this28.chart = config.chart;\n    _this28.options = config.options;\n    _this28.ctx = config.ctx;\n    _this28._padding = undefined;\n    _this28.top = undefined;\n    _this28.bottom = undefined;\n    _this28.left = undefined;\n    _this28.right = undefined;\n    _this28.width = undefined;\n    _this28.height = undefined;\n    _this28.position = undefined;\n    _this28.weight = undefined;\n    _this28.fullSize = undefined;\n    return _this28;\n  }\n  (0, _inherits2.default)(Title, _Element7);\n  return (0, _createClass2.default)(Title, [{\n    key: \"update\",\n    value: function update(maxWidth, maxHeight) {\n      var opts = this.options;\n      this.left = 0;\n      this.top = 0;\n      if (!opts.display) {\n        this.width = this.height = this.right = this.bottom = 0;\n        return;\n      }\n      this.width = this.right = maxWidth;\n      this.height = this.bottom = maxHeight;\n      var lineCount = (0, _helpersDataset.b)(opts.text) ? opts.text.length : 1;\n      this._padding = (0, _helpersDataset.E)(opts.padding);\n      var textSize = lineCount * (0, _helpersDataset.a0)(opts.font).lineHeight + this._padding.height;\n      if (this.isHorizontal()) {\n        this.height = textSize;\n      } else {\n        this.width = textSize;\n      }\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    }\n  }, {\n    key: \"_drawArgs\",\n    value: function _drawArgs(offset) {\n      var top = this.top,\n        left = this.left,\n        bottom = this.bottom,\n        right = this.right,\n        options = this.options;\n      var align = options.align;\n      var rotation = 0;\n      var maxWidth, titleX, titleY;\n      if (this.isHorizontal()) {\n        titleX = (0, _helpersDataset.a2)(align, left, right);\n        titleY = top + offset;\n        maxWidth = right - left;\n      } else {\n        if (options.position === 'left') {\n          titleX = left + offset;\n          titleY = (0, _helpersDataset.a2)(align, bottom, top);\n          rotation = _helpersDataset.P * -0.5;\n        } else {\n          titleX = right - offset;\n          titleY = (0, _helpersDataset.a2)(align, top, bottom);\n          rotation = _helpersDataset.P * 0.5;\n        }\n        maxWidth = bottom - top;\n      }\n      return {\n        titleX: titleX,\n        titleY: titleY,\n        maxWidth: maxWidth,\n        rotation: rotation\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var ctx = this.ctx;\n      var opts = this.options;\n      if (!opts.display) {\n        return;\n      }\n      var fontOpts = (0, _helpersDataset.a0)(opts.font);\n      var lineHeight = fontOpts.lineHeight;\n      var offset = lineHeight / 2 + this._padding.top;\n      var _this$_drawArgs = this._drawArgs(offset),\n        titleX = _this$_drawArgs.titleX,\n        titleY = _this$_drawArgs.titleY,\n        maxWidth = _this$_drawArgs.maxWidth,\n        rotation = _this$_drawArgs.rotation;\n      (0, _helpersDataset.Z)(ctx, opts.text, 0, 0, fontOpts, {\n        color: opts.color,\n        maxWidth: maxWidth,\n        rotation: rotation,\n        textAlign: (0, _helpersDataset.a1)(opts.align),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n  }]);\n}(Element);\nfunction createTitle(chart, titleOpts) {\n  var title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart: chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = exports.Title = {\n  id: 'title',\n  _element: Title,\n  start: function start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop: function stop(chart) {\n    var titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold'\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nvar map = new WeakMap();\nvar plugin_subtitle = exports.SubTitle = {\n  id: 'subtitle',\n  start: function start(chart, _args, options) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: options,\n      chart: chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop: function stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal'\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nvar positioners = {\n  average: function average(items) {\n    if (!items.length) {\n      return false;\n    }\n    var i, len;\n    var xSet = new Set();\n    var y = 0;\n    var count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      var el = items[i].element;\n      if (el && el.hasValue()) {\n        var pos = el.tooltipPosition();\n        xSet.add(pos.x);\n        y += pos.y;\n        ++count;\n      }\n    }\n    if (count === 0 || xSet.size === 0) {\n      return false;\n    }\n    var xAverage = (0, _toConsumableArray2.default)(xSet).reduce(function (a, b) {\n      return a + b;\n    }) / xSet.size;\n    return {\n      x: xAverage,\n      y: y / count\n    };\n  },\n  nearest: function nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    var x = eventPosition.x;\n    var y = eventPosition.y;\n    var minDistance = Number.POSITIVE_INFINITY;\n    var i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      var el = items[i].element;\n      if (el && el.hasValue()) {\n        var center = el.getCenterPoint();\n        var d = (0, _helpersDataset.aF)(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      var tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x: x,\n      y: y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if ((0, _helpersDataset.b)(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  var element = item.element,\n    datasetIndex = item.datasetIndex,\n    index = item.index;\n  var controller = chart.getDatasetMeta(datasetIndex).controller;\n  var _controller$getLabelA = controller.getLabelAndValue(index),\n    label = _controller$getLabelA.label,\n    value = _controller$getLabelA.value;\n  return {\n    chart: chart,\n    label: label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex: datasetIndex,\n    element: element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  var ctx = tooltip.chart.ctx;\n  var body = tooltip.body,\n    footer = tooltip.footer,\n    title = tooltip.title;\n  var boxWidth = options.boxWidth,\n    boxHeight = options.boxHeight;\n  var bodyFont = (0, _helpersDataset.a0)(options.bodyFont);\n  var titleFont = (0, _helpersDataset.a0)(options.titleFont);\n  var footerFont = (0, _helpersDataset.a0)(options.footerFont);\n  var titleLineCount = title.length;\n  var footerLineCount = footer.length;\n  var bodyLineItemCount = body.length;\n  var padding = (0, _helpersDataset.E)(options.padding);\n  var height = padding.height;\n  var width = 0;\n  var combinedBodyLength = body.reduce(function (count, bodyItem) {\n    return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n  }, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    var bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n  }\n  var widthPadding = 0;\n  var maxLineWidth = function maxLineWidth(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  (0, _helpersDataset.F)(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  (0, _helpersDataset.F)(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n  (0, _helpersDataset.F)(body, function (bodyItem) {\n    (0, _helpersDataset.F)(bodyItem.before, maxLineWidth);\n    (0, _helpersDataset.F)(bodyItem.lines, maxLineWidth);\n    (0, _helpersDataset.F)(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  (0, _helpersDataset.F)(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {\n    width: width,\n    height: height\n  };\n}\nfunction determineYAlign(chart, size) {\n  var y = size.y,\n    height = size.height;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > chart.height - height / 2) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  var x = size.x,\n    width = size.width;\n  var caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  var x = size.x,\n    width = size.width;\n  var chartWidth = chart.width,\n    _chart$chartArea = chart.chartArea,\n    left = _chart$chartArea.left,\n    right = _chart$chartArea.right;\n  var xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  var yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign: yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  var x = size.x,\n    width = size.width;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= width / 2;\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  var y = size.y,\n    height = size.height;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= height / 2;\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  var caretSize = options.caretSize,\n    caretPadding = options.caretPadding,\n    cornerRadius = options.cornerRadius;\n  var xAlign = alignment.xAlign,\n    yAlign = alignment.yAlign;\n  var paddingAndSize = caretSize + caretPadding;\n  var _toTRBLCorners = (0, _helpersDataset.ax)(cornerRadius),\n    topLeft = _toTRBLCorners.topLeft,\n    topRight = _toTRBLCorners.topRight,\n    bottomLeft = _toTRBLCorners.bottomLeft,\n    bottomRight = _toTRBLCorners.bottomRight;\n  var x = alignX(size, xAlign);\n  var y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: (0, _helpersDataset.S)(x, 0, chart.width - size.width),\n    y: (0, _helpersDataset.S)(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  var padding = (0, _helpersDataset.E)(options.padding);\n  return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return (0, _helpersDataset.j)(parent, {\n    tooltip: tooltip,\n    tooltipItems: tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  var override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nvar defaultCallbacks = {\n  beforeTitle: _helpersDataset.aG,\n  title: function title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      var item = tooltipItems[0];\n      var labels = item.chart.data.labels;\n      var labelCount = labels ? labels.length : 0;\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n    return '';\n  },\n  afterTitle: _helpersDataset.aG,\n  beforeBody: _helpersDataset.aG,\n  beforeLabel: _helpersDataset.aG,\n  label: function label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n    var label = tooltipItem.dataset.label || '';\n    if (label) {\n      label += ': ';\n    }\n    var value = tooltipItem.formattedValue;\n    if (!(0, _helpersDataset.k)(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor: function labelColor(tooltipItem) {\n    var meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    var options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0\n    };\n  },\n  labelTextColor: function labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle: function labelPointStyle(tooltipItem) {\n    var meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    var options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation\n    };\n  },\n  afterLabel: _helpersDataset.aG,\n  afterBody: _helpersDataset.aG,\n  beforeFooter: _helpersDataset.aG,\n  footer: _helpersDataset.aG,\n  afterFooter: _helpersDataset.aG\n};\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  var result = callbacks[name].call(ctx, arg);\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n  return result;\n}\nvar Tooltip = /*#__PURE__*/function (_Element8) {\n  function Tooltip(config) {\n    var _this29;\n    (0, _classCallCheck2.default)(this, Tooltip);\n    _this29 = _callSuper(this, Tooltip);\n    _this29.opacity = 0;\n    _this29._active = [];\n    _this29._eventPosition = undefined;\n    _this29._size = undefined;\n    _this29._cachedAnimations = undefined;\n    _this29._tooltipItems = [];\n    _this29.$animations = undefined;\n    _this29.$context = undefined;\n    _this29.chart = config.chart;\n    _this29.options = config.options;\n    _this29.dataPoints = undefined;\n    _this29.title = undefined;\n    _this29.beforeBody = undefined;\n    _this29.body = undefined;\n    _this29.afterBody = undefined;\n    _this29.footer = undefined;\n    _this29.xAlign = undefined;\n    _this29.yAlign = undefined;\n    _this29.x = undefined;\n    _this29.y = undefined;\n    _this29.height = undefined;\n    _this29.width = undefined;\n    _this29.caretX = undefined;\n    _this29.caretY = undefined;\n    _this29.labelColors = undefined;\n    _this29.labelPointStyles = undefined;\n    _this29.labelTextColors = undefined;\n    return _this29;\n  }\n  (0, _inherits2.default)(Tooltip, _Element8);\n  return (0, _createClass2.default)(Tooltip, [{\n    key: \"initialize\",\n    value: function initialize(options) {\n      this.options = options;\n      this._cachedAnimations = undefined;\n      this.$context = undefined;\n    }\n  }, {\n    key: \"_resolveAnimations\",\n    value: function _resolveAnimations() {\n      var cached = this._cachedAnimations;\n      if (cached) {\n        return cached;\n      }\n      var chart = this.chart;\n      var options = this.options.setContext(this.getContext());\n      var opts = options.enabled && chart.options.animation && options.animations;\n      var animations = new Animations(this.chart, opts);\n      if (opts._cacheable) {\n        this._cachedAnimations = Object.freeze(animations);\n      }\n      return animations;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext() {\n      return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n  }, {\n    key: \"getTitle\",\n    value: function getTitle(context, options) {\n      var callbacks = options.callbacks;\n      var beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n      var title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n      var afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    }\n  }, {\n    key: \"getBeforeBody\",\n    value: function getBeforeBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n  }, {\n    key: \"getBody\",\n    value: function getBody(tooltipItems, options) {\n      var _this30 = this;\n      var callbacks = options.callbacks;\n      var bodyItems = [];\n      (0, _helpersDataset.F)(tooltipItems, function (context) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        var scoped = overrideCallbacks(callbacks, context);\n        pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', _this30, context)));\n        pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', _this30, context));\n        pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', _this30, context)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    }\n  }, {\n    key: \"getAfterBody\",\n    value: function getAfterBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n  }, {\n    key: \"getFooter\",\n    value: function getFooter(tooltipItems, options) {\n      var callbacks = options.callbacks;\n      var beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n      var footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n      var afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    }\n  }, {\n    key: \"_createItems\",\n    value: function _createItems(options) {\n      var _this31 = this;\n      var active = this._active;\n      var data = this.chart.data;\n      var labelColors = [];\n      var labelPointStyles = [];\n      var labelTextColors = [];\n      var tooltipItems = [];\n      var i, len;\n      for (i = 0, len = active.length; i < len; ++i) {\n        tooltipItems.push(createTooltipItem(this.chart, active[i]));\n      }\n      if (options.filter) {\n        tooltipItems = tooltipItems.filter(function (element, index, array) {\n          return options.filter(element, index, array, data);\n        });\n      }\n      if (options.itemSort) {\n        tooltipItems = tooltipItems.sort(function (a, b) {\n          return options.itemSort(a, b, data);\n        });\n      }\n      (0, _helpersDataset.F)(tooltipItems, function (context) {\n        var scoped = overrideCallbacks(options.callbacks, context);\n        labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', _this31, context));\n        labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', _this31, context));\n        labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', _this31, context));\n      });\n      this.labelColors = labelColors;\n      this.labelPointStyles = labelPointStyles;\n      this.labelTextColors = labelTextColors;\n      this.dataPoints = tooltipItems;\n      return tooltipItems;\n    }\n  }, {\n    key: \"update\",\n    value: function update(changed, replay) {\n      var options = this.options.setContext(this.getContext());\n      var active = this._active;\n      var properties;\n      var tooltipItems = [];\n      if (!active.length) {\n        if (this.opacity !== 0) {\n          properties = {\n            opacity: 0\n          };\n        }\n      } else {\n        var position = positioners[options.position].call(this, active, this._eventPosition);\n        tooltipItems = this._createItems(options);\n        this.title = this.getTitle(tooltipItems, options);\n        this.beforeBody = this.getBeforeBody(tooltipItems, options);\n        this.body = this.getBody(tooltipItems, options);\n        this.afterBody = this.getAfterBody(tooltipItems, options);\n        this.footer = this.getFooter(tooltipItems, options);\n        var size = this._size = getTooltipSize(this, options);\n        var positionAndSize = Object.assign({}, position, size);\n        var alignment = determineAlignment(this.chart, options, positionAndSize);\n        var backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        properties = {\n          opacity: 1,\n          x: backgroundPoint.x,\n          y: backgroundPoint.y,\n          width: size.width,\n          height: size.height,\n          caretX: position.x,\n          caretY: position.y\n        };\n      }\n      this._tooltipItems = tooltipItems;\n      this.$context = undefined;\n      if (properties) {\n        this._resolveAnimations().update(this, properties);\n      }\n      if (changed && options.external) {\n        options.external.call(this, {\n          chart: this.chart,\n          tooltip: this,\n          replay: replay\n        });\n      }\n    }\n  }, {\n    key: \"drawCaret\",\n    value: function drawCaret(tooltipPoint, ctx, size, options) {\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n  }, {\n    key: \"getCaretPosition\",\n    value: function getCaretPosition(tooltipPoint, size, options) {\n      var xAlign = this.xAlign,\n        yAlign = this.yAlign;\n      var caretSize = options.caretSize,\n        cornerRadius = options.cornerRadius;\n      var _toTRBLCorners2 = (0, _helpersDataset.ax)(cornerRadius),\n        topLeft = _toTRBLCorners2.topLeft,\n        topRight = _toTRBLCorners2.topRight,\n        bottomLeft = _toTRBLCorners2.bottomLeft,\n        bottomRight = _toTRBLCorners2.bottomRight;\n      var ptX = tooltipPoint.x,\n        ptY = tooltipPoint.y;\n      var width = size.width,\n        height = size.height;\n      var x1, x2, x3, y1, y2, y3;\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n        x3 = x1;\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n        } else {\n          x2 = this.caretX;\n        }\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          x1 = x2 + caretSize;\n          x3 = x2 - caretSize;\n        }\n        y3 = y1;\n      }\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle(pt, ctx, options) {\n      var title = this.title;\n      var length = title.length;\n      var titleFont, titleSpacing, i;\n      if (length) {\n        var rtlHelper = (0, _helpersDataset.aA)(options.rtl, this.x, this.width);\n        pt.x = getAlignedX(this, options.titleAlign, options);\n        ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n        ctx.textBaseline = 'middle';\n        titleFont = (0, _helpersDataset.a0)(options.titleFont);\n        titleSpacing = options.titleSpacing;\n        ctx.fillStyle = options.titleColor;\n        ctx.font = titleFont.string;\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n          pt.y += titleFont.lineHeight + titleSpacing;\n          if (i + 1 === length) {\n            pt.y += options.titleMarginBottom - titleSpacing;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_drawColorBox\",\n    value: function _drawColorBox(ctx, pt, i, rtlHelper, options) {\n      var labelColor = this.labelColors[i];\n      var labelPointStyle = this.labelPointStyles[i];\n      var boxHeight = options.boxHeight,\n        boxWidth = options.boxWidth;\n      var bodyFont = (0, _helpersDataset.a0)(options.bodyFont);\n      var colorX = getAlignedX(this, 'left', options);\n      var rtlColorX = rtlHelper.x(colorX);\n      var yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n      var colorY = pt.y + yOffSet;\n      if (options.usePointStyle) {\n        var drawOptions = {\n          radius: Math.min(boxWidth, boxHeight) / 2,\n          pointStyle: labelPointStyle.pointStyle,\n          rotation: labelPointStyle.rotation,\n          borderWidth: 1\n        };\n        var centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n        var centerY = colorY + boxHeight / 2;\n        ctx.strokeStyle = options.multiKeyBackground;\n        ctx.fillStyle = options.multiKeyBackground;\n        (0, _helpersDataset.au)(ctx, drawOptions, centerX, centerY);\n        ctx.strokeStyle = labelColor.borderColor;\n        ctx.fillStyle = labelColor.backgroundColor;\n        (0, _helpersDataset.au)(ctx, drawOptions, centerX, centerY);\n      } else {\n        ctx.lineWidth = (0, _helpersDataset.i)(labelColor.borderWidth) ? Math.max.apply(Math, (0, _toConsumableArray2.default)(Object.values(labelColor.borderWidth))) : labelColor.borderWidth || 1;\n        ctx.strokeStyle = labelColor.borderColor;\n        ctx.setLineDash(labelColor.borderDash || []);\n        ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n        var outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n        var innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n        var borderRadius = (0, _helpersDataset.ax)(labelColor.borderRadius);\n        if (Object.values(borderRadius).some(function (v) {\n          return v !== 0;\n        })) {\n          ctx.beginPath();\n          ctx.fillStyle = options.multiKeyBackground;\n          (0, _helpersDataset.av)(ctx, {\n            x: outerX,\n            y: colorY,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius\n          });\n          ctx.fill();\n          ctx.stroke();\n          ctx.fillStyle = labelColor.backgroundColor;\n          ctx.beginPath();\n          (0, _helpersDataset.av)(ctx, {\n            x: innerX,\n            y: colorY + 1,\n            w: boxWidth - 2,\n            h: boxHeight - 2,\n            radius: borderRadius\n          });\n          ctx.fill();\n        } else {\n          ctx.fillStyle = options.multiKeyBackground;\n          ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.fillStyle = labelColor.backgroundColor;\n          ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n        }\n      }\n      ctx.fillStyle = this.labelTextColors[i];\n    }\n  }, {\n    key: \"drawBody\",\n    value: function drawBody(pt, ctx, options) {\n      var body = this.body;\n      var bodySpacing = options.bodySpacing,\n        bodyAlign = options.bodyAlign,\n        displayColors = options.displayColors,\n        boxHeight = options.boxHeight,\n        boxWidth = options.boxWidth,\n        boxPadding = options.boxPadding;\n      var bodyFont = (0, _helpersDataset.a0)(options.bodyFont);\n      var bodyLineHeight = bodyFont.lineHeight;\n      var xLinePadding = 0;\n      var rtlHelper = (0, _helpersDataset.aA)(options.rtl, this.x, this.width);\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n        pt.y += bodyLineHeight + bodySpacing;\n      };\n      var bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n      var bodyItem, textColor, lines, i, j, ilen, jlen;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'middle';\n      ctx.font = bodyFont.string;\n      pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n      ctx.fillStyle = options.bodyColor;\n      (0, _helpersDataset.F)(this.beforeBody, fillLineOfText);\n      xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n      for (i = 0, ilen = body.length; i < ilen; ++i) {\n        bodyItem = body[i];\n        textColor = this.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        (0, _helpersDataset.F)(bodyItem.before, fillLineOfText);\n        lines = bodyItem.lines;\n        if (displayColors && lines.length) {\n          this._drawColorBox(ctx, pt, i, rtlHelper, options);\n          bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n        }\n        for (j = 0, jlen = lines.length; j < jlen; ++j) {\n          fillLineOfText(lines[j]);\n          bodyLineHeight = bodyFont.lineHeight;\n        }\n        (0, _helpersDataset.F)(bodyItem.after, fillLineOfText);\n      }\n      xLinePadding = 0;\n      bodyLineHeight = bodyFont.lineHeight;\n      (0, _helpersDataset.F)(this.afterBody, fillLineOfText);\n      pt.y -= bodySpacing;\n    }\n  }, {\n    key: \"drawFooter\",\n    value: function drawFooter(pt, ctx, options) {\n      var footer = this.footer;\n      var length = footer.length;\n      var footerFont, i;\n      if (length) {\n        var rtlHelper = (0, _helpersDataset.aA)(options.rtl, this.x, this.width);\n        pt.x = getAlignedX(this, options.footerAlign, options);\n        pt.y += options.footerMarginTop;\n        ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n        ctx.textBaseline = 'middle';\n        footerFont = (0, _helpersDataset.a0)(options.footerFont);\n        ctx.fillStyle = options.footerColor;\n        ctx.font = footerFont.string;\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n          pt.y += footerFont.lineHeight + options.footerSpacing;\n        }\n      }\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground(pt, ctx, tooltipSize, options) {\n      var xAlign = this.xAlign,\n        yAlign = this.yAlign;\n      var x = pt.x,\n        y = pt.y;\n      var width = tooltipSize.width,\n        height = tooltipSize.height;\n      var _toTRBLCorners3 = (0, _helpersDataset.ax)(options.cornerRadius),\n        topLeft = _toTRBLCorners3.topLeft,\n        topRight = _toTRBLCorners3.topRight,\n        bottomLeft = _toTRBLCorners3.bottomLeft,\n        bottomRight = _toTRBLCorners3.bottomRight;\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.beginPath();\n      ctx.moveTo(x + topLeft, y);\n      if (yAlign === 'top') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x + width - topRight, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x + width, y + height - bottomRight);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x + bottomLeft, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x, y + topLeft);\n      ctx.quadraticCurveTo(x, y, x + topLeft, y);\n      ctx.closePath();\n      ctx.fill();\n      if (options.borderWidth > 0) {\n        ctx.stroke();\n      }\n    }\n  }, {\n    key: \"_updateAnimationTarget\",\n    value: function _updateAnimationTarget(options) {\n      var chart = this.chart;\n      var anims = this.$animations;\n      var animX = anims && anims.x;\n      var animY = anims && anims.y;\n      if (animX || animY) {\n        var position = positioners[options.position].call(this, this._active, this._eventPosition);\n        if (!position) {\n          return;\n        }\n        var size = this._size = getTooltipSize(this, options);\n        var positionAndSize = Object.assign({}, position, this._size);\n        var alignment = determineAlignment(chart, options, positionAndSize);\n        var point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n        if (animX._to !== point.x || animY._to !== point.y) {\n          this.xAlign = alignment.xAlign;\n          this.yAlign = alignment.yAlign;\n          this.width = size.width;\n          this.height = size.height;\n          this.caretX = position.x;\n          this.caretY = position.y;\n          this._resolveAnimations().update(this, point);\n        }\n      }\n    }\n  }, {\n    key: \"_willRender\",\n    value: function _willRender() {\n      return !!this.opacity;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var options = this.options.setContext(this.getContext());\n      var opacity = this.opacity;\n      if (!opacity) {\n        return;\n      }\n      this._updateAnimationTarget(options);\n      var tooltipSize = {\n        width: this.width,\n        height: this.height\n      };\n      var pt = {\n        x: this.x,\n        y: this.y\n      };\n      opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n      var padding = (0, _helpersDataset.E)(options.padding);\n      var hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n      if (options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity;\n        this.drawBackground(pt, ctx, tooltipSize, options);\n        (0, _helpersDataset.aB)(ctx, options.textDirection);\n        pt.y += padding.top;\n        this.drawTitle(pt, ctx, options);\n        this.drawBody(pt, ctx, options);\n        this.drawFooter(pt, ctx, options);\n        (0, _helpersDataset.aD)(ctx, options.textDirection);\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"getActiveElements\",\n    value: function getActiveElements() {\n      return this._active || [];\n    }\n  }, {\n    key: \"setActiveElements\",\n    value: function setActiveElements(activeElements, eventPosition) {\n      var _this32 = this;\n      var lastActive = this._active;\n      var active = activeElements.map(function (_ref1) {\n        var datasetIndex = _ref1.datasetIndex,\n          index = _ref1.index;\n        var meta = _this32.chart.getDatasetMeta(datasetIndex);\n        if (!meta) {\n          throw new Error('Cannot find a dataset at index ' + datasetIndex);\n        }\n        return {\n          datasetIndex: datasetIndex,\n          element: meta.data[index],\n          index: index\n        };\n      });\n      var changed = !(0, _helpersDataset.ai)(lastActive, active);\n      var positionChanged = this._positionChanged(active, eventPosition);\n      if (changed || positionChanged) {\n        this._active = active;\n        this._eventPosition = eventPosition;\n        this._ignoreReplayEvents = true;\n        this.update(true);\n      }\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(e, replay) {\n      var inChartArea = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      if (replay && this._ignoreReplayEvents) {\n        return false;\n      }\n      this._ignoreReplayEvents = false;\n      var options = this.options;\n      var lastActive = this._active || [];\n      var active = this._getActiveElements(e, lastActive, replay, inChartArea);\n      var positionChanged = this._positionChanged(active, e);\n      var changed = replay || !(0, _helpersDataset.ai)(active, lastActive) || positionChanged;\n      if (changed) {\n        this._active = active;\n        if (options.enabled || options.external) {\n          this._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          this.update(true, replay);\n        }\n      }\n      return changed;\n    }\n  }, {\n    key: \"_getActiveElements\",\n    value: function _getActiveElements(e, lastActive, replay, inChartArea) {\n      var _this33 = this;\n      var options = this.options;\n      if (e.type === 'mouseout') {\n        return [];\n      }\n      if (!inChartArea) {\n        return lastActive.filter(function (i) {\n          return _this33.chart.data.datasets[i.datasetIndex] && _this33.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined;\n        });\n      }\n      var active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n      return active;\n    }\n  }, {\n    key: \"_positionChanged\",\n    value: function _positionChanged(active, e) {\n      var caretX = this.caretX,\n        caretY = this.caretY,\n        options = this.options;\n      var position = positioners[options.position].call(this, active, e);\n      return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n  }]);\n}(Element);\n(0, _defineProperty2.default)(Tooltip, \"positioners\", positioners);\nvar plugin_tooltip = exports.Tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners: positioners,\n  afterInit: function afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({\n        chart: chart,\n        options: options\n      });\n    }\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset: function reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw: function afterDraw(chart) {\n    var tooltip = chart.tooltip;\n    if (tooltip && tooltip._willRender()) {\n      var args = {\n        tooltip: tooltip\n      };\n      if (chart.notifyPlugins('beforeTooltipDraw', _objectSpread(_objectSpread({}, args), {}, {\n        cancelable: true\n      })) === false) {\n        return;\n      }\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent: function afterEvent(chart, args) {\n    if (chart.tooltip) {\n      var useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold'\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {},\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold'\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: function boxHeight(ctx, opts) {\n      return opts.bodyFont.size;\n    },\n    boxWidth: function boxWidth(ctx, opts) {\n      return opts.bodyFont.size;\n    },\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart'\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: function _scriptable(name) {\n      return name !== 'filter' && name !== 'itemSort' && name !== 'external';\n    },\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\nvar plugins = exports.plugins = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Colors: plugin_colors,\n  Decimation: plugin_decimation,\n  Filler: index,\n  Legend: plugin_legend,\n  SubTitle: plugin_subtitle,\n  Title: plugin_title,\n  Tooltip: plugin_tooltip\n});\nvar addIfString = function addIfString(labels, raw, index, addedLabels) {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({\n      index: index,\n      label: raw\n    });\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  var first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  var last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nvar validIndex = function validIndex(index, max) {\n  return index === null ? null : (0, _helpersDataset.S)(Math.round(index), 0, max);\n};\nfunction _getLabelForValue(value) {\n  var labels = this.getLabels();\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\nvar CategoryScale = exports.CategoryScale = /*#__PURE__*/function (_Scale) {\n  function CategoryScale(cfg) {\n    var _this34;\n    (0, _classCallCheck2.default)(this, CategoryScale);\n    _this34 = _callSuper(this, CategoryScale, [cfg]);\n    _this34._startValue = undefined;\n    _this34._valueRange = 0;\n    _this34._addedLabels = [];\n    return _this34;\n  }\n  (0, _inherits2.default)(CategoryScale, _Scale);\n  return (0, _createClass2.default)(CategoryScale, [{\n    key: \"init\",\n    value: function init(scaleOptions) {\n      var added = this._addedLabels;\n      if (added.length) {\n        var labels = this.getLabels();\n        var _iterator23 = _createForOfIteratorHelper(added),\n          _step23;\n        try {\n          for (_iterator23.s(); !(_step23 = _iterator23.n()).done;) {\n            var _step23$value = _step23.value,\n              _index3 = _step23$value.index,\n              label = _step23$value.label;\n            if (labels[_index3] === label) {\n              labels.splice(_index3, 1);\n            }\n          }\n        } catch (err) {\n          _iterator23.e(err);\n        } finally {\n          _iterator23.f();\n        }\n        this._addedLabels = [];\n      }\n      _superPropGet(CategoryScale, \"init\", this, 3)([scaleOptions]);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if ((0, _helpersDataset.k)(raw)) {\n        return null;\n      }\n      var labels = this.getLabels();\n      index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, (0, _helpersDataset.v)(index, raw), this._addedLabels);\n      return validIndex(index, labels.length - 1);\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getUserBounds2 = this.getUserBounds(),\n        minDefined = _this$getUserBounds2.minDefined,\n        maxDefined = _this$getUserBounds2.maxDefined;\n      var _this$getMinMax = this.getMinMax(true),\n        min = _this$getMinMax.min,\n        max = _this$getMinMax.max;\n      if (this.options.bounds === 'ticks') {\n        if (!minDefined) {\n          min = 0;\n        }\n        if (!maxDefined) {\n          max = this.getLabels().length - 1;\n        }\n      }\n      this.min = min;\n      this.max = max;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var min = this.min;\n      var max = this.max;\n      var offset = this.options.offset;\n      var ticks = [];\n      var labels = this.getLabels();\n      labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n      this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n      this._startValue = this.min - (offset ? 0.5 : 0);\n      for (var value = min; value <= max; value++) {\n        ticks.push({\n          value: value\n        });\n      }\n      return ticks;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return _getLabelForValue.call(this, value);\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      _superPropGet(CategoryScale, \"configure\", this, 3)([]);\n      if (!this.isHorizontal()) {\n        this._reversePixels = !this._reversePixels;\n      }\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      if (typeof value !== 'number') {\n        value = this.parse(value);\n      }\n      return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n  }, {\n    key: \"getPixelForTick\",\n    value: function getPixelForTick(index) {\n      var ticks = this.ticks;\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n      return this.getPixelForValue(ticks[index].value);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n  }, {\n    key: \"getBasePixel\",\n    value: function getBasePixel() {\n      return this.bottom;\n    }\n  }]);\n}(Scale);\n(0, _defineProperty2.default)(CategoryScale, \"id\", 'category');\n(0, _defineProperty2.default)(CategoryScale, \"defaults\", {\n  ticks: {\n    callback: _getLabelForValue\n  }\n});\nfunction generateTicks$1(generationOptions, dataRange) {\n  var ticks = [];\n  var MIN_SPACING = 1e-14;\n  var bounds = generationOptions.bounds,\n    step = generationOptions.step,\n    min = generationOptions.min,\n    max = generationOptions.max,\n    precision = generationOptions.precision,\n    count = generationOptions.count,\n    maxTicks = generationOptions.maxTicks,\n    maxDigits = generationOptions.maxDigits,\n    includeBounds = generationOptions.includeBounds;\n  var unit = step || 1;\n  var maxSpaces = maxTicks - 1;\n  var rmin = dataRange.min,\n    rmax = dataRange.max;\n  var minDefined = !(0, _helpersDataset.k)(min);\n  var maxDefined = !(0, _helpersDataset.k)(max);\n  var countDefined = !(0, _helpersDataset.k)(count);\n  var minSpacing = (rmax - rmin) / (maxDigits + 1);\n  var spacing = (0, _helpersDataset.aI)((rmax - rmin) / maxSpaces / unit) * unit;\n  var factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{\n      value: rmin\n    }, {\n      value: rmax\n    }];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = (0, _helpersDataset.aI)(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!(0, _helpersDataset.k)(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && (0, _helpersDataset.aJ)((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if ((0, _helpersDataset.aK)(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  var decimalPlaces = Math.max((0, _helpersDataset.aL)(spacing), (0, _helpersDataset.aL)(niceMin));\n  factor = Math.pow(10, (0, _helpersDataset.k)(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  var j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({\n        value: min\n      });\n      if (niceMin < min) {\n        j++;\n      }\n      if ((0, _helpersDataset.aK)(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    var tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({\n      value: tickValue\n    });\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && (0, _helpersDataset.aK)(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({\n        value: max\n      });\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({\n      value: niceMax\n    });\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, _ref10) {\n  var horizontal = _ref10.horizontal,\n    minRotation = _ref10.minRotation;\n  var rad = (0, _helpersDataset.t)(minRotation);\n  var ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  var length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nvar LinearScaleBase = /*#__PURE__*/function (_Scale2) {\n  function LinearScaleBase(cfg) {\n    var _this35;\n    (0, _classCallCheck2.default)(this, LinearScaleBase);\n    _this35 = _callSuper(this, LinearScaleBase, [cfg]);\n    _this35.start = undefined;\n    _this35.end = undefined;\n    _this35._startValue = undefined;\n    _this35._endValue = undefined;\n    _this35._valueRange = 0;\n    return _this35;\n  }\n  (0, _inherits2.default)(LinearScaleBase, _Scale2);\n  return (0, _createClass2.default)(LinearScaleBase, [{\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if ((0, _helpersDataset.k)(raw)) {\n        return null;\n      }\n      if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n        return null;\n      }\n      return +raw;\n    }\n  }, {\n    key: \"handleTickRangeOptions\",\n    value: function handleTickRangeOptions() {\n      var beginAtZero = this.options.beginAtZero;\n      var _this$getUserBounds3 = this.getUserBounds(),\n        minDefined = _this$getUserBounds3.minDefined,\n        maxDefined = _this$getUserBounds3.maxDefined;\n      var min = this.min,\n        max = this.max;\n      var setMin = function setMin(v) {\n        return min = minDefined ? min : v;\n      };\n      var setMax = function setMax(v) {\n        return max = maxDefined ? max : v;\n      };\n      if (beginAtZero) {\n        var minSign = (0, _helpersDataset.s)(min);\n        var maxSign = (0, _helpersDataset.s)(max);\n        if (minSign < 0 && maxSign < 0) {\n          setMax(0);\n        } else if (minSign > 0 && maxSign > 0) {\n          setMin(0);\n        }\n      }\n      if (min === max) {\n        var offset = max === 0 ? 1 : Math.abs(max * 0.05);\n        setMax(max + offset);\n        if (!beginAtZero) {\n          setMin(min - offset);\n        }\n      }\n      this.min = min;\n      this.max = max;\n    }\n  }, {\n    key: \"getTickLimit\",\n    value: function getTickLimit() {\n      var tickOpts = this.options.ticks;\n      var maxTicksLimit = tickOpts.maxTicksLimit,\n        stepSize = tickOpts.stepSize;\n      var maxTicks;\n      if (stepSize) {\n        maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n        if (maxTicks > 1000) {\n          console.warn(\"scales.\".concat(this.id, \".ticks.stepSize: \").concat(stepSize, \" would result generating up to \").concat(maxTicks, \" ticks. Limiting to 1000.\"));\n          maxTicks = 1000;\n        }\n      } else {\n        maxTicks = this.computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n      return maxTicks;\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var opts = this.options;\n      var tickOpts = opts.ticks;\n      var maxTicks = this.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        bounds: opts.bounds,\n        min: opts.min,\n        max: opts.max,\n        precision: tickOpts.precision,\n        step: tickOpts.stepSize,\n        count: tickOpts.count,\n        maxDigits: this._maxDigits(),\n        horizontal: this.isHorizontal(),\n        minRotation: tickOpts.minRotation || 0,\n        includeBounds: tickOpts.includeBounds !== false\n      };\n      var dataRange = this._range || this;\n      var ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n      if (opts.bounds === 'ticks') {\n        (0, _helpersDataset.aH)(ticks, this, 'value');\n      }\n      if (opts.reverse) {\n        ticks.reverse();\n        this.start = this.max;\n        this.end = this.min;\n      } else {\n        this.start = this.min;\n        this.end = this.max;\n      }\n      return ticks;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var ticks = this.ticks;\n      var start = this.min;\n      var end = this.max;\n      _superPropGet(LinearScaleBase, \"configure\", this, 3)([]);\n      if (this.options.offset && ticks.length) {\n        var offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n        start -= offset;\n        end += offset;\n      }\n      this._startValue = start;\n      this._endValue = end;\n      this._valueRange = end - start;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return (0, _helpersDataset.o)(value, this.chart.options.locale, this.options.ticks.format);\n    }\n  }]);\n}(Scale);\nvar LinearScale = exports.LinearScale = /*#__PURE__*/function (_LinearScaleBase) {\n  function LinearScale() {\n    (0, _classCallCheck2.default)(this, LinearScale);\n    return _callSuper(this, LinearScale, arguments);\n  }\n  (0, _inherits2.default)(LinearScale, _LinearScaleBase);\n  return (0, _createClass2.default)(LinearScale, [{\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getMinMax2 = this.getMinMax(true),\n        min = _this$getMinMax2.min,\n        max = _this$getMinMax2.max;\n      this.min = (0, _helpersDataset.g)(min) ? min : 0;\n      this.max = (0, _helpersDataset.g)(max) ? max : 1;\n      this.handleTickRangeOptions();\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      var horizontal = this.isHorizontal();\n      var length = horizontal ? this.width : this.height;\n      var minRotation = (0, _helpersDataset.t)(this.options.ticks.minRotation);\n      var ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n      var tickFont = this._resolveTickFontOptions(0);\n      return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n  }]);\n}(LinearScaleBase);\n(0, _defineProperty2.default)(LinearScale, \"id\", 'linear');\n(0, _defineProperty2.default)(LinearScale, \"defaults\", {\n  ticks: {\n    callback: _helpersDataset.aM.formatters.numeric\n  }\n});\nvar log10Floor = function log10Floor(v) {\n  return Math.floor((0, _helpersDataset.aN)(v));\n};\nvar changeExponent = function changeExponent(v, m) {\n  return Math.pow(10, log10Floor(v) + m);\n};\nfunction isMajor(tickVal) {\n  var remain = tickVal / Math.pow(10, log10Floor(tickVal));\n  return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n  var rangeStep = Math.pow(10, rangeExp);\n  var start = Math.floor(min / rangeStep);\n  var end = Math.ceil(max / rangeStep);\n  return end - start;\n}\nfunction startExp(min, max) {\n  var range = max - min;\n  var rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\nfunction generateTicks(generationOptions, _ref11) {\n  var min = _ref11.min,\n    max = _ref11.max;\n  min = (0, _helpersDataset.O)(generationOptions.min, min);\n  var ticks = [];\n  var minExp = log10Floor(min);\n  var exp = startExp(min, max);\n  var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  var stepSize = Math.pow(10, exp);\n  var base = minExp > exp ? Math.pow(10, minExp) : 0;\n  var start = Math.round((min - base) * precision) / precision;\n  var offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  var significand = Math.floor((start - offset) / Math.pow(10, exp));\n  var value = (0, _helpersDataset.O)(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({\n      value: value,\n      major: isMajor(value),\n      significand: significand\n    });\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  var lastTick = (0, _helpersDataset.O)(generationOptions.max, value);\n  ticks.push({\n    value: lastTick,\n    major: isMajor(lastTick),\n    significand: significand\n  });\n  return ticks;\n}\nvar LogarithmicScale = exports.LogarithmicScale = /*#__PURE__*/function (_Scale3) {\n  function LogarithmicScale(cfg) {\n    var _this36;\n    (0, _classCallCheck2.default)(this, LogarithmicScale);\n    _this36 = _callSuper(this, LogarithmicScale, [cfg]);\n    _this36.start = undefined;\n    _this36.end = undefined;\n    _this36._startValue = undefined;\n    _this36._valueRange = 0;\n    return _this36;\n  }\n  (0, _inherits2.default)(LogarithmicScale, _Scale3);\n  return (0, _createClass2.default)(LogarithmicScale, [{\n    key: \"parse\",\n    value: function parse(raw, index) {\n      var value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n      if (value === 0) {\n        this._zero = true;\n        return undefined;\n      }\n      return (0, _helpersDataset.g)(value) && value > 0 ? value : null;\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getMinMax3 = this.getMinMax(true),\n        min = _this$getMinMax3.min,\n        max = _this$getMinMax3.max;\n      this.min = (0, _helpersDataset.g)(min) ? Math.max(0, min) : null;\n      this.max = (0, _helpersDataset.g)(max) ? Math.max(0, max) : null;\n      if (this.options.beginAtZero) {\n        this._zero = true;\n      }\n      if (this._zero && this.min !== this._suggestedMin && !(0, _helpersDataset.g)(this._userMin)) {\n        this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n      }\n      this.handleTickRangeOptions();\n    }\n  }, {\n    key: \"handleTickRangeOptions\",\n    value: function handleTickRangeOptions() {\n      var _this$getUserBounds4 = this.getUserBounds(),\n        minDefined = _this$getUserBounds4.minDefined,\n        maxDefined = _this$getUserBounds4.maxDefined;\n      var min = this.min;\n      var max = this.max;\n      var setMin = function setMin(v) {\n        return min = minDefined ? min : v;\n      };\n      var setMax = function setMax(v) {\n        return max = maxDefined ? max : v;\n      };\n      if (min === max) {\n        if (min <= 0) {\n          setMin(1);\n          setMax(10);\n        } else {\n          setMin(changeExponent(min, -1));\n          setMax(changeExponent(max, +1));\n        }\n      }\n      if (min <= 0) {\n        setMin(changeExponent(max, -1));\n      }\n      if (max <= 0) {\n        setMax(changeExponent(min, +1));\n      }\n      this.min = min;\n      this.max = max;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var opts = this.options;\n      var generationOptions = {\n        min: this._userMin,\n        max: this._userMax\n      };\n      var ticks = generateTicks(generationOptions, this);\n      if (opts.bounds === 'ticks') {\n        (0, _helpersDataset.aH)(ticks, this, 'value');\n      }\n      if (opts.reverse) {\n        ticks.reverse();\n        this.start = this.max;\n        this.end = this.min;\n      } else {\n        this.start = this.min;\n        this.end = this.max;\n      }\n      return ticks;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return value === undefined ? '0' : (0, _helpersDataset.o)(value, this.chart.options.locale, this.options.ticks.format);\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var start = this.min;\n      _superPropGet(LogarithmicScale, \"configure\", this, 3)([]);\n      this._startValue = (0, _helpersDataset.aN)(start);\n      this._valueRange = (0, _helpersDataset.aN)(this.max) - (0, _helpersDataset.aN)(start);\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      if (value === undefined || value === 0) {\n        value = this.min;\n      }\n      if (value === null || isNaN(value)) {\n        return NaN;\n      }\n      return this.getPixelForDecimal(value === this.min ? 0 : ((0, _helpersDataset.aN)(value) - this._startValue) / this._valueRange);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var decimal = this.getDecimalForPixel(pixel);\n      return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n  }]);\n}(Scale);\n(0, _defineProperty2.default)(LogarithmicScale, \"id\", 'logarithmic');\n(0, _defineProperty2.default)(LogarithmicScale, \"defaults\", {\n  ticks: {\n    callback: _helpersDataset.aM.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n});\nfunction getTickBackdropHeight(opts) {\n  var tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    var padding = (0, _helpersDataset.E)(tickOpts.backdropPadding);\n    return (0, _helpersDataset.v)(tickOpts.font && tickOpts.font.size, _helpersDataset.d.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = (0, _helpersDataset.b)(label) ? label : [label];\n  return {\n    w: (0, _helpersDataset.aO)(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - size / 2,\n      end: pos + size / 2\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  var orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  var limits = Object.assign({}, orig);\n  var labelSizes = [];\n  var padding = [];\n  var valueCount = scale._pointLabels.length;\n  var pointLabelOpts = scale.options.pointLabels;\n  var additionalAngle = pointLabelOpts.centerPointLabels ? _helpersDataset.P / valueCount : 0;\n  for (var i = 0; i < valueCount; i++) {\n    var opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    var pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    var plFont = (0, _helpersDataset.a0)(opts.font);\n    var textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    var angleRadians = (0, _helpersDataset.az)(scale.getIndexAngle(i) + additionalAngle);\n    var angle = Math.round((0, _helpersDataset.U)(angleRadians));\n    var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  var sin = Math.abs(Math.sin(angle));\n  var cos = Math.abs(Math.cos(angle));\n  var x = 0;\n  var y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n  var outerDistance = scale.drawingArea;\n  var extra = itemOpts.extra,\n    additionalAngle = itemOpts.additionalAngle,\n    padding = itemOpts.padding,\n    size = itemOpts.size;\n  var pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  var angle = Math.round((0, _helpersDataset.U)((0, _helpersDataset.az)(pointLabelPosition.angle + _helpersDataset.H)));\n  var y = yForAngle(pointLabelPosition.y, size.h, angle);\n  var textAlign = getTextAlignForAngle(angle);\n  var left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    visible: true,\n    x: pointLabelPosition.x,\n    y: y,\n    textAlign: textAlign,\n    left: left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  var left = item.left,\n    top = item.top,\n    right = item.right,\n    bottom = item.bottom;\n  var apexesInArea = (0, _helpersDataset.C)({\n    x: left,\n    y: top\n  }, area) || (0, _helpersDataset.C)({\n    x: left,\n    y: bottom\n  }, area) || (0, _helpersDataset.C)({\n    x: right,\n    y: top\n  }, area) || (0, _helpersDataset.C)({\n    x: right,\n    y: bottom\n  }, area);\n  return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  var items = [];\n  var valueCount = scale._pointLabels.length;\n  var opts = scale.options;\n  var _opts$pointLabels = opts.pointLabels,\n    centerPointLabels = _opts$pointLabels.centerPointLabels,\n    display = _opts$pointLabels.display;\n  var itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? _helpersDataset.P / valueCount : 0\n  };\n  var area;\n  for (var i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n    var item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= w / 2;\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= h / 2;\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n  var left = item.left,\n    top = item.top,\n    right = item.right,\n    bottom = item.bottom;\n  var backdropColor = opts.backdropColor;\n  if (!(0, _helpersDataset.k)(backdropColor)) {\n    var borderRadius = (0, _helpersDataset.ax)(opts.borderRadius);\n    var padding = (0, _helpersDataset.E)(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n    var backdropLeft = left - padding.left;\n    var backdropTop = top - padding.top;\n    var backdropWidth = right - left + padding.width;\n    var backdropHeight = bottom - top + padding.height;\n    if (Object.values(borderRadius).some(function (v) {\n      return v !== 0;\n    })) {\n      ctx.beginPath();\n      (0, _helpersDataset.av)(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\nfunction drawPointLabels(scale, labelCount) {\n  var ctx = scale.ctx,\n    pointLabels = scale.options.pointLabels;\n  for (var i = labelCount - 1; i >= 0; i--) {\n    var item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      continue;\n    }\n    var optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    var plFont = (0, _helpersDataset.a0)(optsAtIndex.font);\n    var x = item.x,\n      y = item.y,\n      textAlign = item.textAlign;\n    (0, _helpersDataset.Z)(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n      color: optsAtIndex.color,\n      textAlign: textAlign,\n      textBaseline: 'middle'\n    });\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  var ctx = scale.ctx;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, _helpersDataset.T);\n  } else {\n    var pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (var i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  var ctx = scale.ctx;\n  var circular = gridLineOpts.circular;\n  var color = gridLineOpts.color,\n    lineWidth = gridLineOpts.lineWidth;\n  if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash || []);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return (0, _helpersDataset.j)(parent, {\n    label: label,\n    index: index,\n    type: 'pointLabel'\n  });\n}\nvar RadialLinearScale = exports.RadialLinearScale = /*#__PURE__*/function (_LinearScaleBase2) {\n  function RadialLinearScale(cfg) {\n    var _this37;\n    (0, _classCallCheck2.default)(this, RadialLinearScale);\n    _this37 = _callSuper(this, RadialLinearScale, [cfg]);\n    _this37.xCenter = undefined;\n    _this37.yCenter = undefined;\n    _this37.drawingArea = undefined;\n    _this37._pointLabels = [];\n    _this37._pointLabelItems = [];\n    return _this37;\n  }\n  (0, _inherits2.default)(RadialLinearScale, _LinearScaleBase2);\n  return (0, _createClass2.default)(RadialLinearScale, [{\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      var padding = this._padding = (0, _helpersDataset.E)(getTickBackdropHeight(this.options) / 2);\n      var w = this.width = this.maxWidth - padding.width;\n      var h = this.height = this.maxHeight - padding.height;\n      this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n      this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n      this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getMinMax4 = this.getMinMax(false),\n        min = _this$getMinMax4.min,\n        max = _this$getMinMax4.max;\n      this.min = (0, _helpersDataset.g)(min) && !isNaN(min) ? min : 0;\n      this.max = (0, _helpersDataset.g)(max) && !isNaN(max) ? max : 0;\n      this.handleTickRangeOptions();\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var _this38 = this;\n      LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n      this._pointLabels = this.getLabels().map(function (value, index) {\n        var label = (0, _helpersDataset.Q)(_this38.options.pointLabels.callback, [value, index], _this38);\n        return label || label === 0 ? label : '';\n      }).filter(function (v, i) {\n        return _this38.chart.getDataVisibility(i);\n      });\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var opts = this.options;\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(this);\n      } else {\n        this.setCenterPoint(0, 0, 0, 0);\n      }\n    }\n  }, {\n    key: \"setCenterPoint\",\n    value: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n      this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n      this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n  }, {\n    key: \"getIndexAngle\",\n    value: function getIndexAngle(index) {\n      var angleMultiplier = _helpersDataset.T / (this._pointLabels.length || 1);\n      var startAngle = this.options.startAngle || 0;\n      return (0, _helpersDataset.az)(index * angleMultiplier + (0, _helpersDataset.t)(startAngle));\n    }\n  }, {\n    key: \"getDistanceFromCenterForValue\",\n    value: function getDistanceFromCenterForValue(value) {\n      if ((0, _helpersDataset.k)(value)) {\n        return NaN;\n      }\n      var scalingFactor = this.drawingArea / (this.max - this.min);\n      if (this.options.reverse) {\n        return (this.max - value) * scalingFactor;\n      }\n      return (value - this.min) * scalingFactor;\n    }\n  }, {\n    key: \"getValueForDistanceFromCenter\",\n    value: function getValueForDistanceFromCenter(distance) {\n      if ((0, _helpersDataset.k)(distance)) {\n        return NaN;\n      }\n      var scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n      return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n  }, {\n    key: \"getPointLabelContext\",\n    value: function getPointLabelContext(index) {\n      var pointLabels = this._pointLabels || [];\n      if (index >= 0 && index < pointLabels.length) {\n        var pointLabel = pointLabels[index];\n        return createPointLabelContext(this.getContext(), index, pointLabel);\n      }\n    }\n  }, {\n    key: \"getPointPosition\",\n    value: function getPointPosition(index, distanceFromCenter) {\n      var additionalAngle = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var angle = this.getIndexAngle(index) - _helpersDataset.H + additionalAngle;\n      return {\n        x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n        y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n        angle: angle\n      };\n    }\n  }, {\n    key: \"getPointPositionForValue\",\n    value: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n  }, {\n    key: \"getBasePosition\",\n    value: function getBasePosition(index) {\n      return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n  }, {\n    key: \"getPointLabelPosition\",\n    value: function getPointLabelPosition(index) {\n      var _this$_pointLabelItem = this._pointLabelItems[index],\n        left = _this$_pointLabelItem.left,\n        top = _this$_pointLabelItem.top,\n        right = _this$_pointLabelItem.right,\n        bottom = _this$_pointLabelItem.bottom;\n      return {\n        left: left,\n        top: top,\n        right: right,\n        bottom: bottom\n      };\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground() {\n      var _this$options14 = this.options,\n        backgroundColor = _this$options14.backgroundColor,\n        circular = _this$options14.grid.circular;\n      if (backgroundColor) {\n        var ctx = this.ctx;\n        ctx.save();\n        ctx.beginPath();\n        pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n        ctx.closePath();\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"drawGrid\",\n    value: function drawGrid() {\n      var _this39 = this;\n      var ctx = this.ctx;\n      var opts = this.options;\n      var angleLines = opts.angleLines,\n        grid = opts.grid,\n        border = opts.border;\n      var labelCount = this._pointLabels.length;\n      var i, offset, position;\n      if (opts.pointLabels.display) {\n        drawPointLabels(this, labelCount);\n      }\n      if (grid.display) {\n        this.ticks.forEach(function (tick, index) {\n          if (index !== 0 || index === 0 && _this39.min < 0) {\n            offset = _this39.getDistanceFromCenterForValue(tick.value);\n            var context = _this39.getContext(index);\n            var optsAtIndex = grid.setContext(context);\n            var optsAtIndexBorder = border.setContext(context);\n            drawRadiusLine(_this39, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n          }\n        });\n      }\n      if (angleLines.display) {\n        ctx.save();\n        for (i = labelCount - 1; i >= 0; i--) {\n          var optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n          var color = optsAtIndex.color,\n            lineWidth = optsAtIndex.lineWidth;\n          if (!lineWidth || !color) {\n            continue;\n          }\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = color;\n          ctx.setLineDash(optsAtIndex.borderDash);\n          ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n          offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n          position = this.getPointPosition(i, offset);\n          ctx.beginPath();\n          ctx.moveTo(this.xCenter, this.yCenter);\n          ctx.lineTo(position.x, position.y);\n          ctx.stroke();\n        }\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"drawBorder\",\n    value: function drawBorder() {}\n  }, {\n    key: \"drawLabels\",\n    value: function drawLabels() {\n      var _this40 = this;\n      var ctx = this.ctx;\n      var opts = this.options;\n      var tickOpts = opts.ticks;\n      if (!tickOpts.display) {\n        return;\n      }\n      var startAngle = this.getIndexAngle(0);\n      var offset, width;\n      ctx.save();\n      ctx.translate(this.xCenter, this.yCenter);\n      ctx.rotate(startAngle);\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      this.ticks.forEach(function (tick, index) {\n        if (index === 0 && _this40.min >= 0 && !opts.reverse) {\n          return;\n        }\n        var optsAtIndex = tickOpts.setContext(_this40.getContext(index));\n        var tickFont = (0, _helpersDataset.a0)(optsAtIndex.font);\n        offset = _this40.getDistanceFromCenterForValue(_this40.ticks[index].value);\n        if (optsAtIndex.showLabelBackdrop) {\n          ctx.font = tickFont.string;\n          width = ctx.measureText(tick.label).width;\n          ctx.fillStyle = optsAtIndex.backdropColor;\n          var padding = (0, _helpersDataset.E)(optsAtIndex.backdropPadding);\n          ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n        }\n        (0, _helpersDataset.Z)(ctx, tick.label, 0, -offset, tickFont, {\n          color: optsAtIndex.color,\n          strokeColor: optsAtIndex.textStrokeColor,\n          strokeWidth: optsAtIndex.textStrokeWidth\n        });\n      });\n      ctx.restore();\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {}\n  }]);\n}(LinearScaleBase);\n(0, _defineProperty2.default)(RadialLinearScale, \"id\", 'radialLinear');\n(0, _defineProperty2.default)(RadialLinearScale, \"defaults\", {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: _helpersDataset.aM.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback: function callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n});\n(0, _defineProperty2.default)(RadialLinearScale, \"defaultRoutes\", {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n});\n(0, _defineProperty2.default)(RadialLinearScale, \"descriptors\", {\n  angleLines: {\n    _fallback: 'grid'\n  }\n});\nvar INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: 1000\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: 60\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: 60\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: 24\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: 30\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: 4\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: 12\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: 4\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nvar UNITS = /* #__PURE__ */Object.keys(INTERVALS);\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction _parse(scale, input) {\n  if ((0, _helpersDataset.k)(input)) {\n    return null;\n  }\n  var adapter = scale._adapter;\n  var _scale$_parseOpts = scale._parseOpts,\n    parser = _scale$_parseOpts.parser,\n    round = _scale$_parseOpts.round,\n    isoWeekday = _scale$_parseOpts.isoWeekday;\n  var value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!(0, _helpersDataset.g)(value)) {\n    value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && ((0, _helpersDataset.x)(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  var ilen = UNITS.length;\n  for (var i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    var interval = INTERVALS[UNITS[i]];\n    var factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (var i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    var unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    var _lookup2 = (0, _helpersDataset.aQ)(timestamps, time),\n      lo = _lookup2.lo,\n      hi = _lookup2.hi;\n    var timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  var adapter = scale._adapter;\n  var first = +adapter.startOf(ticks[0].value, majorUnit);\n  var last = ticks[ticks.length - 1].value;\n  var major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  var ticks = [];\n  var map = {};\n  var ilen = values.length;\n  var i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value: value,\n      major: false\n    });\n  }\n  return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nvar TimeScale = exports.TimeScale = /*#__PURE__*/function (_Scale4) {\n  function TimeScale(props) {\n    var _this41;\n    (0, _classCallCheck2.default)(this, TimeScale);\n    _this41 = _callSuper(this, TimeScale, [props]);\n    _this41._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    _this41._unit = 'day';\n    _this41._majorUnit = undefined;\n    _this41._offsets = {};\n    _this41._normalized = false;\n    _this41._parseOpts = undefined;\n    return _this41;\n  }\n  (0, _inherits2.default)(TimeScale, _Scale4);\n  return (0, _createClass2.default)(TimeScale, [{\n    key: \"init\",\n    value: function init(scaleOpts) {\n      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var time = scaleOpts.time || (scaleOpts.time = {});\n      var adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n      adapter.init(opts);\n      (0, _helpersDataset.ab)(time.displayFormats, adapter.formats());\n      this._parseOpts = {\n        parser: time.parser,\n        round: time.round,\n        isoWeekday: time.isoWeekday\n      };\n      _superPropGet(TimeScale, \"init\", this, 3)([scaleOpts]);\n      this._normalized = opts.normalized;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (raw === undefined) {\n        return null;\n      }\n      return _parse(this, raw);\n    }\n  }, {\n    key: \"beforeLayout\",\n    value: function beforeLayout() {\n      _superPropGet(TimeScale, \"beforeLayout\", this, 3)([]);\n      this._cache = {\n        data: [],\n        labels: [],\n        all: []\n      };\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var options = this.options;\n      var adapter = this._adapter;\n      var unit = options.time.unit || 'day';\n      var _this$getUserBounds5 = this.getUserBounds(),\n        min = _this$getUserBounds5.min,\n        max = _this$getUserBounds5.max,\n        minDefined = _this$getUserBounds5.minDefined,\n        maxDefined = _this$getUserBounds5.maxDefined;\n      function _applyBounds(bounds) {\n        if (!minDefined && !isNaN(bounds.min)) {\n          min = Math.min(min, bounds.min);\n        }\n        if (!maxDefined && !isNaN(bounds.max)) {\n          max = Math.max(max, bounds.max);\n        }\n      }\n      if (!minDefined || !maxDefined) {\n        _applyBounds(this._getLabelBounds());\n        if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n          _applyBounds(this.getMinMax(false));\n        }\n      }\n      min = (0, _helpersDataset.g)(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n      max = (0, _helpersDataset.g)(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n      this.min = Math.min(min, max - 1);\n      this.max = Math.max(min + 1, max);\n    }\n  }, {\n    key: \"_getLabelBounds\",\n    value: function _getLabelBounds() {\n      var arr = this.getLabelTimestamps();\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      if (arr.length) {\n        min = arr[0];\n        max = arr[arr.length - 1];\n      }\n      return {\n        min: min,\n        max: max\n      };\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var options = this.options;\n      var timeOpts = options.time;\n      var tickOpts = options.ticks;\n      var timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n      if (options.bounds === 'ticks' && timestamps.length) {\n        this.min = this._userMin || timestamps[0];\n        this.max = this._userMax || timestamps[timestamps.length - 1];\n      }\n      var min = this.min;\n      var max = this.max;\n      var ticks = (0, _helpersDataset.aP)(timestamps, min, max);\n      this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n      this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n      this.initOffsets(timestamps);\n      if (options.reverse) {\n        ticks.reverse();\n      }\n      return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n  }, {\n    key: \"afterAutoSkip\",\n    value: function afterAutoSkip() {\n      if (this.options.offsetAfterAutoskip) {\n        this.initOffsets(this.ticks.map(function (tick) {\n          return +tick.value;\n        }));\n      }\n    }\n  }, {\n    key: \"initOffsets\",\n    value: function initOffsets() {\n      var timestamps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var start = 0;\n      var end = 0;\n      var first, last;\n      if (this.options.offset && timestamps.length) {\n        first = this.getDecimalForValue(timestamps[0]);\n        if (timestamps.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n        }\n        last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n        if (timestamps.length === 1) {\n          end = last;\n        } else {\n          end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n        }\n      }\n      var limit = timestamps.length < 3 ? 0.5 : 0.25;\n      start = (0, _helpersDataset.S)(start, 0, limit);\n      end = (0, _helpersDataset.S)(end, 0, limit);\n      this._offsets = {\n        start: start,\n        end: end,\n        factor: 1 / (start + 1 + end)\n      };\n    }\n  }, {\n    key: \"_generate\",\n    value: function _generate() {\n      var adapter = this._adapter;\n      var min = this.min;\n      var max = this.max;\n      var options = this.options;\n      var timeOpts = options.time;\n      var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n      var stepSize = (0, _helpersDataset.v)(options.ticks.stepSize, 1);\n      var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n      var hasWeekday = (0, _helpersDataset.x)(weekday) || weekday === true;\n      var ticks = {};\n      var first = min;\n      var time, count;\n      if (hasWeekday) {\n        first = +adapter.startOf(first, 'isoWeek', weekday);\n      }\n      first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n      if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n        throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n      }\n      var timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n      for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n        addTick(ticks, time, timestamps);\n      }\n      if (time === max || options.bounds === 'ticks' || count === 1) {\n        addTick(ticks, time, timestamps);\n      }\n      return Object.keys(ticks).sort(sorter).map(function (x) {\n        return +x;\n      });\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      var adapter = this._adapter;\n      var timeOpts = this.options.time;\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(value, timeOpts.tooltipFormat);\n      }\n      return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n  }, {\n    key: \"format\",\n    value: function format(value, _format) {\n      var options = this.options;\n      var formats = options.time.displayFormats;\n      var unit = this._unit;\n      var fmt = _format || formats[unit];\n      return this._adapter.format(value, fmt);\n    }\n  }, {\n    key: \"_tickFormatFunction\",\n    value: function _tickFormatFunction(time, index, ticks, format) {\n      var options = this.options;\n      var formatter = options.ticks.callback;\n      if (formatter) {\n        return (0, _helpersDataset.Q)(formatter, [time, index, ticks], this);\n      }\n      var formats = options.time.displayFormats;\n      var unit = this._unit;\n      var majorUnit = this._majorUnit;\n      var minorFormat = unit && formats[unit];\n      var majorFormat = majorUnit && formats[majorUnit];\n      var tick = ticks[index];\n      var major = majorUnit && majorFormat && tick && tick.major;\n      return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var i, ilen, tick;\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        tick.label = this._tickFormatFunction(tick.value, i, ticks);\n      }\n    }\n  }, {\n    key: \"getDecimalForValue\",\n    value: function getDecimalForValue(value) {\n      return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      var offsets = this._offsets;\n      var pos = this.getDecimalForValue(value);\n      return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var offsets = this._offsets;\n      var pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return this.min + pos * (this.max - this.min);\n    }\n  }, {\n    key: \"_getLabelSize\",\n    value: function _getLabelSize(label) {\n      var ticksOpts = this.options.ticks;\n      var tickLabelWidth = this.ctx.measureText(label).width;\n      var angle = (0, _helpersDataset.t)(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = this._resolveTickFontOptions(0).size;\n      return {\n        w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n        h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n      };\n    }\n  }, {\n    key: \"_getLabelCapacity\",\n    value: function _getLabelCapacity(exampleTime) {\n      var timeOpts = this.options.time;\n      var displayFormats = timeOpts.displayFormats;\n      var format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n      var exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n      var size = this._getLabelSize(exampleLabel);\n      var capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n      return capacity > 0 ? capacity : 1;\n    }\n  }, {\n    key: \"getDataTimestamps\",\n    value: function getDataTimestamps() {\n      var timestamps = this._cache.data || [];\n      var i, ilen;\n      if (timestamps.length) {\n        return timestamps;\n      }\n      var metas = this.getMatchingVisibleMetas();\n      if (this._normalized && metas.length) {\n        return this._cache.data = metas[0].controller.getAllParsedValues(this);\n      }\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n      }\n      return this._cache.data = this.normalize(timestamps);\n    }\n  }, {\n    key: \"getLabelTimestamps\",\n    value: function getLabelTimestamps() {\n      var timestamps = this._cache.labels || [];\n      var i, ilen;\n      if (timestamps.length) {\n        return timestamps;\n      }\n      var labels = this.getLabels();\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        timestamps.push(_parse(this, labels[i]));\n      }\n      return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize(values) {\n      return (0, _helpersDataset._)(values.sort(sorter));\n    }\n  }]);\n}(Scale);\n(0, _defineProperty2.default)(TimeScale, \"id\", 'time');\n(0, _defineProperty2.default)(TimeScale, \"defaults\", {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    callback: false,\n    major: {\n      enabled: false\n    }\n  }\n});\nfunction interpolate(table, val, reverse) {\n  var lo = 0;\n  var hi = table.length - 1;\n  var prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      var _lookupByKey2 = (0, _helpersDataset.B)(table, 'pos', val);\n      lo = _lookupByKey2.lo;\n      hi = _lookupByKey2.hi;\n    }\n    var _table$lo = table[lo];\n    prevSource = _table$lo.pos;\n    prevTarget = _table$lo.time;\n    var _table$hi = table[hi];\n    nextSource = _table$hi.pos;\n    nextTarget = _table$hi.time;\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      var _lookupByKey3 = (0, _helpersDataset.B)(table, 'time', val);\n      lo = _lookupByKey3.lo;\n      hi = _lookupByKey3.hi;\n    }\n    var _table$lo2 = table[lo];\n    prevSource = _table$lo2.time;\n    prevTarget = _table$lo2.pos;\n    var _table$hi2 = table[hi];\n    nextSource = _table$hi2.time;\n    nextTarget = _table$hi2.pos;\n  }\n  var span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nvar TimeSeriesScale = exports.TimeSeriesScale = /*#__PURE__*/function (_TimeScale) {\n  function TimeSeriesScale(props) {\n    var _this42;\n    (0, _classCallCheck2.default)(this, TimeSeriesScale);\n    _this42 = _callSuper(this, TimeSeriesScale, [props]);\n    _this42._table = [];\n    _this42._minPos = undefined;\n    _this42._tableRange = undefined;\n    return _this42;\n  }\n  (0, _inherits2.default)(TimeSeriesScale, _TimeScale);\n  return (0, _createClass2.default)(TimeSeriesScale, [{\n    key: \"initOffsets\",\n    value: function initOffsets() {\n      var timestamps = this._getTimestampsForTable();\n      var table = this._table = this.buildLookupTable(timestamps);\n      this._minPos = interpolate(table, this.min);\n      this._tableRange = interpolate(table, this.max) - this._minPos;\n      _superPropGet(TimeSeriesScale, \"initOffsets\", this, 3)([timestamps]);\n    }\n  }, {\n    key: \"buildLookupTable\",\n    value: function buildLookupTable(timestamps) {\n      var min = this.min,\n        max = this.max;\n      var items = [];\n      var table = [];\n      var i, ilen, prev, curr, next;\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        curr = timestamps[i];\n        if (curr >= min && curr <= max) {\n          items.push(curr);\n        }\n      }\n      if (items.length < 2) {\n        return [{\n          time: min,\n          pos: 0\n        }, {\n          time: max,\n          pos: 1\n        }];\n      }\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        next = items[i + 1];\n        prev = items[i - 1];\n        curr = items[i];\n        if (Math.round((next + prev) / 2) !== curr) {\n          table.push({\n            time: curr,\n            pos: i / (ilen - 1)\n          });\n        }\n      }\n      return table;\n    }\n  }, {\n    key: \"_generate\",\n    value: function _generate() {\n      var min = this.min;\n      var max = this.max;\n      var timestamps = _superPropGet(TimeSeriesScale, \"getDataTimestamps\", this, 3)([]);\n      if (!timestamps.includes(min) || !timestamps.length) {\n        timestamps.splice(0, 0, min);\n      }\n      if (!timestamps.includes(max) || timestamps.length === 1) {\n        timestamps.push(max);\n      }\n      return timestamps.sort(function (a, b) {\n        return a - b;\n      });\n    }\n  }, {\n    key: \"_getTimestampsForTable\",\n    value: function _getTimestampsForTable() {\n      var timestamps = this._cache.all || [];\n      if (timestamps.length) {\n        return timestamps;\n      }\n      var data = this.getDataTimestamps();\n      var label = this.getLabelTimestamps();\n      if (data.length && label.length) {\n        timestamps = this.normalize(data.concat(label));\n      } else {\n        timestamps = data.length ? data : label;\n      }\n      timestamps = this._cache.all = timestamps;\n      return timestamps;\n    }\n  }, {\n    key: \"getDecimalForValue\",\n    value: function getDecimalForValue(value) {\n      return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var offsets = this._offsets;\n      var decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n  }]);\n}(TimeScale);\n(0, _defineProperty2.default)(TimeSeriesScale, \"id\", 'timeseries');\n(0, _defineProperty2.default)(TimeSeriesScale, \"defaults\", TimeScale.defaults);\nvar scales = exports.scales = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CategoryScale: CategoryScale,\n  LinearScale: LinearScale,\n  LogarithmicScale: LogarithmicScale,\n  RadialLinearScale: RadialLinearScale,\n  TimeScale: TimeScale,\n  TimeSeriesScale: TimeSeriesScale\n});\nvar registerables = exports.registerables = [controllers, elements, plugins, scales];",{"version":3,"names":["Animator","_classCallCheck2","default","_request","_charts","Map","_running","_lastDate","undefined","_createClass2","key","value","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","_this","requestAnimFrame","call","window","_update","_this2","arguments","length","Date","now","remaining","running","items","i","draw","item","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","_this$_getAnims$items","apply","_toConsumableArray2","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","exports","transparent","interpolators","boolean","from","to","factor","color","c0","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","resolve","_fn","_typeof2","_easing","effects","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","isObject","animationOptions","Object","keys","defaults","animation","animatedProps","getOwnPropertyNames","_i","_animationOptions","option","isArray","properties","_animateOptions","values","newOptions","options","resolveTargetOptions","animations","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","size","assign","anim","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","x","y","top","right","bottom","left","toClip","t","r","b","l","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","found","isNumberFinite","sign","convertObjectDataToArray","data","meta","iScale","vScale","iAxisKey","axis","vAxisKey","adata","Array","_defineProperty2","isStacked","stacked","getStackKey","indexScale","valueScale","concat","id","getUserBounds","_scale$getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","_iterator","_createForOfIteratorHelper","getMatchingVisibleMetas","_step","s","n","done","err","e","f","updateStacks","controller","parsed","_cachedMeta","_stacks","iAxis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","createContext","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","_iterator2","_step2","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","constructor","dataElementType","initialize","linkScales","addElements","fill","isPluginEnabled","console","warn","updateIndex","getDataset","chooseId","xid","xAxisID","valueOrDefault","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","unlistenArrayEvents","_dataCheck","isExtensible","listenArrayEvents","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","_this$_parsing","_this$_parsing$xAxisK","xAxisKey","_this$_parsing$yAxisK","yAxisKey","resolveObjectKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","otherScale","_getUserBounds","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","clip","elements","area","chartArea","drawActiveElementsOnTop","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","elementType","_this3","cache","cacheKey","sharing","defined","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","_iterator3","_step3","_step3$value","_slicedToArray2","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_args2","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","_arrayUnique","sort","a","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","isNullOrUndef","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","base","setBorderSkipped","edge","borderSkipped","_borderProps","enableBorderRadius","parseEdge","swap","startEnd","orig","v1","v2","v","setInflateAmount","_ref","inflateAmount","BarController","_DatasetController","_callSuper","_inherits2","_this$_parsing2","_this$_parsing2$xAxis","_this$_parsing2$yAxis","obj","_superPropGet","bars","getBasePixel","_getRuler","_this$_getSharedOptio","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","grouped","currentParsed","iScaleValue","skipNull","find","val","isNaN","_iterator4","_step4","indexOf","_getStackCount","_getStackIndex","name","_startPixel","_endPixel","_this$_cachedMeta","_this$options","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","numbers","_index_","offset","grid","_value_","beginAtZero","BubbleController","_DatasetController2","radius","points","_this$_cachedMeta2","_this$_getSharedOptio2","point","iPixel","vPixel","skip","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","TAU","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","_angleBetween","calcMin","maxX","maxY","HALF_PI","minX","PI","minY","DoughnutController","_DatasetController3","_this4","innerRadius","outerRadius","getter","_this$_parsing$key","_getRotation","toRadians","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","toPercentage","chartWeight","_getRingWeight","_this$_getRotationExt","_getRatioAndOffset","maxWidth","maxHeight","maxRadius","toDimension","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","_this$_getSharedOptio3","arc","metaData","formatNumber","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","_scriptable","_indexable","startsWith","aspectRatio","plugins","legend","generateLabels","_chart$legend$options2","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","fontColor","lineWidth","onClick","legendItem","toggleDataVisibility","LineController","_DatasetController4","line","_meta$data","_dataset","animationsDisabled","_getStartAndCountOfVi","_getStartAndCountOfVisiblePoints","_scaleRangesChanged","_datasetIndex","_decimated","showLine","segment","animated","_this$_cachedMeta3","_this$_getSharedOptio4","_this$options2","spanGaps","maxGapLength","isNumber","directUpdate","pointsCount","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","_DatasetController5","_this5","_parseObjectDataRadialScale","bind","_updateRadius","_this6","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","_this7","_chart$legend$options3","angleLines","display","circular","pointLabels","PieController","_DoughnutController","RadarController","_DatasetController6","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","_DatasetController7","_meta$data2","_getStartAndCountOfVi2","registry","getElement","_this$_cachedMeta4","_this$options3","interaction","abstract","Error","DateAdapterBase","init","formats","format","diff","startOf","endOf","override","members","prototype","adapters","_adapters","_date","binarySearch","metaset","intersect","lookupMethod","_reversePixels","_rlookupByKey","_lookupByKey","result","distanceToDefinedLo","slice","lo","findIndex","distanceToDefinedHi","hi","el","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","_metasets$i","_binarySearch","j","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getIntersectItems","useFinalPosition","includeInvisible","isPointInArea","evaluationFunc","_isPointInArea","inRange","getNearestRadialItems","_element$getProps","getProps","_getAngleFromPoint","getAngleFromPoint","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","getRelativePosition","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","wrapBoxes","boxes","layoutBoxes","stackWeight","_box","_box$options","_box$options$stackWei","buildStacks","layouts","_iterator5","_step5","wrap","includes","_stack","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","w","heightChanged","h","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","changed","_updateDims","setBoxDims","placeBoxes","userPadding","padding","_iterator6","_step6","addBox","_layers","z","removeBox","layoutItem","minPadding","toPadding","verticalBoxes","horizontalBoxes","each","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","getMaximumSize","isAttached","updateConfig","BasicPlatform","_BasePlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","readUsedSize","displayHeight","eventListenerOptions","supportsEventListenerOptions","passive","addListener","node","removeListener","fromNativeEvent","_getRelativePosition","native","nodeListContains","nodeList","_iterator7","_step7","contains","createAttachObserver","observer","MutationObserver","entries","trigger","_iterator8","_step8","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","_iterator9","_step9","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","resize","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","container","_getParentNode","throttled","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","DomPlatform","_BasePlatform2","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","_isDomSupported","OffscreenCanvas","Element","tooltipPosition","_this$getProps","hasValue","final","_this8","ret","autoSkip","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","tickLength","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","_factorize","ceil","majorStart","majorEnd","len","reverseAlign","align","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","drawTicks","getTitleHeight","fallback","font","toFont","lines","lineHeight","createScaleContext","createTickContext","titleAlign","_toLeftRightCenter","titleArgs","titleX","titleY","_alignStartEnd","positionAxisID","Scale","_Element","_this9","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","finiteOrDefault","_this$getUserBounds","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","callback","margins","_this$options4","grace","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","minRotation","maxRotation","tickWidth","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","_limitValue","title","toDegrees","asin","_this$options5","titleOpts","gridOpts","titleHeight","_this$_getLabelSizes","tickPadding","angleRadians","labelHeight","mirror","labelWidth","_calculatePadding","_handleMargins","_this$options6","_this$options6$ticks","isRotated","labelsBelowTicks","offsetLeft","offsetRight","_this$options7","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","jlen","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","_measureText","valueAt","idx","pixel","decimal","_int16Range","_alignPixel","getDecimalForPixel","getBaseValue","optionTicks","rot","autoSkipPadding","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","dash","borderDashOffset","dashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","labelOffset","halfCount","strokeColor","textStrokeColor","strokeWidth","textStrokeWidth","tickTextAlign","showLabelBackdrop","backdrop","labelPadding","backdropPadding","backdropColor","translation","_this$options8","_this$options9","_this$options9$ticks","_computeLabelArea","drawBackground","save","fillRect","restore","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","drawOnChartArea","drawBorder","_this$options0","lastLineWidth","drawLabels","clipArea","_iterator0","_step0","renderTextOptions","renderText","unclipArea","drawTitle","_this$options1","_titleArgs","_this0","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","scope","create","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","registerDefaults","overrides","unregister","itemDefaults","merge","defaultRoutes","routeDefaults","descriptors","describe","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","route","Registry","controllers","_typedRegistries","_len","_key","_each","_len2","_key2","addControllers","_len3","_key3","_len4","_key4","addPlugins","_len5","_key5","addScales","_len6","_key6","getController","_get","getPlugin","getScale","removeControllers","_len7","_key7","removeElements","_len8","_key8","removePlugins","_len9","_key9","removeScales","_len0","_key0","typedRegistry","_this1","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","_capitalize","PluginService","_init","notify","hook","_createDescriptors","_descriptors","_iterator1","_step1","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","local","getOpts","_ref2","_iterator10","_step10","pluginOpts","_ref3","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","_len1","scaleOptions","_key1","_i3","_scaleOptions","toLowerCase","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","d","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","_proxy","defaultId","defaultScaleOptions","mergeIf","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","_getResolver","getResolver","resolver","subPrefixes","needContext","isFunction","subResolver","_attachContext","_iterator11","_step11","descriptorDefaults","_getResolver2","resolverCache","_createResolver","p","hasFunction","_descriptors2","isScriptable","isIndexable","_iterator12","_step12","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","c","moveNumericKeys","_i4","_keys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","Chart","userConfig","_this10","initialCanvas","existingChart","uid","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","debounce","resizeDelay","_initialize","_this$options10","maintainAspectRatio","responsive","retinaScale","bindEvents","clearCanvas","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","_this11","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","_this12","buildOrUpdateControllers","newControllers","order","visible","ControllerClass","_defaults$datasets$ty","_resetElements","_this13","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_this$getDatasetMeta","_minPadding","autoPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","_this14","existingEvents","newEvents","events","setsEqual","unbindEvents","changes","_getUniformDataChanges","_iterator13","_step13","_step13$value","datasetCount","makeSet","changeSet","_this15","noArea","_this15$_layers","_idx","_updateDataset","_this$_resizeBeforeDr","layers","_drawDatasets","_drawDataset","getDatasetClipArea","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","hide","show","_stop","destroy","toBase64Image","_this$canvas","toDataURL","bindUserEvents","bindResponsiveEvents","_this16","_add","_this17","_remove","detached","_this18","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","_this19","lastActive","_ref4","_elementsEqual","pluginId","replay","hoverOptions","hover","deactivated","activated","_this20","eventFilter","_handleEvent","_this$_active","_getActiveElements","_isClickEvent","onHover","invalidatePlugins","version","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","_readValueToProps","parseBorderRadius$1","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","_parseBorderRadius$","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","borderJoinStyle","inner","lineJoin","ArcElement","_Element2","_this21","chartX","chartY","_getAngleFromPoint2","_this$getProps2","rAdjust","nonZeroBetween","betweenAngles","withinRadius","_isBetween","_this$getProps3","_this$options11","halfAngle","halfRadius","translate","fix","radiusOffset","setStyle","lineCap","borderCapStyle","previous","getLineMethod","stepped","_steppedLineTo","tension","cubicInterpolationMode","_bezierCurveTo","pathVars","_params$start","paramsStart","_params$end","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","_pathVars","lineMethod","_ref5","_ref5$move","fastPathSegment","_pathVars2","_ref6","_ref6$move","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","_steppedInterpolation","_bezierInterpolation","_pointInLine","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","_iterator14","_step14","usePath2D","LineElement","_Element3","_this22","_points","_segments","_pointsUpdated","_updateBezierControlPoints","_computeSegments","interpolate","_boundSegments","_interpolate","_segments$i","interpolated","_iterator15","_step15","capBezierPoints","inRange$1","_el$getProps","hitRadius","PointElement","_Element4","_this23","mouseX","mouseY","_this$getProps4","inXRange","inYRange","_this$getProps5","hoverRadius","drawPoint","getBarBounds","bar","_bar$getProps","half","skipOrLimit","parseBorderWidth","maxW","maxH","toTRBL","parseBorderRadius","_bar$getProps2","toTRBLCorners","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","bounds","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","inflateRect","amount","refRect","BarElement","_Element5","_this24","_this$options12","_boundingRects","addRectPath","addRoundedRectPath","_this$getProps6","BORDER_COLORS","BACKGROUND_COLORS","replace","getBorderColor","getBackgroundColor","colorizeDefaultDataset","colorizeDoughnutDataset","colorizePolarAreaDataset","getColorizer","containsColorsDefinitions","k","containsColorsDefinition","containsDefaultColorsDefenitions","plugin_colors","Colors","forceOverride","_args","_chart$config","chartOptions","containsColorDefenition","colorizer","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","_data$a","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","_objectSpread","cleanDecimatedDataset","defineProperty","configurable","enumerable","writable","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","pointCount","_iScale$getUserBounds","plugin_decimation","Decimation","algorithm","beforeElementsUpdate","xAxis","_getStartAndCountOfVi3","threshold","tpoints","_iterator16","_step16","_findSegmentEnd","_getBounds","targetSegments","_iterator17","_step17","tgt","subBounds","fillSources","_boundSegment","_iterator18","_step18","fillSource","_getEdge","_normalizeAngle","_pointsFromSegments","boundary","_ref7","_ref7$x","_ref7$y","linePoints","_ref8","_createBoundaryLine","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","parseFillOption","parseFloat","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","_findPoint","findPoint","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_source$scale","_drawfill","lineOpts","_ref9","_ref9$above","above","_ref9$below","doFill","clipVertical","clipY","lineLoop","_iterator19","_step19","_iterator20","_step20","_step20$value","src","_src$style","_src$style2","_src$style2$backgroun","notShape","clipBounds","interpolatedLineTo","targetLoop","_ref0","interpolatedPoint","Filler","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","_labelOpts$boxHeight","boxHeight","_labelOpts$boxWidth","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_Element6","_this25","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","_this26","labelFont","_computeTitleHeight","_getBoxSize","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","_calculateItemSize","calculateItemSize","adjustHitBoxes","_this$options13","rtl","rtlHelper","getRtlAdapter","_iterator21","_step21","hitbox","leftForLtr","_iterator22","_step22","_draw","_this27","defaultColor","halfFontSize","cursor","_getBoxSize2","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","drawPointLegend","yBoxTop","xBoxLeft","fillText","strikethrough","overrideTextDirection","textDirection","textWidth","setWidth","realX","_textX","fontLineHeight","calculateLegendItemHeight","restoreTextDirection","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","plugin_legend","_element","afterEvent","ci","_chart$legend$options","useBorderRadius","Title","_Element7","_this28","_padding","textSize","_drawArgs","fontOpts","_this$_drawArgs","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","SubTitle","positioners","average","xSet","xAverage","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","str","String","createTooltipItem","_controller$getLabelA","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","_chart$chartArea","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","_toTRBLCorners","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","noop","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","_Element8","_this29","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","_this30","bodyItems","scoped","getAfterBody","getFooter","_createItems","_this31","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","_toTRBLCorners2","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","_toTRBLCorners3","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","_this32","_ref1","positionChanged","_positionChanged","_ignoreReplayEvents","_this33","plugin_tooltip","afterInit","afterDraw","_fallback","addIfString","addedLabels","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_Scale","_this34","_startValue","_valueRange","_addedLabels","added","_iterator23","_step23","_step23$value","isFinite","_this$getUserBounds2","_this$getMinMax","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceNum","niceMin","niceMax","numSpaces","almostWhole","almostEquals","decimalPlaces","_decimalPlaces","relativeLabelSize","tickValue","_ref10","rad","LinearScaleBase","_Scale2","_this35","_endValue","handleTickRangeOptions","_this$getUserBounds3","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","_setMinAndMaxByKey","LinearScale","_LinearScaleBase","_this$getMinMax2","Ticks","formatters","numeric","log10Floor","log10","changeExponent","m","isMajor","tickVal","steps","rangeExp","rangeStep","startExp","generateTicks","_ref11","minExp","exp","significand","lastTick","LogarithmicScale","_Scale3","_this36","_zero","_this$getMinMax3","_this$getUserBounds4","logarithmic","getTickBackdropHeight","measureLabelSize","_longestText","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","createPointLabelItem","itemOpts","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","isNotOverlapped","apexesInArea","_opts$pointLabels","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","_LinearScaleBase2","_this37","_this$getMinMax4","_this38","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","_this$_pointLabelItem","_this$options14","_this39","_this40","rotate","animate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","_scale$_parseOpts","_parseOpts","parser","isoWeekday","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","_lookup2","_lookup","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_Scale4","_this41","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_this$getUserBounds5","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","minor","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","formatter","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","_lookupByKey2","_table$lo","_table$hi","_lookupByKey3","_table$lo2","_table$hi2","span","TimeSeriesScale","_TimeScale","_this42","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables"],"sources":["../src/core/core.animator.js","../src/core/core.animation.js","../src/core/core.animations.js","../src/core/core.datasetController.js","../src/controllers/controller.bar.js","../src/controllers/controller.bubble.js","../src/controllers/controller.doughnut.js","../src/controllers/controller.line.js","../src/controllers/controller.polarArea.js","../src/controllers/controller.pie.js","../src/controllers/controller.radar.js","../src/controllers/controller.scatter.js","../src/core/core.adapters.ts","../src/core/core.interaction.js","../src/core/core.layouts.js","../src/platform/platform.base.js","../src/platform/platform.basic.js","../src/platform/platform.dom.js","../src/platform/index.js","../src/core/core.element.ts","../src/core/core.scale.autoskip.js","../src/core/core.scale.js","../src/core/core.typedRegistry.js","../src/core/core.registry.js","../src/core/core.plugins.js","../src/core/core.config.js","../src/core/core.controller.js","../src/elements/element.arc.ts","../src/elements/element.line.js","../src/elements/element.point.ts","../src/elements/element.bar.js","../src/plugins/plugin.colors.ts","../src/plugins/plugin.decimation.js","../src/plugins/plugin.filler/filler.segment.js","../src/plugins/plugin.filler/filler.helper.js","../src/plugins/plugin.filler/filler.options.js","../src/plugins/plugin.filler/filler.target.stack.js","../src/plugins/plugin.filler/simpleArc.js","../src/plugins/plugin.filler/filler.target.js","../src/plugins/plugin.filler/filler.drawing.js","../src/plugins/plugin.filler/index.js","../src/plugins/plugin.legend.js","../src/plugins/plugin.title.js","../src/plugins/plugin.subtitle.js","../src/plugins/plugin.tooltip.js","../src/scales/scale.category.js","../src/scales/scale.linearbase.js","../src/scales/scale.linear.js","../src/scales/scale.logarithmic.js","../src/scales/scale.radialLinear.js","../src/scales/scale.time.js","../src/scales/scale.timeseries.js","../src/index.ts"],"sourcesContent":["import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  let found = false;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      found = true;\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n\n  if (!found && !options.all) {\n    return 0;\n  }\n\n  return value;\n}\n\nfunction convertObjectDataToArray(data, meta) {\n  const {iScale, vScale} = meta;\n  const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n  const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      [iAxisKey]: key,\n      [vAxisKey]: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (and thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal metadata accordingly.\n\n    if (isObject(data)) {\n      const meta = this._cachedMeta;\n      this._data = convertObjectDataToArray(data, meta);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n      meta._stacked = isStacked(meta.vScale, meta);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n    const iScaleValue = currentParsed && currentParsed[iScale.axis];\n\n    const skipNull = (meta) => {\n      const parsed = meta._parsed.find(item => item[iScale.axis] === iScaleValue);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      // https://github.com/chartjs/Chart.js/issues/11333\n      if (!this.datasetElementType) {\n        this.addElements();\n      }\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    } else if (this.datasetElementType) {\n      // https://github.com/chartjs/Chart.js/issues/11333\n      delete meta.dataset;\n      this.datasetElementType = false;\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<TimeUnit | 'datetime', string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: string): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: string): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number | boolean): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options?: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<TimeUnit | 'datetime', string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase as {\n    new (options?: AnyObject): DateAdapter;\n    override<T extends AnyObject = AnyObject>(\n      members: Partial<Omit<DateAdapter<T>, 'options'>>\n    ): void;\n  }\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea, isNullOrUndef} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      const result = lookupMethod(data, axis, value);\n      if (spanGaps) {\n        const {vScale} = controller._cachedMeta;\n        const {_parsed} = metaset;\n\n        const distanceToDefinedLo = (_parsed\n          .slice(0, result.lo + 1)\n          .reverse()\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        result.lo -= Math.max(0, distanceToDefinedLo);\n\n        const distanceToDefinedHi = (_parsed\n          .slice(result.hi)\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        result.hi += Math.max(0, distanceToDefinedHi);\n      }\n      return result;\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  if (node) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction removeListener(chart, type, listener) {\n  if (chart && chart.canvas) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = canvas && _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        case 'inner':\n          if (i === ilen - 1) {\n            left -= width;\n          } else if (i > 0) {\n            left -= width / 2;\n          }\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).some((key) => isFunction(value[key]));\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea, _isDomSupported, retinaScale, getDatasetClipArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      // Unset pending resize request now to avoid possible recursion within _resize\n      this._resizeBeforeDraw = null;\n      this._resize(width, height);\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    // @ts-expect-error\n    const clip = getDatasetClipArea(this, meta);\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (clip) {\n      clipArea(ctx, clip);\n    }\n\n    meta.controller.draw();\n\n    if (clip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the event inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n    const betweenAngles = _circumference >= TAU || nonZeroBetween;\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @returns {any}\n */\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import {DoughnutController, PolarAreaController, defaults} from '../index.js';\nimport type {Chart, ChartDataset} from '../types.js';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n  forceOverride?: boolean;\n}\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n\n  return i;\n}\n\nfunction getColorizer(chart: Chart) {\n  let i = 0;\n\n  return (dataset: ChartDataset, datasetIndex: number) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(\n  descriptor: ColorsDescriptor\n) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nfunction containsDefaultColorsDefenitions() {\n  return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  } as ColorsPluginOptions,\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {datasets},\n      options: chartOptions\n    } = chart.config;\n    const {elements} = chartOptions;\n\n    const containsColorDefenition = (\n      containsColorsDefinitions(datasets) ||\n      containsColorsDefinition(chartOptions) ||\n      (elements && containsColorsDefinitions(elements)) ||\n      containsDefaultColorsDefenitions());\n\n    if (!options.forceOverride && containsColorDefenition) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n\n    datasets.forEach(colorizer);\n  }\n};\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data,\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea, getDatasetClipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {chart, index, line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  const meta = chart.getDatasetMeta(index);\n  const clip = getDatasetClipArea(chart, meta);\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis, clip});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale, clip} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property, clip});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property, clip});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale, clip} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, clip, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, clip, bounds) {\n  const chartArea = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n\n  if (property === 'x' || property === 'y') {\n    let left, top, right, bottom;\n\n    if (property === 'x') {\n      left = start;\n      top = chartArea.top;\n      right = end;\n      bottom = chartArea.bottom;\n    } else {\n      left = chartArea.left;\n      top = start;\n      right = chartArea.right;\n      bottom = end;\n    }\n\n    ctx.beginPath();\n\n    if (clip) {\n      left = Math.max(left, clip.left);\n      right = Math.min(right, clip.right);\n      top = Math.max(top, clip.top);\n      bottom = Math.min(bottom, clip.bottom);\n    }\n\n    ctx.rect(left, top, right - left, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let xSet = new Set();\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        xSet.add(pos.x);\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    // No visible items where found, return false so we don't have to divide by 0 which reduces in NaN\n    if (count === 0 || xSet.size === 0) {\n      return false;\n    }\n\n    const xAverage = [...xSet].reduce((a, b) => a + b) / xSet.size;\n\n    return {\n      x: xAverage,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      // But make sure that active elements are still valid.\n      return lastActive.filter(i =>\n        this.chart.data.datasets[i.datasetIndex] &&\n        this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined\n      );\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash || []);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0 || (index === 0 && this.min < 0)) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if ((index === 0 && this.min >= 0) && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n        strokeColor: optsAtIndex.textStrokeColor,\n        strokeWidth: optsAtIndex.textStrokeWidth,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if it's not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @protected\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort(sorter).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guesstimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n    * Generates all timestamps defined in the data.\n    * Important: this method can return ticks outside the min and max range, it's the\n    * responsibility of the calling code to clamp values if needed.\n    * @protected\n    */\n  _generate() {\n    const min = this.min;\n    const max = this.max;\n    let timestamps = super.getDataTimestamps();\n    if (!timestamps.includes(min) || !timestamps.length) {\n      timestamps.splice(0, 0, min);\n    }\n    if (!timestamps.includes(max) || timestamps.length === 1) {\n      timestamps.push(max);\n    }\n    return timestamps.sort((a, b) => a - b);\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","export * from './controllers/index.js';\nexport * from './core/index.js';\nexport * from './elements/index.js';\nexport * from './platform/index.js';\nexport * from './plugins/index.js';\nexport * from './scales/index.js';\n\nimport * as controllers from './controllers/index.js';\nimport * as elements from './elements/index.js';\nimport * as plugins from './plugins/index.js';\nimport * as scales from './scales/index.js';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n"],"mappings":"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","ignoreList":[]}]}